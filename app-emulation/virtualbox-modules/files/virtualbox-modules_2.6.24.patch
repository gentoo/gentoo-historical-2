Index: include/iprt/types.h
===================================================================
--- include/iprt/types.h	(revision 5703)
+++ include/iprt/types.h	(revision 5704)
@@ -58,8 +58,9 @@
     /*
      * Kludge for the linux kernel:
      *   1. sys/types.h doesn't mix with the kernel.
-     *   2. Starting with 2.6.19 linux/types.h typedefs bool and linux/stddef.h
+     *   2. Starting with 2.6.19, linux/types.h typedefs bool and linux/stddef.h
      *      declares false and true as enum values.
+     *   3. Starting with 2.6.24, linux/types.h typedefs uintptr_t.
      * We work around these issues here and nowhere else.
      */
 #  include <stddef.h>
@@ -69,8 +70,10 @@
 #  define bool linux_bool
 #  define true linux_true
 #  define false linux_false
+#  define uintptr_t linux_uintptr_t
 #  include <linux/types.h>
 #  include <linux/stddef.h>
+#  undef uintptr_t
 #  undef false
 #  undef true
 #  undef bool
Index: include/iprt/types.h
===================================================================
--- include/iprt/types.h	(revision 5764)
+++ include/iprt/types.h	(revision 5765)
@@ -71,6 +71,7 @@
 #  define true linux_true
 #  define false linux_false
 #  define uintptr_t linux_uintptr_t
+#  include <linux/autoconf.h>
 #  include <linux/types.h>
 #  include <linux/stddef.h>
 #  undef uintptr_t
Index: Config.kmk
===================================================================
--- Config.kmk	(revision 5764)
+++ Config.kmk	(revision 5765)
@@ -1263,7 +1263,7 @@
    kernelpath := $(VBOX_LINUX_SRC)
   endif
   ifeq ($(BUILD_TARGET_ARCH),x86)
-    VBOX_LINUX_INCS                += $(kernelpath)/include/asm-i386/mach-default
+    VBOX_LINUX_INCS                += $(kernelpath)/include/asm/mach-default
   endif
  endif
 endif
