--- kqemu.orig/kqemu-linux.c	2005-07-26 17:22:06.000000000 +0200
+++ kqemu/kqemu-linux.c	2005-07-26 17:21:20.000000000 +0200
@@ -17,6 +17,11 @@
 #include <asm/uaccess.h>
 #include <asm/io.h>
 
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
+#include <linux/device.h>
+static struct class_simple *kqemu_class;
+#endif
+#include <linux/devfs_fs_kernel.h>
 #include "kqemu.h"
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,19)
@@ -344,10 +349,38 @@
             return ret;
         }
     }
+
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
+    kqemu_class = class_simple_create(THIS_MODULE, "kqemu");
+
+    if (IS_ERR(kqemu_class)) {
+	    ret = PTR_ERR(kqemu_class);
+	    goto out_chrdev;
+    }
+
+     class_simple_device_add(kqemu_class, MKDEV(major, 0), NULL, "kqemu");
+
+#endif
+
+     ret = devfs_mk_cdev(MKDEV(major, 0),
+		     S_IFCHR|S_IRUSR|S_IWUSR, "kqemu");
+     if (ret)
+	      goto out_class;
+     
     printk("KQEMU installed, max_instances=%d max_locked_mem=%dkB.\n",
            KQEMU_MAX_INSTANCES, 
            max_locked_pages * 4);
     return 0;
+
+out_class:
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
+    class_simple_device_remove(MKDEV(major,0));
+    class_simple_destroy(kqemu_class);
+#endif
+out_chrdev:
+    unregister_chrdev(major, "kqemu");
+
+    return ret;
 }
 
 void cleanup_module(void)
@@ -356,4 +389,9 @@
         unregister_chrdev(major, "kqemu");
     else
         misc_deregister (&kqemu_dev);
+    devfs_remove("kqemu");
+#if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,0)
+    class_simple_device_remove(MKDEV(major, 0));
+    class_simple_destroy(kqemu_class);
+#endif
 }
