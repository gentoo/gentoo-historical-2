diff -pur vmnet-only.orig/bridge.c vmnet-only/bridge.c
--- vmnet-only.orig/bridge.c	2008-05-10 06:25:56.000000000 +0200
+++ vmnet-only/bridge.c	2008-10-16 18:36:57.000000000 +0200
@@ -274,7 +274,7 @@ VNetBridgeDevCompatible(VNetBridge *brid
                         struct net_device *net)  // IN: Network device
 {
 #ifdef VMW_NETDEV_HAS_NET
-   if (net->nd_net != bridge->internalDev->nd_net) {
+   if (dev_net(net) != dev_net(bridge->internalDev)) {
       return 0;
    }
 #endif
diff -pur vmnet-only.orig/compat_semaphore.h vmnet-only/compat_semaphore.h
--- vmnet-only.orig/compat_semaphore.h	2008-05-10 06:25:56.000000000 +0200
+++ vmnet-only/compat_semaphore.h	2008-10-16 18:37:21.000000000 +0200
@@ -2,7 +2,7 @@
 #   define __COMPAT_SEMAPHORE_H__
 
 
-#include <asm/semaphore.h>
+#include <linux/semaphore.h>
 
 
 /*
diff -pur vmnet-only.orig/procfs.c vmnet-only/procfs.c
--- vmnet-only.orig/procfs.c	2008-05-10 06:25:56.000000000 +0200
+++ vmnet-only/procfs.c	2008-10-16 18:36:57.000000000 +0200
@@ -63,7 +63,7 @@ VNetProc_Init(void)
 {
    int retval;
 
-   retval = VNetProc_MakeEntry(&proc_root, "vmnet", S_IFDIR, &base);
+   retval = VNetProc_MakeEntry(NULL, "vmnet", S_IFDIR, &base);
    if (retval) {
       return retval;
    }
@@ -95,7 +95,7 @@ VNetProc_Init(void)
 void
 VNetProc_Cleanup(void)
 {
-   VNetProc_RemoveEntry(base, &proc_root);
+   VNetProc_RemoveEntry(base, NULL);
    base = NULL;
 }
 
diff -pur vmnet-only.orig/vmnetInt.h vmnet-only/vmnetInt.h
--- vmnet-only.orig/vmnetInt.h	2008-05-10 06:25:56.000000000 +0200
+++ vmnet-only/vmnetInt.h	2008-10-16 18:36:57.000000000 +0200
@@ -63,7 +63,7 @@
 #   define dev_lock_list()    read_lock(&dev_base_lock)
 #   define dev_unlock_list()  read_unlock(&dev_base_lock)
 #   ifdef VMW_NETDEV_HAS_NET
-#      define DEV_GET(x)      __dev_get_by_name((x)->internalDev->nd_net, (x)->name)
+#      define DEV_GET(x)      __dev_get_by_name(dev_net((x)->internalDev), (x)->name)
 #   else
 #      define DEV_GET(x)      __dev_get_by_name((x)->name)
 #   endif
@@ -89,7 +89,7 @@
 
 #ifdef VMW_NETDEV_HAS_NET
 extern struct proto vmnet_proto;
-#   define compat_sk_alloc(_bri, _pri) sk_alloc((_bri)->internalDev->nd_net, \
+#   define compat_sk_alloc(_bri, _pri) sk_alloc(dev_net((_bri)->internalDev), \
                                                 PF_NETLINK, _pri, &vmnet_proto)
 #elif defined(VMW_HAVE_SK_ALLOC_WITH_PROTO)
 extern struct proto vmnet_proto;
