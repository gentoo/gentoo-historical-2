From f895fe1ad3aca8fed492df12adcd8710bca8ca32 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Diego=20Elio=20Petten=C3=B2?= <flameeyes@flameeyes.eu>
Date: Fri, 27 Apr 2012 17:01:33 -0700
Subject: [PATCH] Workaround requirement to use the realname of the block
 device.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Instead of checking always the source path, check the source path if
mounting a directory, and the mount path if mounting a block device or
file.

Signed-off-by: Diego Elio Petten√≤ <flameeyes@flameeyes.eu>
---
 src/lxc/conf.c |   34 +++++++++++++++++++---------------
 src/lxc/conf.h |    1 +
 2 files changed, 20 insertions(+), 15 deletions(-)

diff --git a/src/lxc/conf.c b/src/lxc/conf.c
index e8088bb..593871a 100644
--- a/src/lxc/conf.c
+++ b/src/lxc/conf.c
@@ -350,9 +350,9 @@ static int mount_unknow_fs(const char *rootfs, const char *target, int mntopt)
 	return -1;
 }
 
-static int mount_rootfs_dir(const char *rootfs, const char *target)
+static int mount_rootfs_dir(struct lxc_rootfs *rootfs)
 {
-	return mount(rootfs, target, "none", MS_BIND | MS_REC, NULL);
+	return mount(rootfs->path, rootfs->mount, "none", MS_BIND | MS_REC, NULL);
 }
 
 static int setup_lodev(const char *rootfs, int fd, struct loop_info64 *loinfo)
@@ -387,7 +387,7 @@ out:
 	return ret;
 }
 
-static int mount_rootfs_file(const char *rootfs, const char *target)
+static int mount_rootfs_file(struct lxc_rootfs *rootfs)
 {
 	struct dirent dirent, *direntp;
 	struct loop_info64 loinfo;
@@ -433,9 +433,9 @@ static int mount_rootfs_file(const char *rootfs, const char *target)
 
 		DEBUG("found '%s' free lodev", path);
 
-		ret = setup_lodev(rootfs, fd, &loinfo);
+		ret = setup_lodev(rootfs->path, fd, &loinfo);
 		if (!ret)
-			ret = mount_unknow_fs(path, target, 0);
+			ret = mount_unknow_fs(path, rootfs->mount, 0);
 		close(fd);
 
 		break;
@@ -444,21 +444,23 @@ static int mount_rootfs_file(const char *rootfs, const char *target)
 	if (closedir(dir))
 		WARN("failed to close directory");
 
+	rootfs->isblock = 1;
 	return ret;
 }
 
-static int mount_rootfs_block(const char *rootfs, const char *target)
+static int mount_rootfs_block(struct lxc_rootfs *rootfs)
 {
-	return mount_unknow_fs(rootfs, target, 0);
+	rootfs->isblock = 1;
+	return mount_unknow_fs(rootfs->path, rootfs->mount, 0);
 }
 
-static int mount_rootfs(const char *rootfs, const char *target)
+static int mount_rootfs(struct lxc_rootfs *rootfs)
 {
 	char absrootfs[MAXPATHLEN];
 	struct stat s;
 	int i;
 
-	typedef int (*rootfs_cb)(const char *, const char *);
+	typedef int (*rootfs_cb)(struct lxc_rootfs *rootfs);
 
 	struct rootfs_type {
 		int type;
@@ -469,8 +471,8 @@ static int mount_rootfs(const char *rootfs, const char *target)
 		{ S_IFREG, mount_rootfs_file },
 	};
 
-	if (!realpath(rootfs, absrootfs)) {
-		SYSERROR("failed to get real path for '%s'", rootfs);
+	if (!realpath(rootfs->path, absrootfs)) {
+		SYSERROR("failed to get real path for '%s'", rootfs->path);
 		return -1;
 	}
 
@@ -489,7 +491,7 @@ static int mount_rootfs(const char *rootfs, const char *target)
 		if (!__S_ISTYPE(s.st_mode, rtfs_type[i].type))
 			continue;
 
-		return rtfs_type[i].cb(absrootfs, target);
+		return rtfs_type[i].cb(rootfs);
 	}
 
 	ERROR("unsupported rootfs type for '%s'", absrootfs);
@@ -756,7 +758,7 @@ static int setup_rootfs_pivot_root(const char *rootfs, const char *pivotdir)
 	return 0;
 }
 
-static int setup_rootfs(const struct lxc_rootfs *rootfs)
+static int setup_rootfs(struct lxc_rootfs *rootfs)
 {
 	if (!rootfs->path)
 		return 0;
@@ -767,7 +769,7 @@ static int setup_rootfs(const struct lxc_rootfs *rootfs)
 		return -1;
 	}
 
-	if (mount_rootfs(rootfs->path, rootfs->mount)) {
+	if (mount_rootfs(rootfs)) {
 		ERROR("failed to mount rootfs");
 		return -1;
 	}
@@ -1110,7 +1112,9 @@ static int mount_entry_on_absolute_rootfs(struct mntent *mntent,
 		return -1;
 	}
 
-	aux = strstr(mntent->mnt_dir, rootfs->path);
+	aux = rootfs->isblock ? rootfs->mount : rootfs->path;
+
+	aux = strstr(mntent->mnt_dir, aux);
 	if (!aux) {
 		WARN("ignoring mount point '%s'", mntent->mnt_dir);
 		goto out;
diff --git a/src/lxc/conf.h b/src/lxc/conf.h
index 09f55cb..b70e637 100644
--- a/src/lxc/conf.h
+++ b/src/lxc/conf.h
@@ -181,6 +181,7 @@ struct lxc_rootfs {
 	char *path;
 	char *mount;
 	char *pivot;
+	int isblock;
 };
 
 /*
-- 
1.7.8.6

