diff -ur moc-2.5.0-alpha2.orig/decoder_plugins/sidplay2/sidplay2.cc moc-2.5.0-alpha2/decoder_plugins/sidplay2/sidplay2.cc
--- moc-2.5.0-alpha2.orig/decoder_plugins/sidplay2/sidplay2.cc	2007-04-02 20:39:51.000000000 +0300
+++ moc-2.5.0-alpha2/decoder_plugins/sidplay2/sidplay2.cc	2007-08-07 16:16:20.000000000 +0300
@@ -105,6 +105,16 @@
   
   s2d->frequency = s2d->cfg.frequency;
   
+#ifdef WORDS_BIGENDIAN
+  s2d->cfg.sampleFormat = SID2_BIG_SIGNED;
+#else
+  s2d->cfg.sampleFormat = SID2_LITTLE_SIGNED;
+#endif
+
+  s2d->player->config(s2d->cfg);
+
+  s2d->cfg = s2d->player->config();
+  
   switch(s2d->cfg.sampleFormat)
   {
     case SID2_LITTLE_SIGNED:
diff -ur moc-2.5.0-alpha2.orig/decoder_plugins/wavpack/wavpack.c moc-2.5.0-alpha2/decoder_plugins/wavpack/wavpack.c
--- moc-2.5.0-alpha2.orig/decoder_plugins/wavpack/wavpack.c	2007-06-09 10:26:24.000000000 +0300
+++ moc-2.5.0-alpha2/decoder_plugins/wavpack/wavpack.c	2007-08-07 16:16:14.000000000 +0300
@@ -223,19 +223,19 @@
 		switch (iBps / data->channels){
 		case 4: for (i = 0; i < ret * data->channels; i++) 
 				buf32[i] = dbuf[i];
-			sound_params->fmt = SFMT_S32 | SFMT_LE;	
+			sound_params->fmt = SFMT_S32 | SFMT_NE;	
 			break;
 		case 3: for (i = 0; i < ret * data->channels; i++) 
 				buf32[i] = dbuf[i] * 256;
-			sound_params->fmt = SFMT_S32 | SFMT_LE;	
+			sound_params->fmt = SFMT_S32 | SFMT_NE;	
 			break;
 		case 2: for (i = 0; i < ret * data->channels; i++) 
 				buf16[i] = dbuf[i];
-			sound_params->fmt = SFMT_S16 | SFMT_LE;
+			sound_params->fmt = SFMT_S16 | SFMT_NE;
 			break;
 		case 1: for (i = 0; i < ret * data->channels; i++) 
 				buf8[i] = dbuf[i];
-			sound_params->fmt = SFMT_S8 | SFMT_LE;	
+			sound_params->fmt = SFMT_S8 | SFMT_NE;	
 		}
 	}	
 
