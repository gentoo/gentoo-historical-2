diff -ru muse-0.6.2-orig/arranger/pcanvas.cpp muse-0.6.2/arranger/pcanvas.cpp
--- muse-0.6.2-orig/arranger/pcanvas.cpp	2004-07-11 02:36:40.000000000 +0200
+++ muse-0.6.2/arranger/pcanvas.cpp	2004-07-11 04:23:31.686847248 +0200
@@ -262,7 +262,7 @@
       Part* spart     = npart->part();
       Track* track    = npart->track();
       int dtick       = newpos.x();
-      unsigned ntrack = y2pitch(item->mp().y());
+      int ntrack      = y2pitch(item->mp().y());
       Track::TrackType type = track->type();
 
       if (tracks->index(track) == ntrack && (dtick == spart->posTick())) {
@@ -389,7 +389,7 @@
 CItem* PartCanvas::newItem(const QPoint& pos, int)
       {
       int x = sigmap.raster(pos.x(), *_raster);
-      unsigned trackIndex = y2pitch(pos.y());
+      int trackIndex = y2pitch(pos.y());
       if (trackIndex == -1)
             return 0;
       Track* track = tracks->findIdx(trackIndex);
@@ -1409,7 +1409,7 @@
                   int x = sigmap.raster(event->pos().x(), *_raster);
                   if (x < 0)
                         x = 0;
-                  unsigned trackNo = y2pitch(event->pos().y());
+                  int trackNo = y2pitch(event->pos().y());
                   Track* track = 0;
                   if (trackNo < tracks->size())
                         track = tracks->findIdx(trackNo);

diff -ru muse-0.6.2-orig/midiedit/dlist.cpp muse-0.6.2/midiedit/dlist.cpp
--- muse-0.6.2-orig/midiedit/dlist.cpp	2004-07-11 02:36:38.000000000 +0200
+++ muse-0.6.2/midiedit/dlist.cpp	2004-07-11 04:16:22.592079568 +0200
@@ -246,7 +246,7 @@
                   for (int i=0; i<DRUM_MAPSIZE; i++) {
                         if (drumMap[i].enote == val && &drumMap[i] != dm) {
                               printf("drumMap %s, index %d had the same note!\n",drumMap[i].name.ascii(),i);
-                              drumInmap[dm->enote] = i;
+                              drumInmap[(int)(dm->enote)] = i;
                               printf("Setting drumInmap[%d] to point to instrument %d\n",dm->enote, i);
                               drumMap[i].enote = dm->enote;
                               //TODO: Set all notes on the track with pitch=val to pitch=dm->enote
@@ -585,10 +585,10 @@
             drumMap[sPitch] = drumMap[dPitch];
             drumMap[dPitch] = dm;
             setCursor(QCursor(arrowCursor));
-            drumInmap[drumMap[sPitch].enote]  = sPitch;
-            drumOutmap[drumMap[sPitch].anote] = sPitch;
-            drumInmap[drumMap[dPitch].enote]  = dPitch;
-            drumOutmap[drumMap[dPitch].anote] = dPitch;
+            drumInmap[(int)(drumMap[sPitch].enote)]  = sPitch;
+            drumOutmap[(int)(drumMap[sPitch].anote)] = sPitch;
+            drumInmap[(int)(drumMap[dPitch].enote)]  = dPitch;
+            drumOutmap[(int)(drumMap[dPitch].anote)] = dPitch;
             currentlySelected = &drumMap[dPitch];
             emit mapChanged();
             }
diff -ru muse-0.6.2-orig/midiedit/drummap.cpp muse-0.6.2/midiedit/drummap.cpp
--- muse-0.6.2-orig/midiedit/drummap.cpp	2004-07-11 02:36:38.000000000 +0200
+++ muse-0.6.2/midiedit/drummap.cpp	2004-07-11 04:17:25.970444592 +0200
@@ -174,8 +174,8 @@
       memset(drumInmap, 0, sizeof(drumInmap));
       memset(drumOutmap, 0, sizeof(drumOutmap));
       for (int i = 0; i < DRUM_MAPSIZE; ++i) {
-            drumInmap[drumMap[i].enote] = i;
-            drumOutmap[drumMap[i].anote] = i;
+            drumInmap[(int)(drumMap[i].enote)] = i;
+            drumOutmap[(int)(drumMap[i].anote)] = i;
             }
       }
 
@@ -361,8 +361,8 @@
                               memset(drumInmap, 0, sizeof(drumInmap));
                               memset(drumOutmap, 0, sizeof(drumOutmap));
                               for (int i = 0; i < DRUM_MAPSIZE; ++i) {
-                                    drumInmap[drumMap[i].enote] = i;
-                                    drumOutmap[drumMap[i].anote] = i;
+                                    drumInmap[(int)(drumMap[i].enote)] = i;
+                                    drumOutmap[(int)(drumMap[i].anote)] = i;
                                     }
                               return;
                               }
diff -ru muse-0.6.2-orig/widgets/genset.cpp muse-0.6.2/widgets/genset.cpp
--- muse-0.6.2-orig/widgets/genset.cpp	2004-07-11 02:36:40.000000000 +0200
+++ muse-0.6.2/widgets/genset.cpp	2004-07-11 04:18:34.338051136 +0200
@@ -43,7 +43,7 @@
                   }
             }
       guiRefreshSelect->setValue(guiRefresh);
-      minSliderSelect->setValue(minSlider);
+      minSliderSelect->setValue((int)minSlider);
       minMeterSelect->setValue(minMeter);
       helpBrowser->setText(::helpBrowser);
 
diff -ru muse-0.6.2-orig/midithread.cpp muse-0.6.2/midithread.cpp
--- muse-0.6.2-orig/midithread.cpp	2004-07-11 05:00:52.132247776 +0200
+++ muse-0.6.2/midithread.cpp	2004-07-11 05:01:23.853425424 +0200
@@ -1,4 +1,4 @@
-//=========================================================
+
 //  MusE
 //  Linux Music Editor
 //  $Id: museseq-0.6.2-gcc34.patch,v 1.1 2004/07/11 22:21:52 fvdpol Exp $
@@ -570,7 +570,7 @@
                   panic();
                   break;
             case SEQM_MIDI_CTRL:
-                  midiPorts[msg->port].setCtrl(msg->channel, msg->ctrl, msg->a);
+                  midiPorts[(int)msg->port].setCtrl(msg->channel, msg->ctrl, msg->a);
                   break;
             case SEQM_MIDI_MASTER_VOLUME:
                   for (int i = 0; i < MIDI_PORTS; ++i)

