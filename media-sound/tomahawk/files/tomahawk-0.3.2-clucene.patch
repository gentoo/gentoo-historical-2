From 01d13bec7a3cd33bb815968012d1f00c7eb3e700 Mon Sep 17 00:00:00 2001
From: Johannes Huber <johu@gmx.de>
Date: Thu, 24 Nov 2011 15:10:41 +0100
Subject: [PATCH] Patch clucene

---
 CMakeModules/FindCLucene.cmake |   97 ++++++++++++++--------------------------
 src/libtomahawk/CMakeLists.txt |    2 +-
 2 files changed, 35 insertions(+), 64 deletions(-)

diff --git a/CMakeModules/FindCLucene.cmake b/CMakeModules/FindCLucene.cmake
index 1d5e8d9..906afcc 100644
--- a/CMakeModules/FindCLucene.cmake
+++ b/CMakeModules/FindCLucene.cmake
@@ -2,10 +2,9 @@
 # This module looks for clucene (http://clucene.sf.net) support
 # It will define the following values
 #
-# CLUCENE_INCLUDE_DIRS = CLUCENE_INCLUDE_DIR + CLUCENE_LIBRARY_DIR
 # CLUCENE_INCLUDE_DIR  = where CLucene/StdHeader.h can be found
 # CLUCENE_LIBRARY_DIR  = where CLucene/clucene-config.h can be found
-# CLUCENE_LIBRARIES    = the libraries to link against CLucene
+# CLUCENE_LIBRARY      = the library to link against CLucene
 # CLUCENE_VERSION      = The CLucene version string
 # CLucene_FOUND        = set to 1 if clucene is found
 #
@@ -13,21 +12,9 @@
 INCLUDE(CheckSymbolExists)
 INCLUDE(FindLibraryWithDebug)
 
-# try to locate a patched unstable version (for comp's sake *sigh*) first
-FIND_PACKAGE(CLuceneUnstable)
-IF(CLUCENEUNSTABLE_FOUND)
-    SET(CLucene_FOUND TRUE)
-    SET(CLUCENE_INCLUDE_DIR ${CLUCENE_UNSTABLE_INCLUDE_DIRS})
-    SET(CLUCENE_INCLUDE_DIRS ${CLUCENE_INCLUDE_DIR})
-    SET(CLUCENE_LIBRARIES ${CLUCENE_UNSTABLE_LIBS})
-
-    #MESSAGE(FATAL_ERROR NARF)
-ELSE(CLUCENEUNSTABLE_FOUND)
-IF(CLucene_FIND_VERSION)
-  SET(CLUCENE_MIN_VERSION ${CLucene_FIND_VERSION})
-ELSEIF()
-  SET(CLUCENE_MIN_VERSION "0.9.23")
-ENDIF(CLucene_FIND_VERSION)
+if(NOT CLUCENE_MIN_VERSION)
+  set(CLUCENE_MIN_VERSION "0.9.19")
+endif(NOT CLUCENE_MIN_VERSION)
 
 IF(EXISTS ${PROJECT_CMAKE}/CLuceneConfig.cmake)
   INCLUDE(${PROJECT_CMAKE}/CLuceneConfig.cmake)
@@ -36,11 +23,12 @@ ENDIF(EXISTS ${PROJECT_CMAKE}/CLuceneConfig.cmake)
 SET(TRIAL_LIBRARY_PATHS
   $ENV{CLUCENE_HOME}/lib${LIB_SUFFIX}
   ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}
+  ${CMAKE_LIBRARY_PATH}
   /usr/local/lib${LIB_SUFFIX}
+  /opt/local/lib${LIB_SUFFIX}
   /usr/lib${LIB_SUFFIX}
   /sw/lib${LIB_SUFFIX}
   /usr/pkg/lib${LIB_SUFFIX}
-  /usr/lib64
   )
 SET(TRIAL_INCLUDE_PATHS
   $ENV{CLUCENE_HOME}/include
@@ -50,25 +38,13 @@ SET(TRIAL_INCLUDE_PATHS
   /sw/include
   /usr/pkg/include
   )
-FIND_LIBRARY_WITH_DEBUG(CLUCENE_CORE_LIBRARY
-  WIN32_DEBUG_POSTFIX d
-  NAMES clucene-core
-  PATHS ${TRIAL_LIBRARY_PATHS})
-IF (CLUCENE_CORE_LIBRARY)
-  MESSAGE(STATUS "Found CLucene core library: ${CLUCENE_CORE_LIBRARY}")
-ENDIF (CLUCENE_CORE_LIBRARY)
-FIND_LIBRARY_WITH_DEBUG(CLUCENE_SHARED_LIBRARY
+FIND_LIBRARY_WITH_DEBUG(CLUCENE_LIBRARY
   WIN32_DEBUG_POSTFIX d
-  NAMES clucene-shared
+  NAMES clucene clucene-core
   PATHS ${TRIAL_LIBRARY_PATHS})
-IF (CLUCENE_SHARED_LIBRARY)
-  MESSAGE(STATUS "Found CLucene shared library: ${CLUCENE_SHARED_LIBRARY}")
-ENDIF (CLUCENE_SHARED_LIBRARY)
-
-IF(CLUCENE_CORE_LIBRARY AND CLUCENE_SHARED_LIBRARY)
-  SET(CLUCENE_LIBRARIES ${CLUCENE_CORE_LIBRARY} ${CLUCENE_SHARED_LIBRARY})
-ENDIF(CLUCENE_CORE_LIBRARY AND CLUCENE_SHARED_LIBRARY)
-
+IF (CLUCENE_LIBRARY)
+  MESSAGE(STATUS "Found CLucene library: ${CLUCENE_LIBRARY}")
+ENDIF (CLUCENE_LIBRARY)
 FIND_PATH(CLUCENE_INCLUDE_DIR
   NAMES CLucene.h
   PATHS ${TRIAL_INCLUDE_PATHS})
@@ -83,39 +59,35 @@ ENDIF(WIN32)
 
 SET(CLUCENE_GOOD_VERSION TRUE)
 
+GET_FILENAME_COMPONENT(_CLUCENE_LIBDIR ${CLUCENE_LIBRARY} PATH)
 FIND_PATH(CLUCENE_LIBRARY_DIR
-	NAMES CLuceneConfig.cmake/CLuceneConfig.cmake CLucene/CLuceneConfig.cmake
-       	PATHS ${TRIAL_LIBRARY_PATHS} ${TRIAL_INCLUDE_PATHS} NO_DEFAULT_PATH)
+  NAMES CLucene/clucene-config.h PATHS ${CLUCENE_INCLUDE_DIR} ${_CLUCENE_LIBDIR} NO_DEFAULT_PATH)
 IF (CLUCENE_LIBRARY_DIR)
   MESSAGE(STATUS "Found CLucene library dir: ${CLUCENE_LIBRARY_DIR}")
-  # include CLuceneConfig/CLuceneConfig.cmake
-  IF(EXISTS ${CLUCENE_LIBRARY_DIR}/CLuceneConfig.cmake/CLuceneConfig.cmake)
-        INCLUDE(${CLUCENE_LIBRARY_DIR}/CLuceneConfig.cmake/CLuceneConfig.cmake)
-  ENDIF(EXISTS ${CLUCENE_LIBRARY_DIR}/CLuceneConfig.cmake/CLuceneConfig.cmake)
-  # include CLucene/CLuceneConfig.cmake
-  IF(EXISTS ${CLUCENE_LIBRARY_DIR}/CLucene/CLuceneConfig.cmake)
-        INCLUDE(${CLUCENE_LIBRARY_DIR}/CLucene/CLuceneConfig.cmake)
-  ENDIF(EXISTS ${CLUCENE_LIBRARY_DIR}/CLucene/CLuceneConfig.cmake)
-  IF (CLUCENE_VERSION STRLESS "${CLUCENE_MIN_VERSION}")
-    MESSAGE(ERROR " CLucene version ${CLUCENE_VERSION} is less than the required minimum ${CLUCENE_MIN_VERSION}")
-    SET(CLUCENE_GOOD_VERSION FALSE)
-  ENDIF (CLUCENE_VERSION STRLESS "${CLUCENE_MIN_VERSION}")
-  IF (CLUCENE_VERSION STREQUAL "0.9.17")
-    MESSAGE(ERROR "CLucene version 0.9.17 is not supported.")
-    SET(CLUCENE_GOOD_VERSION FALSE)
-  ENDIF (CLUCENE_VERSION STREQUAL "0.9.17")
+  FILE(READ ${CLUCENE_LIBRARY_DIR}/CLucene/clucene-config.h CLCONTENT)
+  STRING(REGEX MATCH "_CL_VERSION +\".*\"" CLMATCH ${CLCONTENT})
+  IF (CLMATCH)
+    STRING(REGEX REPLACE "_CL_VERSION +\"(.*)\"" "\\1" CLUCENE_VERSION ${CLMATCH})
+	IF (CLUCENE_VERSION STRLESS "${CLUCENE_MIN_VERSION}")
+	  MESSAGE(ERROR " CLucene version ${CLUCENE_VERSION} is less than the required minimum ${CLUCENE_MIN_VERSION}")
+      SET(CLUCENE_GOOD_VERSION FALSE)
+	ENDIF (CLUCENE_VERSION STRLESS "${CLUCENE_MIN_VERSION}")
+	IF (CLUCENE_VERSION STREQUAL "0.9.17")
+	  MESSAGE(ERROR "CLucene version 0.9.17 is not supported.")
+      SET(CLUCENE_GOOD_VERSION FALSE)
+	ENDIF (CLUCENE_VERSION STREQUAL "0.9.17")
+  ENDIF (CLMATCH)
+ELSE (CLUCENE_LIBRARY_DIR)
+  MESSAGE(STATUS "CLucene library dir not found.")
 ENDIF (CLUCENE_LIBRARY_DIR)
 
-IF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARIES AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
+IF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARY AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
   SET(CLucene_FOUND TRUE)
-  SET(CLUCENE_INCLUDE_DIRS ${CLUCENE_LIBRARY_DIR} ${CLUCENE_INCLUDE_DIR})
-ENDIF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARIES AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
-
-ENDIF(CLUCENEUNSTABLE_FOUND)
+ENDIF(CLUCENE_INCLUDE_DIR AND CLUCENE_LIBRARY AND CLUCENE_LIBRARY_DIR AND CLUCENE_GOOD_VERSION)
 
 IF(CLucene_FOUND)
   IF(NOT CLucene_FIND_QUIETLY)
-    MESSAGE(STATUS "Found CLucene: ${CLUCENE_LIBRARIES} version ${CLUCENE_VERSION}")
+    MESSAGE(STATUS "Found CLucene: ${CLUCENE_LIBRARY}")
   ENDIF(NOT CLucene_FIND_QUIETLY)
 ELSE(CLucene_FOUND)
   IF(CLucene_FIND_REQUIRED)
@@ -124,8 +96,7 @@ ELSE(CLucene_FOUND)
 ENDIF(CLucene_FOUND)
 
 MARK_AS_ADVANCED(
-  CLUCENE_INCLUDE_DIRS
-  CLUCENE_INCLUDE_DIR
-  CLUCENE_LIBRARY_DIR
-  CLUCENE_LIBRARIES
+  CLUCENE_INCLUDE_DIR 
+  CLUCENE_LIBRARY_DIR 
+  CLUCENE_LIBRARY 
   )
diff --git a/src/libtomahawk/CMakeLists.txt b/src/libtomahawk/CMakeLists.txt
index ace7438..82c587b 100644
--- a/src/libtomahawk/CMakeLists.txt
+++ b/src/libtomahawk/CMakeLists.txt
@@ -645,7 +645,7 @@ TARGET_LINK_LIBRARIES( tomahawklib
     ${QJSON_LIBRARIES}
     ${PHONON_LIBS}
     ${TAGLIB_LIBRARIES}
-    ${CLUCENE_LIBRARIES}
+    ${CLUCENE_LIBRARY}
     ${LIBECHONEST_LIBRARY}
     ${QT_QTUITOOLS_LIBRARY}
     ${QT_LIBRARIES}
-- 
1.7.8.rc3

