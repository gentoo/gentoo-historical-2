--- Bin/build-perl-modules.pl.old	2008-11-18 19:07:45.000000000 +0000
+++ Bin/build-perl-modules.pl	2008-11-18 19:42:04.000000000 +0000
@@ -21,13 +21,11 @@
 
 # NOTE: If you change this in a future version of SC, create a new
 # versioned directory under vendor/src for all files for that version
-my $SOURCE = 'http://svn.slimdevices.com/repos/slim/vendor/src/7.3';
 my $dlext  = $Config{'dlext'};
 
 # The list of all the packages needed.
 my %packages = (
 	'Class::XSAccessor::Array' => 'Class-XSAccessor-Array-0.05.tar.gz',
-	'Class::C3::XS'            => 'Class-C3-XS-0.08.tar.gz',
 	'Compress::Zlib'           => 'Compress-Zlib-1.41.tar.gz',
 	'DBI'                      => 'DBI-1.604.tar.gz',
 	'DBD::mysql'               => 'DBD-mysql-3.0002.tar.gz',
@@ -197,36 +195,16 @@
 		}
 	}
 
+	# Utilise AutoXS::Header as we need that to support the following builds.
+	chdir($pwd) or die "Couldn't change to $pwd : $!";
+	# Include this when performing the following builds.
+	$ENV{'PERL5LIB'} = cwd() . "/AutoXS-Header-0.03/lib";
+
 	for my $package (@packages) {
 
 		chdir($pwd) or die "Couldn't change to $pwd : $!";
 
-		print "\nDownloading $package to: $pwd\n";
-
-		# Remove any previous version.
-		unlink $package;
-
-		if ($downloadUsing eq 'lwp') {
-
-			LWP::Simple::getstore("$SOURCE/$package?view=auto", $package);
-
-		} elsif ($downloadUsing =~ /curl$/) {
-
-			`$downloadUsing --silent -o $package $SOURCE/$package?view=auto`;
-
-		} else {
-
-			`$downloadUsing -q -O $package $SOURCE/$package?view=auto`;
-		}
-
-		unless (-r $package) {
-			print "Something looks wrong - I couldn't read $pwd/$package, which I just downloaded.\n";
-		}
-
-		print "Uncompressing..\n";
-		`gzip -d < $package | tar xvf -`;
-
-		unlink $package;
+		print "\nBuilding $package\n";
 
 		# Just the directory name.
 		my ($packageDir) = ($package =~ /(\S+?)\.tar\.gz/);
--- Slim/bootstrap.pm.old	2008-11-22 15:14:07.000000000 +0000
+++ Slim/bootstrap.pm	2008-11-22 15:14:30.000000000 +0000
@@ -176,7 +176,6 @@
 
 		print "The following modules failed to load: $failed\n\n";
 
-		print "To download and compile them, please run: $libPath/Bin/build-perl-modules.pl $failed\n\n";
 		print "Exiting..\n";
 
 		exit;
