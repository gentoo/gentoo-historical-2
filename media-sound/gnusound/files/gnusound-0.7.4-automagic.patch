--- gnusound-0.7.4/configure.ac.old	2006-11-29 19:04:34.000000000 +0100
+++ gnusound-0.7.4/configure.ac	2006-11-29 19:05:05.000000000 +0100
@@ -97,6 +97,10 @@
 
 file_drivers=
 dnl Audiofile
+AC_ARG_ENABLE(audiofile, AC_HELP_STRING([--disable-audiofile], [disable support for firewire (default=autodetect)]), [ enable_audiofile=$enableval ], [ enable_audiofile=yes ])
+
+if test "x$enable_audiofile" = "xyes"; then
+
 if test -z "$AUDIOFILE_CONFIG"; then
    AC_PATH_PROG(AUDIOFILE_CONFIG, audiofile-config, no,
                 [$PATH:/usr/local/bin:/opt/bin])
@@ -115,37 +119,57 @@
    file_drivers="audiofile"
 fi
 
+fi
+
 dnl LAME
+AC_ARG_ENABLE(lame, AC_HELP_STRING([--disable-lame], [disable support for lame (default=autodetect)]), [ enable_lame=$enableval ], [ enable_lame=yes ])
+
+if test "x$enable_lame" = "xyes"; then
 AC_CHECK_HEADER([lame/lame.h],
   [AC_CHECK_LIB([mp3lame], [lame_init],
     [AC_DEFINE(HAVE_LAME)
      echo "-lmp3lame -lm" > ${module_path}/.file_lame.cflags
      file_drivers="lame $file_drivers"], 
     [echo > ${module_path}/.file_lame.cflags], [-lm])])
-
+fi
 dnl sndfile
+AC_ARG_ENABLE(sndfile, AC_HELP_STRING([--disable-sndfile], [disable support for sndfile (default=autodetect)]), [ enable_sndfile=$enableval ], [ enable_sndfile=yes ])
+
+if test "x$enable_sndfile" = "xyes"; then
 PKG_CHECK_MODULES(SNDFILE, sndfile >= 1.0.4,
   AC_DEFINE(HAVE_SNDFILE)
   file_drivers="sndfile $file_drivers"
   echo "$SNDFILE_CFLAGS $SNDFILE_LIBS" > ${module_path}/.file_sndfile.cflags,
   echo > ${module_path}/.file_sndfile.cflags
   echo "no")
+fi
 
 dnl gmerlin_avdecoder
+AC_ARG_ENABLE(gmerlin, AC_HELP_STRING([--disable-gmerlin], [disable support for gmerlin (default=autodetect)]), [ enable_gmerlin=$enableval ], [ enable_gmerlin=yes ])
+
+if test "x$enable_gmerlin" = "xyes"; then
 PKG_CHECK_MODULES(GMERLIN_AVDEC, gmerlin_avdec = 0.1.2,
   AC_DEFINE(HAVE_GMERLIN_AVDEC)
   file_drivers="gmerlin_avdec $file_drivers"
   echo "$GMERLIN_AVDEC_CFLAGS $GMERLIN_AVDEC_LIBS" > ${module_path}/.file_gmerlin_avdec.cflags,
   echo > ${module_path}/.file_gmerlin_avdec.cflags
   echo "no")
+fi
 
 
 dnl OGG
+AC_ARG_ENABLE(ogg, AC_HELP_STRING([--disable-ogg], [disable support for ogg (default=autodetect)]), [ enable_ogg=$enableval ], [ enable_ogg=yes ])
+
+if test "x$enable_ogg" = "xyes"; then
 AC_CHECK_LIB([ogg], [ogg_stream_init],
   [AC_DEFINE(HAVE_OGG)
    use="$use -logg"], [], [])
+fi
 
 dnl Vorbis
+AC_ARG_ENABLE(vorbis, AC_HELP_STRING([--disable-vorbis], [disable support for vorbis (default=autodetect)]), [ enable_vorbis=$enableval ], [ enable_vorbis=yes ])
+
+if test "x$enable_vorbis" = "xyes"; then
 AC_CHECK_LIB([vorbis], [vorbis_info_init],
   [AC_DEFINE(HAVE_VORBIS)
    use="$use -lvorbis"], [], [])
@@ -154,26 +178,35 @@
 AC_CHECK_LIB([vorbisenc], [vorbis_encode_init],
   [AC_DEFINE(HAVE_VORBIS)
    use="$use -lvorbisenc"], [], [])
+fi
 
 dnl FFMPEG
+AC_ARG_ENABLE(ffmpeg, AC_HELP_STRING([--disable-ffmpeg], [disable support for ffmpeg (default=autodetect)]), [ enable_ffmpeg=$enableval ], [ enable_ffmpeg=yes ])
+
+if test "x$enable_ffmpeg" = "xyes"; then
 AC_CHECK_HEADER([ffmpeg/avformat.h],
   [AC_CHECK_LIB([avformat], [av_open_input_file],
     [AC_DEFINE(HAVE_FFMPEG)
      echo "-lavformat -lavcodec -lm $use" > ${module_path}/.file_ffmpeg.cflags
      file_drivers="ffmpeg $file_drivers"], 
     [echo > ${module_path}/.file_ffmpeg.cflags], [-lavcodec -lm])])
+fi
 
 if test "x${file_drivers}" = "x"; then
   AC_MSG_ERROR([*** no suitable file drivers found ***])
 fi
 
 dnl FLAC
+AC_ARG_ENABLE(flac, AC_HELP_STRING([--disable-flac], [disable support for flac (default=autodetect)]), [ enable_flac=$enableval ], [ enable_flac=yes ])
+
+if test "x$enable_flac" = "xyes"; then
 AC_CHECK_HEADER([FLAC/format.h],
   [AC_CHECK_LIB([FLAC], [FLAC__file_decoder_new],
     [AC_DEFINE(HAVE_FLAC)
      echo "-lFLAC -lm" > ${module_path}/.file_flac.cflags
      file_drivers="flac $file_drivers"], 
     [echo > ${module_path}/.file_flac.cflags], [-lm])])
+fi
 
 if test "x${file_drivers}" = "x"; then
   AC_MSG_ERROR([*** no suitable file drivers found ***])
@@ -185,11 +218,18 @@
 
 audio_drivers=
 dnl OSS
+AC_ARG_ENABLE(oss, AC_HELP_STRING([--disable-oss], [disable support for oss (default=autodetect)]), [ enable_oss=$enableval ], [ enable_oss=yes ])
+
+if test "x$enable_oss" = "xyes"; then
 AC_CHECK_HEADER(sys/soundcard.h,
   audio_drivers="oss"
   AC_DEFINE(HAVE_OSS),)
+fi
 
 dnl ALSA
+AC_ARG_ENABLE(alsa, AC_HELP_STRING([--disable-alsa], [disable support for alsa (default=autodetect)]), [ enable_alsa=$enableval ], [ enable_alsa=yes ])
+
+if test "x$enable_alsa" = "xyes"; then
 LIBS_BACKUP=$LIBS
 AM_PATH_ALSA(1.0.2, 
   AC_DEFINE(HAVE_ALSA)
@@ -198,14 +238,19 @@
   [echo > ${module_path}/.player_alsa.cflags
    echo "no"])
 LIBS=$LIBS_BACKUP
+fi
 
 dnl JACK
+AC_ARG_ENABLE(jack, AC_HELP_STRING([--disable-jack], [disable support for jack (default=autodetect)]), [ enable_jack=$enableval ], [ enable_jack=yes ])
+
+if test "x$enable_jack" = "xyes"; then
 PKG_CHECK_MODULES(JACK,jack >= 0.9.4,
   AC_DEFINE(HAVE_JACK)
   audio_drivers="$audio_drivers jack"
   echo "$JACK_CFLAGS $JACK_LIBS" > ${module_path}/.player_jack.cflags,
   [echo > ${module_path}/.player_jack.cflags
    echo "no"])
+fi
 
 if test "x${audio_drivers}" = "x"; then
   AC_MSG_ERROR([*** no suitable audio drivers found, install OSS (www.4front-tech.com) or ALSA (www.alsa-project.org) ***])
