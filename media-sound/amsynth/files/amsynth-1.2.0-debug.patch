Index: amSynth-1.2.0/src/MidiController.cc
===================================================================
--- amSynth-1.2.0.orig/src/MidiController.cc
+++ amSynth-1.2.0/src/MidiController.cc
@@ -5,6 +5,9 @@
 #include "MidiController.h"
 #include <fstream>
 #include <assert.h>
+#ifdef _DEBUG
+#include <iostream>
+#endif
 
 using namespace std;
 
Index: amSynth-1.2.0/src/Parameter.cc
===================================================================
--- amSynth-1.2.0.orig/src/Parameter.cc
+++ amSynth-1.2.0/src/Parameter.cc
@@ -71,15 +71,15 @@ Parameter::setValue(float value)
 			controlValue = offset + ::pow( _value, (float)base );
 #ifdef _DEBUG
 		default:
-		cout << "<Parameter> mode is undefined" << endl;
+		std::cout << "<Parameter> mode is undefined" << std::endl;
 		break;
 #endif
 	}
 	
 #ifdef _DEBUG
-	cout << "<Parameter::setValue( " << foo 
+	std::cout << "<Parameter::setValue( " << foo 
 	<< " ) min=" << _min << " max=" << _max << " value set to " << _value 
-	<< " controlValue set to " << controlValue << endl;
+	<< " controlValue set to " << controlValue << std::endl;
 #endif
 	
 	// TODO: only update() Listeners it there _was_ a change?
@@ -88,7 +88,7 @@ Parameter::setValue(float value)
 		for (unsigned i=0; i<updateListeners.size(); i++)
 		{
 #ifdef _DEBUG
-			cout << "updating UpdateListener " << updateListeners[i] << endl;
+			std::cout << "updating UpdateListener " << updateListeners[i] << std::endl;
 #endif
 			updateListeners[i]->UpdateParameter (mParamId, controlValue);
 		}
