Index: audacity-src-1.3.8/configure.in
===================================================================
--- audacity-src-1.3.8.orig/configure.in   2009-07-19 17:58:46.000000000 +0400
+++ audacity-src-1.3.8/configure.in        2009-07-19 18:02:49.000000000 +0400
@@ -551,6 +551,8 @@
 esac
 
 dnl PortAudio configuration
+AC_ARG_WITH([alsa], AS_HELP_STRING([--without-alsa], [Build without alsa library (default: test)]))
+AC_ARG_WITH([jack], AS_HELP_STRING([--without-jack], [Build without jack library (default: test)]))
 
 LOCAL_LIBS="$LOCAL_LIBS portaudio-v19/lib/libportaudio.a"
 EXTRAOBJS="$EXTRAOBJS ../lib-src/portaudio-v19/lib/libportaudio.a"
@@ -567,13 +569,21 @@
       ;;
    *) 
       dnl Unix
-      AC_CHECK_LIB(asound, snd_pcm_open, have_alsa=yes, have_alsa=no)
-      if [[ $have_alsa = "yes" ]] ; then
-         LIBS="$LIBS -lasound"
-      fi
-      PKG_CHECK_MODULES(JACK, jack, have_jack=yes, have_jack=no)
-      if [[ $have_jack = "yes" ]] ; then
-         LIBS="$LIBS $JACK_LIBS"
+      if test "x$with_alsa" != "xno"; then
+         AC_CHECK_LIB(asound, snd_pcm_open, have_alsa=yes, have_alsa=no)
+         if [[ $have_alsa = "yes" ]] ; then
+            LIBS="$LIBS -lasound"
+        else
+            AC_MSG_WARN([Support for alsa not available])
+         fi
+      fi        
+      if test "x$with_jack" != "xno"; then
+         PKG_CHECK_MODULES(JACK, jack, have_jack=yes, have_jack=no)
+         if [[ $have_jack = "yes" ]] ; then
+            LIBS="$LIBS $JACK_LIBS"
+        else
+            AC_MSG_WARN([Support for jack not available])
+         fi
       fi
       AC_CHECK_LIB(hpi, HPI_SubSysCreate, have_asihpi=yes, have_asihpi=no, -lm)
       if [[ $have_asihpi = "yes" ]] ; then
Index: audacity-src-1.3.8/lib-src/portmixer/configure.ac
===================================================================
--- audacity-src-1.3.8.orig/lib-src/portmixer/configure.ac
+++ audacity-src-1.3.8/lib-src/portmixer/configure.ac
@@ -94,6 +94,7 @@ AC_CHECK_HEADER(linux/soundcard.h, have_
 AC_CHECK_HEADER(alsa/asoundlib.h,  have_alsa=yes, have_alsa=no)
 AC_CHECK_HEADER(CoreAudio/CoreAudio.h, have_coreaudio=yes, have_coreaudio=no)
 
+AC_ARG_WITH([alsa], AS_HELP_STRING([--without-alsa], [Build without alsa library (default: test)]))
 #
 # Set up to use the identified ones
 #
@@ -104,7 +105,7 @@ if [[ $have_oss = "yes" ]] ; then
    objects="$objects px_unix_oss.o"
 fi
 
-if [[ $have_alsa = "yes" ]] ; then
+if [[ $have_alsa = "yes" -a "x$with_alsa" != "xno" ]] ; then
    AC_MSG_NOTICE(Including support for ALSA);
    AC_DEFINE(PX_USE_LINUX_ALSA)
    objects="$objects px_linux_alsa.o"
