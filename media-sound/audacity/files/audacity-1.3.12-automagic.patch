--- a/configure.in
+++ b/configure.in
@@ -559,6 +559,8 @@ case "${host_os}" in
 esac
 
 dnl PortAudio configuration
+AC_ARG_WITH([alsa], AS_HELP_STRING([--without-alsa], [Build without alsa library (default: test)]))
+AC_ARG_WITH([jack], AS_HELP_STRING([--without-jack], [Build without jack library (default: test)]))
 
 LOCAL_LIBS="$LOCAL_LIBS portaudio-v19/lib/libportaudio.a"
 EXTRAOBJS="$EXTRAOBJS ../lib-src/portaudio-v19/lib/libportaudio.a"
@@ -575,13 +577,21 @@ case "${host_os}" in
       ;;
    *)
       dnl Unix
-      AC_CHECK_LIB(asound, snd_pcm_open, have_alsa=yes, have_alsa=no)
-      if [[ $have_alsa = "yes" ]] ; then
-         LIBS="$LIBS -lasound"
-      fi
-      PKG_CHECK_MODULES(JACK, jack, have_jack=yes, have_jack=no)
-      if [[ $have_jack = "yes" ]] ; then
-         LIBS="$LIBS $JACK_LIBS"
+      if test "x$with_alsa" != "xno"; then
+         AC_CHECK_LIB(asound, snd_pcm_open, have_alsa=yes, have_alsa=no)
+         if [[ $have_alsa = "yes" ]] ; then
+            LIBS="$LIBS -lasound"
+        else
+            AC_MSG_WARN([Support for alsa not available])
+         fi
+      fi        
+      if test "x$with_jack" != "xno"; then
+         PKG_CHECK_MODULES(JACK, jack, have_jack=yes, have_jack=no)
+         if [[ $have_jack = "yes" ]] ; then
+            LIBS="$LIBS $JACK_LIBS"
+        else
+            AC_MSG_WARN([Support for jack not available])
+         fi
       fi
       AC_CHECK_LIB(hpi, HPI_SubSysCreate, have_asihpi=yes, have_asihpi=no, -lm)
       if [[ $have_asihpi = "yes" ]] ; then
--- a/lib-src/portmixer/configure.ac
+++ b/lib-src/portmixer/configure.ac
@@ -31,6 +31,8 @@ AC_ARG_ENABLE([debug],
   [AC_SUBST( cflags, ["$cflags -g"] )  AC_MSG_RESULT(yes)],
   [AC_SUBST( cflags, ["$cflags -O2"] ) AC_MSG_RESULT(no)])
 
+AC_ARG_WITH([alsa], AS_HELP_STRING([--without-alsa], [Build without alsa library (default: test)]))
+
 #
 # Check for portaudio path
 #
@@ -107,7 +109,7 @@ if [[ $have_oss = "yes" ]] ; then
    objects="$objects px_unix_oss.o"
 fi
 
-if [[ $have_alsa = "yes" ]] ; then
+if [[ $have_alsa = "yes" -a "x$with_alsa" != "xno" ]] ; then
    AC_MSG_NOTICE(Including support for ALSA);
    AC_DEFINE(PX_USE_LINUX_ALSA)
    objects="$objects px_linux_alsa.o"
