diff -ru jack-audio-connection-kit-0.100.0.orig/drivers/alsa/alsa_driver.c jack-audio-connection-kit-0.100.0/drivers/alsa/alsa_driver.c
--- jack-audio-connection-kit-0.100.0.orig/drivers/alsa/alsa_driver.c	2005-09-23 19:33:25.000000000 +0200
+++ jack-audio-connection-kit-0.100.0/drivers/alsa/alsa_driver.c	2005-09-23 19:34:11.000000000 +0200
@@ -70,6 +70,16 @@
 		driver->capture_addr = 0;
 	}
 
+	if (driver->playback_interleave_skip) {
+		free (driver->playback_interleave_skip);
+		driver->playback_interleave_skip = NULL;
+	}
+
+	if (driver->capture_interleave_skip) {
+		free (driver->capture_interleave_skip);
+		driver->capture_interleave_skip = NULL;
+	}
+
 	if (driver->silent) {
 		free (driver->silent);
 		driver->silent = 0;
@@ -377,6 +387,9 @@
 		if ((err = snd_pcm_hw_params_set_access (
 			     handle, hw_params,
 			     SND_PCM_ACCESS_MMAP_INTERLEAVED)) < 0) {
+		    if ((err = snd_pcm_hw_params_set_access (
+		    		handle, hw_params,
+		    		SND_PCM_ACCESS_MMAP_COMPLEX)) < 0) {
 			jack_error ("ALSA: mmap-based access is not possible"
 				    " for the %s "
 				    "stream of this audio interface",
@@ -384,6 +397,7 @@
 			return -1;
 		}
 	}
+	}
 
 	format = sample_width == 4 ? 0 : NOFORMATS - 1;
 	while (1) {
@@ -683,7 +697,8 @@
  		err = snd_pcm_hw_params_get_access (driver->playback_hw_params,
 						    &access);
  		driver->playback_interleaved =
-			(access == SND_PCM_ACCESS_MMAP_INTERLEAVED);
+			(access == SND_PCM_ACCESS_MMAP_INTERLEAVED) 
+			|| (access == SND_PCM_ACCESS_MMAP_COMPLEX);
 
 		if (p_period_size != driver->frames_per_cycle) {
 			jack_error ("alsa_pcm: requested an interrupt every %"
@@ -705,8 +720,8 @@
  		err = snd_pcm_hw_params_get_access (driver->capture_hw_params,
 						    &access);
  		driver->capture_interleaved =
-			(access == SND_PCM_ACCESS_MMAP_INTERLEAVED);
- 
+			(access == SND_PCM_ACCESS_MMAP_INTERLEAVED) 
+			|| (access == SND_PCM_ACCESS_MMAP_COMPLEX);
 	
 		if (c_period_size != driver->frames_per_cycle) {
 			jack_error ("alsa_pcm: requested an interrupt every %"
@@ -765,15 +780,11 @@
 				    driver->alsa_name_playback);
 			return -1;
 		}
-		driver->playback_interleave_skip = my_areas[0].step / 8;
 		driver->interleave_unit =
 			snd_pcm_format_physical_width (
 				driver->playback_sample_format) / 8;
 	} else {
 		driver->interleave_unit = 0;  /* NOT USED */
-		driver->playback_interleave_skip =
-			snd_pcm_format_physical_width (
-				driver->playback_sample_format) / 8;
 	}
 
 	if (driver->capture_interleaved) {
@@ -785,11 +796,6 @@
 				    driver->alsa_name_capture);
 			return -1;
 		}
-		driver->capture_interleave_skip = my_areas[0].step / 8;
-	} else {
-		driver->capture_interleave_skip =
-			snd_pcm_format_physical_width (
-			driver->capture_sample_format) / 8;
 	}
 
 	if (driver->playback_nchannels > driver->capture_nchannels) {
@@ -819,6 +825,10 @@
 			malloc (sizeof (char *) * driver->playback_nchannels);
 		memset (driver->playback_addr, 0,
 			sizeof (char *) * driver->playback_nchannels);
+		driver->playback_interleave_skip = (unsigned long *)
+			malloc (sizeof (unsigned long *) * driver->playback_nchannels);
+		memset (driver->playback_interleave_skip, 0,
+			sizeof (unsigned long *) * driver->playback_nchannels);
 		driver->silent = (unsigned long *)
 			malloc (sizeof (unsigned long)
 				* driver->playback_nchannels);
@@ -841,6 +851,10 @@
 			malloc (sizeof (char *) * driver->capture_nchannels);
 		memset (driver->capture_addr, 0,
 			sizeof (char *) * driver->capture_nchannels);
+		driver->capture_interleave_skip = (unsigned long *)
+			malloc (sizeof (unsigned long *) * driver->capture_nchannels);
+		memset (driver->capture_interleave_skip, 0,
+			sizeof (unsigned long *) * driver->capture_nchannels);
 	}
 
 	driver->clock_sync_data = (ClockSyncStatus *)
@@ -897,6 +911,7 @@
 				&driver->capture_areas[chn];
 			driver->capture_addr[chn] = (char *) a->addr
 				+ ((a->first + a->step * *capture_offset) / 8);
+			driver->capture_interleave_skip[chn] = (unsigned long ) (a->step / 8);
 		}
 	} 
 
@@ -915,6 +930,7 @@
 				&driver->playback_areas[chn];
 			driver->playback_addr[chn] = (char *) a->addr
 				+ ((a->first + a->step * *playback_offset) / 8);
+			driver->playback_interleave_skip[chn] = (unsigned long ) (a->step / 8);
 		}
 	} 
 	
@@ -1991,6 +2007,8 @@
 
 	driver->playback_addr = 0;
 	driver->capture_addr = 0;
+	driver->playback_interleave_skip = NULL;
+	driver->capture_interleave_skip = NULL;
 
 
 	driver->silent = 0;
Only in jack-audio-connection-kit-0.100.0/drivers/alsa: alsa_driver.c.orig
diff -ru jack-audio-connection-kit-0.100.0.orig/drivers/alsa/alsa_driver.h jack-audio-connection-kit-0.100.0/drivers/alsa/alsa_driver.h
--- jack-audio-connection-kit-0.100.0.orig/drivers/alsa/alsa_driver.h	2005-09-23 19:33:25.000000000 +0200
+++ jack-audio-connection-kit-0.100.0/drivers/alsa/alsa_driver.h	2005-09-23 19:34:11.000000000 +0200
@@ -65,8 +65,8 @@
     unsigned int                  playback_nfds;
     unsigned int                  capture_nfds;
     unsigned long                 interleave_unit;
-    unsigned long                 capture_interleave_skip;
-    unsigned long                 playback_interleave_skip;
+    unsigned long                *capture_interleave_skip;
+    unsigned long                *playback_interleave_skip;
     channel_t                     max_nchannels;
     channel_t                     user_nchannels;
     channel_t                     playback_nchannels;
@@ -155,7 +155,7 @@
 			(driver->playback_addr[chn],
 			 0, nframes * driver->playback_sample_bytes,
 			 driver->interleave_unit,
-			 driver->playback_interleave_skip);
+			 driver->playback_interleave_skip[chn]);
 	} else {
 		memset (driver->playback_addr[chn], 0,
 			nframes * driver->playback_sample_bytes);
@@ -171,7 +171,7 @@
 			(driver->playback_addr[chn],
 			 0, nframes * driver->playback_sample_bytes,
 			 driver->interleave_unit,
-			 driver->playback_interleave_skip);
+			 driver->playback_interleave_skip[chn]);
 	} else {
 		memset (driver->playback_addr[chn], 0,
 			nframes * driver->playback_sample_bytes);
@@ -187,7 +187,7 @@
 	driver->read_via_copy (buf, 
 			       driver->capture_addr[channel],
 			       nsamples, 
-			       driver->capture_interleave_skip);
+			       driver->capture_interleave_skip[channel]);
 }
 
 static inline void 
@@ -199,7 +199,7 @@
 	driver->write_via_copy (driver->playback_addr[channel],
 				buf, 
 				nsamples, 
-				driver->playback_interleave_skip,
+				driver->playback_interleave_skip[channel],
 				driver->dither_state+channel);
 	alsa_driver_mark_channel_done (driver, channel);
 }
@@ -213,8 +213,8 @@
 	driver->channel_copy (driver->playback_addr[output_channel],
 			      driver->capture_addr[input_channel],
 			      nsamples * driver->playback_sample_bytes,
-			      driver->playback_interleave_skip,
-			      driver->capture_interleave_skip);
+			      driver->playback_interleave_skip[output_channel],
+			      driver->capture_interleave_skip[input_channel]);
 	alsa_driver_mark_channel_done (driver, output_channel);
 }
 
