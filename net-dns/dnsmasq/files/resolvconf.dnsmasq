#!/bin/bash
# Copyright 2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

# dnsmasq-resolv.conf updater
# Written by Roy Marples (uberlord@gentoo.org)

# This is very important!
# We assume that we are a local dns cache - after all, why would a server
# use resolvconf?
# Now that we have assumed this, we also assume that generic DHCP clients
# will enter their domains and search domains ONLY in the "search" field
# in their resolv.confs and VPN clients will put the domain they are for
# into the domain field only.
# This allows dnsmasq to forward domains for a specific VPN domain to the
# VPN nameserver and everything else to the standard name servers.

# A sample dnsmasq config that works as above is like so
#domain-needed
#interface=lo
#conf-file=/etc/dnsmasq-resolvconf.conf
#resolv-file=/etc/dnsmasq-resolv.conf

# The last step is to configure dns configuration for /etc/resolv.conf
# for the lo interface. In Gentoo we set it up like so in /etc/conf.d/net
#dns_servers_lo=( "127.0.0.1" )

# Load generic Gentoo functions
source /etc/init.d/functions.sh

# Load our variables from resolvconf
VARS="$(resolvconf -v)"
eval "${VARS}"

DNSMASQRESOLV="/etc/dnsmasq-resolv.conf"
DNSMASQCONF="/etc/dnsmasq-resolvconf.conf"

NEWCONF="# Generated by resolvconf"
NEWRESOLV="${NEWCONF}\nsearch"

# If we only have domain information then put it in search too
[[ -z ${NEWSEARCH} && -z ${NEWNS} ]] && NEWSEARCH="${NEWDOMAIN}"

for N in ${NEWSEARCH} ; do
	if [[ " ${NEWSL} " != *" ${N%,*} "* ]] ; then
		NEWSL="${NEWSL} ${N%,*}"
	fi
	if [[ "\n${NEWRESOLV}\n" != *"\nnameserver ${N#*,}\n"* ]] ; then
		NEWRESOLV="${NEWRESOLV}\nnameserver ${N#*,}"
	fi
done
for N in ${NEWNS} ; do
	if [[ "\n${NEWRESOLV}\n" != *"\nnameserver ${N}\n" ]] ; then
		NEWRESOLV="${NEWRESOLV}\nnameserver ${N}"
	fi
done
NEWRESOLV="${NEWRESOLV//\\nsearch/${NEWSL:+\nsearch${NEWSL}}}"

for DN in $(uniqify ${NEWDOMAIN}) ; do
	NEWCONF="${NEWCONF}\nserver=/${DN%,*}/${DN#*,}"
done

RELOAD="no"
if [[ -e ${DNSMASQCONF} ]] ; then
	if [[ $(< "${DNSMASQCONF}") != "$(echo -e "${NEWCONF}")" ]] ; then
		RELOAD="yes"
		echo -e "${NEWCONF}" > "${DNSMASQCONF}"
	fi
else
	RELOAD="yes"
	echo -e "${NEWCONF}" > "${DNSMASQCONF}"
fi
if [[ -e ${DNSMASQRESOLV}} ]] ; then
	if [[ $(< "${DNSMASQRESOLV}") != "$(echo -e "${NEWRESOLV}")" ]] ; then
		RELOAD="yes"
		echo -e "${NEWRESOLV}" > "${DNSMASQRESOLV}"
	fi
else
	# dnsmasq polls this file so no need to set RELOAD="yes"
	echo -e "${NEWRESOLV}" > "${DNSMASQRESOLV}"
fi

if [[ ${RELOAD} == "yes" && -x /etc/init.d/dnsmasq ]] ; then
	if /etc/init.d/dnsmasq --quiet status ; then
		/etc/init.d/dnsmasq --quiet --nodeps restart
	fi
fi

# vim: ts=4 :
