diff -Naur sussen-0.28.orig/oval/support/unix/interface.c sussen-0.28/oval/support/unix/interface.c
--- sussen-0.28.orig/oval/support/unix/interface.c	2006-06-26 07:27:29.000000000 +0400
+++ sussen-0.28/oval/support/unix/interface.c	2006-08-25 09:28:21.000000000 +0400
@@ -33,24 +33,51 @@
 	char bc_addr[18];
 	char netmask[18];
 	short flags;
+	
+	if (ifname == NULL || strlen(ifname) <= 1) {
+		*phw_addr = strdup (hw_addr);
+		*pinet_addr = strdup (inet_addr);
+		*pbc_addr = strdup (bc_addr);
+		*pnetmask = strdup (netmask);
+		*pflags = flags;
 
-	if (strlen(ifname) <= 1)
 		return (-1);
+	}
 
 	sfd = socket(AF_INET, SOCK_DGRAM, 0);
-	if (sfd < 0)
+	if (sfd < 0) {
+		*phw_addr = strdup (hw_addr);
+		*pinet_addr = strdup (inet_addr);
+		*pbc_addr = strdup (bc_addr);
+		*pnetmask = strdup (netmask);
+		*pflags = flags;
+
 		return (-1);
+	}
 
 	strncpy (ifr.ifr_name, ifname, IFNAMSIZ);
-	if (ioctl(sfd, SIOCGIFFLAGS, &ifr) < 0)
+	if (ioctl(sfd, SIOCGIFFLAGS, &ifr) < 0) {
+		*phw_addr = strdup (hw_addr);
+		*pinet_addr = strdup (inet_addr);
+		*pbc_addr = strdup (bc_addr);
+		*pnetmask = strdup (netmask);
+		*pflags = flags;
+
 		return (-1);
-	else
+	} else {
 		flags = ifr.ifr_flags;
+	}
 
 	strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
-	if (ioctl(sfd, SIOCGIFHWADDR, &ifr) < 0)
+	if (ioctl(sfd, SIOCGIFHWADDR, &ifr) < 0) {
+		*phw_addr = strdup (hw_addr);
+		*pinet_addr = strdup (inet_addr);
+		*pbc_addr = strdup (bc_addr);
+		*pnetmask = strdup (netmask);
+		*pflags = flags;
+
 		return (-1);
-	else
+	} else {
 	   snprintf (hw_addr, 18, "%02x:%02x:%02x:%02x:%02x:%02x", 
 		(int) ((unsigned char *) ifr.ifr_hwaddr.sa_data)[0],
 		(int) ((unsigned char *) ifr.ifr_hwaddr.sa_data)[1],
@@ -58,6 +85,7 @@
 		(int) ((unsigned char *) ifr.ifr_hwaddr.sa_data)[3],
 		(int) ((unsigned char *) ifr.ifr_hwaddr.sa_data)[4],
 		(int) ((unsigned char *) ifr.ifr_hwaddr.sa_data)[5]);
+	}
 
 	strcpy(ifr.ifr_name, ifname);
 	ifr.ifr_addr.sa_family = AF_INET;
@@ -66,19 +94,40 @@
 			ntoa(((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr.s_addr));
 
 		strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
-		if (ioctl(sfd, SIOCGIFBRDADDR, &ifr) < 0)
+		if (ioctl(sfd, SIOCGIFBRDADDR, &ifr) < 0) {
+			*phw_addr = strdup (hw_addr);
+			*pinet_addr = strdup (inet_addr);
+			*pbc_addr = strdup (bc_addr);
+			*pnetmask = strdup (netmask);
+			*pflags = flags;
+
 			return (-1);
-		else
+		} else {
 			sprintf (bc_addr, "%s", 
 				ntoa(((struct sockaddr_in *)&ifr.ifr_broadaddr)->sin_addr.s_addr));
+		}
 
 		strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
-		if (ioctl(sfd, SIOCGIFNETMASK, &ifr) < 0)
+		if (ioctl(sfd, SIOCGIFNETMASK, &ifr) < 0) {
+			*phw_addr = strdup (hw_addr);
+			*pinet_addr = strdup (inet_addr);
+			*pbc_addr = strdup (bc_addr);
+			*pnetmask = strdup (netmask);
+			*pflags = flags;
+
 			return (-1);
-		else
+		} else {
 			sprintf (netmask, "%s", 
 				ntoa(((struct sockaddr_in *)&ifr.ifr_netmask)->sin_addr.s_addr));
+		}
+
 	} else {
+		*phw_addr = strdup (hw_addr);
+		*pinet_addr = strdup (inet_addr);
+		*pbc_addr = strdup (bc_addr);
+		*pnetmask = strdup (netmask);
+		*pflags = flags;
+
 		return (-1);
 	}
 
@@ -122,17 +171,17 @@
 {
 	FILE *f;
 	char buf[512];
+        char interfaces [1024];
 
 	f = fopen ("/proc/net/dev", "r");
 	if (!f) {
+		*found_interfaces = strdup (interfaces);
 		return (-1);
 	}
 	
 	fgets (buf, sizeof (buf), f); /* eat line */
 	fgets (buf, sizeof (buf), f);
 
-        char interfaces [1024];
-
 	int i = 0;
 	while (fgets(buf, sizeof buf, f)) {
 		char name[IFNAMSIZ];
