diff -Naur sussen-0.34.orig/oval/Sussen.Oval/DataCollector.cs sussen-0.34/oval/Sussen.Oval/DataCollector.cs
--- sussen-0.34.orig/oval/Sussen.Oval/DataCollector.cs	2007-01-24 01:55:23.000000000 +0300
+++ sussen-0.34/oval/Sussen.Oval/DataCollector.cs	2007-01-31 09:36:28.000000000 +0300
@@ -111,8 +111,15 @@
                                 
                             } catch (TestException e) {
                                 Log.Debug(e);
-                                docs.SystemCharacteristics.WrongPlatform.Add(testElement.ID, testElement.ID);
-                                docs.SystemCharacteristics.WriteCollectedObject(oe.ID, oe.Version, Flags.NotApplicable);
+                                if (!docs.SystemCharacteristics.WrongPlatform.ContainsKey (testElement.ID)) {                                       docs.SystemCharacteristics.WrongPlatform.Add(testElement.ID, testElement.ID);
+                                       docs.SystemCharacteristics.WriteCollectedObject(oe.ID, oe.Version, Flags.NotApplicable);
+				       }
+			    } catch (ArgumentOutOfRangeException ex) {
+			         Log.Debug (ex);
+				 if (!docs.SystemCharacteristics.WrongPlatform.ContainsKey (testElement.ID)) {
+				     docs.SystemCharacteristics.WrongPlatform.Add(testElement.ID, testElement.ID);
+				     docs.SystemCharacteristics.WriteCollectedObject(oe.ID, oe.Version, Flags.NotApplicable);
+				 }
                             }
 
                             Log.Debug("si.Count in complement: {0}", si.Count);
diff -Naur sussen-0.34.orig/oval/Sussen.Oval/Variable.cs sussen-0.34/oval/Sussen.Oval/Variable.cs
--- sussen-0.34.orig/oval/Sussen.Oval/Variable.cs	2007-01-24 01:55:23.000000000 +0300
+++ sussen-0.34/oval/Sussen.Oval/Variable.cs	2007-01-31 09:38:33.000000000 +0300
@@ -385,15 +385,20 @@
 
             if (oe.Entities.Count == 0) {
                 ObjectElement oe2 = Global.Objects[oe.Set.ObjectReferences[0]];
-                StateElement se2 = Global.States[oe.Set.Filters[0]];
-
-                Test test = CreateTest(testName);
-                CollectedItem[] results = test.Run(null, oe2);
-
-                CollectedItem ci = FilterSet(results, se2);
-                foreach (EntityObject ceo in ci.Items)
-                    if (ceo.Name == itemField)
-                        return ceo.Value;
+                StateElement se2 = Global.States[oe.Set.Filters[0]];
+
+		try {
+		Test test = CreateTest(testName);
+		CollectedItem[] results = test.Run(null, oe2);
+		CollectedItem ci = FilterSet(results, se2);
+		foreach (EntityObject ceo in ci.Items)
+		    if (ceo.Name == itemField)
+		        return ceo.Value;
+
+		} catch (Exception e) {
+		     Log.Debug (e);
+		}
+
 
                 return null;
             }
