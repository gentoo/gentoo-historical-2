--- ./epan/dissectors/packet-ldp.c.orig	2008-10-16 22:58:47.000000000 +0400
+++ ./epan/dissectors/packet-ldp.c	2008-10-16 22:59:03.000000000 +0400
@@ -2484,7 +2484,7 @@
 	int length_remaining;
 	guint16 plen;
 	int length;
-	tvbuff_t *next_tvb;
+	tvbuff_t *volatile next_tvb;
 
 	while (tvb_reported_length_remaining(tvb, offset) != 0) {
 		length_remaining = tvb_length_remaining(tvb, offset);
--- ./epan/dissectors/packet-tpkt.c.orig	2008-10-16 23:24:58.000000000 +0400
+++ ./epan/dissectors/packet-tpkt.c	2008-10-16 23:25:27.000000000 +0400
@@ -217,7 +217,7 @@
     int mgcp_version = 0;
     int mgcp_reserved = 0;
     volatile int length;
-    tvbuff_t *next_tvb;
+    tvbuff_t *volatile next_tvb;
     const char *saved_proto;
     guint8 string[4];
     /*
@@ -372,7 +372,7 @@
 	int length_remaining;
 	int data_len;
 	volatile int length;
-	tvbuff_t *next_tvb;
+	tvbuff_t *volatile next_tvb;
 	const char *saved_proto;
 
 	/*
--- ./epan/dissectors/packet-gssapi.c.orig	2008-10-16 22:55:09.000000000 +0400
+++ ./epan/dissectors/packet-gssapi.c	2008-10-16 22:56:06.000000000 +0400
@@ -172,8 +172,8 @@
 dissect_gssapi_work(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
     gboolean is_verifier)
 {
-	proto_item *item;
-	proto_tree *subtree;
+	proto_item *volatile item;
+	proto_tree *volatile subtree;
 	volatile int return_offset = 0;
 	gssapi_conv_info_t *volatile gss_info;
 	gssapi_oid_value *oidvalue;
--- ./epan/dissectors/packet-tds.c.orig	2008-10-16 23:22:27.000000000 +0400
+++ ./epan/dissectors/packet-tds.c	2008-10-16 23:22:40.000000000 +0400
@@ -1725,7 +1725,7 @@
 	guint8 type;
 	guint16 plen;
 	guint length;
-	tvbuff_t *next_tvb;
+	tvbuff_t *volatile next_tvb;
 	proto_item *tds_item = NULL;
 	proto_tree *tds_tree = NULL;
 
--- ./epan/dissectors/packet-isl.c.orig	2008-10-16 22:57:53.000000000 +0400
+++ ./epan/dissectors/packet-isl.c	2008-10-16 22:58:15.000000000 +0400
@@ -149,7 +149,7 @@
 {
   proto_tree *volatile fh_tree = NULL;
   proto_item *ti, *hidden_item;
-  guint8 type;
+  volatile guint8 type;
   volatile guint16 length;
   gint captured_length;
   tvbuff_t *volatile payload_tvb = NULL;
--- ./epan/dissectors/packet-ieee802154.c.orig	2008-10-16 22:56:53.000000000 +0400
+++ ./epan/dissectors/packet-ieee802154.c	2008-10-16 22:57:23.000000000 +0400
@@ -484,7 +484,7 @@
 static void
 dissect_ieee802154_common(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint options)
 {
-    tvbuff_t            *payload_tvb;
+    tvbuff_t            *volatile payload_tvb;
     proto_tree          *volatile ieee802154_tree = NULL;
     proto_item          *volatile proto_root = NULL;
     proto_item          *ti;
--- ./epan/dissectors/packet-tr.c.orig	2008-10-16 23:25:37.000000000 +0400
+++ ./epan/dissectors/packet-tr.c	2008-10-16 23:26:20.000000000 +0400
@@ -326,10 +326,10 @@
 {
 	proto_tree	*tr_tree, *bf_tree;
 	proto_item	*ti, *hidden_item;
-	int		frame_type;
 	guint8		rcf1, rcf2;
 	tvbuff_t	*next_tvb;
 
+	volatile int		frame_type;
 	volatile int		fixoffset = 0;
 	volatile int		source_routed = 0;
 	volatile guint8		trn_rif_bytes;
--- ./epan/dissectors/packet-bgp.c.orig	2008-10-16 22:40:35.000000000 +0400
+++ ./epan/dissectors/packet-bgp.c	2008-10-16 22:49:31.000000000 +0400
@@ -2623,7 +2623,7 @@
 }
 
 static void
-dissect_bgp_pdu(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
+dissect_bgp_pdu(tvbuff_t *volatile tvb, packet_info *pinfo, proto_tree *tree,
     gboolean first)
 {
     guint16       bgp_len;       /* Message length             */
@@ -2740,7 +2740,7 @@
     guint         length_remaining;
     guint         length;
     volatile gboolean first = TRUE;  /* TRUE for the first BGP message in packet */
-    tvbuff_t      *next_tvb;
+    tvbuff_t *volatile next_tvb;
 
     if (check_col(pinfo->cinfo, COL_PROTOCOL))
 	col_set_str(pinfo->cinfo, COL_PROTOCOL, "BGP");
--- ./epan/dissectors/packet-ethertype.c.orig	2008-10-16 22:51:48.000000000 +0400
+++ ./epan/dissectors/packet-ethertype.c	2008-10-16 22:52:25.000000000 +0400
@@ -193,7 +193,7 @@
 	guint			length_before;
 	gint			captured_length, reported_length;
 	volatile gboolean	dissector_found = FALSE;
-	const char		*saved_proto;
+	const char		*volatile saved_proto;
 
 	/* Add the Ethernet type to the protocol tree */
 	if (tree) {
--- ./epan/dissectors/packet-vlan.c.orig	2008-10-16 23:26:42.000000000 +0400
+++ ./epan/dissectors/packet-vlan.c	2008-10-16 23:27:07.000000000 +0400
@@ -74,7 +74,8 @@
 dissect_vlan(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree)
 {
   proto_tree *ti;
-  guint16 tci,encap_proto;
+  guint16 tci;
+  volatile guint16 encap_proto;
   volatile gboolean is_802_2;
   proto_tree *volatile vlan_tree;
 
=== modified file 'epan/dissectors/packet-scsi.h'
--- epan/dissectors/packet-scsi.h	2008-11-22 14:42:31 +0000
+++ epan/dissectors/packet-scsi.h	2008-11-22 14:45:00 +0000
@@ -241,7 +241,7 @@
  */
 #define TRY_SCSI_CDB_ALLOC_LEN(pinfo, tvb, offset, length)		\
     {									\
-	gboolean short_packet;						\
+	volatile gboolean short_packet;						\
 	tvbuff_t *new_tvb;						\
 	guint32 end_data_offset=0;					\
 									\

=== modified file 'epan/dissectors/packet-x11.c'
--- epan/dissectors/packet-x11.c	2008-11-22 14:42:31 +0000
+++ epan/dissectors/packet-x11.c	2008-11-22 14:50:41 +0000
@@ -4066,7 +4066,7 @@
       conversation_t *conversation;
       x11_conv_data_t *volatile state;
       int length;
-      tvbuff_t *next_tvb;
+      tvbuff_t *volatile next_tvb;
 
       while (tvb_reported_length_remaining(tvb, offset) != 0) {
 	    /*

