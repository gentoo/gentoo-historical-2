cleanup autotools

--- plugins/Makefile.am
+++ plugins/Makefile.am
@@ -101,96 +101,31 @@ libxmldumpPlugin_la_CFLAGS = $(AM_CFLAGS
 # by default ntop looks for plugins in the plugins/ subdirectory
 #
 
+%Plugin.so$(EXEEXT): .libs/lib%Plugin.so
+	$(LN_S) $< $@
 
-.libs/libicmpPlugin.so@SO_VERSION_PATCH@:
-	@if test -f libicmpPlugin_la-icmpPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libicmpPlugin.so@SO_VERSION_PATCH@ libicmpPlugin_la-icmpPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libicmpPlugin.so@SO_VERSION_PATCH@ icmpPlugin.o; \
-	fi
-
-icmpPlugin.so$(EXEEXT): .libs/libicmpPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/libicmpPlugin.so icmpPlugin.so
-
-.libs/liblastSeenPlugin.so@SO_VERSION_PATCH@:
-	@if test -f liblastSeenPlugin_la-lastSeenPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/liblastSeenPlugin.so@SO_VERSION_PATCH@ liblastSeenPlugin_la-lastSeenPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/liblastSeenPlugin.so@SO_VERSION_PATCH@ lastSeenPlugin.o; \
-	fi
-
-lastSeenPlugin.so$(EXEEXT): .libs/liblastSeenPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/liblastSeenPlugin.so lastSeenPlugin.so
-
-.libs/libnetflowPlugin.so@SO_VERSION_PATCH@:
-	@if test -f libnetflowPlugin_la-netflowPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libnetflowPlugin.so@SO_VERSION_PATCH@ libnetflowPlugin_la-netflowPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libnetflowPlugin.so@SO_VERSION_PATCH@ netflowPlugin.o; \
-	fi
-
-netflowPlugin.so$(EXEEXT): .libs/libnetflowPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/libnetflowPlugin.so netflowPlugin.so
-
-.libs/libpdaPlugin.so@SO_VERSION_PATCH@:
-	@if test -f libpdaPlugin_la-pdaPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libpdaPlugin.so@SO_VERSION_PATCH@ libpdaPlugin_la-pdaPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libpdaPlugin.so@SO_VERSION_PATCH@ pdaPlugin.o; \
-	fi
-
-pdaPlugin.so$(EXEEXT): .libs/libpdaPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/libpdaPlugin.so pdaPlugin.so
-
-.libs/librrdPlugin.so@SO_VERSION_PATCH@:
-	@if test -f librrdPlugin_la-rrdPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/librrdPlugin.so@SO_VERSION_PATCH@ librrdPlugin_la-rrdPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/librrdPlugin.so@SO_VERSION_PATCH@ rrdPlugin.o; \
-	fi
-
-rrdPlugin.so$(EXEEXT): .libs/librrdPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/librrdPlugin.so rrdPlugin.so
-
-.libs/libsnmpPlugin.so@SO_VERSION_PATCH@:
-	@if test -f libsnmpPlugin_la-snmpPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libsnmpPlugin.so@SO_VERSION_PATCH@ libsnmpPlugin_la-snmpPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libsnmpPlugin.so@SO_VERSION_PATCH@ snmpPlugin.o; \
-	fi
-
-snmpPlugin.so$(EXEEXT): .libs/libsnmpPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/libsnmpPlugin.so snmpPlugin.so
-
-.libs/libsflowPlugin.so@SO_VERSION_PATCH@:
-	@if test -f libsflowPlugin_la-sflowPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libsflowPlugin.so@SO_VERSION_PATCH@ libsflowPlugin_la-sflowPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libsflowPlugin.so@SO_VERSION_PATCH@ sflowPlugin.o; \
-	fi
-
-sflowPlugin.so$(EXEEXT): .libs/libsflowPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/libsflowPlugin.so sflowPlugin.so
-
-.libs/libxmldumpPlugin.so@SO_VERSION_PATCH@:
-	@if test -f libxmldumpPlugin_la-xmldumpPlugin.o; then \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libxmldumpPlugin.so@SO_VERSION_PATCH@ libxmldumpPlugin_la-xmldumpPlugin.o; \
-	else \
-	$(CC) @MAKE_SHARED_LIBRARY_PARM@ -o .libs/libxmldumpPlugin.so@SO_VERSION_PATCH@ xmldumpPlugin.o; \
-	fi
+# Need to make sure autotools doesn't insert rules for us
+icmpPlugin.so$(EXEEXT):     .libs/libicmpPlugin.so
+lastSeenPlugin.so$(EXEEXT): .libs/liblastSeenPlugin.so
+netflowPlugin.so$(EXEEXT):  .libs/libnetflowPlugin.so
+pdaPlugin.so$(EXEEXT):      .libs/libpdaPlugin.so
+rrdPlugin.so$(EXEEXT):      .libs/librrdPlugin.so
+snmpPlugin.so$(EXEEXT):     .libs/libsnmpPlugin.so
+sflowPlugin.so$(EXEEXT):    .libs/libsflowPlugin.so
+xmldumpPlugin.so$(EXEEXT):  .libs/libxmldumpPlugin.so
 
-xmldumpPlugin.so$(EXEEXT): .libs/libxmldumpPlugin.so@SO_VERSION_PATCH@
-	@$(LN_S) .libs/libxmldumpPlugin.so xmldumpPlugin.so
+#
+# Create symlinks for the plugins
+#
 
 install-data-local:
-	@$(top_srcdir)/mkinstalldirs $(DESTDIR)$(plugindir);
-	@for file in $(noinst_PROGRAMS); do \
-             cp -p $$file $(DESTDIR)$(plugindir)/$$file; \
-         done
-# remove installed libraries
-	@for file in $(lib_LTLIBRARIES); do \
-             rm -f $(DESTDIR)$(libdir)/$$file; \
-         done
+	for file in $(lib_LTLIBRARIES); do \
+		rm -f $(DESTDIR)$(libdir)/$$file; \
+	done
+	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(plugindir)
+	for file in $(noinst_PROGRAMS) ; do \
+		$(LN_S) $(libdir)/lib$$file $(DESTDIR)$(plugindir)/$$file ; \
+	done
 
 #
 # Special stuff for xml auto-generation of code from the "doc":
--- configure.in
+++ configure.in
@@ -180,7 +180,7 @@
 dnl> Test before we use it, below
 AC_ARG_ENABLE(iknowbetter,
               [  --enable-iknowbetter        Override WILLFAIL],
-              ac_willfailoverride="yes",
+              ac_willfailoverride="$enableval",
               ac_willfailoverride="no")
 
 AC_ARG_ENABLE(void,
@@ -665,63 +665,63 @@
 
 AC_ARG_WITH(ssl,
               [  --without-ssl               disable HTPPS support [[default=enabled]]],
-              ac_disable_openssl="yes",
+              ac_disable_openssl="$withval",
               ac_disable_openssl="no")
 
 AC_ARG_WITH(zlib,
               [  --without-zlib              disable zlib [[default=enabled]]],
-              ac_disable_zlib="yes",
+              ac_disable_zlib="$withval",
               ac_disable_zlib="no")
 
 AC_ARG_ENABLE(sslv3,
               [  --enable-sslv3              enable ssl v3 support [[default=disabled]]],
-              ac_enable_sslv3="yes",
+              ac_enable_sslv3="$enableval",
               ac_enable_sslv3="no")
 
 AC_ARG_ENABLE(sslwatchdog,
               [  --enable-sslwatchdog        enable Watchdog for ssl hangups [[default=disabled]]],
-              ac_enable_sslwatchdog="yes",
+              ac_enable_sslwatchdog="$enableval",
               ac_enable_sslwatchdog="no")
 
 AC_ARG_WITH(tcpwrap,
               [  --with-tcpwrap              enable use of TCP Wrapper [[default=disabled]]],
-              ac_enable_tcpwrap="yes",
+              ac_enable_tcpwrap="$withval",
               ac_enable_tcpwrap="no")
 
 AC_ARG_ENABLE(plugins,
               [  --disable-plugins           disable compilation of plugins [[default=enabled]]],
-              ac_disable_plugins="yes",
+              ac_disable_plugins="$enableval",
               ac_disable_plugins="no")
 
 AC_ARG_ENABLE(  static-plugins,
               [  --enable-static-plugins     Enable static linked plugins [sntop, default=dynamic]]],
-              ac_enable_static_plugins="yes",
-	      ac_enable_static_plugins="no")
+              ac_enable_static_plugins="$enableval",
+              ac_enable_static_plugins="no")
 
 AC_ARG_ENABLE(ignoresigpipe,
               [  --enable-ignoresigpipe      Ignore SIGPIPE errors [[default=do not ignore]]],
-              ac_enable_ignoresigpipe="yes",
+              ac_enable_ignoresigpipe="$enableval",
               ac_enable_ignoresigpipe="no")
 
 AC_ARG_ENABLE(snmp,
               [  --disable-snmp              Disable SNMP support [[default=disable]]],
-              ac_disable_snmp="no",
+              ac_disable_snmp="$enableval",
               ac_disable_snmp="yes")
 
 AC_ARG_ENABLE(i18n,
               [  --enable-i18n               Enable (limited) internationalization [[default=disabled]]],
-              ac_enable_i18n="yes",
+              ac_enable_i18n="$enableval",
               ac_enable_i18n="no")
 
 AC_ARG_ENABLE(jumbo-frames,
               [  --enable-jumbo-frames       Enable Jumbo (9K) Ethernet frames [[default=disabled]]],
-              ac_enable_jumbo-frames="yes",
+              ac_enable_jumbo-frames="$enableval",
               ac_enable_jumbo-frames="no")
 
 AC_ARG_ENABLE(ipv6,
               [  --disable-ipv6              use IPv6 [[default=enabled]]],
-	      ac_disable_ipv6="yes",
-	      ac_disable_ipv6="no")        
+              ac_disable_ipv6="$enableval",
+              ac_disable_ipv6="no")
 
 dnl>
 dnl> Define the "WITH"s for package root directories ... deal with these later...
@@ -1011,11 +1011,6 @@
     LOCALEDIR="/usr/lib/locale"
 fi
 
-dnl> Add /usr/local/
-CFLAGS="${CFLAGS} -I/usr/local/include"
-CPPFLAGS="${CPPFLAGS} -I/usr/local/include"
-LDFLAGS="${LDFLAGS} -L/usr/local/lib"
-
 
 
 echo
