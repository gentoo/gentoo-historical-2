Only in pyflag-0.80.1: Makefile.am.rej
diff -ru pyflag-0.80.1.orig/configure.in pyflag-0.80.1/configure.in
--- pyflag-0.80.1.orig/configure.in	2006-01-24 08:35:44.000000000 +1100
+++ pyflag-0.80.1/configure.in	2006-02-09 09:29:53.000000000 +1100
@@ -11,7 +11,14 @@
 AC_CHECK_HEADER(zlib.h,,AC_MSG_ERROR([You Must install zlib-dev to build pyflag]))
 AC_CHECK_HEADER(pcap.h,,AC_MSG_ERROR([You Must install libpcap-dev to build pyflag]))
 AC_CHECK_HEADER(magic.h,,AC_MSG_ERROR([You Must install libmagic-dev to build pyflag this may be part of file the package for some distros]))
+
+# if we have dbtool don't need sleuthkit
+AC_CHECK_PROG([HAVE_DBTOOL],dbtool,"yes", "no")
+if test "x$HAVE_DBTOOL" = xno
+then
 AC_CHECK_FILE(src/filesystems/sleuthkit-2.03.tar.gz,,AC_MSG_ERROR([You Must download sleuthkit-2.03.tar.gz and place in src/filesystems ]))
+fi
+AM_CONDITIONAL(HAVE_DBTOOL, test x$HAVE_DBTOOL = xyes)
 
 # python checks 
 # (requires autoconf 1.5+ and the macros in acinclude.m4)
@@ -37,7 +44,7 @@
 fi
 
 # try to find magic files
-AC_ARG_WITH(magic, AC_HELP_STRING([--with-magic], [specify a colon-separated list of system magic files, default autodetect]),,[magic=$(file -v | tail -1 | awk '{print $4}')])
+AC_ARG_WITH(magic, AC_HELP_STRING([--with-magic], [specify a colon-separated list of system magic files, default autodetect]),,[magic=$(file -v | tail -n 1 | awk '{print $4}')])
 AC_SUBST(magic)
             
 
Only in pyflag-0.80.1: pyflag.in.rej
Only in pyflag-0.80.1: pyflag_launch.in.rej
Only in pyflag-0.80.1: pyflash.in.rej
diff -ru pyflag-0.80.1.orig/src/Makefile.am pyflag-0.80.1/src/Makefile.am
--- pyflag-0.80.1.orig/src/Makefile.am	2006-01-09 12:13:40.000000000 +1100
+++ pyflag-0.80.1/src/Makefile.am	2006-02-09 09:29:53.000000000 +1100
@@ -1,4 +1,10 @@
-SUBDIRS = lib mailtools indextools network regtools virustools filesystems include
+
+SUBDIRS = lib mailtools indextools network regtools virustools include
+
+if HAVE_DBTOOL
+else
+SUBDIRS+=filesystems
+endif
 
 # main pyflag (python) application
 # not sure how to do this recursively
Only in pyflag-0.80.1/src/plugins: Configuration.py.rej
