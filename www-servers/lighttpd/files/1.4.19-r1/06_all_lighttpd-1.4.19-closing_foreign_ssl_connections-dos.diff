diff -Naur lighttpd-1.4.19.orig/NEWS lighttpd-1.4.19/NEWS
--- lighttpd-1.4.19.orig/NEWS	2008-03-10 22:28:30.000000000 +0100
+++ lighttpd-1.4.19/NEWS	2008-03-26 20:45:16.000000000 +0100
@@ -8,6 +8,7 @@
   * added support for If-Range: <date> (#1346)
   * added support for matching $HTTP["scheme"] in configs
   * fixed initgroups() called after chroot (#1384)
+  * Fix #285 again: read error after SSL_shutdown (thx marton.illes@balabit.com) and clear the error queue before some other calls
   * fixed case-sensitive check for Auth-Method (#1456)
   * execute fcgi app without /bin/sh if used as argument to spawn-fcgi (#1428)
   * fixed a bug that made /-prefixed extensions being handled also when
diff -Naur lighttpd-1.4.19.orig/src/connections.c lighttpd-1.4.19/src/connections.c
--- lighttpd-1.4.19.orig/src/connections.c	2008-02-28 00:41:35.000000000 +0100
+++ lighttpd-1.4.19/src/connections.c	2008-03-26 20:45:16.000000000 +0100
@@ -199,6 +199,7 @@
 
 	/* don't resize the buffer if we were in SSL_ERROR_WANT_* */
 
+	ERR_clear_error();
 	do {
 		if (!con->ssl_error_want_reuse_buffer) {
 			b = buffer_init();
@@ -1669,13 +1670,16 @@
 #ifdef USE_OPENSSL
 			if (srv_sock->is_ssl) {
 				int ret;
+				ERR_clear_error();
 				switch ((ret = SSL_shutdown(con->ssl))) {
 				case 1:
 					/* ok */
 					break;
 				case 0:
-					SSL_shutdown(con->ssl);
-					break;
+					ERR_clear_error();
+					if ((ret = SSL_shutdown(con->ssl)) == 1) break;
+
+					// fall through
 				default:
 					log_error_write(srv, __FILE__, __LINE__, "sds", "SSL:",
 							SSL_get_error(con->ssl, ret),
diff -Naur lighttpd-1.4.19.orig/src/network_openssl.c lighttpd-1.4.19/src/network_openssl.c
--- lighttpd-1.4.19.orig/src/network_openssl.c	2008-02-26 17:20:26.000000000 +0100
+++ lighttpd-1.4.19/src/network_openssl.c	2008-03-26 20:45:16.000000000 +0100
@@ -85,6 +85,7 @@
 			 *
 			 */
 
+			ERR_clear_error();
 			if ((r = SSL_write(ssl, offset, toSend)) <= 0) {
 				unsigned long err;
 
@@ -187,6 +188,7 @@
 
 				close(ifd);
 
+				ERR_clear_error();
 				if ((r = SSL_write(ssl, s, toSend)) <= 0) {
 					unsigned long err;
 
