diff -urN src/mmap_cache.c /tmp/src/mmap_cache.c
--- src/mmap_cache.c	2004-06-04 03:44:59.000000000 +0100
+++ /tmp/src/mmap_cache.c	2005-07-28 14:40:50.320610000 +0100
@@ -79,7 +79,7 @@
 
     m = mmap(0, s->st_size, PROT_READ, MAP_OPTIONS, data_fd, 0);
 
-    if ((int) m == -1) {
+    if (m == MAP_FAILED) {
         int saved_errno = errno;
         log_error_time();
         fprintf(stderr, "Unable to mmap file: ");
diff -urN src/read.c /tmp/src/read.c
--- src/read.c	2004-06-10 03:00:32.000000000 +0100
+++ /tmp/src/read.c	2005-07-28 14:40:50.320610000 +0100
@@ -40,6 +40,7 @@
 {
     int bytes;
     unsigned char *check, *buffer;
+    size_t len;
 
     check = req->client_stream + req->parse_pos;
     buffer = req->client_stream;
@@ -115,10 +116,11 @@
         if (req->status == ONE_LF) {
             *req->header_end = '\0';
 
-            if (req->header_end - req->header_line >= MAX_HEADER_LENGTH) {
+	    len = req->header_end - req->header_line;
+            if (len >= MAX_HEADER_LENGTH) {
                 log_error_doc(req);
-                fprintf(stderr, "Header too long at %d bytes: \"%s\"\n",
-                        req->header_end - req->header_line,
+                fprintf(stderr, "Header too long at %lu bytes: \"%s\"\n",
+                        len,
                         req->header_line);
                 send_r_bad_request(req);
                 return 0;
diff -urN src/request.c /tmp/src/request.c
--- src/request.c	2004-06-10 02:45:13.000000000 +0100
+++ /tmp/src/request.c	2005-07-28 14:40:50.320610000 +0100
@@ -85,7 +85,7 @@
     struct SOCKADDR salocal;
     unsigned int remote_addrlen = sizeof (struct SOCKADDR);
     request *conn;              /* connection */
-    size_t len;
+    socklen_t len;
 
 #ifndef INET6
     remote_addr.S_FAMILY = (sa_family_t) 0xdead;
