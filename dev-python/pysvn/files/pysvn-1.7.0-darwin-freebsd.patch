FreeBSD:
http://bugs.gentoo.org/show_bug.cgi?id=287608
Darwin:
build bundles, don't do Fink or MacPorts detection, don't use deprecated
-Wno-long-long-double, don't inject some broken framework path

--- Source/setup_configure.py
+++ Source/setup_configure.py
@@ -177,6 +177,8 @@
         module_type = '.so'
         if self.platform == 'cygwin':
             module_type = '.dll'
+        if self.is_mac_os_x:
+            module_type = '.bundle'
 
         if '--fixed-module-name' in argv:
             print( 'Info: Using fixed module name' )
@@ -249,21 +249,15 @@
 
                 # 10.4 needs the libintl.a but 10.3 does not
                 template_values['extra_libs'] = '%(svn_lib_dir)s/libintl.a' % template_values
-                template_values['frameworks'] = '-framework System %s -framework CoreFoundation -framework Kerberos -framework Security' % framework_lib
+                template_values['frameworks'] = '-framework System -framework CoreFoundation -framework Kerberos -framework Security -lpython'
             else:
                 if self.verbose:
                     print( 'Info: Using Mac OS X 10.3 makefile template' )
 
                 template_values['extra_libs'] = ''
-                template_values['frameworks'] = '-framework System %s -framework CoreFoundation' % framework_lib
+                template_values['frameworks'] = '-framework System -framework CoreFoundation -lpython'
 
-            if self.is_mac_os_x_fink:
-                makefile.write( self.makefile_template_macosx_fink % template_values )
-
-            elif self.is_mac_os_x_darwin_ports:
-                makefile.write( self.makefile_template_macosx_darwin_ports % template_values )
-
-            elif self.mac_os_x_universal:
+            if self.mac_os_x_universal:
                 template_values[ 'mac_os_x_sdk' ] = self.mac_os_x_sdk
                 if sys.version_info[0] >= 3:
                     makefile.write( self.makefile_template_macosx_universal_py3 % template_values )
@@ -447,11 +429,11 @@
 PYCXX=%(pycxx_dir)s
 PYCXXSRC=%(pycxx_src_dir)s
 LDSHARED=g++ -shared %(debug_cflags)s
-LDLIBS=-L%(svn_lib_dir)s -Wl,--rpath -Wl,/usr/lib:/usr/local/lib:%(svn_lib_dir)s \
+LDLIBS=-L%(svn_lib_dir)s -Wl,--rpath -Wl,%(svn_lib_dir)s \
 -lsvn_client-1 \
 -lsvn_diff-1 \
 -lsvn_repos-1 \
- -lkrb5 -lcom_err -lexpat -lneon
+ -lcom_err -lexpat -lneon
 
 #include pysvn_common.mak
 '''
@@ -538,9 +538,9 @@
 PYTHON=%(python_exe)s
 SVN_INCLUDE=%(svn_include)s
 CCC=g++
-CCCFLAGS=-Wall -Wno-long-double -fPIC -fexceptions -frtti %(includes)s %(py_cflags)s %(debug_cflags)s
+CCCFLAGS=-Wall -fPIC -fexceptions -frtti %(includes)s %(py_cflags)s %(debug_cflags)s
 CC=gcc
-CCFLAGS=-Wall -Wno-long-double -fPIC %(includes)s %(debug_cflags)s
+CCFLAGS=-Wall -fPIC %(includes)s %(debug_cflags)s
 PYCXX=%(pycxx_dir)s
 PYCXXSRC=%(pycxx_src_dir)s
 LDSHARED=g++ -bundle %(debug_cflags)s -u _PyMac_Error %(frameworks)s
@@ -563,9 +563,9 @@
 PYTHON=%(python_exe)s
 SVN_INCLUDE=%(svn_include)s
 CCC=g++
-CCCFLAGS=-Wall -Wno-long-double -fPIC -fexceptions -frtti %(includes)s %(py_cflags)s %(debug_cflags)s
+CCCFLAGS=-Wall -fPIC -fexceptions -frtti %(includes)s %(py_cflags)s %(debug_cflags)s
 CC=gcc
-CCFLAGS=-Wall -Wno-long-double -fPIC %(includes)s %(debug_cflags)s
+CCFLAGS=-Wall -fPIC %(includes)s %(debug_cflags)s
 PYCXX=%(pycxx_dir)s
 PYCXXSRC=%(pycxx_src_dir)s
 LDSHARED=g++ -bundle %(debug_cflags)s %(frameworks)s
