diff -ru Numeric-24.2.orig/Src/f2c_lite.c Numeric-24.2/Src/f2c_lite.c
--- Numeric-24.2.orig/Src/f2c_lite.c	2008-04-02 10:39:04 +0200
+++ Numeric-24.2/Src/f2c_lite.c	2008-04-02 10:42:58 +0200
@@ -333,10 +333,10 @@
 
 #ifdef KR_headers
 double f__cabs();
-double z_abs(z) doublecomplex *z;
+double my_z_abs(z) doublecomplex *z;
 #else
 double f__cabs(double, double);
-double z_abs(doublecomplex *z)
+double my_z_abs(doublecomplex *z)
 #endif
 {
 return( f__cabs( z->r, z->i ) );
diff -ru Numeric-24.2.orig/Src/zlapack_lite.c Numeric-24.2/Src/zlapack_lite.c
--- Numeric-24.2.orig/Src/zlapack_lite.c	2008-04-02 10:39:04 +0200
+++ Numeric-24.2/Src/zlapack_lite.c	2008-04-02 10:42:58 +0200
@@ -352,7 +352,7 @@
     doublereal d__1, d__2;
 
     /* Builtin functions */
-    double d_imag(doublecomplex *), z_abs(doublecomplex *);
+    double d_imag(doublecomplex *), my_z_abs(doublecomplex *);
 
     /* Local variables */
     static doublereal c__, f, g;
@@ -639,10 +639,10 @@
 	    ;
 	}
 	ica = izamax_(&l, &a[i__ * a_dim1 + 1], &c__1);
-	ca = z_abs(&a[ica + i__ * a_dim1]);
+	ca = my_z_abs(&a[ica + i__ * a_dim1]);
 	i__2 = *n - k + 1;
 	ira = izamax_(&i__2, &a[i__ + k * a_dim1], lda);
-	ra = z_abs(&a[i__ + (ira + k - 1) * a_dim1]);
+	ra = my_z_abs(&a[i__ + (ira + k - 1) * a_dim1]);
 
 /*        Guard against zero C or R due to underflow. */
 
@@ -10721,7 +10721,7 @@
     double d_imag(doublecomplex *);
     void z_sqrt(doublecomplex *, doublecomplex *), d_cnjg(doublecomplex *,
 	    doublecomplex *);
-    double z_abs(doublecomplex *);
+    double my_z_abs(doublecomplex *);
 
     /* Local variables */
     static integer i__, j, k, l, m;
@@ -11188,7 +11188,7 @@
 
 		z__1.r = 1. - t1.r, z__1.i = 0. - t1.i;
 		temp.r = z__1.r, temp.i = z__1.i;
-		d__1 = z_abs(&temp);
+		d__1 = my_z_abs(&temp);
 		z__1.r = temp.r / d__1, z__1.i = temp.i / d__1;
 		temp.r = z__1.r, temp.i = z__1.i;
 		i__3 = m + 1 + m * h_dim1;
@@ -11233,7 +11233,7 @@
 	i__2 = i__ + (i__ - 1) * h_dim1;
 	temp.r = h__[i__2].r, temp.i = h__[i__2].i;
 	if (d_imag(&temp) != 0.) {
-	    rtemp = z_abs(&temp);
+	    rtemp = my_z_abs(&temp);
 	    i__2 = i__ + (i__ - 1) * h_dim1;
 	    h__[i__2].r = rtemp, h__[i__2].i = 0.;
 	    z__1.r = temp.r / rtemp, z__1.i = temp.i / rtemp;
@@ -13512,7 +13512,7 @@
     doublereal ret_val, d__1, d__2;
 
     /* Builtin functions */
-    double z_abs(doublecomplex *), sqrt(doublereal);
+    double my_z_abs(doublecomplex *), sqrt(doublereal);
 
     /* Local variables */
     static integer i__, j;
@@ -13603,7 +13603,7 @@
 	    i__2 = *m;
 	    for (i__ = 1; i__ <= i__2; ++i__) {
 /* Computing MAX */
-		d__1 = value, d__2 = z_abs(&a[i__ + j * a_dim1]);
+		d__1 = value, d__2 = my_z_abs(&a[i__ + j * a_dim1]);
 		value = max(d__1,d__2);
 /* L10: */
 	    }
@@ -13620,7 +13620,7 @@
 	    sum = 0.;
 	    i__2 = *m;
 	    for (i__ = 1; i__ <= i__2; ++i__) {
-		sum += z_abs(&a[i__ + j * a_dim1]);
+		sum += my_z_abs(&a[i__ + j * a_dim1]);
 /* L30: */
 	    }
 	    value = max(value,sum);
@@ -13639,7 +13639,7 @@
 	for (j = 1; j <= i__1; ++j) {
 	    i__2 = *m;
 	    for (i__ = 1; i__ <= i__2; ++i__) {
-		work[i__] += z_abs(&a[i__ + j * a_dim1]);
+		work[i__] += my_z_abs(&a[i__ + j * a_dim1]);
 /* L60: */
 	    }
 /* L70: */
@@ -13681,7 +13681,7 @@
     doublereal ret_val, d__1, d__2, d__3;
 
     /* Builtin functions */
-    double z_abs(doublecomplex *), sqrt(doublereal);
+    double my_z_abs(doublecomplex *), sqrt(doublereal);
 
     /* Local variables */
     static integer i__, j;
@@ -13782,7 +13782,7 @@
 		i__2 = j - 1;
 		for (i__ = 1; i__ <= i__2; ++i__) {
 /* Computing MAX */
-		    d__1 = value, d__2 = z_abs(&a[i__ + j * a_dim1]);
+		    d__1 = value, d__2 = my_z_abs(&a[i__ + j * a_dim1]);
 		    value = max(d__1,d__2);
 /* L10: */
 		}
@@ -13802,7 +13802,7 @@
 		i__2 = *n;
 		for (i__ = j + 1; i__ <= i__2; ++i__) {
 /* Computing MAX */
-		    d__1 = value, d__2 = z_abs(&a[i__ + j * a_dim1]);
+		    d__1 = value, d__2 = my_z_abs(&a[i__ + j * a_dim1]);
 		    value = max(d__1,d__2);
 /* L30: */
 		}
@@ -13820,7 +13820,7 @@
 		sum = 0.;
 		i__2 = j - 1;
 		for (i__ = 1; i__ <= i__2; ++i__) {
-		    absa = z_abs(&a[i__ + j * a_dim1]);
+		    absa = my_z_abs(&a[i__ + j * a_dim1]);
 		    sum += absa;
 		    work[i__] += absa;
 /* L50: */
@@ -13848,7 +13848,7 @@
 		sum = work[j] + (d__1 = a[i__2].r, abs(d__1));
 		i__2 = *n;
 		for (i__ = j + 1; i__ <= i__2; ++i__) {
-		    absa = z_abs(&a[i__ + j * a_dim1]);
+		    absa = my_z_abs(&a[i__ + j * a_dim1]);
 		    sum += absa;
 		    work[i__] += absa;
 /* L90: */
@@ -13916,7 +13916,7 @@
     doublereal ret_val, d__1, d__2;
 
     /* Builtin functions */
-    double z_abs(doublecomplex *), sqrt(doublereal);
+    double my_z_abs(doublecomplex *), sqrt(doublereal);
 
     /* Local variables */
     static integer i__, j;
@@ -14006,7 +14006,7 @@
 	    i__2 = min(i__3,i__4);
 	    for (i__ = 1; i__ <= i__2; ++i__) {
 /* Computing MAX */
-		d__1 = value, d__2 = z_abs(&a[i__ + j * a_dim1]);
+		d__1 = value, d__2 = my_z_abs(&a[i__ + j * a_dim1]);
 		value = max(d__1,d__2);
 /* L10: */
 	    }
@@ -14025,7 +14025,7 @@
 	    i__3 = *n, i__4 = j + 1;
 	    i__2 = min(i__3,i__4);
 	    for (i__ = 1; i__ <= i__2; ++i__) {
-		sum += z_abs(&a[i__ + j * a_dim1]);
+		sum += my_z_abs(&a[i__ + j * a_dim1]);
 /* L30: */
 	    }
 	    value = max(value,sum);
@@ -14046,7 +14046,7 @@
 	    i__3 = *n, i__4 = j + 1;
 	    i__2 = min(i__3,i__4);
 	    for (i__ = 1; i__ <= i__2; ++i__) {
-		work[i__] += z_abs(&a[i__ + j * a_dim1]);
+		work[i__] += my_z_abs(&a[i__ + j * a_dim1]);
 /* L60: */
 	    }
 /* L70: */
