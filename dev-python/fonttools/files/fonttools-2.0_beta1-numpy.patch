diff -ur fonttools/Lib/fontTools/cffLib.py fonttools_numpy/Lib/fontTools/cffLib.py
--- fonttools/Lib/fontTools/cffLib.py	2002-09-10 22:43:07.000000000 +0300
+++ fonttools_numpy/Lib/fontTools/cffLib.py	2007-07-19 01:06:17.000000000 +0300
@@ -1,3 +1,5 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 """cffLib.py -- read/write tools for Adobe CFF fonts."""
 
 #
@@ -1005,7 +1007,7 @@
 
 
 def encodeNumber(num):
-	if type(num) == FloatType:
+	if isinstance(num, FloatType):
 		return psCharStrings.encodeFloat(num)
 	else:
 		return psCharStrings.encodeIntCFF(num)
diff -ur fonttools/Lib/fontTools/misc/arrayTools.py fonttools_numpy/Lib/fontTools/misc/arrayTools.py
--- fonttools/Lib/fontTools/misc/arrayTools.py	2000-01-26 21:32:45.000000000 +0200
+++ fonttools_numpy/Lib/fontTools/misc/arrayTools.py	2007-07-19 01:06:17.000000000 +0300
@@ -1,8 +1,10 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 #
 # Various array and rectangle tools
 #
 
-import Numeric
+import numpy.oldnumeric as Numeric
 
 
 def calcBounds(array):
diff -ur fonttools/Lib/fontTools/misc/psCharStrings.py fonttools_numpy/Lib/fontTools/misc/psCharStrings.py
--- fonttools/Lib/fontTools/misc/psCharStrings.py	2002-09-10 22:43:12.000000000 +0300
+++ fonttools_numpy/Lib/fontTools/misc/psCharStrings.py	2007-07-19 01:06:17.000000000 +0300
@@ -1,3 +1,5 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 """psCharStrings.py -- module implementing various kinds of CharStrings: 
 CFF dictionary data and Type1/Type2 CharStrings.
 """
@@ -526,7 +528,7 @@
 		self.defaultWidthX = defaultWidthX
 	
 	def reset(self):
-		import Numeric
+		import numpy.oldnumeric as Numeric
 		SimpleT2Decompiler.reset(self)
 		self.hints = []
 		self.gotWidth = 0
@@ -545,7 +547,7 @@
 			self.contours[-1][2] = 1
 	
 	def appendPoint(self, point, isPrimary):
-		import Numeric
+		import numpy.oldnumeric as Numeric
 		point = self.currentPoint + Numeric.array(point, Numeric.Int16)
 		if not self.contours or self.contours[-1][2]:
 			# The subpath doesn't start with a moveto. Not sure whether
diff -ur fonttools/Lib/fontTools/nfntLib.py fonttools_numpy/Lib/fontTools/nfntLib.py
--- fonttools/Lib/fontTools/nfntLib.py	2001-03-09 14:42:25.000000000 +0200
+++ fonttools_numpy/Lib/fontTools/nfntLib.py	2007-07-19 01:06:17.000000000 +0300
@@ -1,3 +1,5 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 import struct, sstruct
 import string
 import types
@@ -77,7 +79,7 @@
 		return header + self.bits + locTable + owTable
 	
 	def unpackGlyphs(self):
-		import Numeric
+		import numpy.oldnumeric as Numeric
 		nGlyphs = len(self.locTable) - 1
 		self.glyphs = [None] * nGlyphs
 		
@@ -108,7 +110,7 @@
 				self.glyphs[i] = glyph = Glyph(width, offset, bitImage[imageL:imageR])
 	
 	def packGlyphs(self):
-		import Numeric
+		import numpy.oldnumeric as Numeric
 		imageWidth = 0
 		kernMax = 0
 		imageHeight = None
@@ -260,7 +262,7 @@
 class Glyph:
 	
 	def __init__(self, width, offset, pixels=None, pixelDepth=1):
-		import Numeric
+		import numpy.oldnumeric as Numeric
 		self.width = width
 		self.offset = offset
 		self.pixelDepth = pixelDepth
@@ -279,7 +281,7 @@
 		if not nameOrID:
 			# just take the first in the file
 			res = Res.Get1IndResource(resType, 1)
-		elif type(nameOrID) == types.IntType:
+		elif isinstance(nameOrID, types.IntType):
 			res = Res.Get1Resource(resType, nameOrID)
 		else:
 			res = Res.Get1NamedResource(resType, nameOrID)
diff -ur fonttools/Lib/fontTools/ttLib/sfnt.py fonttools_numpy/Lib/fontTools/ttLib/sfnt.py
--- fonttools/Lib/fontTools/ttLib/sfnt.py	2002-09-10 22:43:18.000000000 +0300
+++ fonttools_numpy/Lib/fontTools/ttLib/sfnt.py	2007-07-19 01:06:17.000000000 +0300
@@ -1,3 +1,5 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 """ttLib/sfnt.py -- low-level module to deal with the sfnt file format.
 
 Defines two public classes:
@@ -13,7 +15,7 @@
 """
 
 import struct, sstruct
-import Numeric
+import numpy.oldnumeric as Numeric
 import os
 
 
@@ -213,7 +215,7 @@
 		data = data + '\0' * (4-remainder)
 	a = Numeric.fromstring(struct.pack(">l", start) + data, Numeric.Int32)
 	if ttLib.endian <> "big":
-		a = a.byteswapped()
+		a = a.byteswap()
 	return Numeric.add.reduce(a)
 
 
diff -ur fonttools/Lib/fontTools/ttLib/tables/_g_l_y_f.py fonttools_numpy/Lib/fontTools/ttLib/tables/_g_l_y_f.py
--- fonttools/Lib/fontTools/ttLib/tables/_g_l_y_f.py	2002-09-10 22:43:24.000000000 +0300
+++ fonttools_numpy/Lib/fontTools/ttLib/tables/_g_l_y_f.py	2007-07-19 01:06:18.000000000 +0300
@@ -1,3 +1,5 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 """_g_l_y_f.py -- Converter classes for the 'glyf' table."""
 
 
@@ -20,7 +22,7 @@
 from fontTools.misc.textTools import safeEval, readHex
 import ttProgram
 import array
-import Numeric
+import numpy.oldnumeric as Numeric
 from types import StringType, TupleType
 
 
@@ -468,7 +470,7 @@
 		nCoordinates = len(self.coordinates)
 		
 		# make a copy
-		coordinates = self.coordinates.astype(self.coordinates.typecode())
+		coordinates = self.coordinates.astype(self.coordinates.dtype.char)
 		# absolute to relative coordinates
 		coordinates[1:] = Numeric.subtract(coordinates[1:], coordinates[:-1])
 		flags = self.flags
diff -ur fonttools/Lib/fontTools/ttLib/tables/_h_m_t_x.py fonttools_numpy/Lib/fontTools/ttLib/tables/_h_m_t_x.py
--- fonttools/Lib/fontTools/ttLib/tables/_h_m_t_x.py	2002-09-10 22:43:25.000000000 +0300
+++ fonttools_numpy/Lib/fontTools/ttLib/tables/_h_m_t_x.py	2007-07-19 01:06:18.000000000 +0300
@@ -1,5 +1,7 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 import DefaultTable
-import Numeric
+import numpy.oldnumeric as Numeric
 from fontTools import ttLib
 from fontTools.misc.textTools import safeEval
 
@@ -16,7 +18,7 @@
 		metrics = Numeric.fromstring(data[:4 * numberOfMetrics], 
 				Numeric.Int16)
 		if ttLib.endian <> "big":
-			metrics = metrics.byteswapped()
+			metrics = metrics.byteswap()
 		metrics.shape = (numberOfMetrics, 2)
 		data = data[4 * numberOfMetrics:]
 		numberOfSideBearings = ttFont['maxp'].numGlyphs - numberOfMetrics
@@ -29,7 +31,7 @@
 			sideBearings = Numeric.fromstring(data[:2 * numberOfSideBearings], 
 					Numeric.Int16)
 			if ttLib.endian <> "big":
-				sideBearings = sideBearings.byteswapped()
+				sideBearings = sideBearings.byteswap()
 			data = data[2 * numberOfSideBearings:]
 			additionalMetrics = Numeric.array([advances, sideBearings], 
 					Numeric.Int16)
@@ -63,12 +65,12 @@
 		
 		metrics = Numeric.array(metrics, Numeric.Int16)
 		if ttLib.endian <> "big":
-			metrics = metrics.byteswapped()
+			metrics = metrics.byteswap()
 		data = metrics.tostring()
 		
 		additionalMetrics = Numeric.array(additionalMetrics, Numeric.Int16)
 		if ttLib.endian <> "big":
-			additionalMetrics = additionalMetrics.byteswapped()
+			additionalMetrics = additionalMetrics.byteswap()
 		data = data + additionalMetrics.tostring()
 		return data
 	
diff -ur fonttools/Lib/fontTools/ttLib/tables/_l_o_c_a.py fonttools_numpy/Lib/fontTools/ttLib/tables/_l_o_c_a.py
--- fonttools/Lib/fontTools/ttLib/tables/_l_o_c_a.py	2000-11-03 12:29:08.000000000 +0200
+++ fonttools_numpy/Lib/fontTools/ttLib/tables/_l_o_c_a.py	2007-07-19 01:06:18.000000000 +0300
@@ -1,6 +1,8 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 import DefaultTable
 import array
-import Numeric
+import numpy.oldnumeric as Numeric
 from fontTools import ttLib
 import struct
 
@@ -34,7 +36,7 @@
 		else:
 			ttFont['head'].indexToLocFormat = 1
 		if ttLib.endian <> "big":
-			locations = locations.byteswapped()
+			locations = locations.byteswap()
 		return locations.tostring()
 	
 	def set(self, locations):
diff -ur fonttools/Lib/fontTools/ttLib/tables/_v_m_t_x.py fonttools_numpy/Lib/fontTools/ttLib/tables/_v_m_t_x.py
--- fonttools/Lib/fontTools/ttLib/tables/_v_m_t_x.py	1999-12-16 23:34:53.000000000 +0200
+++ fonttools_numpy/Lib/fontTools/ttLib/tables/_v_m_t_x.py	2007-07-19 01:06:18.000000000 +0300
@@ -1,5 +1,7 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 import DefaultTable
-import Numeric
+import numpy.oldnumeric as Numeric
 from fontTools import ttLib
 from fontTools.misc.textTools import safeEval
 
diff -ur fonttools/Lib/fontTools/ttLib/test/ttBrowser.py fonttools_numpy/Lib/fontTools/ttLib/test/ttBrowser.py
--- fonttools/Lib/fontTools/ttLib/test/ttBrowser.py	2000-03-15 01:21:26.000000000 +0200
+++ fonttools_numpy/Lib/fontTools/ttLib/test/ttBrowser.py	2007-07-19 01:06:18.000000000 +0300
@@ -1,3 +1,5 @@
+## Automatically adapted for numpy.oldnumeric Jul 19, 2007 by hawking
+
 """Mac-only TrueType browser window."""
 
 from fontTools import ttLib
@@ -7,7 +9,7 @@
 import W, Lists
 import os
 import ATM
-import Numeric
+import numpy.oldnumeric as Numeric
 import Qd
 from rf.views.wGlyphList import GlyphList
 
diff -ur fonttools/setup.py fonttools_numpy/setup.py
--- fonttools/setup.py	2002-09-10 22:43:05.000000000 +0300
+++ fonttools_numpy/setup.py	2007-07-19 01:07:59.000000000 +0300
@@ -11,10 +11,9 @@
 	pass
 
 try:
-	import Numeric
+	import numpy.oldnumeric as Numeric
 except ImportError:
-	print "*** Warning: FontTools needs Numerical Python (NumPy), see:"
-	print "        http://sourceforge.net/projects/numpy/"
+	print "*** Warning: FontTools needs numpy.oldnumeric module."
 
 try:
 	import xml.parsers.expat
