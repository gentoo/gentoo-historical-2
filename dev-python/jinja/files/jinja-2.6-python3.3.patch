diff --git a/docs/jinjaext.py b/docs/jinjaext.py
index 12b5447..8395a55 100644
--- a/docs/jinjaext.py
+++ b/docs/jinjaext.py
@@ -8,6 +8,7 @@
     :copyright: Copyright 2008 by Armin Ronacher.
     :license: BSD.
 """
+import collections
 import os
 import re
 import inspect
@@ -22,6 +23,7 @@ from pygments.style import Style
 from pygments.token import Keyword, Name, Comment, String, Error, \
      Number, Operator, Generic
 from jinja2 import Environment, FileSystemLoader
+from jinja2.utils import next
 
 
 def parse_rst(state, content_offset, doc):
@@ -110,10 +112,10 @@ def dump_functions(mapping):
     def directive(dirname, arguments, options, content, lineno,
                       content_offset, block_text, state, state_machine):
         reverse_mapping = {}
-        for name, func in mapping.iteritems():
+        for name, func in mapping.items():
             reverse_mapping.setdefault(func, []).append(name)
         filters = []
-        for func, names in reverse_mapping.iteritems():
+        for func, names in reverse_mapping.items():
             aliases = sorted(names, key=lambda x: len(x))
             name = aliases.pop()
             filters.append((name, aliases, func))
@@ -145,9 +147,9 @@ def jinja_nodes(dirname, arguments, options, content, lineno,
         doc.append(p + '.. autoclass:: %s(%s)' % (node.__name__, sig), '')
         if node.abstract:
             members = []
-            for key, name in node.__dict__.iteritems():
+            for key, name in node.__dict__.items():
                 if not key.startswith('_') and \
-                   not hasattr(node.__base__, key) and callable(name):
+                   not hasattr(node.__base__, key) and isinstance(name, collections.Callable):
                     members.append(key)
             if members:
                 members.sort()
@@ -169,10 +171,10 @@ def inject_toc(app, doctree, docname):
     titleiter = iter(doctree.traverse(nodes.title))
     try:
         # skip first title, we are not interested in that one
-        titleiter.next()
-        title = titleiter.next()
+        next(titleiter)
+        title = next(titleiter)
         # and check if there is at least another title
-        titleiter.next()
+        next(titleiter)
     except StopIteration:
         return
     tocnode = nodes.section('')
diff --git a/jinja2/environment.py b/jinja2/environment.py
index ebb5454..1b5dc40 100644
--- a/jinja2/environment.py
+++ b/jinja2/environment.py
@@ -570,6 +570,10 @@ class Environment(object):
             py_header = imp.get_magic() + \
                 u'\xff\xff\xff\xff'.encode('iso-8859-15')
 
+            # Python 3.3 added a source filesize to the header
+            if sys.version_info >= (3, 3):
+                py_header += u'\x00\x00\x00\x00'.encode('iso-8859-15')
+
         def write_file(filename, data, mode):
             if zip:
                 info = ZipInfo(filename)
