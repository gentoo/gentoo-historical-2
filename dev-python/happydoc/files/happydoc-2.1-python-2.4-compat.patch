=== modified file 'happydoclib/docstring/StructuredText/STDOM.py'
--- happydoclib/docstring/StructuredText/STDOM.py	
+++ happydoclib/docstring/StructuredText/STDOM.py	
@@ -171,7 +171,7 @@
                           type=type,
                           st=type(''),
                           getattr=getattr,
-                          None=None):
+                          none=None):
 
       """
       The node immediately preceding this node.  If
@@ -180,17 +180,17 @@
       
       children = self.aq_parent.getChildren()
       if not children:
-         return None
-
-      index=getattr(self, '_DOMIndex', None)
-      if index is None:
+         return none
+
+      index=getattr(self, '_DOMIndex', none)
+      if index is none:
          index=self._getDOMIndex(children)
-         if index is None: return None
+         if index is none: return none
 
       index=index-1
-      if index < 0: return None
+      if index < 0: return none
       try: n=children[index]
-      except IndexError: return None
+      except IndexError: return none
       else:
          if type(n) is st:
             n=TextNode(n)
@@ -243,9 +243,9 @@
                           type=type,
                           st=type(''),
                           getattr=getattr,
-                          None=None):
-
-      return self.getPreviousSibling(type,st,getattr,None)
+                          none=None):
+
+      return self.getPreviousSibling(type,st,getattr,none)
       
    def _get_NextSibling(self, type=type, st=type('')):
       return self.getNextSibling(type,st)
@@ -292,7 +292,7 @@
                           type=type,
                           st=type(''),
                           getattr=getattr,
-                          None=None):
+                          none=None):
       """
       The node immediately preceding this node.  If
       there is no such node, this returns None.
@@ -346,9 +346,9 @@
                           type=type,
                           st=type(''),
                           getattr=getattr,
-                          None=None):
-      
-      return self.getPreviousSibling(type,st,getattr,None)
+                          none=None):
+      
+      return self.getPreviousSibling(type,st,getattr,none)
       
    def _get_NextSibling(self, type=type, st=type('')):
       return self.getNextSibling()

