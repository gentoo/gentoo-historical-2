Index: /pygments/trunk/tests/test_html_formatter.py
===================================================================
--- tests/test_html_formatter.py (revision 2849)
+++ tests/test_html_formatter.py (revision 2850)
@@ -94,2 +94,16 @@
 
         os.unlink(pathname)
+
+    def test_get_style_defs(self):
+        fmt = HtmlFormatter()
+        sd = fmt.get_style_defs()
+        self.assert_(sd.startswith('.'))
+        
+        fmt = HtmlFormatter(cssclass='foo')
+        sd = fmt.get_style_defs()
+        self.assert_(sd.startswith('.foo'))
+        sd = fmt.get_style_defs('.bar')
+        self.assert_(sd.startswith('.bar'))
+        sd = fmt.get_style_defs(['.bar', '.baz'])
+        fl = sd.splitlines()[0]
+        self.assert_('.bar' in fl and '.baz' in fl)
Index: /pygments/trunk/pygments/formatters/html.py
===================================================================
--- pygments/formatters/html.py (revision 2839)
+++ pygments/formatters/html.py (revision 2850)
@@ -182,4 +182,6 @@
     `cssclass`
         CSS class for the wrapping ``<div>`` tag (default: ``'highlight'``).
+        If you set this option, the default selector for `get_style_defs()`
+        will be this class.
 
     `cssstyles`
@@ -314,10 +316,12 @@
                 c2s[name] = (style[:-2], ttype, len(ttype))
 
-    def get_style_defs(self, arg=''):
-        """
-        Return CSS style definitions for the classes produced by the
-        current highlighting style. ``arg`` can be a string of selectors
-        to insert before the token type classes.
-        """
+    def get_style_defs(self, arg=None):
+        """
+        Return CSS style definitions for the classes produced by the current
+        highlighting style. ``arg`` can be a string or list of selectors to
+        insert before the token type classes.
+        """
+        if arg is None:
+            arg = ('cssclass' in self.options and '.'+self.cssclass or '')
         if isinstance(arg, basestring):
             args = [arg]
@@ -326,7 +330,9 @@
 
         def prefix(cls):
+            if cls:
+                cls = '.' + cls
             tmp = []
             for arg in args:
-                tmp.append((arg and arg + ' ' or '') + '.' + cls)
+                tmp.append((arg and arg + ' ' or '') + cls)
             return ', '.join(tmp)
 
@@ -343,5 +349,5 @@
                 text_style = ' ' + self.class2style[self.ttype2class[Text]][0]
             lines.insert(0, '%s { background: %s;%s }' %
-                         (arg, self.style.background_color, text_style))
+                         (prefix(''), self.style.background_color, text_style))
         return '\n'.join(lines)
 
Index: /pygments/trunk/CHANGES
===================================================================
--- CHANGES (revision 2844)
+++ CHANGES (revision 2850)
@@ -1,4 +1,12 @@
 Pygments changelog
 ==================
+
+Version 0.8
+-----------
+(codename to be selected, released Apr XX, 2007)
+
+- The `get_style_defs` method of HTML formatters now uses the `cssclass`
+  option as the default selector if it was given.
+
 
 Version 0.7.1
