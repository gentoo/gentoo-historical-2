--- setup.py.orig	2008-02-13 01:53:03.524223194 +0000
+++ setup.py	2008-02-13 12:18:32.290150702 +0000
@@ -24,7 +24,7 @@
     DBFUpdateHeader is available, we scan shapefil.h for the string
     'DBFUpdateHeader'.
     """
-    f = open(convert_path("pyshapelib/shapelib/shapefil.h"))
+    f = open(convert_path("/usr/include/libshp/shapefil.h"))
     contents = f.read()
     f.close()
     if contents.find("DBFUpdateHeader") >= 0:
@@ -53,7 +53,7 @@
 
 if GEOS_dir is None:
     # if GEOS_dir not set, check a few standard locations.
-    GEOS_dirs = ['/usr/local','/sw','/opt','/opt/local',os.path.expanduser('~')]
+    GEOS_dirs = ['/usr','/usr/local','/sw','/opt','/opt/local',os.path.expanduser('~')]
     for direc in GEOS_dirs:
         geos_version = check_geosversion(direc)
         print 'checking for GEOS lib in %s ....' % direc
@@ -102,41 +102,18 @@
 package_dirs['dbflib'] = os.path.join('lib','dbflib')
 extensions = extensions + \
          [Extension("shapelibc",
-                    ["pyshapelib/shapelib_wrap.c",
-                     "pyshapelib/shapelib/shpopen.c",
-                     "pyshapelib/shapelib/shptree.c"],
-                    include_dirs = ["pyshapelib/shapelib"]),
+                    ["pyshapelib/shapelib_wrap.c"],
+                    include_dirs = ["/usr/include/libshp"],
+                    libraries = ["shp"]),
           Extension("shptree",
                     ["pyshapelib/shptreemodule.c"],
-                    include_dirs = ["pyshapelib/shapelib"]),
+                    include_dirs = ["/usr/include/libshp"]),
           Extension("dbflibc",
-                    ["pyshapelib/dbflib_wrap.c",
-                     "pyshapelib/shapelib/dbfopen.c"],
-                    include_dirs = ["pyshapelib/shapelib"],
+                    ["pyshapelib/dbflib_wrap.c"],
+                    include_dirs = ["/usr/include/libshp"],
+                    libraries = ["shp"],
                     define_macros = dbf_macros()) ]
 
-# install dap and httplib2, if not already available.
-# only a subset of dap is installed (the client, not the server)
-__dapversion__ = None
-try:
-    from dap.lib import __version__ as __dapversion__
-except ImportError:
-    packages = packages + ['dap','dap.util','dap.parsers']
-    package_dirs['dap'] = os.path.join('lib','dap')
-# install dap client anyway if installed version is older than
-# version provided here.
-if __dapversion__ is not None:
-    __dapversion__ = [repr(v)+'.' for v in __dapversion__]
-    __dapversion__ = ''.join(__dapversion__)[:-1]
-    if __dapversion__ < '2.2.6.2':
-        packages = packages + ['dap','dap.util','dap.parsers']
-        package_dirs['dap'] = os.path.join('lib','dap')
-try:
-    import httplib2
-except ImportError:
-    packages = packages + ['httplib2']
-    package_dirs['httlib2'] = os.path.join('lib','httplib2')
-
 # Specify all the required mpl data
 pyproj_datafiles = ['data/epsg', 'data/esri', 'data/esri.extra', 'data/GL27', 'data/nad.lst', 'data/nad27', 'data/nad83', 'data/ntv2_out.dist', 'data/other.extra', 'data/pj_out27.dist', 'data/pj_out83.dist', 'data/proj_def.dat', 'data/README', 'data/td_out.dist', 'data/test27', 'data/test83', 'data/testntv2', 'data/testvarious', 'data/world']
 boundaryfiles = []
