--- setup.py~	2006-09-29 10:33:56.000000000 +0100
+++ setup.py	2007-02-08 10:44:10.000000000 +0000
@@ -84,7 +84,7 @@
 data.extend(glob.glob('images/*.svg'))
 data.extend(glob.glob('images/*.png'))
 data.extend(glob.glob('images/*.ppm'))
-data.append('matplotlibrc')
+#data.append('matplotlibrc')
 
 data_files=[('matplotlib/mpl-data', data),
             ('matplotlib/mpl-data/Matplotlib.nib',
@@ -201,80 +201,25 @@
 build_enthought(ext_modules, packages)
 
 if BUILD_GTK:
-    try:
-        import gtk
-    except ImportError:
-        print 'GTK requires pygtk'
-        BUILD_GTK = 0
-    except RuntimeError:
-        print 'pygtk present but import failed'
-        BUILD_GTK = 0
-    else:
-        version = (2,2,0)
-        if gtk.pygtk_version < version:
-            print "Error: GTK backend requires PyGTK %d.%d.%d (or later), " \
-                  "%d.%d.%d was detected." % (
-                version + gtk.pygtk_version)
-            BUILD_GTK = 0
-        else:
-            build_gdk(ext_modules, packages, NUMERIX)
-            rc['backend'] = 'GTK'
+    build_gdk(ext_modules, packages, NUMERIX)
+    rc['backend'] = 'GTK'
 
 if BUILD_GTKAGG:
-    try:
-        import gtk
-    except ImportError:
-        print 'GTKAgg requires pygtk'
-        BUILD_GTKAGG=0
-    except RuntimeError:
-        print 'pygtk present but import failed'
-        BUILD_GTKAGG = 0
-    else:
-        version = (2,2,0)
-        if gtk.pygtk_version < version:
-            print "Error: GTKAgg backend requires PyGTK %d.%d.%d " \
-                  "(or later), %d.%d.%d was detected." % (
-                version + gtk.pygtk_version)
-            BUILD_GTKAGG=0
-        else:
-            BUILD_AGG = 1
-            build_gtkagg(ext_modules, packages, NUMERIX)
-            rc['backend'] = 'GTKAgg'
+    BUILD_AGG = 1
+    build_gtkagg(ext_modules, packages, NUMERIX)
+    rc['backend'] = 'GTKAgg'
 
 if BUILD_TKAGG:
-    try:
-        import Tkinter
-    except ImportError:
-        print 'TKAgg requires TkInter'
-        BUILD_TKAGG = 0
-    except RuntimeError:
-        print 'Tkinter present but import failed'
-        BUILD_TKAGG = 0
-    else:
-        try:
-            tk = Tkinter.Tk()
-            tk.withdraw()
-        except Tkinter.TclError:
-            print 'Tkinter present, but window failed to open'
-            BUILD_TKAGG = 0
-        else:
-            BUILD_AGG = 1
-            build_tkagg(ext_modules, packages, NUMERIX)
-            rc['backend'] = 'TkAgg'
+    BUILD_AGG = 1
+    build_tkagg(ext_modules, packages, NUMERIX)
+    rc['backend'] = 'TkAgg'
 
 if BUILD_WXAGG:
-    try:
-        import wxPython
-    except ImportError:
-        if BUILD_WXAGG != 'auto':
-            print 'WXAgg\'s accelerator requires wxPython'
-        BUILD_WXAGG = 0
-    else:
-        BUILD_AGG = 1
-        build_wxagg(ext_modules, packages, NUMERIX,
-            not (isinstance(BUILD_WXAGG, str) # don't about if BUILD_WXAGG
-                 and BUILD_WXAGG.lower() == 'auto')) # is "auto"
-        rc['backend'] = 'WXAgg'
+    BUILD_AGG = 1
+    build_wxagg(ext_modules, packages, NUMERIX,
+                not (isinstance(BUILD_WXAGG, str) # don't about if BUILD_WXAGG
+                     and BUILD_WXAGG.lower() == 'auto')) # is "auto"
+    rc['backend'] = 'WXAgg'
 
 if BUILD_AGG:
     build_agg(ext_modules, packages, NUMERIX)
@@ -331,6 +276,6 @@
       ext_modules = ext_modules,
       data_files = data_files,
       package_dir = {'': 'lib'},
-      cmdclass = {'install_data':smart_install_data},
+      #cmdclass = {'install_data':smart_install_data},
       **additional_params
       )
