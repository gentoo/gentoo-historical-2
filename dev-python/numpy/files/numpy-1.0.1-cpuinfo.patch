diff -Nur numpy/distutils.orig/cpuinfo.py numpy/distutils/cpuinfo.py
--- numpy/distutils.orig/cpuinfo.py	2006-07-26 21:04:22.000000000 +0100
+++ numpy/distutils/cpuinfo.py	2007-03-05 10:23:16.000000000 +0000
@@ -5,7 +5,7 @@
 Copyright 2002 Pearu Peterson all rights reserved,
 Pearu Peterson <pearu@cens.ioc.ee>
 Permission to use, modify, and distribute this software is given under the
-terms of the SciPy (BSD style) license.  See LICENSE.txt that came with
+terms of the NumPy (BSD style) license.  See LICENSE.txt that came with
 this distribution for specifics.
 
 Note:  This should be merged into proc at some point.  Perhaps proc should
@@ -185,8 +185,13 @@
         return self.is_PentiumIV() and self.has_sse3()
 
     def _is_Nocona(self):
-        return self.is_PentiumIV() and self.is_64bit()
-
+        return self.is_64bit() and self.is_i686()
+    
+    def _is_Core2(self):
+        return self.is_64bit() and self.is_Intel() and \
+               re.match(r'.*?Core\(TM\)2\b', \
+                        self.info[0]['model name']) is not None
+    
     def _is_Itanium(self):
         return re.match(r'.*?Itanium\b',
                         self.info[0]['family']) is not None
diff -Nur numpy/distutils.orig/fcompiler/gnu.py numpy/distutils/fcompiler/gnu.py
--- numpy/distutils.orig/fcompiler/gnu.py	2006-10-09 08:46:59.000000000 +0100
+++ numpy/distutils/fcompiler/gnu.py	2007-03-05 10:23:27.000000000 +0000
@@ -1,4 +1,3 @@
-
 import re
 import os
 import sys
@@ -62,14 +61,18 @@
     def get_flags_linker_so(self):
         opt = self.linker_so[1:]
         if sys.platform=='darwin':
+            # MACOSX_DEPLOYMENT_TARGET must be at least 10.3. This is
+            # a reasonable default value even when building on 10.4 when using
+            # the official Python distribution and those derived from it (when
+            # not broken).
             target = os.environ.get('MACOSX_DEPLOYMENT_TARGET', None)
-            if target is None:
+            if target is None or target == '':
                 target = '10.3'
             major, minor = target.split('.')
             if int(minor) < 3:
                 minor = '3'
                 warnings.warn('Environment variable '
-                    'MACOSX_DEPLOYMENT_TARGET reset to 10.3')
+                    'MACOSX_DEPLOYMENT_TARGET reset to %s.%s' % (major, minor))
             os.environ['MACOSX_DEPLOYMENT_TARGET'] = '%s.%s' % (major,
                 minor)
 
@@ -193,6 +196,8 @@
                 # there's also: athlon-tbird, athlon-4, athlon-xp
             elif cpu.is_Nocona():
                 march_opt = '-march=nocona'
+            elif cpu.is_Core2():
+                march_opt = '-march=nocona'
             elif cpu.is_Prescott():
                 march_opt = '-march=prescott'
             elif cpu.is_PentiumIV():
@@ -213,7 +218,12 @@
         if gnu_ver >= '3.4.4':
             if cpu.is_PentiumM():
                 march_opt = '-march=pentium-m'
-
+        
+        # Future:
+        # if gnu_ver >= '4.3':
+        #    if cpu.is_Core2():
+        #        march_opt = '-march=core2'
+        
         # Note: gcc 3.2 on win32 has breakage with -march specified
         if '3.1.1' <= gnu_ver <= '3.4' and sys.platform=='win32':
             march_opt = ''
@@ -275,7 +285,7 @@
     def get_libraries(self):
         opt = GnuFCompiler.get_libraries(self)
         if sys.platform == 'darwin':
-            opt.remove('cc_dynamic')        
+            opt.remove('cc_dynamic')
         return opt
 
 if __name__ == '__main__':
