diff --git a/mwlib/nslave.py b/mwlib/nslave.py
index d3f8fc0..cccfc7a 100755
--- a/mwlib/nslave.py
+++ b/mwlib/nslave.py
@@ -184,7 +184,7 @@ class commands(object):
         return doit(**params)
 
 
-def start_serving_files(cachedir, port):
+def start_serving_files(cachedir, address, port):
     from gevent.pywsgi import WSGIServer
     from bottle import route, static_file, default_app
     cachedir = os.path.abspath(cachedir)
@@ -195,7 +195,7 @@ def start_serving_files(cachedir, port):
         if filename.endswith(".rl"):
             response.headers["Content-Disposition"] = "inline; filename=collection.pdf"
         return response
-    s = WSGIServer(("", port), default_app())
+    s = WSGIServer((address, port), default_app())
     s.start()
     return s
 
@@ -212,10 +212,11 @@ def make_cachedir(cachedir):
 def main():
     global cachedir, cacheurl
     numgreenlets = 10
+    http_address = 'localhost'
     http_port = 8898
     serve_files = True
     from mwlib import argv
-    opts, args = argv.parse(sys.argv[1:], "--no-serve-files --serve-files-port= --serve-files --cachedir= --url= --numprocs=")
+    opts, args = argv.parse(sys.argv[1:], "--no-serve-files --serve-files-port= --serve-files-address= --serve-files --cachedir= --url= --numprocs=")
     for o, a in opts:
         if o == "--cachedir":
             cachedir = a
@@ -227,12 +228,14 @@ def main():
             serve_files = False
         elif o == "--serve-files-port":
             http_port = int(a)
+        elif o == "--serve-files-address":
+            http_address = str(a)
 
     if cachedir is None:
         sys.exit("nslave: missing --cachedir argument")
 
     if serve_files:
-        wsgi_server = start_serving_files(cachedir, http_port)
+        wsgi_server = start_serving_files(cachedir, http_address, http_port)
         port = wsgi_server.socket.getsockname()[1]
         if not cacheurl:
             cacheurl = "http://%s:%s/cache" % (find_ip(), port)
