--- setup.py.orig	2012-01-06 04:59:53.000000000 +0000
+++ setup.py	2012-01-06 06:21:48.000000000 +0000
@@ -2,58 +2,58 @@
 from glob import glob
 
 # directory containing libblas and liblapack
-ATLAS_LIB_DIR = '/usr/lib'
+ATLAS_LIB_DIR = ''
 
 # Set to 1 if you are using the random number generators in the GNU
 # Scientific Library.
 BUILD_GSL = 0
 
 # Directory containing libgsl (used only when BUILD_GSL = 1).
-GSL_LIB_DIR = '/usr/lib'       
+GSL_LIB_DIR = ''       
 
 # Directory containing the GSL header files (used only when BUILD_GSL = 1).
-GSL_INC_DIR = '/usr/include/gsl'  
+GSL_INC_DIR = ''  
 
 # Set to 1 if you are installing the fftw module.
 BUILD_FFTW = 0
 
 # Directory containing libfftw3 (used only when BUILD_FFTW = 1).
-FFTW_LIB_DIR = '/usr/lib'       
+FFTW_LIB_DIR = ''       
 
 # Directory containing fftw.h (used only when BUILD_FFTW = 1).
-FFTW_INC_DIR = '/usr/include'  
+FFTW_INC_DIR = ''  
 
 # Set to 1 if you are installing the glpk module.
 BUILD_GLPK = 0
 
 # Directory containing libglpk (used only when BUILD_GLPK = 1).
-GLPK_LIB_DIR = '/usr/lib'       
+GLPK_LIB_DIR = ''       
 
 # Directory containing glpk.h (used only when BUILD_GLPK = 1).
-GLPK_INC_DIR = '/usr/include'  
+GLPK_INC_DIR = ''  
 
 # Set to 1 if you are installing the DSDP module.
 BUILD_DSDP = 0
 
 # Directory containing libdsdp (used only when BUILD_DSDP = 1).
-DSDP_LIB_DIR = '/usr/lib'
+DSDP_LIB_DIR = ''
  
 # Directory containing dsdp5.h (used only when BUILD_DSDP = 1).
-DSDP_INC_DIR = '/usr/include'
+DSDP_INC_DIR = ''
 
 extmods = []
 
 # optional modules
 
 if BUILD_GSL:
-    gsl = Extension('gsl', libraries = ['m', 'gsl', 'blas'],
+    gsl = Extension('gsl', libraries = ['gsl'],
         include_dirs = [ GSL_INC_DIR ],
         library_dirs = [ GSL_LIB_DIR ],
         sources = ['C/gsl.c'] )
     extmods += [gsl];
 
 if BUILD_FFTW:
-    fftw = Extension('fftw', libraries = ['fftw3', 'blas'],
+    fftw = Extension('fftw', libraries = ['fftw3'],
         include_dirs = [ FFTW_INC_DIR ],
         library_dirs = [ FFTW_LIB_DIR, ATLAS_LIB_DIR ],
         sources = ['C/fftw.c'] )
@@ -67,7 +67,7 @@
     extmods += [glpk];
 
 if BUILD_DSDP:
-    dsdp = Extension('dsdp', libraries = ['dsdp', 'blas', 'lapack'],
+    dsdp = Extension('dsdp', libraries = ['dsdp'],
         include_dirs = [ DSDP_INC_DIR ],
         library_dirs = [ DSDP_LIB_DIR, ATLAS_LIB_DIR ],
         sources = ['C/dsdp.c'] )
@@ -85,7 +85,7 @@
 else:    
     MACROS = []
 
-base = Extension('base', libraries = ['m','lapack','blas'],
+base = Extension('base', libraries = ['lapack'],
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
     sources = ['C/base.c','C/dense.c','C/sparse.c']) 
@@ -95,22 +95,16 @@
     define_macros = MACROS,
     sources = ['C/blas.c'] )
 
-lapack = Extension('lapack', libraries = ['lapack','blas'],
+lapack = Extension('lapack', libraries = ['lapack'],
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
     sources = ['C/lapack.c'] )
 
 umfpack = Extension('umfpack', 
-    include_dirs = [ 'C/SuiteSparse/UMFPACK/Include',
-        'C/SuiteSparse/AMD/Include', 'C/SuiteSparse/AMD/Source', 
-        'C/SuiteSparse/UFconfig' ],
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
-    libraries = [ 'blas', 'lapack'],
-    sources = [ 'C/umfpack.c',
-        'C/SuiteSparse/UMFPACK/Source/umfpack_global.c',
-        'C/SuiteSparse/UMFPACK/Source/umfpack_tictoc.c' ] +
-        glob('C/SuiteSparse_cvxopt_extra/umfpack/*'))
+    libraries = [ 'umfpack' ],
+    sources = [ 'C/umfpack.c' ])
 
 # Build for int or long? 
 import sys
@@ -118,28 +112,16 @@
 
 cholmod = Extension('cholmod',
     library_dirs = [ ATLAS_LIB_DIR ],
-    libraries = ['lapack', 'blas'],
-    include_dirs = [ 'C/SuiteSparse/CHOLMOD/Include', 
-        'C/SuiteSparse/COLAMD', 'C/SuiteSparse/AMD/Include', 
-        'C/SuiteSparse/UFconfig', 'C/SuiteSparse/COLAMD/Include' ],
+    libraries = ['cholmod' ],
     define_macros = MACROS + [('NPARTITION', '1')],
-    sources = [ 'C/cholmod.c' ] + 
-        ['C/SuiteSparse/AMD/Source/' + s for s in ['amd_global.c',
-            'amd_postorder.c', 'amd_post_tree.c', 'amd_2.c']] +
-        ['C/SuiteSparse/COLAMD/Source/' + s for s in ['colamd.c',
-            'colamd_global.c']] +
-        glob('C/SuiteSparse/CHOLMOD/Core/c*.c') +
-        glob('C/SuiteSparse/CHOLMOD/Cholesky/c*.c') +
-        ['C/SuiteSparse/CHOLMOD/Check/cholmod_check.c'] +
-        glob('C/SuiteSparse/CHOLMOD/Supernodal/c*.c') )
+    sources = [ 'C/cholmod.c' ])
 
 amd = Extension('amd', 
-    include_dirs = [ 'C/SuiteSparse/AMD/Include', 
-        'C/SuiteSparse/UFconfig' ],
     define_macros = MACROS,
-    sources = [ 'C/amd.c' ] + glob('C/SuiteSparse/AMD/Source/*.c') )
+    libraries = [ 'amd' ],
+    sources = [ 'C/amd.c' ])
 
-misc_solvers = Extension('misc_solvers', libraries = ['lapack', 'blas'],
+misc_solvers = Extension('misc_solvers', libraries = ['lapack'],
     library_dirs = [ ATLAS_LIB_DIR ],
     define_macros = MACROS,
     sources = ['C/misc_solvers.c'] )
