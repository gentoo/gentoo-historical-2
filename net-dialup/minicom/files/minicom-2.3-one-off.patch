menu display is wonkey

http://alioth.debian.org/tracker/index.php?func=detail&aid=304061&group_id=30018&atid=100031

diff -Nru minicom-2.2.orig/src/config.c minicom-2.2/src/config.c
--- minicom-2.2.orig/src/config.c	2006-04-02 12:52:30.000000000 +0300
+++ minicom-2.2/src/config.c	2008-04-14 23:07:44.000000000 +0300
@@ -936,7 +936,7 @@
         else
           sprintf(buf, "^%c           ", (c & 0x1f) + 'A' - 1);
         psets(P_ESCAPE, buf);
-        wlocate(w, mbslen (command_key) + 1, 1);
+        wlocate(w, mbslen (command_key) + 1, 0);
         wputs(w, _(buf));
         clr = 1;
         alt_override = 0;
@@ -960,7 +960,7 @@
           psets(P_BACKSPACE, "BS");
         else
           psets(P_BACKSPACE, "DEL");
-        wlocate(w, mbslen (backspace_key) + 1, 2);
+        wlocate(w, mbslen (backspace_key) + 1, 1);
         wprintf(w, "%s ", P_BACKSPACE);
         keyboard(KSETBS, P_BACKSPACE[0] == 'B' ? 8 : 127);
         break;
@@ -974,12 +974,12 @@
           if (LINES > 24)
             tempst = 0;
         }
-        wlocate(w, mbslen (status_line) + 1, 3);
+        wlocate(w, mbslen (status_line) + 1, 2);
         wprintf(w, "%s ", _(P_STATLINE));
         break;
       case 'D':
         psets(P_SOUND, yesno(P_SOUND[0] == 'N'));
-        wlocate(w, mbslen (alarm_sound) + 1, 4);
+        wlocate(w, mbslen (alarm_sound) + 1, 3);
         wprintf(w, "%s", _(P_SOUND));
         break;
       case 'E': /* fmg - letters cycle colors */
@@ -988,7 +988,7 @@
         else
           mfcolor++;
         psets(P_MFG, J_col[mfcolor]);
-        wlocate(w, mbslen (foreground_color_menu) + 1, 5);
+        wlocate(w, mbslen (foreground_color_menu) + 1, 4);
         wprintf(w, "%s   ", _(J_col[mfcolor]));
         break;
       case 'F': /* fmg - letters cycle colors */
@@ -997,7 +997,7 @@
         else
           mbcolor++;
         psets(P_MBG, J_col[mbcolor]);
-        wlocate(w, mbslen (background_color_menu) + 1, 6);
+        wlocate(w, mbslen (background_color_menu) + 1, 5);
         wprintf(w, "%s   ", _(J_col[mbcolor]));
         break;
       case 'G': /* fmg - letters cycle colors */
@@ -1006,7 +1006,7 @@
         else
           tfcolor++;
         psets(P_TFG, J_col[tfcolor]);
-        wlocate(w, mbslen (foreground_color_term) + 1, 7);
+        wlocate(w, mbslen (foreground_color_term) + 1, 6);
         wprintf(w, "%s   ", _(J_col[tfcolor]));
         if (us)
           vt_pinit(us, tfcolor, tbcolor);
@@ -1017,7 +1017,7 @@
         else
           tbcolor++;
         psets(P_TBG, J_col[tbcolor]);
-        wlocate(w, mbslen (background_color_term) + 1, 8);
+        wlocate(w, mbslen (background_color_term) + 1, 7);
         wprintf(w, "%s   ", _(J_col[tbcolor]));
         if (us)
           vt_pinit(us, tfcolor, tbcolor);
@@ -1038,7 +1038,7 @@
           show_status();
         }
         psets(P_SFG, J_col[sfcolor]);
-        wlocate(w, mbslen (foreground_color_stat) + 1, 9);
+        wlocate(w, mbslen (foreground_color_stat) + 1, 8);
         wprintf(w, "%s   ", _(J_col[sfcolor]));
         break;
       case 'J': /* fmg - letters cycle colors & redraw stat line */
@@ -1057,11 +1057,11 @@
           show_status();
         }
         psets(P_SBG, J_col[sbcolor]);
-        wlocate(w, mbslen (background_color_stat) + 1, 10);
+        wlocate(w, mbslen (background_color_stat) + 1, 9);
         wprintf(w, "%s   ", _(J_col[sbcolor]));
         break;
       case 'K': /* MARK updated 02/17/95 - Config history size */
-        pgets(w, mbslen (history_buffer_size) + 1, 11,
+        pgets(w, mbslen (history_buffer_size) + 1, 10,
               P_HISTSIZE, 5, 5);
 
         /* In case gibberish or a value was out of bounds, */
@@ -1073,11 +1073,11 @@
         else if (atoi(P_HISTSIZE) >= 5000)
           strcpy(P_HISTSIZE,"5000");
 
-        wlocate(w, mbslen (history_buffer_size) + 1, 11);
+        wlocate(w, mbslen (history_buffer_size) + 1, 10);
         wprintf(w, "%s     ", P_HISTSIZE);
         break;
       case 'L': /* fmg - get local macros storage file */
-        pgets(w, mbslen (macros_file) + 1, 12, P_MACROS, 64, 64);
+        pgets(w, mbslen (macros_file) + 1, 11, P_MACROS, 64, 64);
 
         /* Try to open the file to read it in. */
         fp = sfopen(pfix_home(P_MACROS), "r+");
@@ -1105,12 +1105,12 @@
         break;
       case 'N':
         psets(P_MACENAB, yesno(P_MACENAB[0] == 'N'));
-        wlocate(w, mbslen (macros_enabled) + 1, 14);
+        wlocate(w, mbslen (macros_enabled) + 1, 13);
         wprintf(w, "%s", _(P_MACENAB));
         break;
       case 'O': /* Character conversions - jl / 04.09.97 */
         doconv();
-        wlocate(w, mbslen (character_conversion) + 1, 15);
+        wlocate(w, mbslen (character_conversion) + 1, 14);
         wprintf(w, "%-16.16s", _(P_CONVF));
         break;
       case 'P':
