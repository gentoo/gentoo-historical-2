diff -Nru ltmodem-2.6-alk-9.orig/serial.c ltmodem-2.6-alk-9/serial.c
--- ltmodem-2.6-alk-9.orig/serial.c	2007-09-06 01:56:25.000000000 +0000
+++ ltmodem-2.6-alk-9/serial.c	2008-11-02 10:19:26.000000000 +0000
@@ -362,7 +362,11 @@
 		receive_chars(&lt_port,&status,0);
 
 		{
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27))
 			struct tty_struct *tty = lt_port.port.info->tty;
+#else
+			struct tty_struct *tty = lt_port.port.info->port.tty;
+#endif
 			spin_unlock_irqrestore(&lt_port.port.lock, flags);
 			tty_flip_buffer_push(tty);
 			spin_lock_irqsave(&lt_port.port.lock,flags);
@@ -568,7 +572,11 @@
 
 	// force low latency mode on tty.
 	// We will push data from buttom half, no need to delay it further.
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27))
 	port->info->tty->low_latency = 1;
+#else
+	port->info->port.tty->low_latency = 1;
+#endif
 
 	lt_modem_ops.PortOpen();
 
@@ -826,7 +834,11 @@
 	*lt_modem_ops.virtual_isr_ptr = lt_virtual_rs_interrupt;
 
 	/* lets try to grap dsp interrupt here */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
 	ret = request_irq(lt_modem_res.Irq, VMODEM_Hw_Int_Proc, SA_INTERRUPT | SA_SHIRQ,
+#else
+	ret = request_irq(lt_modem_res.Irq, VMODEM_Hw_Int_Proc, IRQF_DISABLED | IRQF_SHARED,
+#endif
 				ltserialstring, &lt_modem_res.BaseAddress);
 	if (ret<0)
 		goto out_port;
