diff -urp mISDN.orig/avm_fritz.c mISDN/avm_fritz.c
--- mISDN.orig/avm_fritz.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/avm_fritz.c	2006-03-21 20:13:50.000000000 +0100
@@ -932,7 +932,6 @@ static int init_card(fritzpnppci *fc)
 }
 
 #define MAX_CARDS	4
-#define MODULE_PARM_T	"1-4i"
 static int fritz_cnt;
 static u_int protocol[MAX_CARDS];
 static int layermask[MAX_CARDS];
@@ -945,9 +944,9 @@ MODULE_AUTHOR("Karsten Keil");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
-MODULE_PARM(protocol, MODULE_PARM_T);
-MODULE_PARM(layermask, MODULE_PARM_T);
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param_array(protocol, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(layermask, uint, NULL, S_IRUGO | S_IWUSR);
 #endif
 
 int
diff -urp mISDN.orig/capi.c mISDN/capi.c
--- mISDN.orig/capi.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/capi.c	2006-03-21 20:04:55.000000000 +0100
@@ -19,7 +19,7 @@ MODULE_AUTHOR("Karsten Keil");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #endif
 
 static char deb_buf[256];
diff -urp mISDN.orig/dsp_core.c mISDN/dsp_core.c
--- mISDN.orig/dsp_core.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/dsp_core.c	2006-03-21 20:04:55.000000000 +0100
@@ -192,9 +192,9 @@ int dsp_poll, dsp_tics;
 
 #ifdef MODULE
 MODULE_AUTHOR("Andreas Eversberg");
-MODULE_PARM(debug, "1i");
-MODULE_PARM(options, "1i");
-MODULE_PARM(poll, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param(options, uint, S_IRUGO | S_IWUSR);
+module_param(poll, uint, S_IRUGO | S_IWUSR);
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
diff -urp mISDN.orig/faxl3.c mISDN/faxl3.c
--- mISDN.orig/faxl3.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/faxl3.c	2006-03-21 20:04:55.000000000 +0100
@@ -1920,8 +1920,8 @@ static char MName[] = "FAXL3";
 
 #ifdef MODULE
 MODULE_AUTHOR("Karsten Keil");
-MODULE_PARM(debug, "1i");
-MODULE_PARM(ttt, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param(ttt, uint, S_IRUGO | S_IWUSR);
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
diff -urp mISDN.orig/hfc_multi.c mISDN/hfc_multi.c
--- mISDN.orig/hfc_multi.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/hfc_multi.c	2006-03-21 20:17:10.000000000 +0100
@@ -207,8 +207,6 @@ static const PCI_ENTRY id_list[] =
 /* NOTE: MAX_PORTS must be 8*MAX_CARDS */
 #define MAX_CARDS	16
 #define MAX_PORTS	128
-#define MODULE_CARDS_T	"1-16i"
-#define MODULE_PORTS_T	"1-128i" /* 16 cards can have 128 ports */
 static u_int type[MAX_CARDS];
 static BYTE allocated[MAX_CARDS];  // remember if card is found
 static int pcm[MAX_PORTS];
@@ -222,12 +220,12 @@ MODULE_AUTHOR("Andreas Eversberg");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
-MODULE_PARM(poll, "1i");
-MODULE_PARM(type, MODULE_CARDS_T);
-MODULE_PARM(pcm, MODULE_CARDS_T);
-MODULE_PARM(protocol, MODULE_PORTS_T);
-MODULE_PARM(layermask, MODULE_PORTS_T);
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param(poll, uint, S_IRUGO | S_IWUSR);
+module_param_array(type, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(pcm, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(protocol, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(layermask, uint, NULL, S_IRUGO | S_IWUSR);
 #endif
 
 static void
diff -urp mISDN.orig/hfcs_mini.c mISDN/hfcs_mini.c
--- mISDN.orig/hfcs_mini.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/hfcs_mini.c	2006-03-21 20:17:54.000000000 +0100
@@ -69,17 +69,15 @@ static int card_cnt;
 static u_int protocol[MAX_CARDS];
 static int layermask[MAX_CARDS];
 
-#ifdef MODULE
-MODULE_LICENSE("GPL");
-#define MODULE_PARM_T	"1-8i"
-MODULE_PARM(debug, "1i");
-MODULE_PARM(protocol, MODULE_PARM_T);
-MODULE_PARM(layermask, MODULE_PARM_T);
-#endif
-
 static mISDNobject_t hw_mISDNObj;
 static int debug = 0;
 
+#ifdef MODULE
+MODULE_LICENSE("GPL");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param_array(protocol, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(layermask, uint, NULL, S_IRUGO | S_IWUSR);
+#endif
 
 #if HFCBRIDGE == BRIDGE_HFCPCI
 
diff -urp mISDN.orig/hfcs_usb.c mISDN/hfcs_usb.c
--- mISDN.orig/hfcs_usb.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/hfcs_usb.c	2006-03-21 20:18:28.000000000 +0100
@@ -42,7 +42,6 @@
 const char *hfcsusb_rev = "$Revision: 1.1 $";
 
 #define MAX_CARDS	8
-#define MODULE_PARM_T	"1-8i"
 static int hfcsusb_cnt;
 static u_int protocol[MAX_CARDS] = {2,2,2,2,2,2,2,2};
 static int layermask[MAX_CARDS];
@@ -54,9 +53,9 @@ static int debug = 0x1FFFF; // 0;
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
-MODULE_PARM(protocol, MODULE_PARM_T);
-MODULE_PARM(layermask, MODULE_PARM_T);
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param_array(protocol, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(layermask, uint, NULL, S_IRUGO | S_IWUSR);
 #endif
 
 
diff -urp mISDN.orig/i4l_mISDN.c mISDN/i4l_mISDN.c
--- mISDN.orig/i4l_mISDN.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/i4l_mISDN.c	2006-03-21 20:04:55.000000000 +0100
@@ -157,7 +157,7 @@ MODULE_AUTHOR("Karsten Keil");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #endif
 
 static void
diff -urp mISDN.orig/l1oip.c mISDN/l1oip.c
--- mISDN.orig/l1oip.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/l1oip.c	2006-03-21 20:19:26.000000000 +0100
@@ -238,7 +238,6 @@ static char l1oipName[] = "Layer1oIP";
 /****************/
 
 #define MAX_CARDS	16
-#define MODULE_CARDS_T	"1-16i"
 static u_int type[MAX_CARDS];
 static u_int codec[MAX_CARDS];
 static u_int protocol[MAX_CARDS];
@@ -250,11 +249,11 @@ MODULE_AUTHOR("Andreas Eversberg");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(type, MODULE_CARDS_T);
-MODULE_PARM(codec, MODULE_CARDS_T);
-MODULE_PARM(protocol, MODULE_CARDS_T);
-MODULE_PARM(layermask, MODULE_CARDS_T);
-MODULE_PARM(debug, "1i");
+module_param_array(type, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(codec, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(protocol, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(layermask, uint, NULL, S_IRUGO | S_IWUSR);
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #endif
 
 
diff -urp mISDN.orig/l3_udss1.c mISDN/l3_udss1.c
--- mISDN.orig/l3_udss1.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/l3_udss1.c	2006-03-21 20:04:55.000000000 +0100
@@ -2922,7 +2922,7 @@ MODULE_AUTHOR("Karsten Keil");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #endif
 
 static int
diff -urp mISDN.orig/layer1.c mISDN/layer1.c
--- mISDN.orig/layer1.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/layer1.c	2006-03-21 20:04:55.000000000 +0100
@@ -737,7 +737,7 @@ static char MName[] = "ISDNL1";
 
 #ifdef MODULE
 MODULE_AUTHOR("Karsten Keil");
-MODULE_PARM(debug, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
diff -urp mISDN.orig/layer2.c mISDN/layer2.c
--- mISDN.orig/layer2.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/layer2.c	2006-03-21 20:04:55.000000000 +0100
@@ -2408,7 +2408,7 @@ MODULE_AUTHOR("Karsten Keil");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #endif
 
 static int
diff -urp mISDN.orig/loop.c mISDN/loop.c
--- mISDN.orig/loop.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/loop.c	2006-03-21 20:04:55.000000000 +0100
@@ -57,8 +57,8 @@ MODULE_AUTHOR("Andreas Eversberg");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(interfaces, "1i");
-MODULE_PARM(debug, "1i");
+module_param(interfaces, uint, S_IRUGO | S_IWUSR);
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #endif
 
 
diff -urp mISDN.orig/w6692.c mISDN/w6692.c
--- mISDN.orig/w6692.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/w6692.c	2006-03-21 20:20:28.000000000 +0100
@@ -992,7 +992,6 @@ static int init_card(w6692pci *card)
 }
 
 #define MAX_CARDS	4
-#define MODULE_PARM_T	"1-4i"
 static int w6692_cnt;
 static u_int protocol[MAX_CARDS];
 static int layermask[MAX_CARDS];
@@ -1007,11 +1006,11 @@ MODULE_AUTHOR("Karsten Keil");
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-MODULE_PARM(debug, "1i");
-MODULE_PARM(led, MODULE_PARM_T);
-MODULE_PARM(pots, MODULE_PARM_T);
-MODULE_PARM(protocol, MODULE_PARM_T);
-MODULE_PARM(layermask, MODULE_PARM_T);
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param_array(led, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(pots, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(protocol, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(layermask, uint, NULL, S_IRUGO | S_IWUSR);
 #endif
 
 /******************************/
diff -urp mISDN.orig/x25_dte.c mISDN/x25_dte.c
--- mISDN.orig/x25_dte.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/x25_dte.c	2006-03-21 20:04:55.000000000 +0100
@@ -1256,7 +1256,7 @@ static char MName[] = "X25_DTE";
 
 #ifdef MODULE
 MODULE_AUTHOR("Karsten Keil");
-MODULE_PARM(debug, "1i");
+module_param(debug, uint, S_IRUGO | S_IWUSR);
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
diff -urp mISDN.orig/xhfc_su.c mISDN/xhfc_su.c
--- mISDN.orig/xhfc_su.c	2006-03-21 20:04:45.000000000 +0100
+++ mISDN/xhfc_su.c	2006-03-21 20:21:06.000000000 +0100
@@ -72,20 +72,18 @@ static int card_cnt;
 static u_int protocol[MAX_CARDS * MAX_PORT];
 static int layermask[MAX_CARDS * MAX_PORT];
 
+static mISDNobject_t hw_mISDNObj;
+static int debug = 0;
+
 #ifdef MODULE
 #ifdef MODULE_LICENSE
 MODULE_LICENSE("GPL");
 #endif
-#define MODULE_PARM_T	"1-8i"
-MODULE_PARM(debug, "1i");
-MODULE_PARM(protocol, MODULE_PARM_T);
-MODULE_PARM(layermask, MODULE_PARM_T);
+module_param(debug, uint, S_IRUGO | S_IWUSR);
+module_param_array(protocol, uint, NULL, S_IRUGO | S_IWUSR);
+module_param_array(layermask, uint, NULL, S_IRUGO | S_IWUSR);
 #endif
 
-static mISDNobject_t hw_mISDNObj;
-static int debug = 0;
-
-
 /* static function prototypes */
 static void release_card(xhfc_pi * pi);
 static void setup_fifo(xhfc_t * xhfc, __u8 fifo, __u8 conhdlc, __u8 subcfg,
