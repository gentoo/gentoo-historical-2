diff -upr mISDN.orig/drivers/isdn/hardware/mISDN/avm_fritz.c mISDN/drivers/isdn/hardware/mISDN/avm_fritz.c
--- mISDN.orig/drivers/isdn/hardware/mISDN/avm_fritz.c	2006-03-21 20:38:47.000000000 +0100
+++ mISDN/drivers/isdn/hardware/mISDN/avm_fritz.c	2006-03-21 20:44:53.000000000 +0100
@@ -103,17 +103,17 @@ enum {
 
 struct hdlc_stat_reg {
 #ifdef __BIG_ENDIAN
-	u_char fill __attribute__((packed));
-	u_char mode __attribute__((packed));
-	u_char xml  __attribute__((packed));
-	u_char cmd  __attribute__((packed));
+	u_char fill;
+	u_char mode;
+	u_char xml;
+	u_char cmd;
 #else
-	u_char cmd  __attribute__((packed));
-	u_char xml  __attribute__((packed));
-	u_char mode __attribute__((packed));
-	u_char fill __attribute__((packed));
+	u_char cmd;
+	u_char xml;
+	u_char mode;
+	u_char fill;
 #endif
-};
+} __attribute__((packed));
 
 typedef struct hdlc_hw {
 	union {
diff -upr mISDN.orig/drivers/isdn/hardware/mISDN/ncci.c mISDN/drivers/isdn/hardware/mISDN/ncci.c
--- mISDN.orig/drivers/isdn/hardware/mISDN/ncci.c	2006-03-21 20:38:47.000000000 +0100
+++ mISDN/drivers/isdn/hardware/mISDN/ncci.c	2006-03-21 20:45:40.000000000 +0100
@@ -380,14 +380,14 @@ ncci_manufacturer_req(struct FsmInst *fi
 	_cmsg	*cmsg = arg;
 	int	err, op;
 	struct  _manu_conf_para {
-			u8	len	__attribute__((packed));
-			u16	Info	__attribute__((packed));
-			u16	vol	__attribute__((packed));
+			u8	len;
+			u16	Info;
+			u16	vol;
 		} mcp = {2, CAPI_NOERROR,0};
 	struct  _manu_req_para {
-			u8	len	__attribute__((packed));
-			u16	vol	__attribute__((packed));
-		} *mrp;
+			u8	len;
+			u16	vol;
+		} __attribute__((packed)) *mrp;
 
 	if (!ncci->appl)
 		return;
diff -upr mISDN.orig/drivers/isdn/hardware/mISDN/x25_l3.h mISDN/drivers/isdn/hardware/mISDN/x25_l3.h
--- mISDN.orig/drivers/isdn/hardware/mISDN/x25_l3.h	2006-03-21 20:38:47.000000000 +0100
+++ mISDN/drivers/isdn/hardware/mISDN/x25_l3.h	2006-03-21 20:46:14.000000000 +0100
@@ -32,12 +32,12 @@ struct _x25_B3_cfg {
 #define DEFAULT_X25_B3_CFG	{0, 0, 1, 1, 0, 0, 8, 2}
 
 struct _x25_ncpi {
-	__u8	len		__attribute__((packed));
-	__u8	Flags		__attribute__((packed));
-	__u8	Group		__attribute__((packed));
-	__u8	Channel		__attribute__((packed));
-	__u8	Contens[4]	__attribute__((packed)); /* Note this can be less/more bytes in use */ 
-};
+	__u8	len;
+	__u8	Flags;
+	__u8	Group;
+	__u8	Channel;
+	__u8	Contens[4]; /* Note this can be less/more bytes in use */ 
+} __attribute__((packed));
 
 struct _x25_ConfQueue { 
 	__u32		PktId; 
diff -upr mISDN.orig/include/linux/mISDNif.h mISDN/include/linux/mISDNif.h
--- mISDN.orig/include/linux/mISDNif.h	2006-03-21 20:38:47.000000000 +0100
+++ mISDN/include/linux/mISDNif.h	2006-03-21 20:41:30.000000000 +0100
@@ -579,11 +579,11 @@
 #define STATUS_INFO_L2	2
 
 typedef struct _mISDN_head {
-	u_int	addr __attribute__((packed));
-	u_int	prim __attribute__((packed));
-	int	dinfo __attribute__((packed));
-	int	len __attribute__((packed));
-} mISDN_head_t;
+	u_int	addr;
+	u_int	prim;
+	int	dinfo;
+	int	len;
+} __attribute__((packed)) mISDN_head_t;
 
 #define mISDN_HEADER_LEN	sizeof(mISDN_head_t)
 
@@ -693,47 +693,47 @@ typedef struct _ie_info_ext {
 } __attribute__((packed)) ie_info_ext_t;
 
 typedef struct _Q931_info {
-	u_char		type __attribute__((packed));
-	u_char		crlen __attribute__((packed));
-	u16		cr __attribute__((packed));
-	ie_info_t	bearer_capability __attribute__((packed));
-	ie_info_t	cause __attribute__((packed));
-	ie_info_t	call_id __attribute__((packed));
-	ie_info_t	call_state __attribute__((packed));
-	ie_info_t	channel_id __attribute__((packed));
-	ie_info_t	facility __attribute__((packed));
-	ie_info_t	progress __attribute__((packed));
-	ie_info_t	net_fac __attribute__((packed));
-	ie_info_t	notify __attribute__((packed));
-	ie_info_t	display __attribute__((packed));
-	ie_info_t	date __attribute__((packed));
-	ie_info_t	keypad __attribute__((packed));
-	ie_info_t	signal __attribute__((packed));
-	ie_info_t	info_rate __attribute__((packed));
-	ie_info_t	end2end_transit __attribute__((packed));
-	ie_info_t	transit_delay_sel __attribute__((packed));
-	ie_info_t	pktl_bin_para __attribute__((packed));
-	ie_info_t	pktl_window __attribute__((packed));
-	ie_info_t	pkt_size __attribute__((packed));
-	ie_info_t	closed_userg __attribute__((packed));
-	ie_info_t	connected_nr __attribute__((packed));
-	ie_info_t	connected_sub __attribute__((packed));
-	ie_info_t	calling_nr __attribute__((packed));
-	ie_info_t	calling_sub __attribute__((packed));
-	ie_info_t	called_nr __attribute__((packed));
-	ie_info_t	called_sub __attribute__((packed));
-	ie_info_t	redirect_nr __attribute__((packed));
-	ie_info_t	transit_net_sel __attribute__((packed));
-	ie_info_t	restart_ind __attribute__((packed));
-	ie_info_t	llc __attribute__((packed));
-	ie_info_t	hlc __attribute__((packed));
-	ie_info_t	useruser __attribute__((packed));
-	ie_info_t	more_data __attribute__((packed));
-	ie_info_t	sending_complete __attribute__((packed));
-	ie_info_t	congestion_level __attribute__((packed));
-	ie_info_t	fill1 __attribute__((packed));
-	ie_info_ext_t	ext[8] __attribute__((packed));
-} Q931_info_t;
+	u_char		type;
+	u_char		crlen;
+	u16		cr;
+	ie_info_t	bearer_capability;
+	ie_info_t	cause;
+	ie_info_t	call_id;
+	ie_info_t	call_state;
+	ie_info_t	channel_id;
+	ie_info_t	facility;
+	ie_info_t	progress;
+	ie_info_t	net_fac;
+	ie_info_t	notify;
+	ie_info_t	display;
+	ie_info_t	date;
+	ie_info_t	keypad;
+	ie_info_t	signal;
+	ie_info_t	info_rate;
+	ie_info_t	end2end_transit;
+	ie_info_t	transit_delay_sel;
+	ie_info_t	pktl_bin_para;
+	ie_info_t	pktl_window;
+	ie_info_t	pkt_size;
+	ie_info_t	closed_userg;
+	ie_info_t	connected_nr;
+	ie_info_t	connected_sub;
+	ie_info_t	calling_nr;
+	ie_info_t	calling_sub;
+	ie_info_t	called_nr;
+	ie_info_t	called_sub;
+	ie_info_t	redirect_nr;
+	ie_info_t	transit_net_sel;
+	ie_info_t	restart_ind;
+	ie_info_t	llc;
+	ie_info_t	hlc;
+	ie_info_t	useruser;
+	ie_info_t	more_data;
+	ie_info_t	sending_complete;
+	ie_info_t	congestion_level;
+	ie_info_t	fill1;
+	ie_info_ext_t	ext[8];
+} __attribute__((packed)) Q931_info_t;
 
 #define L3_EXTRA_SIZE	sizeof(Q931_info_t)
 
