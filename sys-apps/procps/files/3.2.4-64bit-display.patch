Index: proc/escape.c
===================================================================
RCS file: /cvsroot/procps/procps/proc/escape.c,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -r1.5 -r1.6
--- proc/escape.c	4 Nov 2004 20:50:59 -0000	1.5
+++ proc/escape.c	5 Jan 2005 21:11:21 -0000	1.6
@@ -159,7 +159,7 @@
 // escape an argv or environment string array
 //
 // bytes arg means sizeof(buf)
-int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t bytes, size_t *cells){
+int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t bytes, int *cells){
   size_t i = 0;
 
   for(;;){
Index: proc/escape.h
===================================================================
RCS file: /cvsroot/procps/procps/proc/escape.h,v
retrieving revision 1.4
retrieving revision 1.5
diff -u -r1.4 -r1.5
--- proc/escape.h	4 Nov 2004 20:50:59 -0000	1.4
+++ proc/escape.h	5 Jan 2005 21:11:21 -0000	1.5
@@ -12,7 +12,7 @@
 #define ESC_BRACKETS 0x2  // if using cmd, put '[' and ']' around it
 #define ESC_DEFUNCT  0x4  // mark zombies with " <defunct>"
 
-extern int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t n, size_t *cells);
+extern int escape_strlist(char *restrict dst, const char *restrict const *restrict src, size_t n, int *cells);
 extern int escape_str(char *restrict dst, const char *restrict src, int bufsize, int *maxcells);
 extern int escape_command(char *restrict const outbuf, const proc_t *restrict const pp, int bytes, int *cells, unsigned flags);
 
