diff -uNr portage-2.0.51.20.orig/bin/dispatch-conf portage-2.0.51.20/bin/dispatch-conf
--- portage-2.0.51.20.orig/bin/dispatch-conf	2005-04-17 18:01:55.000000000 +0900
+++ portage-2.0.51.20/bin/dispatch-conf	2005-04-26 20:21:29.000000000 +0900
@@ -186,7 +186,7 @@
                 elif c == 'm':
                     merged = SCRATCH_DIR+"/"+os.path.basename(conf['current'])
                     print
-                    os.system (conf['merge'] % (merged, conf ['current'], newconf))
+                    os.system (self.options['merge'] % (merged, conf ['current'], newconf))
                     shutil.copyfile(merged, mrgconf)
                     os.remove(merged)
                     mystat = os.lstat(conf['new'])
diff -uNr portage-2.0.51.20.orig/bin/ebuild.sh portage-2.0.51.20/bin/ebuild.sh
--- portage-2.0.51.20.orig/bin/ebuild.sh	2005-04-21 00:19:03.000000000 +0900
+++ portage-2.0.51.20/bin/ebuild.sh	2005-04-26 20:21:29.000000000 +0900
@@ -400,6 +400,8 @@
 }
 
 econf() {
+	local LOCAL_EXTRA_ECONF="${EXTRA_ECONF}"
+
 	if [ -z "${ECONF_SOURCE}" ]; then
 		ECONF_SOURCE="."
 	fi
@@ -415,11 +417,11 @@
 		fi
 
 		if [ ! -z "${CBUILD}" ]; then
-			EXTRA_ECONF="--build=${CBUILD} ${EXTRA_ECONF}"
+			LOCAL_EXTRA_ECONF="--build=${CBUILD} ${LOCAL_EXTRA_ECONF}"
 		fi
 
 		if [ ! -z "${CTARGET}" ]; then
-			EXTRA_ECONF="--target=${CTARGET} ${EXTRA_ECONF}"
+			LOCAL_EXTRA_ECONF="--target=${CTARGET} ${LOCAL_EXTRA_ECONF}"
 		fi
 		
 		# if the profile defines a location to install libs to aside from default, pass it on.
@@ -452,7 +454,7 @@
 				CONF_LIBDIR_RESULT="${CONF_LIBDIR_RESULT//\/\///}"
 			done
 
-			EXTRA_ECONF="--libdir=${CONF_LIBDIR_RESULT} ${EXTRA_ECONF}"
+			LOCAL_EXTRA_ECONF="--libdir=${CONF_LIBDIR_RESULT} ${LOCAL_EXTRA_ECONF}"
 		fi
 		
 		echo "${ECONF_SOURCE}/configure" \
@@ -463,7 +465,7 @@
 			--datadir=/usr/share \
 			--sysconfdir=/etc \
 			--localstatedir=/var/lib \
-			${EXTRA_ECONF} \
+			${LOCAL_EXTRA_ECONF} \
 			"$@"
 
 		if ! "${ECONF_SOURCE}/configure" \
@@ -474,7 +476,7 @@
 			--datadir=/usr/share \
 			--sysconfdir=/etc \
 			--localstatedir=/var/lib \
-			${EXTRA_ECONF} \
+			${LOCAL_EXTRA_ECONF} \
 			"$@" ; then
 
 			if [ -s config.log ]; then
@@ -1627,8 +1629,7 @@
 		addread "${CCACHE_DIR}"
 		addwrite "${CCACHE_DIR}"
 
-		[ -z "${CCACHE_SIZE}" ] && export CCACHE_SIZE="500M"
-		ccache -M ${CCACHE_SIZE} &> /dev/null
+		[ -z "${CCACHE_SIZE}" ] && ccache -M ${CCACHE_SIZE} &> /dev/null
 	fi
 
 	# XXX: Load up the helper functions.
diff -uNr portage-2.0.51.20.orig/bin/emerge portage-2.0.51.20/bin/emerge
--- portage-2.0.51.20.orig/bin/emerge	2005-04-23 15:26:45.000000000 +0900
+++ portage-2.0.51.20/bin/emerge	2005-04-26 20:21:29.000000000 +0900
@@ -119,10 +119,24 @@
 def sorted_versions(verlist):
 	ret = []
 	for ver in verlist:
+		verparts = ver.split("-")
+		if len(verparts) == 2:
+			verrev = int(verparts[1][1:])
+		else:
+			verrev = 0
 		x = 0
 		while x < len(ret):
-			if portage.vercmp(ret[x], ver) >= 0:
+			retparts = ret[x].split("-")
+			verdiff = portage.vercmp(retparts[0], verparts[0])
+			if verdiff > 0:
 				break
+			elif verdiff == 0:
+				if len(retparts) == 2:
+					retrev = int(retparts[1][1:])
+				else:
+					retrev = 0
+				if retrev >= verrev:
+					break
 			x += 1
 		ret.insert(x, ver)
 	return ret
diff -uNr portage-2.0.51.20.orig/bin/repoman portage-2.0.51.20/bin/repoman
--- portage-2.0.51.20.orig/bin/repoman	2005-04-23 16:26:04.000000000 +0900
+++ portage-2.0.51.20/bin/repoman	2005-04-26 20:21:29.000000000 +0900
@@ -1399,7 +1399,7 @@
 	mysigs=[]
 	if myheaders or myupdates or myremoved or mynew:
 		myfiles=myheaders+myupdates+myremoved+mynew
-		for x in range(len(myfiles), -1, -1):
+		for x in range(len(myfiles)-1, -1, -1):
 			if not os.path.exists(myfiles[x]) or not os.path.isdir(myfiles[x]):
 				del myfiles[x]
 		mydone=[]
diff -uNr portage-2.0.51.20.orig/pym/dispatch_conf.py portage-2.0.51.20/pym/dispatch_conf.py
--- portage-2.0.51.20.orig/pym/dispatch_conf.py	2005-04-17 18:01:55.000000000 +0900
+++ portage-2.0.51.20/pym/dispatch_conf.py	2005-04-26 20:21:29.000000000 +0900
@@ -33,7 +33,10 @@
 
     for key in mandatory_opts:
         if not opts.has_key(key):
-            print >> sys.stderr, 'dispatch-conf: Missing option "%s" in /etc/dispatch-conf.conf; fatal' % (key,)
+            if key == "merge":
+                opts["merge"] = "sdiff --suppress-common-lines --output=%s %s %s"
+            else:
+                print >> sys.stderr, 'dispatch-conf: Missing option "%s" in /etc/dispatch-conf.conf; fatal' % (key,)
 
     if not os.path.exists(opts['archive-dir']):
         os.mkdir(opts['archive-dir'])
diff -uNr portage-2.0.51.20.orig/pym/portage.py portage-2.0.51.20/pym/portage.py
--- portage-2.0.51.20.orig/pym/portage.py	2005-04-23 16:39:43.000000000 +0900
+++ portage-2.0.51.20/pym/portage.py	2005-04-26 20:21:29.000000000 +0900
@@ -4,7 +4,7 @@
 # $Header: /var/cvsroot/gentoo-x86/sys-apps/portage/files/2.0.51.20-fixes.patch,v 1.1 2005/04/26 11:58:51 jstubbs Exp $
 cvs_id_string="$Id: 2.0.51.20-fixes.patch,v 1.1 2005/04/26 11:58:51 jstubbs Exp $"[5:-2]
 
-VERSION="2.0.51.20"
+VERSION="2.0.51.20-r5"
 
 # ===========================================================================
 # START OF IMPORTS -- START OF IMPORTS -- START OF IMPORTS -- START OF IMPORT
@@ -1192,7 +1192,7 @@
 		if "maketest" in self.features and "test" not in self.features:
 			self.features.append("test")
 
-		if not portage_exec.sandbox_capable and "sandbox" in self.features or "usersandbox" in self.features:
+		if not portage_exec.sandbox_capable and ("sandbox" in self.features or "usersandbox" in self.features):
 			writemsg(red("!!! Problem with sandbox binary. Disabling...\n\n"))
 			if "sandbox" in self.features:
 				self.features.remove("sandbox")
@@ -2518,12 +2518,14 @@
 						spawn("chown "+str(portage_uid)+":"+str(portage_gid)+" "+mysettings["CCACHE_DIR"], mysettings, free=1)
 						spawn("chmod -R u+rw "+mysettings["CCACHE_DIR"], mysettings, free=1)
 						spawn("chmod -R g+rw "+mysettings["CCACHE_DIR"], mysettings, free=1)
+						spawn("find "+mysettings["CCACHE_DIR"]+" -type d -exec chmod g+s \{\} \;", mysettings, free=1)
 				else:
 					if mystat[stat.ST_UID] != 0 or ((mystat[stat.ST_MODE]&02070)!=02070):
 						spawn("chgrp -R "+str(portage_gid)+" "+mysettings["CCACHE_DIR"], mysettings, free=1)
 						spawn("chown 0:"+str(portage_gid)+" "+mysettings["CCACHE_DIR"], mysettings, free=1)
 						spawn("chmod -R u+rw "+mysettings["CCACHE_DIR"], mysettings, free=1)
 						spawn("chmod -R g+rw "+mysettings["CCACHE_DIR"], mysettings, free=1)
+						spawn("find "+mysettings["CCACHE_DIR"]+" -type d -exec chmod g+s \{\} \;", mysettings, free=1)
 		except OSError, e:
 			print "!!! File system problem. (ReadOnly? Out of space?)"
 			print "!!! Perhaps: rm -Rf",mysettings["BUILD_PREFIX"]
@@ -5661,6 +5663,7 @@
 			self.populate()
 		origcp=mylist[1]
 		newcp=mylist[2]
+		mynewcat=newcp.split("/")[0]
 		origmatches=self.dbapi.cp_list(origcp)
 		if not origmatches:
 			return
@@ -6652,10 +6655,23 @@
 						if self.isprotected(mydest):
 							# Use md5 of the target in ${D} if it exists...
 							if os.path.exists(os.path.normpath(srcroot+myabsto)):
-								mydest = new_protect_filename(myrealdest, newmd5=portage_checksum.perform_md5(srcroot+myabsto))
+								try:
+									mydest = new_protect_filename(myrealdest, newmd5=portage_checksum.perform_md5(srcroot+myabsto))
+								except IOError:
+									print "========================================"
+									print "mysrc",mysrc
+									print "mymode",mymode
+									print "myabsto",myabsto
+									print "myto",myto
+									print "myrealto",myrealto
+									print "mydest",mydest
+									print "mydmode",mydmode
+									print "========================================"
+									print "Please file the above in bug #71787"
+									sys.exit(1)
 							else:
 								mydest = new_protect_filename(myrealdest, newmd5=portage_checksum.perform_md5(myabsto))
-								
+
 				# if secondhand==None it means we're operating in "force" mode and should not create a second hand.
 				if (secondhand!=None) and (not os.path.exists(myrealto)):
 					# either the target directory doesn't exist yet or the target file doesn't exist -- or
