Index: pym/portage.py
===================================================================
--- pym/portage.py	(revision 2811)
+++ pym/portage.py	(working copy)
@@ -5826,7 +5826,8 @@
 				os.chown(pdir, 0, portage_gid)
 				os.chmod(pdir, 02770)
 
-			write_atomic(os.path.join(self.myroot,WORLD_FILE),"\n".join(newworldlist))
+			write_atomic(os.path.join(self.myroot, WORLD_FILE.lstrip(os.sep)),
+			"\n".join(newworldlist))
 
 		#do original postrm
 		if myebuildpath and os.path.exists(myebuildpath):
Index: bin/emerge
===================================================================
--- bin/emerge	(revision 2811)
+++ bin/emerge	(working copy)
@@ -1861,7 +1861,9 @@
 							myfavdict[myfavkey]=myfavkey
 							print ">>> Recording",myfavkey,"in \"world\" favorites file..."
 			if not "--fetchonly" in myopts:
-				portage.write_atomic(os.path.join(portage.root,portage.WORLD_FILE),"\n".join(myfavdict.values()))
+				portage.write_atomic(
+				os.path.join(portage.root, portage.WORLD_FILE.lstrip(os.sep)),
+				"\n".join(myfavdict.values()))
 
 			portage.mtimedb["resume"]["mergelist"]=mymergelist[:]
 
@@ -2032,7 +2034,9 @@
 						myfavdict[myfavkey]=myfavkey
 						print ">>> Recording",myfavkey,"in \"world\" favorites file..."
 						emergelog(" === ("+str(mergecount)+" of "+str(len(mymergelist))+") Updating world file ("+x[pkgindex]+")")
-						portage.write_atomic(os.path.join(myroot,portage.WORLD_FILE),"\n".join(myfavdict.values()))
+						portage.write_atomic(
+						os.path.join(myroot, portage.WORLD_FILE.lstrip(os.sep)),
+						"\n".join(myfavdict.values()))
 
 				if ("noclean" not in portage.features) and (x[0] != "binary"):
 					short_msg = "emerge: ("+str(mergecount)+" of "+str(len(mymergelist))+") "+x[pkgindex]+" Clean Post"
