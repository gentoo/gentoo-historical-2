=== modified file 'pym/portage.py'
--- pym/portage.py	
+++ pym/portage.py	
@@ -6379,6 +6344,41 @@
 		"Is this a regular package (does it have a CATEGORY file?  A dblink can be virtual *and* regular)"
 		return os.path.exists(self.dbdir+"/CATEGORY")
 
+class FetchlistDict(UserDict.DictMixin):
+	"""This provide a mapping interface to retrieve fetch lists.  It's used
+	to allow portage_manifest.Manifest to access fetch lists via a standard
+	mapping interface rather than use the dbapi directly."""
+	def __init__(self, pkgdir, settings):
+		"""pkgdir is a directory containing ebuilds and settings is passed into
+		portdbapi.getfetchlist for __getitem__ calls."""
+		self.pkgdir = pkgdir
+		self.cp = os.sep.join(pkgdir.split(os.sep)[-2:])
+		self.settings = settings
+		self.porttrees = [os.path.dirname(os.path.dirname(pkgdir))]
+	def __getitem__(self, pkg_key):
+		"""Returns the complete fetch list for a given package."""
+		global portdb # has the global auxdb caches
+		all_trees = portdb.porttrees
+		# This ensures that the fetchlist comes from the correct portage tree.
+		portdb.porttrees = self.porttrees
+		fetchlist = portdb.getfetchlist(pkg_key, mysettings=self.settings, all=True)[1]
+		# XXX The db is global so we restore it's trees back to their original state.
+		portdb.porttrees = all_trees
+		return fetchlist
+	def has_key(self, pkg_key):
+		"""Returns true if the given package exists within pkgdir."""
+		return pkg_key in self.keys()
+	def keys(self):
+		"""Returns keys for all packages within pkgdir"""
+		global portdb # has the global auxdb caches
+		all_trees = portdb.porttrees
+		# This ensures that the key list comes from the correct portage tree.
+		portdb.porttrees = self.porttrees
+		mykeys = portdb.cp_list(self.cp)
+		# XXX The db is global so we restore it's trees back to their original state.
+		portdb.porttrees = all_trees
+		return mykeys
+
 def cleanup_pkgmerge(mypkg,origdir):
 	shutil.rmtree(settings["PORTAGE_TMPDIR"]+"/binpkgs/"+mypkg)
 	if os.path.exists(settings["PORTAGE_TMPDIR"]+"/portage/"+mypkg+"/temp/environment"):
