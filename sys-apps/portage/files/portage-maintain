#!/usr/bin/env python

import os
import portage
import string
import sys

installed=[]
os.chdir("/var/db/pkg")
for x in os.listdir(os.getcwd()):
	for y in os.listdir(os.getcwd()+"/"+x):
		installed.append([x,y,portage.pkgsplit(y)])

current=[]
currentdict={}
mycurrent=open("/usr/portage/current-packages","r")
mylines=mycurrent.readlines()
for x in mylines:
	if x[:2]!="./":
		continue
	myline=string.split(string.strip(x)[2:-7],"/")
	print myline
	mysplit=portage.pkgsplit(myline[2])
	current.append([myline[0],myline[2],mysplit])
	currentdict[ myline[0]+"/"+myline[1]]=[myline[0]+"/"+myline[2],mysplit]
mycurrent.close()
del mylines
		
for x in installed:
	myebuild="/usr/portage/"+x[0]+"/"+x[2][0]+"/"+x[1]+".ebuild"
	if x not in current:
		if not currentdict.has_key(x[0]+"/"+x[2][0]):
			print "!!!",x[0]+"/"+x[2][0]
			print
			continue
		print "pkg",x[0]+"/"+x[1]+":"
		mydir="/usr/portage/"+x[0]+"/"+x[2][0]
		if not os.path.exists(mydir):
			print mydir,"does not exist."
			continue
		for y in os.listdir(mydir):
			if y[-7:] != ".ebuild":
				continue
			mye=portage.pkgsplit(y[:-7])
			isnew=portage.pkgcmp(mye,x[2])
			if isnew>0:
				outstring="new"
			elif isnew<0:
				outstring="old"
			else:
				outstring="cur"
			if not currentdict.has_key(x[0]+"/"+mye[0]):
				outstring="non !!!"
			else:
				if currentdict[x[0]+"/"+mye[0]][1]==mye:
					outstring=outstring+" >>>"
				else:
					outstring=outstring+"    "
			print "   ",outstring,y
		print
