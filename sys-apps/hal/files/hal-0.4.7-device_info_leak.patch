===================================================================
RCS file: /cvs/hal/hal/hald/device_info.c,v
retrieving revision 1.25
retrieving revision 1.26
diff -u -r1.25 -r1.26
--- device_info.c	2005/02/25 01:55:08	1.25
+++ device_info.c	2005/02/28 01:16:47	1.26
@@ -1218,15 +1218,22 @@
 	XML_Parser parser;
 	ParsingContext *parsing_context;
 
-	snprintf (buf, 511, "%s/%s", dir, filename);
+	file = NULL;
+	filebuf = NULL;
+	parser = NULL;
+	parsing_context = NULL;
+
+	device_matched = FALSE;
+
+	snprintf (buf, sizeof (buf), "%s/%s", dir, filename);
 
 	/*HAL_INFO(("analysing file %s", buf)); */
 
 	/* open file and read it into a buffer; it's a small file... */
 	file = fopen (buf, "r");
 	if (file == NULL) {
-		perror ("fopen");
-		return FALSE;
+		HAL_ERROR (("Could not open file %s", buf));
+		goto out;
 	}
 
 	fseek (file, 0L, SEEK_END);
@@ -1234,25 +1241,27 @@
 	rewind (file);
 	filebuf = (char *) malloc (filesize);
 	if (filebuf == NULL) {
-		perror ("malloc");
-		fclose (file);
-		return FALSE;
+		HAL_ERROR (("Could not allocate %d bytes for file %s", filesize, buf));
+		goto out;
 	}
 	fread (filebuf, sizeof (char), filesize, file);
 
-
-	/* ok, now parse the file (should probably reuse parser and say we are
-	 * not thread safe 
-	 */
-	parser = XML_ParserCreate (NULL);
-
 	/* initialize parsing context */
 	parsing_context =
 	    (ParsingContext *) malloc (sizeof (ParsingContext));
 	if (parsing_context == NULL) {
-		perror ("malloc");
-		return FALSE;
+		HAL_ERROR (("Could not allocate parsing context"));
+		goto out;
+	}
+
+	/* TODO: reuse parser
+	 */
+	parser = XML_ParserCreate (NULL);
+	if (parser == NULL) {
+		HAL_ERROR (("Could not allocate XML parser"));
+		goto out;
 	}
+
 	parsing_context->depth = 0;
 	parsing_context->device_matched = FALSE;
 	parsing_context->match_ok = TRUE;
@@ -1287,9 +1296,15 @@
 		device_matched = parsing_context->device_matched;
 	}
 
-	free (filebuf);
-	fclose (file);
-	free (parsing_context);
+out:
+	if (filebuf != NULL)
+		free (filebuf);
+	if (file != NULL)
+		fclose (file);
+	if (parser != NULL)
+		XML_ParserFree (parser);
+	if (parsing_context != NULL)
+		free (parsing_context);
 
 	return device_matched;
 }
