Index: sbin/runscript.sh
===================================================================
--- sbin/runscript.sh	(revision 1836)
+++ sbin/runscript.sh	(working copy)
@@ -612,17 +612,24 @@
 			&& rm -Rf "${svcdir}/scheduled/${myservice}"
 			
 		# Restart dependencies as well
-		if service_inactive "${myservice}" ; then
-			for x in $(dolisting "${svcdir}/snapshot/$$/") ; do
-				if service_stopped "${x##*/}" ; then
+		for x in $(dolisting "${svcdir}/snapshot/$$/") ; do
+			if service_stopped "${x##*/}" ; then
+				if service_inactive "${myservice}" \
+					|| service_wasinactive "${myservice}" ; then
 					svc_schedule_start "${myservice}" "${x##*/}"
+					ewarn "WARNING:  ${x##*/} is scheduled to start when ${myservice} has started."
+				else
+					start_service "${x##*/}"
 				fi
-			done
-		elif service_started "${myservice}" ; then
-			svc_start_scheduled
-		fi
+			fi
+		done
+		rm -rf "${svcdir}/snapshot/$$"
+	
+		service_started "${myservice}" && svc_start_scheduled
 
-		rm -rf "${svcdir}/snapshot/$$"
+		# Wait for services to come up
+		[[ ${RC_PARALLEL_STARTUP} == "yes" ]] && wait
+
 		svcrestart="no"
 		;;
 	pause)
Index: sbin/rc
===================================================================
--- sbin/rc	(revision 1836)
+++ sbin/rc	(working copy)
@@ -172,6 +172,18 @@
 	return 0
 }
 
+check_critical_services() {
+	local x
+
+	# Ensure that critical services are in the boot runlevel
+	for x in ${CRITICAL_SERVICES} ; do
+		if [[ ! -L "/etc/runlevels/${BOOTLEVEL}/${x}" ]] ; then
+			ewarn "WARNING:  Adding critical service ${x} to the ${BOOTLEVEL} runlevel"
+			ln -snf "/etc/init.d/${x}" "/etc/runlevels/${BOOTLEVEL}/${x}"
+		fi
+	done
+}
+
 # Save $1
 argv1="$1"
 
@@ -501,6 +513,9 @@
 
 	echo "sysinit" > "${svcdir}/softlevel"
 
+	# Ensure all critical services have are in the boot runlevel
+	check_critical_services
+
 	# Update the dependency cache
 	/sbin/depscan.sh -u
 
@@ -598,6 +613,10 @@
 	exit 0
 fi
 
+# Ensure that critical services are in the boot runlevel
+get_critical_services
+check_critical_services
+
 source "${svclib}/sh/rc-services.sh"
 [[ -e "${svcdir}/interactive" ]] \
 	&& svcinteractive="$(<${svcdir}/interactive)"
@@ -637,13 +656,13 @@
 
 splash "rc_init" "${argv1}"
 
+
 if [ "${SOFTLEVEL}" = "reboot" -o "${SOFTLEVEL}" = "shutdown" ]
 then
 	myscripts=
 
 elif [ "${SOFTLEVEL}" = "single" ]
 then
-	get_critical_services
 
 	myscripts="${CRITICAL_SERVICES}"
 	
