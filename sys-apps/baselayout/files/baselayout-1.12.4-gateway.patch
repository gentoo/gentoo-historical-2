Index: init.d/net.lo
===================================================================
--- init.d/net.lo	(revision 2188)
+++ init.d/net.lo	(working copy)
@@ -698,7 +698,7 @@
 	if [[ -z ${config} ]] ; then
 		interface_get_old_config "${iface}" || return 1
 		if [[ -n ${config} ]] ; then
-			ewarn "You are using a depreciated configuration syntax for ${iface}"
+			ewarn "You are using a deprecated configuration syntax for ${iface}"
 			ewarn "You are advised to read /etc/conf.d/net.example and upgrade it accordingly"
 		fi
 	fi
@@ -754,7 +754,7 @@
 		elif [[ ${conf[0]:0:1} == [[:digit:]] || ${conf[0]} == *:* ]] ; then
 			x="0"
 			if ! is_loopback "${iface}" ; then
-				if is_function arping_address_exists ; then
+				if [[ " ${MODULES[@]} " == *" arping "* ]] ; then
 					if arping_address_exists "${iface}" "${conf[0]}" ; then
 						eerror "${conf[0]%%/*} already taken on ${iface}"
 						x="1"
Index: lib/rcscripts/net/ifconfig.sh
===================================================================
--- lib/rcscripts/net/ifconfig.sh	(revision 2188)
+++ lib/rcscripts/net/ifconfig.sh	(working copy)
@@ -238,7 +238,7 @@
 		local -a aliases=() broadcasts=() netmasks=()
 
 		# Start with the primary interface
-		config=( ${!i} )
+		config=( "${!i}" )
 
 		# ..then add aliases
 		aliases="alias_${ifvars}"
@@ -258,6 +258,24 @@
 	# Add inet6 addresses to our config if required
 	[[ -n ${inet6} ]] && config=( "${config[@]}" "${inet6[@]}" )
 
+	# BACKWARD COMPATIBILITY: set the default gateway
+	if [[ ${gateway} == "${iface}/"* ]]; then
+		i="routes_${ifvar}[@]"
+		local -a routes=( "${!i}" )
+		
+		# We don't add the old gateway if one has been set in routes_IFACE
+		local gw=true
+		for i in "${routes[@]}"; do
+			[[ ${i} != *"default gw"* ]] && continue
+			gw=false
+			break
+		done
+	
+		if ${gw} ; then
+			eval "routes_${ifvar}=( \"default gw \${gateway#*/}\" \"\${routes[@]}\" )"
+		fi
+	fi
+
 	return 0
 }
 
@@ -311,7 +329,8 @@
 # fail, the routine should still return success to indicate that
 # net.eth0 was successful
 ifconfig_post_start() {
-	local iface="$1" ifvar=$(bash_variable "$1") routes= x= metric= mtu= cidr=
+	local iface="$1" ifvar=$(bash_variable "$1") x= metric= mtu= cidr=
+	local -a routes=()
 	metric="metric_${ifvar}"
 
 	ifconfig_exists "${iface}" || return 0
@@ -323,21 +342,9 @@
 	mtu="mtu_${ifvar}"
 	[[ -n ${!mtu} ]] && ifconfig "${iface}" mtu "${!mtu}"
 
-	routes="routes_${ifvar}[@]"
-	routes=( "${!routes}" )
+	x="routes_${ifvar}[@]"
+	routes=( "${!x}" )
 
-	# BACKWARD COMPATIBILITY: set the default gateway
-	if [[ ${gateway} == "${iface}/"* ]]; then
-		# We don't add the old gateway if one has been set in routes_IFACE
-		local gw=true
-		for x in "${routes[@]}"; do
-			[[ ${x} != *"default gw"* ]] && continue
-			gw=false
-			break
-		done
-		${gw} && routes=( "${routes[@]}" "default gw ${gateway#*/}" )
-	fi
-
 	[[ -z ${routes} ]] && return 0
 
 	# Add routes for this interface, might even include default gw
