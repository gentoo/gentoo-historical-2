CM="32;01"
CE="31;01"
NORMAL="\033[0m"
ENOCH_GOOD=$'\e[32m'
ENOCH_BAD=$'\e[34;01m'
ENOCH_NORMAL=$'\e[0m'
ENOCH_HILITE=$'\e[36;01m'
ENOCH_ENDCOL=$'\e[A\e[73G'
#don't change SVCDIR unless you know exactly what you are doing
SVCDIR=/var/lib/supervise
function eecho() {
	echo "${*}"
	if [ -n "$BOOTING" ]
	then
		echo "${*}" >&2
	fi
}

function eechon() {
	echo -n "${*}"
	if [ -n "$BOOTING" ]
	then
		echo -n "${*}" >&2
	fi
}

function ebegin() {
    eecho "${*}..."
    }

function eerror() {
    eecho ">>$ENOCH_BAD ${*}$ENOCH_NORMAL"
    }

function eend() {
    if [ $1 -eq 0 ]; then
        eecho "$ENOCH_ENDCOL$ENOCH_NORMAL[$ENOCH_GOOD  ok  $ENOCH_NORMAL]"
    else
        if [ $# -ge 2 ]; then
            shift
            eerror $*
            fi
        eecho "$ENOCH_ENDCOL$ENOCH_NORMAL[$ENOCH_BAD oops $ENOCH_NORMAL]"
    fi
    }


hasfunc() {
	local hasit
	hasit="no"
	local x
	for x in $opts
	do 
		if [ "$x" = "$1" ]
		then
			hasit="yes"
			break
		fi
	done
	echo $hasit
}

usage() {
	export IFS="|"
	myline="Usage: ${SERVICE} {$*"
	if [ "`hasfunc restart`" = "no" ]
	then
		myline="${myline}|restart"
	fi
	eerror "${myline}}"
}

doservice() {
	if [ "`/usr/bin/whoami`" != "root" ]; then
		eerror "You must be root to do this."
		exit 2
	fi
	local arg
	for arg in ${*}
	do
		if [ "`hasfunc ${arg}`" = "no" ]
		then
			case $arg in
				restart)
					stop
					sleep 2
					start
					;;
				*)
					usage $opts
					exit 1
					;;
			esac
		else
			eval ${arg}
		fi	
	done
}

function einfo() {
    eecho "$ENOCH_HILITE$1$ENOCH_NORMAL"
    }

function einfon() {
    eechon "$ENOCH_HILITE$1$ENOCH_NORMAL"
    }



