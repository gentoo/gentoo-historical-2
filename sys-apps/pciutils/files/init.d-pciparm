#!/sbin/runscript
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/sys-apps/pciutils/files/init.d-pciparm,v 1.2 2008/10/08 21:04:16 robbat2 Exp $

depend() {
	before bootmisc hdparm
	after localmount
}

checkconfig() {
	if [ ! -f /etc/conf.d/pciparm ]; then
		ewarn "/etc/conf.d/pciparm does not exist, skipping"
		return 1
	fi

	if [ -z "${PCIPARM_ALL}" -a -z "${PCIPARM_BUS_0}" -a  -z "${PCIPARM_VENDOR_0}" ]; then
		ewarn "None of PCIPARM_ALL, PCIPARM_BUS_* or PCIPARM_VENDOR_* set in /etc/conf.d/pciparm"
		return 1
	fi
}

do_setpci() {
	#ewarn "do_setpci: /usr/sbin/setpci $SETPCI_OPT $@"
	SWITCH=$1
	case "$SWITCH" in
		-d) DESC="(vendor)" ;;
		-s) DESC="(bus)" ;;
		*) eerror "Unknown setpci type!" ; return 1 ;;
	esac
	shift
	SPEC_ID=$1
	shift
	if [[ -z "$SPEC_ID" ]]; then
		eerror "Missing device specifier!"
		return 1
	fi
	if [[ -z "$@" ]]; then
		eerror "Missing configuration to set for $DESC $SPEC_ID!"
		return 1
	fi
	ebegin "Setting PCI params for $DESC $SPEC_ID to $@"
	/usr/sbin/setpci $SETPCI_OPT $SWITCH $SPEC_ID "$@"
	eend $?
	SWITCH=""
	SPEC_ID=""
}

do_setpci_array() {
	name=$1
	shift
	i=0
	while true; do
		eval opt="\$${name}_$i"
		[[ -z "$opt" ]] && break
		do_setpci "$*" $opt
		i=$(($i+1))
	done
}

start() {
	if get_bootparam "nopciparm" ; then
		ewarn "Skipping pciparm init as requested in kernel cmdline"
		return 0
	fi

	checkconfig || return 1
	
	[[ -n "$PCIPARM_ALL" ]] && \
		do_setpci -d '*:*' $PCIPARM_ALL

	do_setpci_array PCIPARM_BUS -s
	do_setpci_array PCIPARM_VENDOR -d
}
