diff -urpN module-init-tools-0.9.13-pre2/modprobe.c module-init-tools-0.9.13-pre2.devfsd/modprobe.c
--- module-init-tools-0.9.13-pre2/modprobe.c	2003-07-16 09:32:49.000000000 +0200
+++ module-init-tools-0.9.13-pre2.devfsd/modprobe.c	2003-08-10 20:55:15.281473776 +0200
@@ -52,6 +52,8 @@ struct module {
 
 /* Do we use syslog or stderr for messages? */
 static int log;
+/* Should we be totally quiet? */
+static int quiet = 0;
 
 static int getlen(const char *fmt, va_list ap)
 {
@@ -70,6 +72,9 @@ static void message(const char *prefix, 
 	va_list arglist;
 	int len;
 
+	if (quiet)
+		return;
+
 	va_start(arglist, fmt);
 	len = strlen(prefix) + getlen(fmt, arglist) + 1;
 	buf = malloc(len);
@@ -87,7 +92,7 @@ static void message(const char *prefix, 
 
 #define warn(fmt, ...) message("WARNING: ", fmt , ## __VA_ARGS__)
 #define fatal(fmt, ...) \
-	do { message("FATAL: ", fmt , ## __VA_ARGS__); exit(1); } while(0)
+	do { message("FATAL: ", fmt , ## __VA_ARGS__);  if (quiet) exit(0); else exit(1); } while(0)
 
 static void grammar(const char *cmd, const char *filename, unsigned int line)
 {
@@ -1098,6 +1103,7 @@ static struct option options[] = { { "ve
 				   { "showconfig", 0, NULL, 'c' },
 				   { "autoclean", 0, NULL, 'k' },
 				   { "quiet", 0, NULL, 'q' },
+				   { "really-quiet", 0, NULL, 'Q' },
 				   { "show", 0, NULL, 'n' },
 				   { "dry-run", 0, NULL, 'n' },
 				   { "syslog", 0, NULL, 's' },
@@ -1114,6 +1120,7 @@ static struct option options[] = { { "ve
 				   { NULL, 0, NULL, 0 } };
 
 #define DEFAULT_CONFIG "/etc/modprobe.conf"
+#define MODPROBE_DEVFSD_CONF "/etc/modprobe.devfs"
 
 int main(int argc, char *argv[])
 {
@@ -1153,7 +1160,7 @@ int main(int argc, char *argv[])
 		try_old_version("modprobe", argv);
 
 	uname(&buf);
-	while ((opt = getopt_long(argc, argv, "vVC:o:rknqsclt:aif", options, NULL)) != -1){
+	while ((opt = getopt_long(argc, argv, "vVC:o:rknqQsclt:aif", options, NULL)) != -1){
 		switch (opt) {
 		case 'v':
 			add_to_env_var("-v");
@@ -1206,6 +1213,10 @@ int main(int argc, char *argv[])
 			add_to_env_var("-q");
 			fail_if_already = 0;
 			break;
+		case 'Q':
+			add_to_env_var("-Q");
+			quiet = 1;
+			break;
 		case 's':
 			add_to_env_var("-s");
 			log = 1;
@@ -1266,7 +1277,7 @@ int main(int argc, char *argv[])
 		if (strcmp("/etc/modules.conf", config) == 0)
 			config = NULL;
 		else if (strcmp("/etc/modules.devfs", config) == 0)
-			config = "/etc/modprobe.devfs";
+			config = MODPROBE_DEVFSD_CONF;
 	}
 
 	/* -r only allows certain restricted options */
@@ -1303,6 +1314,25 @@ int main(int argc, char *argv[])
 			      argv[optind], 0,
 			      remove, &modoptions, &commands);
 
+	/* We want absolutely no output and return 0 if:
+	 *
+	 *   1) our config file is /etc/modprobe.devfs or /etc/modules.devfs
+	 *
+	 *   2) the module name starting with '/dev/'
+	 *
+	 *   3) we are trying to probe an existing alias.
+	 *
+	 * This is to mimic behaviour from modutils so that we do fill the logs
+	 * with errors if devfsd tries to probe aliases in modprobe.devfs */
+	if (!quiet && !dump_only && config
+		&& modname) { /* Are we trying to probe an alias? */
+		if (strncmp(argv[optind], "/dev/", 5) == 0
+			&& (strcmp(MODPROBE_DEVFSD_CONF, config) == 0)) {
+			add_to_env_var("-Q");
+			quiet = 1;
+		}
+	}
+
 	/* No luck?  Try symbol names, if starts with symbol:. */
 	if (!modname && strncmp(argv[optind], "symbol:", strlen("symbol:")==0))
 		modname = read_config(symfilename, 0, argv[optind], 0,
