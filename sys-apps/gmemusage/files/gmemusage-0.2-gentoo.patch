diff -ur gmemusage-0.2/gmemusage.h gmemusage-0.2-patched/gmemusage.h
--- gmemusage-0.2/gmemusage.h	1999-08-25 21:23:52.000000000 -0600
+++ gmemusage-0.2-patched/gmemusage.h	2005-09-16 02:43:19.000000000 -0600
@@ -30,8 +30,8 @@
 void list (void);
 void drawstring (int x, int y, char *str);
 void drawstringfixed (int x, int y, char *str);
-void drawstringright (int x, int y, char *str, float width);
-void drawstringcenter (int x, int y, char *str, float width);
+void drawstringright (int x, int y, const char *str, float width);
+void drawstringcenter (int x, int y, const char *str, float width);
 void refresh (int );
 void display (void);
 void mouseClick (int button, int state, int x, int y);
diff -ur gmemusage-0.2/util.c gmemusage-0.2-patched/util.c
--- gmemusage-0.2/util.c	1999-08-25 21:23:52.000000000 -0600
+++ gmemusage-0.2-patched/util.c	2005-09-16 02:43:55.000000000 -0600
@@ -26,11 +26,15 @@
  */
 
 #include <GL/glut.h>
+#include <string.h>
 
 #include "TexFont.h"
 
 #include "enum.h"
 #include "extern.h"
+#include <string.h>
+#include <stdlib.h>
+
 
 /*--------------------------------------------------------*/
 void drawstring (int x, int y, char *str)
@@ -89,17 +93,18 @@
 }
 
 /*--------------------------------------------------------*/
-void drawstringright (int x, int y, char *str, float width)
+void drawstringright (int x, int y, const char *str, float width)
 {
 	int		len, i;
 
 
 	len = strlen(str);
+	char *str_ = strdup(str);
 
 	switch(g_drawText)
 	{
 		case BitmapText:
-			glRasterPos2f(x+(width-glutBitmapLength(GLUT_BITMAP_HELVETICA_12, str)), y);
+			glRasterPos2f(x+(width-glutBitmapLength(GLUT_BITMAP_HELVETICA_12, (const unsigned char*)str)), y);
 			for (i=0; i<len; i++)
 				glutBitmapCharacter(GLUT_BITMAP_HELVETICA_12, str[i]);
 			break;
@@ -107,28 +112,31 @@
 			glEnable(GL_TEXTURE_2D);
 			glPushMatrix();
 				glTranslatef((float)x, (float)y, 0);
-				txfRenderStringRightJustify(helv_txf, str, len, width);
+				txfRenderStringRightJustify(helv_txf, str_, len, width);
 			glPopMatrix();
 			glDisable(GL_TEXTURE_2D);
 			break;
 		default:
 			break;
 	}
+
+	free(str_);
 }
 
 
 /*--------------------------------------------------------*/
-void drawstringcenter (int x, int y, char *str, float width)
+void drawstringcenter (int x, int y, const char *str, float width)
 {
 	int		len, i;
 
 
 	len = strlen(str);
+	char *str_ = strdup(str);
 	
 	switch(g_drawText)
 	{
 		case BitmapText:
-			glRasterPos2f(x+(width-glutBitmapLength(GLUT_BITMAP_HELVETICA_12, str))/2, y);
+			glRasterPos2f(x+(width-glutBitmapLength(GLUT_BITMAP_HELVETICA_12, (const unsigned char*)str))/2, y);
 			for (i=0; i<len; i++)
 				glutBitmapCharacter(GLUT_BITMAP_HELVETICA_12, str[i]);
 			break;
@@ -136,12 +144,14 @@
 			glEnable(GL_TEXTURE_2D);
 			glPushMatrix();
 				glTranslatef(x, y, 0);
-				txfRenderStringCenterJustify(helv_txf, str, len, width);
+				txfRenderStringCenterJustify(helv_txf, str_, len, width);
 			glPopMatrix();
 			glDisable(GL_TEXTURE_2D);
 			break;
 		default:
 			break;
 	}
+
+	free(str_);
 }

