Index: selinux/libsecure/src/kernel_stat.h
===================================================================
RCS file: /home/pal/CVS/selinux/libsecure/src/kernel_stat.h,v
retrieving revision 1.2
diff -u -r1.2 kernel_stat.h
--- selinux/libsecure/src/kernel_stat.h	27 Nov 2001 12:21:05 -0000	1.2
+++ selinux/libsecure/src/kernel_stat.h	22 Apr 2003 15:47:25 -0000
@@ -15,18 +15,21 @@
     unsigned long int st_size;
     unsigned long int st_blksize;
     unsigned long int st_blocks;
-    unsigned long int st_atime;
-    unsigned long int __unused1;
-#define _HAVE___UNUSED1
-    unsigned long int st_mtime;
-    unsigned long int __unused2;
-#define _HAVE___UNUSED2
-    unsigned long int st_ctime;
-    unsigned long int __unused3;
-#define _HAVE___UNUSED3
+    struct timespec st_atim;
+    struct timespec st_mtim;
+    struct timespec st_ctim;
     unsigned long int __unused4;
 #define _HAVE___UNUSED4
     unsigned long int __unused5;
 #define _HAVE___UNUSED5
   };
 
+#define _HAVE_STAT___UNUSED4
+#define _HAVE_STAT___UNUSED5
+#define _HAVE_STAT___PAD1
+#define _HAVE_STAT___PAD2
+#define _HAVE_STAT_NSEC
+#define _HAVE_STAT64___PAD1
+#define _HAVE_STAT64___PAD2
+#define _HAVE_STAT64___ST_INO
+#define _HAVE_STAT64_NSEC
Index: selinux/libsecure/src/xstat_conv.h
===================================================================
RCS file: /home/pal/CVS/selinux/libsecure/src/xstat_conv.h,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 xstat_conv.h
--- selinux/libsecure/src/xstat_conv.h	18 Jul 2001 20:38:06 -0000	1.1.1.1
+++ selinux/libsecure/src/xstat_conv.h	22 Apr 2003 15:40:53 -0000
@@ -1,21 +1,26 @@
 /* Convert between the kernel's `struct stat' format, and libc's.
-   Copyright (C) 1991, 1995, 1996, 1997 Free Software Foundation, Inc.
+   Copyright (C) 1991,1995,1996,1997,2000,2002 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Library General Public License as
-   published by the Free Software Foundation; either version 2 of the
-   License, or (at your option) any later version.
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
 
    The GNU C Library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Library General Public License for more details.
+   Lesser General Public License for more details.
 
-   You should have received a copy of the GNU Library General Public
-   License along with the GNU C Library; see the file COPYING.LIB.  If not,
-   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
-   Boston, MA 02111-1307, USA.  */
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#include <errno.h>
+#define __set_errno(x) (errno) = (x)
+
+#include <string.h>
 
 static inline int
 xstat_conv (int vers, struct kernel_stat *kbuf, void *ubuf)
@@ -35,7 +40,7 @@
 
 	/* Convert to current kernel version of `struct stat'.  */
 	buf->st_dev = kbuf->st_dev;
-#ifdef _HAVE___PAD1
+#ifdef _HAVE_STAT___PAD1
 	buf->__pad1 = 0;
 #endif
 	buf->st_ino = kbuf->st_ino;
@@ -44,35 +49,44 @@
 	buf->st_uid = kbuf->st_uid;
 	buf->st_gid = kbuf->st_gid;
 	buf->st_rdev = kbuf->st_rdev;
-#ifdef _HAVE___PAD2
+#ifdef _HAVE_STAT___PAD2
 	buf->__pad2 = 0;
 #endif
 	buf->st_size = kbuf->st_size;
 	buf->st_blksize = kbuf->st_blksize;
 	buf->st_blocks = kbuf->st_blocks;
+#ifdef _HAVE_STAT_NSEC
+	buf->st_atim.tv_sec = kbuf->st_atim.tv_sec;
+	buf->st_atim.tv_nsec = kbuf->st_atim.tv_nsec;
+	buf->st_mtim.tv_sec = kbuf->st_mtim.tv_sec;
+	buf->st_mtim.tv_nsec = kbuf->st_mtim.tv_nsec;
+	buf->st_ctim.tv_sec = kbuf->st_ctim.tv_sec;
+	buf->st_ctim.tv_nsec = kbuf->st_ctim.tv_nsec;
+#else
 	buf->st_atime = kbuf->st_atime;
-#ifdef _HAVE___UNUSED1
+	buf->st_mtime = kbuf->st_mtime;
+	buf->st_ctime = kbuf->st_ctime;
+#endif
+#ifdef _HAVE_STAT___UNUSED1
 	buf->__unused1 = 0;
 #endif
-	buf->st_mtime = kbuf->st_mtime;
-#ifdef _HAVE___UNUSED2
+#ifdef _HAVE_STAT___UNUSED2
 	buf->__unused2 = 0;
 #endif
-	buf->st_ctime = kbuf->st_ctime;
-#ifdef _HAVE___UNUSED3
+#ifdef _HAVE_STAT___UNUSED3
 	buf->__unused3 = 0;
 #endif
-#ifdef _HAVE___UNUSED4
+#ifdef _HAVE_STAT___UNUSED4
 	buf->__unused4 = 0;
 #endif
-#ifdef _HAVE___UNUSED5
+#ifdef _HAVE_STAT___UNUSED5
 	buf->__unused5 = 0;
 #endif
       }
       break;
 
     default:
-      errno = EINVAL;
+      __set_errno (EINVAL);
       return -1;
     }
 
Index: selinux/libsecure/src/arch/i386/fstat64_secure.c
===================================================================
RCS file: /home/pal/CVS/selinux/libsecure/src/arch/i386/fstat64_secure.c,v
retrieving revision 1.2
diff -u -r1.2 fstat64_secure.c
--- selinux/libsecure/src/arch/i386/fstat64_secure.c	2 Oct 2002 20:28:17 -0000	1.2
+++ selinux/libsecure/src/arch/i386/fstat64_secure.c	22 Apr 2003 15:52:45 -0000
@@ -2,26 +2,19 @@
 #include <fs_secure.h>
 #include <security.h>
 #include <errno.h>
-#include "kernel_stat64.h"
-#include "xstat64_conv.h"
 #include <flask_util.h>
 
 int fstat64_secure(unsigned int fd,
 		   struct stat64 *buf, 
 		   security_id_t *out_sid)
 {
-	struct kernel_stat64 kbuf;
 	unsigned long args[3];
-	long err;
 
 	if (is_flask_enabled()) {	
 		args[0] = (unsigned long)fd;
-		args[1] = (unsigned long)&kbuf;
+		args[1] = (unsigned long)buf;
 		args[2] = (unsigned long)out_sid;
-		err = security(SELINUX_MAGIC, SELINUXCALL_FSTAT64, args);
-		if (err)
-			return err;
-		return xstat64_conv(_STAT_VER_LINUX, &kbuf, buf);
+		return security(SELINUX_MAGIC, SELINUXCALL_FSTAT64, args);
 	} else {
 		/* Compatibility for the modified utilities
 		   until they are fixed. */
Index: selinux/libsecure/src/arch/i386/lstat64_secure.c
===================================================================
RCS file: /home/pal/CVS/selinux/libsecure/src/arch/i386/lstat64_secure.c,v
retrieving revision 1.2
diff -u -r1.2 lstat64_secure.c
--- selinux/libsecure/src/arch/i386/lstat64_secure.c	2 Oct 2002 20:28:17 -0000	1.2
+++ selinux/libsecure/src/arch/i386/lstat64_secure.c	22 Apr 2003 15:53:12 -0000
@@ -2,26 +2,19 @@
 #include <fs_secure.h>
 #include <security.h>
 #include <errno.h>
-#include "kernel_stat64.h"
-#include "xstat64_conv.h"
 #include <flask_util.h>
 
 int lstat64_secure(const char *pathname, 
 		   struct stat64 *buf, 
 		   security_id_t *out_sid)
 {
-	struct kernel_stat64 kbuf;
 	unsigned long args[3];
-	int err;
 	
 	if (is_flask_enabled()) {
 		args[0] = (unsigned long)pathname;
-		args[1] = (unsigned long)&kbuf;
+		args[1] = (unsigned long)buf;
 		args[2] = (unsigned long)out_sid;
-		err = security(SELINUX_MAGIC, SELINUXCALL_LSTAT64, args);
-		if (err)
-			return err; 
-		return xstat64_conv(_STAT_VER_LINUX, &kbuf, buf);
+		return security(SELINUX_MAGIC, SELINUXCALL_LSTAT64, args);
 	} else {
 		/* Compatibility for the modified utilities
 		   until they are fixed. */
Index: selinux/libsecure/src/arch/i386/stat64_secure.c
===================================================================
RCS file: /home/pal/CVS/selinux/libsecure/src/arch/i386/stat64_secure.c,v
retrieving revision 1.2
diff -u -r1.2 stat64_secure.c
--- selinux/libsecure/src/arch/i386/stat64_secure.c	2 Oct 2002 20:28:17 -0000	1.2
+++ selinux/libsecure/src/arch/i386/stat64_secure.c	22 Apr 2003 15:52:50 -0000
@@ -2,26 +2,19 @@
 #include <fs_secure.h>
 #include <security.h>
 #include <errno.h>
-#include "kernel_stat64.h"
-#include "xstat64_conv.h"
 #include <flask_util.h>
 
 int stat64_secure(const char *pathname, 
 		  struct stat64 *buf, 
 		  security_id_t *out_sid)
 {
-	struct kernel_stat64 kbuf;
 	unsigned long args[3];
-	long err;
 
 	if (is_flask_enabled()) {
 		args[0] = (unsigned long)pathname;
-		args[1] = (unsigned long)&kbuf;
+		args[1] = (unsigned long)buf;
 		args[2] = (unsigned long)out_sid;
-		err = security(SELINUX_MAGIC, SELINUXCALL_STAT64, args);
-		if (err)
-			return err;
-		return xstat64_conv(_STAT_VER_LINUX, &kbuf, buf);
+		return security(SELINUX_MAGIC, SELINUXCALL_STAT64, args);
 	} else {
 		/* Compatibility for the modified utilities
 		   until they are fixed. */
