diff -ur ./doc/sh-utils.texi ./doc/sh-utils.texi.new
--- ./doc/sh-utils.texi	Wed Oct 18 13:42:43 2000
+++ ./doc/sh-utils.texi.new	Wed Mar 20 20:15:13 2002
@@ -47,7 +47,6 @@
 * seq: (sh-utils)seq invocation.                Print numeric sequences
 * sleep: (sh-utils)sleep invocation.            Delay for a specified time.
 * stty: (sh-utils)stty invocation.              Print/change terminal settings.
-* su: (sh-utils)su invocation.                  Modify user and group id.
 * tee: (sh-utils)tee invocation.                Redirect to multiple files.
 * test: (sh-utils)test invocation.              File/string tests.
 * true: (sh-utils)true invocation.              Do nothing, successfully.
@@ -3026,8 +3025,7 @@
 @findex syslog
 @code{su} can optionally be compiled to use @code{syslog} to report
 failed, and optionally successful, @code{su} attempts.  (If the system
-supports @code{syslog}.)  However, GNU @code{su} does not check if the
-user is a member of the @code{wheel} group; see below.
+supports @code{syslog}.)  
 
 The program accepts the following options.  Also see @ref{Common options}.
 
@@ -3098,33 +3096,6 @@
 
 @end table
 
-@cindex wheel group, not supported
-@cindex group wheel, not supported
-@cindex fascism
-@heading Why GNU @code{su} does not support the @samp{wheel} group
-
-(This section is by Richard Stallman.)
-
-@cindex Twenex
-@cindex MIT AI lab
-Sometimes a few of the users try to hold total power over all the
-rest.  For example, in 1984, a few users at the MIT AI lab decided to
-seize power by changing the operator password on the Twenex system and
-keeping it secret from everyone else.  (I was able to thwart this coup
-and give power back to the users by patching the kernel, but I
-wouldn't know how to do that in Unix.)
-
-However, occasionally the rulers do tell someone.  Under the usual
-@code{su} mechanism, once someone learns the root password who
-sympathizes with the ordinary users, he or she can tell the rest.  The
-``wheel group'' feature would make this impossible, and thus cement the
-power of the rulers.
-
-I'm on the side of the masses, not that of the rulers.  If you are
-used to supporting the bosses and sysadmins in whatever they do, you
-might find this idea strange at first.
-
-
 @node Delaying
 @chapter Delaying
 
diff -ur ./src/uname.c ./src/uname.c.new
--- ./src/uname.c	Sat May  6 07:17:53 2000
+++ ./src/uname.c.new	Wed Mar 20 20:15:43 2002
@@ -48,6 +48,7 @@
 #define AUTHORS "David MacKenzie"
 
 static void print_element PARAMS ((unsigned int mask, char *element));
+void __sysinfo_processor_type(char*);
 
 /* Values that are bitwise or'd into `toprint'. */
 /* Operating system name. */
@@ -118,7 +119,7 @@
 {
   struct utsname name;
   int c;
-  char processor[256];
+  char processor[BUFSIZ];
 
   program_name = argv[0];
   setlocale (LC_ALL, "");
@@ -183,12 +184,7 @@
   if (uname (&name) == -1)
     error (1, errno, _("cannot get system name"));
 
-#if defined (HAVE_SYSINFO) && defined (SI_ARCHITECTURE)
-  if (sysinfo (SI_ARCHITECTURE, processor, sizeof (processor)) == -1)
-    error (1, errno, _("cannot get processor type"));
-#else
-  strcpy (processor, "unknown");
-#endif
+  __sysinfo_processor_type(processor);
 
   print_element (PRINT_SYSNAME, name.sysname);
   print_element (PRINT_NODENAME, name.nodename);
@@ -213,3 +209,25 @@
       printf ("%s%c", element, toprint ? ' ' : '\n');
     }
 }
+
+
+/* Carlos E. Gorges
+return vendor_id from proc cpuinfo
+*/
+
+void
+__sysinfo_processor_type (char* proc_info) {
+	FILE *ffd;
+	char temp_string[BUFSIZ],final_string[BUFSIZ]="unknown";
+	
+	if ((ffd=fopen("/proc/cpuinfo", "r") )!=NULL) {
+		while ( fscanf(ffd, "%s :", temp_string) != EOF)
+			if (!(strcmp(temp_string, "vendor_id"))) {
+					fscanf(ffd, "%s", final_string);
+					break;
+			}
+		fclose(ffd);
+	}
+	strncpy(proc_info,final_string,BUFSIZ);
+}
+
