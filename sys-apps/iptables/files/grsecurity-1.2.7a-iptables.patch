diff -urN iptables-1.2.7a/extensions/Makefile iptables-1.2.7a-new/extensions/Makefile
--- iptables-1.2.7a/extensions/Makefile	2002-08-09 03:44:10.000000000 -0400
+++ iptables-1.2.7a-new/extensions/Makefile	2002-09-09 12:52:50.000000000 -0400
@@ -1,6 +1,6 @@
 #! /usr/bin/make
 
-PF_EXT_SLIB:=ah conntrack dscp ecn esp helper icmp length limit mac mark multiport owner pkttype standard state tcp tcpmss tos ttl udp unclean DNAT DSCP ECN LOG MARK MASQUERADE MIRROR REDIRECT REJECT SAME SNAT TCPMSS TOS ULOG
+PF_EXT_SLIB:=ah conntrack dscp ecn esp helper icmp length limit mac mark multiport owner pkttype standard state tcp tcpmss tos ttl udp stealth unclean DNAT DSCP ECN LOG MARK MASQUERADE MIRROR REDIRECT REJECT SAME SNAT TCPMSS TOS ULOG
 PF6_EXT_SLIB:=eui64 icmpv6 length limit mac mark multiport owner standard tcp udp LOG MARK
 
 # The following may not be present, but compile them anyway.
diff -urN iptables-1.2.7a/extensions/libipt_stealth.c iptables-1.2.7a-new/extensions/libipt_stealth.c
--- iptables-1.2.7a/extensions/libipt_stealth.c	1969-12-31 19:00:00.000000000 -0500
+++ iptables-1.2.7a-new/extensions/libipt_stealth.c	2002-09-10 16:36:24.000000000 -0400
@@ -0,0 +1,64 @@
+/* Shared library add-on to iptables to add stealth support.
+ * Copyright (C) 2002 Brad Spengler  <spender@grsecurity.net>
+ * This netfilter module is licensed under the GNU GPL.
+ */
+
+#include <stdio.h>
+#include <netdb.h>
+#include <stdlib.h>
+#include <getopt.h>
+#include <iptables.h>
+
+/* Function which prints out usage message. */
+static void
+help(void)
+{
+	printf("stealth v%s takes no options\n\n", IPTABLES_VERSION);
+}
+
+static struct option opts[] = {
+	{0}
+};
+
+/* Initialize the match. */
+static void
+init(struct ipt_entry_match *m, unsigned int *nfcache)
+{
+	*nfcache |= NFC_UNKNOWN;
+}
+
+static int
+parse(int c, char **argv, int invert, unsigned int *flags,
+	const struct ipt_entry *entry,
+	unsigned int *nfcache,
+	struct ipt_entry_match **match)
+{
+	return 0;
+}
+
+static void
+final_check(unsigned int flags)
+{
+	return;
+}
+
+static
+struct iptables_match stealth = {
+	NULL,
+	"stealth",
+	IPTABLES_VERSION,
+	IPT_ALIGN(0),
+	IPT_ALIGN(0),
+	&help,
+	&init, 
+	&parse,
+	&final_check,
+	NULL,
+	NULL,
+	opts  
+};
+
+void _init(void)
+{
+	register_match(&stealth);
+}
