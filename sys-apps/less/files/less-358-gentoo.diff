--- command.c~	Thu Nov 15 14:46:39 2001
+++ command.c	Thu Nov 15 14:47:42 2001
@@ -356,7 +356,7 @@
 			 * If so, display the complete name and stop 
 			 * accepting chars until user hits RETURN.
 			 */
-			struct option *o;
+			struct option2 *o;
 			char *oname;
 			int lc;
 
--- funcs.h~	Sun Jul  9 00:28:04 2000
+++ funcs.h	Thu Nov 15 14:49:19 2001
@@ -186,8 +186,8 @@
 	public void nopendopt ();
 	public int getnum ();
 	public void init_option ();
-	public struct option * findopt ();
-	public struct option * findopt_name ();
+	public struct option2 * findopt ();
+	public struct option2 * findopt_name ();
 	public int iread ();
 	public void intread ();
 	public long get_time ();
--- option.c~	Sun Jul  9 00:26:47 2000
+++ option.c	Thu Nov 15 14:48:09 2001
@@ -21,7 +21,7 @@
 #include "less.h"
 #include "option.h"
 
-static struct option *pendopt;
+static struct option2 *pendopt;
 public int plusoption = FALSE;
 
 static char *propt();
@@ -39,7 +39,7 @@
 scan_option(s)
 	char *s;
 {
-	register struct option *o;
+	register struct option2 *o;
 	register int optc;
 	char *optname;
 	char *printopt;
@@ -259,7 +259,7 @@
 	char *s;
 	int how_toggle;
 {
-	register struct option *o;
+	register struct option2 *o;
 	register int num;
 	int no_prompt;
 	int err;
@@ -479,7 +479,7 @@
 single_char_option(c)
 	int c;
 {
-	register struct option *o;
+	register struct option2 *o;
 
 	o = findopt(c);
 	if (o == NULL)
@@ -495,7 +495,7 @@
 opt_prompt(c)
 	int c;
 {
-	register struct option *o;
+	register struct option2 *o;
 
 	o = findopt(c);
 	if (o == NULL || (o->otype & (STRING|NUMBER)) == 0)
--- option.h~	Sun Jul  9 00:26:47 2000
+++ option.h	Thu Nov 15 14:46:53 2001
@@ -49,7 +49,7 @@
 	struct optname *onext;  /* List of synonymous option names */
 };
 
-struct option
+struct option2
 {
 	char oletter;		/* The controlling letter (a-z) */
 	struct optname *onames; /* Long (GNU-style) option name */
--- opttbl.c~	Sun Jul  9 00:26:47 2000
+++ opttbl.c	Thu Nov 15 14:48:56 2001
@@ -107,7 +107,7 @@
 /*
  * Table of all options and their semantics.
  */
-static struct option option[] =
+static struct option2 option[] =
 {
 	{ 'a', &a_optname,
 		BOOL, OPT_OFF, &how_search, NULL,
@@ -340,7 +340,7 @@
 	public void
 init_option()
 {
-	register struct option *o;
+	register struct option2 *o;
 
 	for (o = option;  o->oletter != '\0';  o++)
 	{
@@ -355,11 +355,11 @@
 /*
  * Find an option in the option table, given its option letter.
  */
-	public struct option *
+	public struct option2 *
 findopt(c)
 	int c;
 {
-	register struct option *o;
+	register struct option2 *o;
 
 	for (o = option;  o->oletter != '\0';  o++)
 	{
@@ -377,18 +377,18 @@
  * is updated to point after the matched name.
  * p_oname if non-NULL is set to point to the full option name.
  */
-	public struct option *
+	public struct option2 *
 findopt_name(p_optname, p_oname, p_err)
 	char **p_optname;
 	char **p_oname;
 	int *p_err;
 {
 	char *optname = *p_optname;
-	register struct option *o;
+	register struct option2 *o;
 	register struct optname *oname;
 	register int len;
 	int uppercase;
-	struct option *maxo = NULL;
+	struct option2 *maxo = NULL;
 	struct optname *maxoname = NULL;
 	int maxlen = 0;
 	int ambig = 0;
