--- media/base/yuv_row_posix.cc.orig	2010-08-12 19:17:00.000000000 +0200
+++ media/base/yuv_row_posix.cc	2010-08-12 19:19:55.000000000 +0200
@@ -271,6 +271,7 @@
                               int width);
 
   asm(
+  ".text\n"
   ".global FastConvertYUVToRGB32Row\n"
 "FastConvertYUVToRGB32Row:\n"
   "pusha\n"
@@ -331,6 +332,7 @@
                         int source_dx);
 
   asm(
+  ".text\n"
   ".global ScaleYUVToRGB32Row\n"
 "ScaleYUVToRGB32Row:\n"
   "pusha\n"
@@ -405,6 +407,7 @@
                               int source_dx);
 
   asm(
+  ".text\n"
   ".global LinearScaleYUVToRGB32Row\n"
 "LinearScaleYUVToRGB32Row:\n"
   "pusha\n"
@@ -517,6 +520,7 @@
                                     int width,
                                     int16 *kCoefficientsRgbY);
   __asm__(
+  ".text\n"
 "_PICConvertYUVToRGB32Row:\n"
   "pusha\n"
   "mov    0x24(%esp),%edx\n"
@@ -586,6 +590,7 @@
                                int16 *kCoefficientsRgbY);
 
   __asm__(
+  ".text\n"
 "_PICScaleYUVToRGB32Row:\n"
   "pusha\n"
   "mov    0x24(%esp),%edx\n"
@@ -671,6 +676,7 @@
                                  int16 *kCoefficientsRgbY);
 
   asm(
+  ".text\n"
 "_PICLinearScaleYUVToRGB32Row:\n"
   "pusha\n"
   "mov    0x24(%esp),%edx\n"
@@ -824,29 +830,6 @@
                                         (packuswb(a) << 24);
 }
 
-#if TEST_MMX_YUV
-static inline void YuvPixel(uint8 y,
-                            uint8 u,
-                            uint8 v,
-                            uint8* rgb_buf) {
-
-  __asm {
-    movzx     eax, u
-    movq      mm0, [kCoefficientsRgbY+2048 + 8 * eax]
-    movzx     eax, v
-    paddsw    mm0, [kCoefficientsRgbY+4096 + 8 * eax]
-    movzx     eax, y
-    movq      mm1, [kCoefficientsRgbY + 8 * eax]
-    paddsw    mm1, mm0
-    psraw     mm1, 6
-    packuswb  mm1, mm1
-    mov       eax, rgb_buf
-    movd      [eax], mm1
-    emms
-  }
-}
-#endif
-
 void FastConvertYUVToRGB32Row(const uint8* y_buf,
                               const uint8* u_buf,
                               const uint8* v_buf,
