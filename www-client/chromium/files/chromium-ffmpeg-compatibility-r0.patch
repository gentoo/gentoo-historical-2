--- media/filters/ffmpeg_glue.cc.orig	2010-08-05 15:27:11.000000000 +0200
+++ media/filters/ffmpeg_glue.cc	2010-08-05 15:27:25.000000000 +0200
@@ -134,7 +134,7 @@
 
   // Register our protocol glue code with FFmpeg.
   avcodec_init();
-  av_register_protocol2(&kFFmpegURLProtocol, sizeof(kFFmpegURLProtocol));
+  av_register_protocol(&kFFmpegURLProtocol);
   av_lockmgr_register(&LockManagerOperation);
 
   // Now register the rest of FFmpeg.
--- third_party/ffmpeg/ffmpeg.gyp.orig	2010-08-05 18:25:34.000000000 +0200
+++ third_party/ffmpeg/ffmpeg.gyp	2010-08-05 18:29:12.000000000 +0200
@@ -836,10 +836,20 @@
               'cflags': [
                 '<!@(pkg-config --cflags libavcodec libavformat libavutil)',
               ],
+              'link_settings': {
+                'libraries': [
+                  '<!@(pkg-config --libs libavcodec libavformat libavutil)',
+                ],
+              },
               'direct_dependent_settings': {
                 'cflags': [
                   '<!@(pkg-config --cflags libavcodec libavformat libavutil)',
                 ],
+                'link_settings': {
+                  'libraries': [
+                    '<!@(pkg-config --libs libavcodec libavformat libavutil)',
+                  ],
+                },
               },
             }, {  # else use_system_ffmpeg==0, add local copy to include path
               'include_dirs': [
--- media/base/media_posix.cc.orig	2010-08-06 02:17:43.000000000 +0200
+++ media/base/media_posix.cc	2010-08-06 02:18:00.000000000 +0200
@@ -72,20 +72,7 @@
 // Attempts to initialize the media library (loading DSOs, etc.).
 // Returns true if everything was successfully initialized, false otherwise.
 bool InitializeMediaLibrary(const FilePath& module_dir) {
-  // TODO(ajwong): We need error resolution.
-  tp_ffmpeg::StubPathMap paths;
-  for (int i = 0; i < static_cast<int>(tp_ffmpeg::kNumStubModules); ++i) {
-    tp_ffmpeg::StubModules module = static_cast<tp_ffmpeg::StubModules>(i);
-
-    // Add the sumo library first so it takes precedence.
-    paths[module].push_back(module_dir.Append(sumo_name).value());
-
-    // Add the more specific FFmpeg library name.
-    FilePath path = module_dir.Append(GetDSOName(module));
-    paths[module].push_back(path.value());
-  }
-
-  return tp_ffmpeg::InitializeStubs(paths);
+  return true;
 }
 
 #if defined(OS_LINUX)
