--- net/proxy/proxy_config_service_linux.cc.orig	2010-11-07 15:14:52.000000000 +0000
+++ net/proxy/proxy_config_service_linux.cc	2010-11-07 15:21:16.000000000 +0000
@@ -6,7 +6,9 @@
 
 #include <errno.h>
 #include <fcntl.h>
+#if defined(USE_GCONF)
 #include <gconf/gconf-client.h>
+#endif
 #include <limits.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -185,6 +187,7 @@
 
 const int kDebounceTimeoutMilliseconds = 250;
 
+#if defined(USE_GCONF)
 // This is the "real" gconf version that actually uses gconf.
 class GConfSettingGetterImplGConf
     : public ProxyConfigServiceLinux::GConfSettingGetter {
@@ -419,6 +422,7 @@
 
   DISALLOW_COPY_AND_ASSIGN(GConfSettingGetterImplGConf);
 };
+#endif  // defined(USE_GCONF)
 
 // This is the KDE version that reads kioslaverc and simulates gconf.
 // Doing this allows the main Delegate code, as well as the unit tests
@@ -1064,7 +1068,9 @@
   // Figure out which GConfSettingGetterImpl to use, if any.
   switch (base::nix::GetDesktopEnvironment(env_var_getter)) {
     case base::nix::DESKTOP_ENVIRONMENT_GNOME:
+#if defined(USE_GCONF)
       gconf_getter_.reset(new GConfSettingGetterImplGConf());
+#endif
       break;
     case base::nix::DESKTOP_ENVIRONMENT_KDE3:
     case base::nix::DESKTOP_ENVIRONMENT_KDE4:
--- chrome/browser/gtk/browser_titlebar.cc.orig	2010-11-07 15:55:54.000000000 +0000
+++ chrome/browser/gtk/browser_titlebar.cc	2010-11-07 15:57:39.000000000 +0000
@@ -23,7 +23,9 @@
 #include "chrome/browser/gtk/accelerators_gtk.h"
 #include "chrome/browser/gtk/browser_window_gtk.h"
 #include "chrome/browser/gtk/custom_button.h"
+#if defined(USE_GCONF)
 #include "chrome/browser/gtk/gconf_titlebar_listener.h"
+#endif
 #include "chrome/browser/gtk/gtk_theme_provider.h"
 #include "chrome/browser/gtk/gtk_util.h"
 #include "chrome/browser/gtk/menu_gtk.h"
@@ -299,9 +301,13 @@
   gtk_box_pack_end(GTK_BOX(container_hbox_), titlebar_right_buttons_vbox_,
                    FALSE, FALSE, 0);
 
+#if defined(USE_GCONF)
   // Either read the gconf database and register for updates (on GNOME), or use
   // the default value (anywhere else).
   Singleton<GConfTitlebarListener>()->SetTitlebarButtons(this);
+#else
+  BuildButtons(":minimize,maximize,close");
+#endif
 
   // We use an alignment to control the titlebar height.
   titlebar_alignment_ = gtk_alignment_new(0.0, 0.0, 1.0, 1.0);
@@ -363,7 +369,9 @@
 
 BrowserTitlebar::~BrowserTitlebar() {
   ActiveWindowWatcherX::RemoveObserver(this);
+#if defined(USE_GCONF)
   Singleton<GConfTitlebarListener>()->RemoveObserver(this);
+#endif
 }
 
 void BrowserTitlebar::BuildButtons(const std::string& button_string) {
--- build/common.gypi.orig	2010-11-07 14:55:25.000000000 +0000
+++ build/common.gypi	2010-11-07 14:57:31.000000000 +0000
@@ -314,6 +314,9 @@
     # whether to compile in the sources for the GPU plugin / process.
     'enable_gpu%': 1,
 
+    # Use GConf, the GNOME configuration system.
+    'use_gconf%': 1,
+
     # Use OpenSSL instead of NSS. Currently in development.
     'use_openssl%': 0,
 
--- build/linux/system.gyp.orig	2010-11-07 16:34:57.000000000 +0000
+++ build/linux/system.gyp	2010-11-07 16:35:55.000000000 +0000
@@ -188,11 +188,14 @@
       'target_name': 'gconf',
       'type': 'settings',
       'conditions': [
-        ['_toolset=="target"', {
+        ['use_gconf==1 and _toolset=="target"', {
           'direct_dependent_settings': {
             'cflags': [
               '<!@(<(pkg-config) --cflags gconf-2.0)',
             ],
+            'defines': [
+              'USE_GCONF',
+            ],
           },
           'link_settings': {
             'ldflags': [
--- chrome/chrome_browser.gypi.orig	2010-11-07 15:53:31.000000000 +0000
+++ chrome/chrome_browser.gypi	2010-11-07 15:55:04.000000000 +0000
@@ -3393,6 +3393,12 @@
             ],
           },
         }],
+	['use_gconf==0', {
+	  'sources!': [
+            'browser/gtk/gconf_titlebar_listener.cc',
+            'browser/gtk/gconf_titlebar_listener.h',
+	  ],
+	}],
         ['use_gnome_keyring==0', {
           'sources!': [
             'browser/password_manager/native_backend_gnome_x.h',
