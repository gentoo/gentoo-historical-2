--- a/src/GridText.c
+++ b/src/GridText.c
@@ -124,8 +124,8 @@
 const char *checked_radio = "(*)";
 const char *unchecked_radio = "( )";
 
-static BOOLEAN underline_on = OFF;
-static BOOLEAN bold_on = OFF;
+static BOOLEAN underline_on = LOFF;
+static BOOLEAN bold_on = LOFF;
 
 #ifdef USE_SOURCE_CACHE
 int LYCacheSource = SOURCE_CACHE_NONE;
@@ -2406,7 +2406,7 @@
 		/*
 		 * Bold the link after incrementing nlinks.
 		 */
-		LYhighlight(OFF, (nlinks - 1), target);
+		LYhighlight(LOFF, (nlinks - 1), target);
 
 		display_flag = TRUE;
 
@@ -4018,27 +4018,27 @@
 	    if (ch == LY_UNDERLINE_START_CHAR) {
 		line->data[line->size++] = LY_UNDERLINE_START_CHAR;
 		line->data[line->size] = '\0';
-		underline_on = ON;
+		underline_on = LON;
 		if (!(dump_output_immediately && use_underscore))
 		    ctrl_chars_on_this_line++;
 		return;
 	    } else if (ch == LY_UNDERLINE_END_CHAR) {
 		line->data[line->size++] = LY_UNDERLINE_END_CHAR;
 		line->data[line->size] = '\0';
-		underline_on = OFF;
+		underline_on = LOFF;
 		if (!(dump_output_immediately && use_underscore))
 		    ctrl_chars_on_this_line++;
 		return;
 	    } else if (ch == LY_BOLD_START_CHAR) {
 		line->data[line->size++] = LY_BOLD_START_CHAR;
 		line->data[line->size] = '\0';
-		bold_on = ON;
+		bold_on = LON;
 		ctrl_chars_on_this_line++;
 		return;
 	    } else if (ch == LY_BOLD_END_CHAR) {
 		line->data[line->size++] = LY_BOLD_END_CHAR;
 		line->data[line->size] = '\0';
-		bold_on = OFF;
+		bold_on = LOFF;
 		ctrl_chars_on_this_line++;
 		return;
 	    } else if (ch == LY_SOFT_HYPHEN) {
--- a/src/LYCurses.c
+++ b/src/LYCurses.c
@@ -2928,7 +2928,7 @@
 			  int pending GCC_UNUSED)
 {
 #ifdef USE_COLOR_STYLE
-    LynxChangeStyle(flag == ON ? s_alink : s_a, ABS_OFF);
+    LynxChangeStyle(flag == LON ? s_alink : s_a, ABS_OFF);
 #else
     if (flag) {
 	lynx_stop_reverse();
--- a/src/LYLocal.c
+++ b/src/LYLocal.c
@@ -1597,7 +1597,7 @@
     if (nlinks > 0) {
 	LYmove(links[cur].ly, 2);
 	lynx_stop_reverse();
-	if (flag == ON) {
+	if (flag == LON) {
 	    LYaddch('+');
 	} else {
 	    LYaddch(' ');
@@ -1630,7 +1630,7 @@
 	s = t;
 	while ((name = (char *) HTList_nextObject(s)) != NULL) {
 	    if (!strcmp(links[i].lname, name)) {
-		tagflag(ON, i);
+		tagflag(LON, i);
 		break;
 	    }
 	}
--- a/src/LYMainLoop.c
+++ b/src/LYMainLoop.c
@@ -513,7 +513,7 @@
 	&& nextlink >= 0
 	&& nextlink < nlinks) {
 	if (curdoc.link >= 0 && curdoc.link < nlinks) {
-	    LYhighlight(OFF, curdoc.link, prev_target);
+	    LYhighlight(LOFF, curdoc.link, prev_target);
 	    result = TRUE;
 	}
 	curdoc.link = nextlink;
@@ -548,7 +548,7 @@
 static void set_curdoc_link_by_mouse(int nextlink)
 {
     if (set_curdoc_link(nextlink)) {
-	LYhighlight(ON, nextlink, prev_target);
+	LYhighlight(LON, nextlink, prev_target);
 	LYmsec_delay(20);
     }
 }
@@ -3574,7 +3574,7 @@
 	    newdoc.isHEAD = FALSE;
 	    newdoc.safe = FALSE;
 	    newdoc.internal_link = FALSE;
-	    LYhighlight(OFF, curdoc.link, prev_target);
+	    LYhighlight(LOFF, curdoc.link, prev_target);
 #ifdef DIRED_SUPPORT
 	    if (lynx_edit_mode) {
 		DIRED_UNCACHE_2;
@@ -3834,7 +3834,7 @@
 				 int real_c)
 {
     if (curdoc.link < nlinks - 1) {	/* next link */
-	LYhighlight(OFF, curdoc.link, prev_target);
+	LYhighlight(LOFF, curdoc.link, prev_target);
 #ifdef FASTTAB
 	/*
 	 * Move to different textarea if TAB in textarea.
@@ -4475,7 +4475,7 @@
 		    found = TRUE;
 		    HTList_removeObject(tagged, tagname);
 		    FREE(tagname);
-		    tagflag(OFF, curdoc.link);
+		    tagflag(LOFF, curdoc.link);
 		    break;
 		}
 	    }
@@ -4485,7 +4485,7 @@
 		tagname = NULL;
 		StrAllocCopy(tagname, links[curdoc.link].lname);
 		HTList_addObject(tagged, tagname);
-		tagflag(ON, curdoc.link);
+		tagflag(LON, curdoc.link);
 	    }
 	}
 	if (curdoc.link < nlinks - 1) {
@@ -6510,10 +6510,10 @@
 	     * Highlight current link, unless it is an active text input field.
 	     */
 	    if (!curlink_is_editable) {
-		LYhighlight(ON, curdoc.link, prev_target);
+		LYhighlight(LON, curdoc.link, prev_target);
 #ifndef INACTIVE_INPUT_STYLE_VH
 	    } else if (!textinput_activated) {
-		LYhighlight(ON, curdoc.link, prev_target);
+		LYhighlight(LON, curdoc.link, prev_target);
 #endif
 	    }
 	}
--- a/src/LYSearch.c
+++ b/src/LYSearch.c
@@ -336,7 +336,7 @@
 	    /*
 	     * Found in link, changed cur, we're done.
 	     */
-	    LYhighlight(OFF, oldcur, prev_target);
+	    LYhighlight(LOFF, oldcur, prev_target);
 	    return (TRUE);
 	}
     } else {
@@ -349,7 +349,7 @@
 	    /*
 	     * Found in link, changed cur, we're done.
 	     */
-	    LYhighlight(OFF, oldcur, prev_target);
+	    LYhighlight(LOFF, oldcur, prev_target);
 	    return (TRUE);
 	}
 
@@ -369,7 +369,7 @@
      */
     www_user_search((cur_doc->line + offset), cur_doc, prev_target, direction);
     if (cur_doc->link != oldcur) {
-	LYhighlight(OFF, oldcur, prev_target);
+	LYhighlight(LOFF, oldcur, prev_target);
 	return (TRUE);
     }
     return (BOOL) (www_search_result > 0);
--- a/src/LYUtils.c
+++ b/src/LYUtils.c
@@ -553,7 +553,7 @@
 		     * Start emphasis immediately if we are making the link
 		     * non-current.  -FM
 		     */
-		    if (flag != ON) {
+		    if (flag != LON) {
 			LYstartTargetEmphasis();
 			TargetEmphasisON = TRUE;
 			LYaddstr(tmp);
@@ -571,7 +571,7 @@
 		     * Start emphasis immediately if we are making the link
 		     * non-current.  -FM
 		     */
-		    if (flag != ON) {
+		    if (flag != LON) {
 			LYstartTargetEmphasis();
 			TargetEmphasisON = TRUE;
 			LYaddstr(tmp);
@@ -585,7 +585,7 @@
 		     * Start emphasis immediately if we are making the link
 		     * non-current.  -FM
 		     */
-		    if (flag != ON) {
+		    if (flag != LON) {
 			LYstartTargetEmphasis();
 			TargetEmphasisON = TRUE;
 			LYaddstr(tmp);
@@ -625,7 +625,7 @@
 			 * character of hightext if we are making the link
 			 * current.  -FM
 			 */
-			if (flag == ON && data[(itmp + 1)] == '\0') {
+			if (flag == LON && data[(itmp + 1)] == '\0') {
 			    LYstopTargetEmphasis();
 			    TargetEmphasisON = FALSE;
 			    LYGetYX(y, offset);
@@ -645,7 +645,7 @@
 			 * character of hightext if we are making the link
 			 * current.  -FM
 			 */
-			if (flag == ON && data[(itmp + 1)] == '\0') {
+			if (flag == LON && data[(itmp + 1)] == '\0') {
 			    LYstopTargetEmphasis();
 			    TargetEmphasisON = FALSE;
 			    LYGetYX(y, offset);
@@ -661,7 +661,7 @@
 			 * character of hightext if we are making the link
 			 * current.  -FM
 			 */
-			if (flag == ON && data[(itmp + 1)] == '\0') {
+			if (flag == LON && data[(itmp + 1)] == '\0') {
 			    LYstopTargetEmphasis();
 			    TargetEmphasisON = FALSE;
 			    LYGetYX(y, offset);
@@ -684,7 +684,7 @@
 		    TargetEmphasisON = FALSE;
 		}
 		LYGetYX(y, offset);
-		if (offset < (hoffset + (flag == ON ? (hLen - 1) : hLen))
+		if (offset < (hoffset + (flag == LON ? (hLen - 1) : hLen))
 		/*
 		 * See if we have another hit that starts within the
 		 * hightext.  -FM
@@ -705,7 +705,7 @@
 		 */
 		    && (HitOffset + offset) <
 		    (hoffset +
-		     (flag == ON ? (hLen - 1) : hLen))) {
+		     (flag == LON ? (hLen - 1) : hLen))) {
 		    /*
 		     * Set up the data and offset for the hit, and let the code
 		     * for within hightext hits handle it.  -FM
@@ -726,7 +726,7 @@
 	     * hightext, we are done.  Otherwise, move there and start
 	     * restoring the emphasis.  -FM
 	     */
-	    if ((Offset - offset) <= (flag == ON ? (hLen - 1) : hLen)) {
+	    if ((Offset - offset) <= (flag == LON ? (hLen - 1) : hLen)) {
 		data = SKIP_GLYPHS(utf_flag, data, Offset - offset);
 		if (utf_flag) {
 		    LYrefresh();
@@ -751,7 +751,7 @@
 		     * non-current, or we are making it current but this is not
 		     * the first or last character of the hightext.  -FM
 		     */
-		    if (flag != ON ||
+		    if (flag != LON ||
 			(offset > hoffset && data[itmp + 1] != '\0')) {
 			LYstartTargetEmphasis();
 			TargetEmphasisON = TRUE;
@@ -771,7 +771,7 @@
 		     * non-current, or we are making it current but this is not
 		     * the first or last character of the hightext.  -FM
 		     */
-		    if (flag != ON ||
+		    if (flag != LON ||
 			(offset > hoffset && data[itmp + 1] != '\0')) {
 			LYstartTargetEmphasis();
 			TargetEmphasisON = TRUE;
@@ -787,7 +787,7 @@
 		     * non-current, or we are making it current but this is not
 		     * the first or last character of the hightext.  -FM
 		     */
-		    if (flag != ON ||
+		    if (flag != LON ||
 			(offset > hoffset && data[itmp + 1] != '\0')) {
 			LYstartTargetEmphasis();
 			TargetEmphasisON = TRUE;
@@ -825,7 +825,7 @@
 			 * character of hightext if we are making the link
 			 * current.  -FM
 			 */
-			if (flag == ON && data[(itmp + 1)] == '\0') {
+			if (flag == LON && data[(itmp + 1)] == '\0') {
 			    LYstopTargetEmphasis();
 			    TargetEmphasisON = FALSE;
 			    LYGetYX(y, offset);
@@ -845,7 +845,7 @@
 			 * character of hightext if we are making the link
 			 * current.  -FM
 			 */
-			if (flag == ON && data[(itmp + 1)] == '\0') {
+			if (flag == LON && data[(itmp + 1)] == '\0') {
 			    LYstopTargetEmphasis();
 			    TargetEmphasisON = FALSE;
 			    LYGetYX(y, offset);
@@ -861,7 +861,7 @@
 			 * character of hightext if we are making the link
 			 * current.  -FM
 			 */
-			if (flag == ON && data[(itmp + 1)] == '\0') {
+			if (flag == LON && data[(itmp + 1)] == '\0') {
 			    LYstopTargetEmphasis();
 			    TargetEmphasisON = FALSE;
 			    LYGetYX(y, offset);
@@ -884,7 +884,7 @@
 		    TargetEmphasisON = FALSE;
 		}
 		LYGetYX(y, offset);
-		if (offset < (hoffset + (flag == ON ? (hLen - 1) : hLen))
+		if (offset < (hoffset + (flag == LON ? (hLen - 1) : hLen))
 		/*
 		 * See if we have another hit that starts within the
 		 * hightext.  -FM
@@ -904,7 +904,7 @@
 		 * last character, we are done.  -FM
 		 */
 		    && (HitOffset + offset) <
-		    (hoffset + (flag == ON ? (hLen - 1) : hLen))) {
+		    (hoffset + (flag == LON ? (hLen - 1) : hLen))) {
 		    /*
 		     * If the target extends beyond our buffer, emphasize
 		     * everything in the hightext starting at this hit.
@@ -945,7 +945,7 @@
 				 * last character of hightext if we are making
 				 * the link current.  -FM
 				 */
-				if (flag == ON && data[(itmp + 1)] == '\0') {
+				if (flag == LON && data[(itmp + 1)] == '\0') {
 				    LYstopTargetEmphasis();
 				    TargetEmphasisON = FALSE;
 				    LYGetYX(y, offset);
@@ -965,7 +965,7 @@
 				 * last character of hightext if we are making
 				 * the link current.  -FM
 				 */
-				if (flag == ON && data[(itmp + 1)] == '\0') {
+				if (flag == LON && data[(itmp + 1)] == '\0') {
 				    LYstopTargetEmphasis();
 				    TargetEmphasisON = FALSE;
 				} else {
@@ -979,7 +979,7 @@
 				 * last character of hightext if we are making
 				 * the link current.  -FM
 				 */
-				if (flag == ON && data[(itmp + 1)] == '\0') {
+				if (flag == LON && data[(itmp + 1)] == '\0') {
 				    LYstopTargetEmphasis();
 				    TargetEmphasisON = FALSE;
 				} else {
@@ -1025,7 +1025,7 @@
 	s = s_curedit;
 #endif
 
-    if (flag != ON) {
+    if (flag != LON) {
 	int x;
 
 	/*
@@ -1119,13 +1119,13 @@
 	    NONNULL(target)));
 
 #if defined(TEXTFIELDS_MAY_NEED_ACTIVATION) && defined(INACTIVE_INPUT_STYLE_VH)
-    if (flag == OFF)
+    if (flag == LOFF)
 	textinput_redrawn = FALSE;
 #endif
 
     if (nlinks > 0) {
 #ifdef USE_COLOR_STYLE
-	if (flag == ON || links[cur].type == WWW_FORM_LINK_TYPE) {
+	if (flag == LON || links[cur].type == WWW_FORM_LINK_TYPE) {
 	    LYmove(LYP + title_adjust, LXP);
 	    LynxChangeStyle(find_cached_style(cur, flag), STACK_ON);
 	}
@@ -1134,7 +1134,7 @@
 	    || LYGetHiliteStr(cur, 0) == NULL) {
 	    LYMoveToLink(cur, target, NULL,
 			 flag, links[cur].inUnderline, utf_flag);
-	    lynx_start_link_color(flag == ON, links[cur].inUnderline);
+	    lynx_start_link_color(flag == LON, links[cur].inUnderline);
 	} else {
 	    LYMoveToLink(cur, target, LYGetHiliteStr(cur, 0),
 			 flag, links[cur].inUnderline, utf_flag);
@@ -1162,7 +1162,7 @@
 		LYaddch('_');
 
 #ifdef USE_COLOR_STYLE
-	} else if (flag == OFF) {
+	} else if (flag == LOFF) {
 	    hl2_drawn = TRUE;
 	    redraw_lines_of_link(cur);
 	    CTRACE2(TRACE_STYLE,
@@ -1196,17 +1196,17 @@
 		int row = LYP + hi_count + title_adjust;
 
 		hi_offset = LYGetHilitePos(cur, hi_count);
-		lynx_stop_link_color(flag == ON, links[cur].inUnderline);
+		lynx_stop_link_color(flag == LON, links[cur].inUnderline);
 		LYmove(row, hi_offset);
 
 #ifdef USE_COLOR_STYLE
 		CTRACE2(TRACE_STYLE,
 			(tfp, "STYLE.highlight.line2: @(%d,%d), style=%d.\n",
 			 row, hi_offset,
-			 flag == ON ? s_alink : s_a));
-		LynxChangeStyle(flag == ON ? s_alink : s_a, ABS_ON);
+			 flag == LON ? s_alink : s_a));
+		LynxChangeStyle(flag == LON ? s_alink : s_a, ABS_ON);
 #else
-		lynx_start_link_color(flag == ON, links[cur].inUnderline);
+		lynx_start_link_color(flag == LON, links[cur].inUnderline);
 #endif
 
 		for (i = 0; (tmp[0] = hi_string[i]) != '\0'
@@ -1225,7 +1225,7 @@
 		    }
 		}
 	    }
-	    lynx_stop_link_color(flag == ON, links[cur].inUnderline);
+	    lynx_stop_link_color(flag == LON, links[cur].inUnderline);
 	}
 #ifdef SHOW_WHEREIS_TARGETS
 	for (hi_count = target1_drawn ? 1 : 0;
--- a/src/LYUtils.h
+++ b/src/LYUtils.h
@@ -522,8 +522,8 @@
 /*
  *  Miscellaneous.
  */
-#define ON      1
-#define OFF     0
+#define LON      1
+#define LOFF     0
 #define STREQ(a,b)    (strcmp(a,b) == 0)
 #define STRNEQ(a,b,c) (StrNCmp(a,b,c) == 0)
 
