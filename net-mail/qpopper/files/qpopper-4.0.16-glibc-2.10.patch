diff -ur qpopper4.0.16.orig/popper/popper.c qpopper4.0.16/popper/popper.c
--- qpopper4.0.16.orig/popper/popper.c	2009-01-10 02:28:26.000000000 +0200
+++ qpopper4.0.16/popper/popper.c	2009-08-07 13:42:40.000000000 +0300
@@ -31,7 +31,7 @@
  *             (thanks to Kyle McKay for the patch)
  *
  *  04/04/02 [rg]
- *           - getline() now clears out storage buffer when giving up
+ *           - get_line() now clears out storage buffer when giving up
  *             after discarding bytes.  Fixes looping DOS attack seen
  *             on some systems.
  *
@@ -41,7 +41,7 @@
  *
  *  06/01/01 [rg]
  *           - Added patch by Carles Xavier Munyoz to fix erroneous
- *             scanning for \n in getline().
+ *             scanning for \n in get_line().
  *
  *  01/15/01 [rg]
  *           - Handle run-time options bShy, bDo_timing, bUpdate_on_abort.
@@ -150,7 +150,7 @@
     char                message [ MAXLINELEN ];
     pop_result          rslt = POP_FAILURE;
     char            *   tgetline();
-    char            *   getline();
+    char            *   get_line();
     
     /*
      * seed random with the current time to nearest second 
@@ -415,7 +415,7 @@
 
 
 /*
- *  Our own getline.  One reason we don't use fgets because there was
+ *  Our own get_line.  One reason we don't use fgets because there was
  *  a comment here that fgets was broken on AIX.  Another reason is
  *  that we need to read out of the TLS stream at times.
  *
@@ -425,7 +425,7 @@
  */
 
 char
-*getline ( char *str, int size, POP *pPOP )
+*get_line ( char *str, int size, POP *pPOP )
 {
     char *p       = NULL;
     int   nRead   = 0;
@@ -433,7 +433,7 @@
     int   nBufSz  = sizeof ( pPOP->pcInBuf );
 
 
-    _DEBUG_LOG2 ( pPOP, "getline(%p,%d)", str, size );
+    _DEBUG_LOG2 ( pPOP, "get_line(%p,%d)", str, size );
 
     /*
      * See if there's a line in our input buffer
@@ -472,7 +472,7 @@
                               pPOP->pcInStart - pPOP->pcInBuf );
                 pPOP->pcInStart = pPOP->pcInEnd = pPOP->pcInBuf;
             }
-            _DEBUG_LOG3 ( pPOP, "getline() returning %d: '%.*s'",
+            _DEBUG_LOG3 ( pPOP, "get_line() returning %d: '%.*s'",
                           strlen(str), MIN(25, (int) strlen(str)), str );
             return ( str );
         } /* got a line */
@@ -560,7 +560,7 @@
                 } /* found a '\n' */
             } /* loop and discard until we see a '\n' */
 
-            _DEBUG_LOG2 ( pPOP, "getline() returning %d ('%c')",
+            _DEBUG_LOG2 ( pPOP, "get_line() returning %d ('%c')",
                           strlen(str), *str );
             return ( str );
         } /* nRoom == 0 */
@@ -583,7 +583,7 @@
             break;
     } /* main loop */
 
-    _DEBUG_LOG0 ( pPOP, "getline() returning NULL" );
+    _DEBUG_LOG0 ( pPOP, "get_line() returning NULL" );
     return ( NULL );
 }
 
@@ -614,7 +614,7 @@
                   VERSION, timeout, p->user, p->client, p->ipaddr );
     }
     else
-        str = getline ( str, size, p );
+        str = get_line ( str, size, p );
 
     alarm  ( 0 );
     signal ( SIGALRM, SIG_DFL );
