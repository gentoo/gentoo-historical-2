--- pine4.33/pico/basic.c.orig	Sun Jan 27 00:42:39 2002
+++ pine4.33/pico/basic.c	Sun Jan 27 22:55:07 2002
@@ -42,6 +42,8 @@
     int getgoal();
 #endif
 
+#include <wchar.h>
+
 
 /*
  * Move the cursor to the
@@ -55,6 +57,88 @@
     return (TRUE);
 }
 
+int
+pico_getforwardmblen(int n) {
+  int len = 0;
+  int i;
+  char* strbuf;
+  wchar_t* wstrbuf;
+
+  if( curwp->w_dotp->l_used <= n )
+    return n;
+
+  if( curwp->w_doto + n >= curwp->w_dotp->l_used )
+    return n;
+
+  len = curwp->w_dotp->l_used - curwp->w_doto;
+  len += 1;
+  strbuf = malloc(sizeof(char)*len);
+  bzero(strbuf, len);
+  wstrbuf = malloc(sizeof(wchar_t)*len);
+  bzero(wstrbuf, len);
+
+  len = curwp->w_dotp->l_used - curwp->w_doto;
+  for(i=0;i<len;i++) {
+    strbuf[i] = curwp->w_dotp->l_text[i+curwp->w_doto].c;
+  }
+
+  i=0;
+  while ( i < n ) {
+    int ret = mblen(&strbuf[i], MB_CUR_MAX);
+    if( ret <= 0 )
+      return n;
+    if( i + ret >= n )
+      return i+ret;
+    i += ret;
+  }
+}
+
+int
+pico_getbackmblen(int n) {
+  int len;
+  char* strbuf;
+  wchar_t* wstrbuf;
+  int i;
+  int wlen;
+  int ret;
+
+  if( n <= 0 )
+    return n;
+
+  if( n >= curwp->w_doto )
+    return curwp->w_doto;
+
+  len = curwp->w_doto + 1;
+  strbuf = malloc(sizeof(char)*len);
+  bzero(strbuf, sizeof(char)*len);
+  wstrbuf = malloc(sizeof(wchar_t)*len);
+  bzero(wstrbuf, sizeof(wchar_t)*len);
+
+  len = curwp->w_doto;
+  
+  for(i=0;i<len;i++) {
+    strbuf[i] = curwp->w_dotp->l_text[i].c;
+  }
+
+  wlen = mbstowcs(wstrbuf, strbuf, len);
+  if( wlen == -1 ) {
+    free(strbuf);
+    free(wstrbuf);
+    return n;
+  }
+
+  bzero(strbuf, sizeof(char)*len);
+  ret = wcstombs(strbuf, wstrbuf, len-n);
+
+  free(strbuf);
+  free(wstrbuf);
+
+  if( ret == -1 )
+    return n;
+
+  return len-ret;
+}
+
 /*
  * Move the cursor backwards by "n" characters. If "n" is less than zero call
  * "forwchar" to actually do the move. Otherwise compute the new cursor
@@ -70,7 +154,7 @@
     if (n < 0)
       return (forwchar(f, -n));
 
-    while (n--) {
+    while (n > 0) {
 	if (curwp->w_doto == 0) {
 	    if ((lp=lback(curwp->w_dotp)) == curbp->b_linep){
 		if(Pmaster && Pmaster->headents)
@@ -90,8 +174,11 @@
 	    curwp->w_dotp  = lp;
 	    curwp->w_doto  = llength(lp);
 	    curwp->w_flag |= WFMOVE;
-	} else
-	  curwp->w_doto--;
+	} else {
+          int i = pico_getbackmblen(n);
+          n -= i;
+          curwp->w_doto -= i;
+        }
     }
 
     return (TRUE);
@@ -122,7 +209,7 @@
     if (n < 0)
       return (backchar(f, -n));
 
-    while (n--) {
+    while (n>0) {
 	if (curwp->w_doto == llength(curwp->w_dotp)) {
 	    if (curwp->w_dotp == curbp->b_linep)
 	      return (FALSE);
@@ -131,8 +218,12 @@
 	    curwp->w_doto  = 0;
 	    curwp->w_flag |= WFMOVE;
 	}
-	else
-	  curwp->w_doto++;
+	else {
+          int i = pico_getforwardmblen(n);
+          n -= i;
+          curwp->w_doto += i;
+	  //curwp->w_doto++;
+        }
     }
     
     return (TRUE);
--- pine4.33/pico/efunc.h.orig	Sun Jan 27 21:43:16 2002
+++ pine4.33/pico/efunc.h	Sun Jan 27 22:20:05 2002
@@ -52,6 +52,8 @@
 extern	char *QuoteAttach PROTO((char *));
 
 /* basic.c */
+extern  int pico_getforwardmblen PROTO((int));
+extern  int pico_getbackmblen PROTO((int));
 extern	int gotobol PROTO((int, int));
 extern	int backchar PROTO((int, int));
 extern	int gotoeol PROTO((int, int));
--- pine4.33/pico/line.c.orig	Sun Jan 27 21:46:37 2002
+++ pine4.33/pico/line.c	Sun Jan 27 22:52:12 2002
@@ -438,6 +438,8 @@
     register int    chunk;
     register WINDOW *wp;
 
+    n = pico_getforwardmblen(n);
+
     if (curbp->b_mode&MDVIEW)	/* don't allow this command if	*/
       return(rdonly());	/* we are in read only mode	*/
 
