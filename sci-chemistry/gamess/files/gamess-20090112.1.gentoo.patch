diff -urN gamess.orig/comp gamess/comp
--- gamess.orig/comp	2009-02-20 01:39:06.000000000 +0300
+++ gamess/comp	2009-02-20 01:39:23.000000000 +0300
@@ -12,8 +12,8 @@
 #        sgi32,sgi64,sun32,sun64
 #  2. Choose your GAMESS directory tree.
 #
-set TARGET=ibm64
-chdir /u1/mike/gamess
+set TARGET=gentoo-target
+#chdir /u1/mike/gamess
 #
 #    ---- and now the script begins...
 #
@@ -100,9 +100,7 @@
 #      1st is Fedora Core's, 2nd is ASCI download from ORNL, 3rd is Atlas
 #      the names of the latter two files on your system might well be
 #      different from these, edit here and in 'lked' to match your paths.
-if (($TARGET == linux32) && (-e /usr/lib/libblas.a))            set BLAS3=true
-if (($TARGET == linux32) && (-e /usr/local/bin/libblas-asci.a)) set BLAS3=true
-if (($TARGET == linux32) && (-e /usr/local/lib/libatlas.a))     set BLAS3=true
+if ($TARGET == linux32)      set BLAS3=true
 #      For next two, assume that a math library will exist when
 #      we arrive at the link step: MKL or Atlas or ACML....
 if  ($TARGET == linux64)      set BLAS3=true
@@ -1144,7 +1142,7 @@
 #   The only thing you need to change is the next line.
 #   Note: you must make the analogous choice in compddi and lked, as well.
 #
-    set FORTRAN=g77       # choose from g77, gfortran, ifort, pgf77, f2c
+    set FORTRAN=gentoo-g77       # choose from g77, gfortran, ifort, pgf77, f2c
 #
     switch ($FORTRAN)
 #
@@ -1163,7 +1161,7 @@
 #   Pentium II fractionally).  None of these optimizations are used below.
 #
    case g77:
-   set OPT = '-O2'
+   set gentoo-OPT = '-O2'
    if ($MODULE == ormas1) set OPT='-O2 -fno-move-all-movables' # RH9, g77 3.3
    if ($MODULE == zheev)  set OPT='-O0'  # defensive compiling
 #
@@ -1199,7 +1197,7 @@
 #      -std=legacy  suppresses warnings about use of f77 constructs.
 #
    case gfortran:
-   set OPT='-O2'
+   set gentoo-OPT = '-O2'
    if ($MODULE == zheev)  set OPT='-O0'  # defensive compiling
    if ($MODULE == pcmcv2) set OPT='-O1'  # EFP+CPCM, ala Francois, v4.1.2
    if (($MODULE == qeigen) || ($MODULE == int2c)) then
@@ -1229,7 +1227,7 @@
 #    optimizations in 32 bit mode, as a function of the ifort version.
 #
    case ifort:
-   set OPT = '-O3'
+   set gentoo-OPT = '-O2'
    if ($MODULE == delocl) set OPT='-O0'  # from Cheol
    if ($MODULE == zheev)  set OPT='-O0'
    set echo
@@ -1375,12 +1373,12 @@
 #   Note: you must make the analogous choice in compddi and lked, as well.
 #   If you wish to use ifort in 64 bit mode, use only target=linux-ia64.
 #
-   set FORTRAN=gfortran      # choose from gfortran, pgf77, pathf90
+   set FORTRAN=gentoo-g77      # choose from gfortran, pgf77, pathf90
 #
    switch ($FORTRAN)
 
    case gfortran:
-      set OPT='-O2'
+      set gentoo-OPT = '-O2'
       if ($MODULE == zheev)  set OPT='-O0'  # defensive compiling
       if (($MODULE == qeigen) || ($MODULE == int2c)) then
          mv -f $MODULE.f $MODULE.junk
diff -urN gamess.orig/compall gamess/compall
--- gamess.orig/compall	2009-02-20 01:39:06.000000000 +0300
+++ gamess/compall	2009-02-20 01:39:23.000000000 +0300
@@ -13,8 +13,8 @@
 #      sgi32,sgi64,sun32,sun64
 #  2. Choose your GAMESS directory tree.
 #
-set TARGET=ibm64
-chdir /u1/mike/gamess
+set TARGET=gentoo-target
+#chdir /u1/mike/gamess
 #
 #  ----- and now the script begins...
 #
@@ -150,8 +150,8 @@
 if ($TARGET == axp64)      ./comp blas
 if ($TARGET == ibm64)      ./comp blas
 if ($TARGET == ibm-bg)     ./comp blas
-if ($TARGET == linux32)    ./comp blas
-if ($TARGET == linux64)    ./comp blas
+#if ($TARGET == linux32)    ./comp blas
+#if ($TARGET == linux64)    ./comp blas
 if ($TARGET == linux-ia64) ./comp blas
 if ($TARGET == sun32)      ./comp blas
 if ($TARGET == sun64)      ./comp blas
@@ -450,7 +450,7 @@
 #
 #      optional Nuclear-Electronic Orbital method, using NEO code
 #
-set NEO=false
+set NEO=true
 if ($NEO == true) then
    ./comp neo
    ./comp neobas
diff -urN gamess.orig/ddi/compddi gamess/ddi/compddi
--- gamess.orig/ddi/compddi	2009-02-20 01:39:06.000000000 +0300
+++ gamess/ddi/compddi	2009-02-20 01:39:23.000000000 +0300
@@ -15,7 +15,7 @@
 #      linux32,linux64,linux-ia64,mac32,mac64,macG5,necsx,
 #      sgi32,sgi64,sun32,sun64
 #
-         set TARGET = ibm64
+         set TARGET = gentoo-target
 
 #  2. Choose DDI communication layer, the only legal values are
 #                   sockets,mixed,mpi,shmem,lapi,armci
@@ -537,9 +537,9 @@
 #
   if($TARGET == linux32) then
 
-     set FORTRAN=g77       # choose from g77, gfortran, ifort, pgf77, f2c
+     set FORTRAN=gentoo-g77       # choose from g77, gfortran, ifort, pgf77, f2c
 
-     set CC = 'gcc'
+     set gentoo-CC = 'gcc'
      set CFLAGS = "-DLINUX -O3 -fstrict-aliasing -I./include"
 
      switch ($FORTRAN)
@@ -578,12 +578,12 @@
 
 #        for generic 64 bit Linux, choose one of the following,
 #           gfortran, pgf77, pathf90
-     if ($TARGET == linux64)    set FORTRAN=gfortran
+     if ($TARGET == linux64)    set FORTRAN=gentoo-g77
 #
 #        for linux-ia64, leave the choice set to ifort (do not change!)
      if ($TARGET == linux-ia64) set FORTRAN=ifort
 
-     set CC = 'gcc'
+     set gentoo-CC = 'gcc'
 
      if ($TARGET == linux64) then
         set CFLAGS = "-DLINUX -m64 -O3 -fstrict-aliasing -I./include"
diff -urN gamess.orig/ddi/tools/ddikick/ddikick.c gamess/ddi/tools/ddikick/ddikick.c
--- gamess.orig/ddi/tools/ddikick/ddikick.c	2009-02-20 01:39:06.000000000 +0300
+++ gamess/ddi/tools/ddikick/ddikick.c	2009-02-20 01:39:23.000000000 +0300
@@ -105,7 +105,7 @@
           remoteshell = argv[++i];
        } else {
           if((remoteshell = getenv("DDI_RSH")) == NULL) {
-              remoteshell = (char *) strdup("rsh");
+              remoteshell = (char *) strdup("ssh");
           }
        }
 
diff -urN gamess.orig/lked gamess/lked
--- gamess.orig/lked	2009-02-20 01:39:06.000000000 +0300
+++ gamess/lked	2009-02-20 01:39:23.000000000 +0300
@@ -15,8 +15,8 @@
 #       sgi32,sgi64,sun32,sun64
 #  2. Choose your GAMESS directory tree.
 #
-set TARGET=ibm64
-chdir /u1/mike/gamess
+set TARGET=linux32
+#chdir /u1/mike/gamess
 #
 #    ---- and now the script begins...
 #
@@ -299,22 +299,22 @@
 #
 if ($TARGET == linux32) then
 #
-   set FORTRAN=g77       # choose from g77, gfortran, ifort, pgf77, f2c
+   set FORTRAN=gentoo-g77       # choose from g77, gfortran, ifort, pgf77, f2c
 #
    switch ($FORTRAN)
      case g77:
         set LDR='g77'
-        set LDOPTS=' '  # add '-Wl,-M' to see load map
+        set gentoo-LDOPTS=' '  # add '-Wl,-M' to see load map
         set LIBRARIES=' '
         breaksw
      case gfortran:
         set LDR='gfortran'
-        set LDOPTS=' '
+        set gentoo-LDOPTS=' '
         set LIBRARIES=' '
         breaksw
      case ifort:
         set LDR='ifort'
-        set LDOPTS=' '  # add '-Wl,-M' to see load map
+        set gentoo-LDOPTS=' '  # add '-Wl,-M' to see load map
         set LIBRARIES='-Vaxlib'
         breaksw
      case pgf77:
@@ -344,22 +344,22 @@
 #  Additional libraries (not considered here) are 32 bit versions
 #  of Atlas, MKL, or ACML, they are perfectly reasonable choices.
 #
-   set BLASLIBRARY=' '
-   set BLAS='blas.o'  # turn this off if a math library exists...
+   set BLASLIBRARY=`pkg-config --libs blas`
+   set BLAS=''  
 #
-   if (-e /usr/lib/libblas.a) then
-      set BLASLIBRARY="-lblas"
-      set BLAS=' '
-   endif
-   if (-e /usr/local/bin/libblas-asci.a) then
-      set BLASLIBRARY="/usr/local/bin/libblas-asci.a"
-      set BLAS=' '
-   endif
-   if (-e /usr/local/lib/libatlas.a) then
-      set BLASLIBRARY="/usr/local/lib/libf77blas.a"
-      set BLASLIBRARY="$BLASLIBRARY /usr/local/lib/libatlas.a"
-      set BLAS=' '
-   endif
+#   if (-e /usr/lib/libblas.a) then
+#      set BLASLIBRARY="-lblas"
+#      set BLAS=' '
+#   endif
+#   if (-e /usr/local/bin/libblas-asci.a) then
+#      set BLASLIBRARY="/usr/local/bin/libblas-asci.a"
+#      set BLAS=' '
+#   endif
+#   if (-e /usr/local/lib/libatlas.a) then
+#      set BLASLIBRARY="/usr/local/lib/libf77blas.a"
+#      set BLASLIBRARY="$BLASLIBRARY /usr/local/lib/libatlas.a"
+#      set BLAS=' '
+#   endif
 #
    if ($BLAS == 'blas.o') then
       echo " "
diff -urN gamess.orig/runall gamess/runall
--- gamess.orig/runall	2009-02-20 01:39:07.000000000 +0300
+++ gamess/runall	2009-02-20 01:39:23.000000000 +0300
@@ -10,7 +10,7 @@
 #
 #  Only the following two lines need to be customized:
 #
-chdir /u1/mike/gamess
+#chdir /u1/mike/gamess
 set VERNO=00
 #
 #  Loop over all Ntest jobs supplied with GAMESS
diff -urN gamess.orig/rungms gamess/rungms
--- gamess.orig/rungms	2009-02-20 01:39:07.000000000 +0300
+++ gamess/rungms	2009-02-20 01:42:12.000000000 +0300
@@ -55,7 +55,7 @@
 #       of using LoadLeveler via a "llgms" front end in ~/gamess/misc.
 #
 set TARGET=sockets
-set SCR=/scr/$USER
+set SCR=`pwd`
 #
 set JOB=$1      # name of the input file xxx.inp, give only the xxx part
 set VERNO=$2    # revision number of the executable created by 'lked' step
@@ -122,17 +122,17 @@
 #
 set echo
 #                        ASCII input files (see explanation above)
-setenv ERICFMT ~mike/gamess/ericfmt.dat
-setenv MCPPATH ~mike/gamess/mcpdata
+setenv ERICFMT /usr/share/gamess/ericfmt/ericfmt.dat
+setenv MCPPATH /usr/share/gamess/mcpdata
 setenv  EXTBAS /dev/null
 setenv  NUCBAS /dev/null
 #
-setenv  MAKEFP ~$USER/scr/$JOB.efp
-setenv   GAMMA ~$USER/scr/$JOB.gamma
-setenv TRAJECT ~$USER/scr/$JOB.trj
-setenv RESTART ~$USER/scr/$JOB.rst
+setenv  MAKEFP $SCR/$JOB.efp
+setenv   GAMMA $SCR/$JOB.gamma
+setenv TRAJECT $SCR/$JOB.trj
+setenv RESTART $SCR/$JOB.rst
 setenv   INPUT $SCR/$JOB.F05
-setenv   PUNCH ~$USER/scr/$JOB.dat
+setenv   PUNCH $SCR/$JOB.dat
 setenv  AOINTS $SCR/$JOB.F08
 setenv  MOINTS $SCR/$JOB.F09
 setenv DICTNRY $SCR/$JOB.F10
@@ -308,7 +308,7 @@
     if (null$4 == null) set ELGNAME=ELGFILE
     set echo
     setenv AOINTS   $SCR/$ELGNAME.F08
-    setenv ELGDOS   ~$USER/scr/$JOB.ldos
+    setenv ELGDOS   $SCR/$JOB.ldos
     setenv ELGDAT   $SCR/$ELGNAME.F71
     setenv ELGPAR   $SCR/$ELGNAME.F72
     setenv ELGCUT   $SCR/$ELGNAME.F74
@@ -426,7 +426,7 @@
    if ($os == AIX)     set GMSPATH=/u1/mike/gamess
    if ($os == Darwin)  set GMSPATH=/Users/mike/desktop/gamess
    if ($os == HP-UX)   set GMSPATH=/zr/mike/gamess
-   if ($os == Linux)   set GMSPATH=/cu/mike/gamess
+   if ($os == Linux)   set GMSPATH=/usr/bin
    if ($os == OSF1)    set GMSPATH=/in/mike/gamess
    if ($os == SunOS)   set GMSPATH=/hf/mike/gamess
 #       special compilation for Sun E450 uSPARC       (uname also= SunOS)
@@ -471,33 +471,6 @@
       set HOSTLIST=(`hostname`)
    endif
 #
-#       2. This is an example of how to run on a 4-way SMP enclosure,
-#          where all CPUs (aka COREs) are inside a -single- NODE.
-#          The example is repeated for some nodes we use as 2-way's.
-   if ($NCPUS > 1) then
-      switch (`hostname`)
-         case ti.msg.chem.iastate.edu:
-         case cd.msg.chem.iastate.edu:
-         case zn.msg.chem.iastate.edu:
-         case ni.msg.chem.iastate.edu:
-         case co.msg.chem.iastate.edu:
-         case sc.msg.chem.iastate.edu:
-            if ($NCPUS > 4) set NCPUS=4
-            set NNODES=1
-            set HOSTLIST=(`hostname`:cpus=$NCPUS)
-            breaksw
-         case se.msg.chem.iastate.edu:
-         case sb.msg.chem.iastate.edu:
-         case br.msg.chem.iastate.edu:
-            if ($NCPUS > 2) set NCPUS=2
-            set NNODES=1
-            set HOSTLIST=(`hostname`:cpus=$NCPUS)
-            breaksw
-         default:
-            echo I do not know how to run this node in parallel.
-            exit 20
-      endsw
-   endif
 #
 #       3. A phony example, of six uniprocessors (arbitrary names)
 #          Because they are uniprocessors, we just set NNODES = NCPUS.
diff -urN gamess.orig/source/zunix.c gamess/source/zunix.c
--- gamess.orig/source/zunix.c	2009-02-20 01:39:07.000000000 +0300
+++ gamess/source/zunix.c	2009-02-20 01:39:23.000000000 +0300
@@ -360,6 +360,7 @@
 #ifdef LINUX32
 
 #include <stdlib.h>
+#include <string.h>
 int memget_(nwords) int *nwords;
    { int nbytes;
      nbytes = (*nwords+2)*8;
@@ -441,6 +442,7 @@
 
 #include <stdlib.h>
 #include <malloc.h>
+#include <string.h>
 
 #define FORTINT long
 
