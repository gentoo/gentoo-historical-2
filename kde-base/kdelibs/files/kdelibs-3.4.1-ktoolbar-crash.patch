--- kdeui/ktoolbar.cpp	2005/05/04 06:07:06	409205
+++ kdeui/ktoolbar.cpp	2005/06/14 19:54:36	425455
@@ -664,6 +664,11 @@
 
 void KToolBar::clear ()
 {
+    /* Delete any idle buttons, so QToolBar doesn't delete them itself, making a mess */
+    for(QWidget *w=d->idleButtons.first(); w; w=d->idleButtons.next())
+       w->blockSignals(false);    
+    d->idleButtons.clear();
+     
     QToolBar::clear();
     widget2id.clear();
     id2widget.clear();
Index: kdeui/ktoolbarbutton.h
===================================================================
--- kdeui/ktoolbarbutton.h	(revision 419598)
+++ kdeui/ktoolbarbutton.h	(working copy)
@@ -311,6 +311,8 @@
 protected:
   virtual void virtual_hook( int id, void* data );
 private:
+  friend class KToolBar;
+  void forceIconLoad();
   KToolBarButtonPrivate *d;
 };
 
Index: kdeui/ktoolbar.cpp
===================================================================
--- kdeui/ktoolbar.cpp	(revision 425455)
+++ kdeui/ktoolbar.cpp	(working copy)
@@ -704,6 +704,13 @@
     widget2id.remove( w );
     widgets.removeRef( w );
 
     w->blockSignals(true);
+    /**
+     Ensure that the lazily removed buttons do not hang on to lazy icon loaders,
+     since their KInstance/KIconLoader may be destroyed
+    */
+    if (KToolBarButton* button = ::qt_cast<KToolBarButton*>(w))
+        button->forceIconLoad();
+
     d->idleButtons.append(w);
     layoutTimer->start( 50, true );
Index: kdeui/ktoolbarbutton.cpp
===================================================================
--- kdeui/ktoolbarbutton.cpp	(revision 419598)
+++ kdeui/ktoolbarbutton.cpp	(working copy)
@@ -290,6 +290,15 @@
         d->m_iconName, KIcon::Toolbar, d->m_iconSize ));
 }
 
+/* Internal hook for KToolBar's delayed removal anti-flicker hack -- force instantiation of the icon*/
+void KToolBarButton::forceIconLoad()
+{
+  bool wasLazyLoading = d->m_instance->iconLoader()->isDelayedIconSetLoadingEnabled();
+  d->m_instance->iconLoader()->enableDelayedIconSetLoading(false);
+  setIcon(d->m_iconName);
+  d->m_instance->iconLoader()->enableDelayedIconSetLoading(wasLazyLoading);
+}
+
 void KToolBarButton::setIconSet( const QIconSet &iconset )
 {
   QToolButton::setIconSet( iconset );
