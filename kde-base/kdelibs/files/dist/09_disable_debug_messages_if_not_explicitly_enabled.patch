
We build with debugging symbols enabled, that's why we get a lot of debugging
messages on the konsole. This patch disables these messages. Kdebugdialog
can be used to enable them. 
See also 04_disable_debug_by_default.diff in kdebase-runtime.

In KDE 4.3 trunk this has been committed as r916186.
--- a/kdecore/kdebugrc
+++ b/kdecore/kdebugrc
@@ -82,7 +82,7 @@ InfoOutput=4
 
 # KMail
 [5006]
-InfoOutput=2
+InfoOutput=4
 
 # KitchenSync (Syncing Algorithm)
 [5250]
--- a/kdecore/io/kdebug.cpp
+++ b/kdecore/io/kdebug.cpp
@@ -181,6 +181,11 @@ struct KDebugPrivate
         QtOutput = 2,
         SyslogOutput = 3,
         NoOutput = 4,
+#ifdef QT_NO_DEBUG
+        DefaultOutput = NoOutput,
+#else
+        DefaultOutput = QtOutput,
+#endif
         Unknown = 5
     };
 
@@ -313,7 +318,7 @@ struct KDebugPrivate
         }
 
         KConfigGroup cg(config, QString::number(area));
-        int mode = cg.readEntry(key, 2);
+        int mode = cg.readEntry(key, int(DefaultOutput));
         return OutputMode(mode);
     }
 
--- a/kdecore/io/kdebug.h
+++ b/kdecore/io/kdebug.h
@@ -31,12 +31,13 @@
  *  @{
  * KDE debug message streams let you and the user control just how many debug
  * messages you see. Debug message printing is controlled by (un)defining
- * QT_NO_DEBUG when compiling your source. If QT_NO_DEBUG is defined then no debug
- * messages are printed.
+ * QT_NO_DEBUG when compiling your source. If QT_NO_DEBUG is defined then debug
+ * messages are not printed by default but can still be enabled by runtime
+ * configuration, e.g. via kdebugdialog or by editing kdebugrc.
  */
 
 #if !defined(KDE_NO_DEBUG_OUTPUT)
-# if defined(QT_NO_DEBUG) || defined(QT_NO_DEBUG_OUTPUT) || defined(QT_NO_DEBUG_STREAM)
+# if defined(QT_NO_DEBUG_OUTPUT) || defined(QT_NO_DEBUG_STREAM)
 #  define KDE_NO_DEBUG_OUTPUT
 # endif
 #endif

