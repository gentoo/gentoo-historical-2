===================================================================
RCS file: /home/kde/kdelibs/kdecore/kidna.cpp,v
retrieving revision 1.9.4.1
retrieving revision 1.9.4.2
diff -u -r1.9.4.1 -r1.9.4.2
--- kdecore/kidna.cpp	2004/02/04 11:43:34	1.9.4.1
+++ kdecore/kidna.cpp	2005/03/03 13:19:45	1.9.4.2
@@ -21,6 +21,7 @@
 
 #include "kidna.h"
 
+#include <qstringlist.h>
 #include <kdebug.h>
 
 #include "ltdl.h"
@@ -65,6 +66,22 @@
    KIDNA_lib_load_failed = false; // Succes
 }
 
+static QStringList *KIDNA_idnDomains = 0;
+
+static bool idnSupportForHost(const QString &host)
+{
+   if (!KIDNA_idnDomains)
+   {
+      const char *kde_use_idn = getenv("KDE_USE_IDN");
+      if (!kde_use_idn)
+         kde_use_idn = "at:ch:cn:de:dk:kr:jp:li:no:se:tw";
+      KIDNA_idnDomains = new QStringList(QStringList::split(':', QString::fromLatin1(kde_use_idn).lower()));
+   }
+   
+   QString tld = host.mid(host.findRev('.')+1).lower();
+   return KIDNA_idnDomains->contains(tld);
+}
+
 QCString KIDNA::toAsciiCString(const QString &idna)
 {
    int l = idna.length();
@@ -86,7 +103,7 @@
       KIDNA_load_lib();
    }
 
-   if (KIDNA_lib_load_failed)
+   if (KIDNA_lib_load_failed || !idnSupportForHost(idna))
    {
       return 0; // Can't convert
    }
@@ -132,7 +149,7 @@
       KIDNA_load_lib();
    }
 
-   if (KIDNA_lib_load_failed)
+   if (KIDNA_lib_load_failed || !idnSupportForHost(idna))
    {
       return QString::null; // Can't convert
    }
@@ -164,7 +181,7 @@
       KIDNA_load_lib();
    }
 
-   if (KIDNA_lib_load_failed)
+   if (KIDNA_lib_load_failed || !idnSupportForHost(idna))
    {
       return idna.lower(); // Return as is
    }
===================================================================
RCS file: /home/kde/kdelibs/kio/kssl/ksslpeerinfo.cc,v
retrieving revision 1.44
retrieving revision 1.44.2.1
diff -u -r1.44 -r1.44.2.1
--- kio/kssl/ksslpeerinfo.cc	2003/05/29 16:50:21	1.44
+++ kio/kssl/ksslpeerinfo.cc	2005/03/04 12:13:28	1.44.2.1
@@ -30,6 +30,7 @@
 #include <ksockaddr.h>
 #include <kextsock.h>
 #include <netsupp.h>
+#include "kidna.h"
 
 #include "ksslx509map.h"
 
@@ -59,7 +60,7 @@
 	while(d->peerHost.endsWith("."))
 		d->peerHost.truncate(d->peerHost.length()-1);
 
-	d->peerHost = d->peerHost.lower();
+	d->peerHost = KIDNA::toAscii(d->peerHost);
 }
 
 bool KSSLPeerInfo::certMatchesAddress() {
