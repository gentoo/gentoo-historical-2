diff -Nur kdelibs-3.4.1.orig/configure.in.in kdelibs-3.4.1/configure.in.in
--- kdelibs-3.4.1.orig/configure.in.in	2005-05-23 14:17:19.000000000 +0200
+++ kdelibs-3.4.1/configure.in.in	2005-06-05 21:10:19.000000000 +0200
@@ -324,11 +324,19 @@
 AC_DEFINE_UNQUOTED(KDE_DISTRIBUTION_TEXT, "$kde_distribution_text", [Distribution Text to append to OS])
 AC_MSG_RESULT($kde_distribution_text)
 
-kde_have_utempter=yes
-AC_CHECK_LIB(utempter, addToUtmp, [LIBUTEMPTER=-lutempter], kde_have_utempter=no)
-AC_SUBST(LIBUTEMPTER)
-if test "$kde_have_utempter" = "yes"; then
-  AC_DEFINE_UNQUOTED(HAVE_UTEMPTER, 1, [Define if you have the utempter helper for utmp managment])
+AC_ARG_WITH(utempter,
+[AS_HELP_STRING([--with-utempter], [use utempter for utmp management @<:@default=check@:>@])],
+[], with_utempter=check)
+if test "x$with_utempter" != xno; then
+  kde_have_utempter=yes
+  AC_CHECK_LIB(utempter, addToUtmp, [LIBUTEMPTER=-lutempter], kde_have_utempter=no)
+  AC_SUBST(LIBUTEMPTER)
+  if test "$kde_have_utempter" = "yes"; then
+    AC_DEFINE_UNQUOTED(HAVE_UTEMPTER, 1, [Define if you have the utempter helper for utmp managment])
+  fi
+  if test "x$with_utempter" != xcheck && test "x$kde_have_utempter" != xyes; then
+    AC_MSG_FAILURE([--with-utempter was given, but test for utempter failed])
+  fi
 fi
 
 KDE_INIT_DOXYGEN([The KDE API Reference], [Version $VERSION])
diff -Nur kdelibs-3.4.1.orig/kdecore/configure.in.in kdelibs-3.4.1/kdecore/configure.in.in
--- kdelibs-3.4.1.orig/kdecore/configure.in.in	2005-05-23 14:16:21.000000000 +0200
+++ kdelibs-3.4.1/kdecore/configure.in.in	2005-06-05 21:10:32.000000000 +0200
@@ -42,12 +42,21 @@
 dnl Test for libidn (IDNA support)
 dnl -------
 
+AC_ARG_WITH(libidn,
+  [AS_HELP_STRING(--with-libidn,
+    [enable support for libidn @<:@default=check@:>@])],
+  [], with_libidn=check)
 LIB_IDN=
-KDE_CHECK_LIB(idn, idna_to_ascii_4i, [
-  AC_DEFINE_UNQUOTED(HAVE_LIBIDN, 1, [Defined if you have libidn in your system])
-  LIB_IDN=-lidn
-])
-AC_CHECK_HEADERS([idna.h punycode.h stringprep.h])
+if test "x$with_libidn" != xno; then
+  AC_CHECK_HEADERS([idna.h punycode.h stringprep.h])
+  KDE_CHECK_LIB(idn, idna_to_ascii_4i, [
+    AC_DEFINE_UNQUOTED(HAVE_LIBIDN, 1, [Defined if you have libidn in your system])
+    LIB_IDN=-lidn
+  ])
+  if test "x$with_libidn" != xcheck && test -z "$LIB_IDN"; then
+    AC_MSG_FAILURE([--with-libidn was given, but test for libidn failed])
+  fi
+fi
 AC_SUBST(LIB_IDN)
 
 dnl --------
@@ -164,30 +173,40 @@
 
 SVGICONS=
 	
-KDE_FIND_PATH(libart2-config, LIBART_CONFIG, [${prefix}/bin ${exec_prefix}/bin], [
-  AC_MSG_WARN([Could not find libart anywhere, check http://www.levien.com/libart/])
-])
-
-if test -n "$LIBART_CONFIG"; then
-  vers=`$LIBART_CONFIG --version 2>/dev/null | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
-  if test -n "$vers" && test "$vers" -ge 2003008
-  then
-     LIBART_LIBS="`$LIBART_CONFIG --libs`"
-     LIBART_RPATH=
-     for args in $LIBART_LIBS; do
+AC_ARG_WITH(libart,
+  [AS_HELP_STRING(--with-libart,
+    [enable support for libart @<:@default=check@:>@])],
+  [], with_libart=check)
+
+if test "x$with_libart" != xno; then
+  KDE_FIND_PATH(libart2-config, LIBART_CONFIG, [${prefix}/bin ${exec_prefix}/bin], [
+    AC_MSG_WARN([Could not find libart anywhere, check http://www.levien.com/libart/])
+  ])
+
+  if test -n "$LIBART_CONFIG"; then
+    vers=`$LIBART_CONFIG --version 2>/dev/null | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
+    if test -n "$vers" && test "$vers" -ge 2003008
+    then
+      LIBART_LIBS="`$LIBART_CONFIG --libs`"
+      LIBART_RPATH=
+      for args in $LIBART_LIBS; do
 	  case $args in
 	    -L*)
   	       LIBART_RPATH="$LIBART_RPATH $args"
  	       ;;
           esac
-     done
-     LIBART_RPATH=`echo $LIBART_RPATH | sed -e "s/-L/-R/g"`
-     LIBART_CFLAGS="`$LIBART_CONFIG --cflags`"
-     SVGICONS=svgicons
-
-     AC_DEFINE_UNQUOTED(HAVE_LIBART, 1, [Defines if your system has the libart library])
-  else
-     AC_MSG_WARN([You need at least libart 2.3.8])
+      done
+      LIBART_RPATH=`echo $LIBART_RPATH | sed -e "s/-L/-R/g"`
+      LIBART_CFLAGS="`$LIBART_CONFIG --cflags`"
+      SVGICONS=svgicons
+
+      AC_DEFINE_UNQUOTED(HAVE_LIBART, 1, [Defines if your system has the libart library])
+    else
+      AC_MSG_WARN([You need at least libart 2.3.8])
+    fi
+  fi
+  if test "x$with_libart" != xcheck && test -z "$LIBART_LIBS"; then
+    AC_MSG_FAILURE([--with-libart was given, but test for libart failed])
   fi
 fi
 
