diff -Nur kdenetwork-3.4.2.orig/configure.in.bot kdenetwork-3.4.2/configure.in.bot
--- kdenetwork-3.4.2.orig/configure.in.bot	2005-05-23 14:08:19.000000000 +0200
+++ kdenetwork-3.4.2/configure.in.bot	2005-07-26 13:55:52.000000000 +0200
@@ -63,7 +63,7 @@
   all_tests=bad
 fi
 
-if test -z "$XMMS_LIBS"; then
+if test "x$with_xmms" = xcheck && test -z "$XMMS_LIBS"; then
   echo ""
   echo "You're missing the XMMS libraries, or the libxmms development package."
   echo "Without libxmms Kopete's NowListening plugin won't be able to talk to"
@@ -74,7 +74,7 @@
   all_tests=bad
 fi
 
-if test "$kde_libiw_installed" = "no"; then
+if test "x$with_wifi" = xcheck && test "$kde_libiw_installed" = "no"; then
   echo ""
   echo "You're missing the wireless tools libraries, or the wireless tools"
   echo "header files. Without these, KWiFiManager and the kwireless applet"
diff -Nur kdenetwork-3.4.2.orig/kopete/plugins/nowlistening/configure.in.in kdenetwork-3.4.2/kopete/plugins/nowlistening/configure.in.in
--- kdenetwork-3.4.2.orig/kopete/plugins/nowlistening/configure.in.in	2005-05-23 14:07:30.000000000 +0200
+++ kdenetwork-3.4.2/kopete/plugins/nowlistening/configure.in.in	2005-07-26 13:56:43.000000000 +0200
@@ -41,7 +41,19 @@
   fi
 ])
 
-AC_CHECK_XMMS
+AC_ARG_WITH(xmms,
+  [AC_HELP_STRING(--with-xmms,
+    [enable support for XMMS @<:@default=check@:>@])],
+  [], with_xmms=check)
+
+if test "x$with_xmms" != xno; then
+  AC_CHECK_XMMS
+
+  if test "x$with_xmms" != xcheck && test "x$ac_cv_have_xmms" = xno; then
+    AC_MSG_ERROR([--with-xmms was given, but test for XMMS failed])
+  fi
+fi
+
 AC_SUBST(XMMS_LIBS)
 AC_SUBST(XMMS_LDFLAGS)
 AC_SUBST(XMMS_INCLUDES)
diff -Nur kdenetwork-3.4.2.orig/kopete/protocols/configure.in.in kdenetwork-3.4.2/kopete/protocols/configure.in.in
--- kdenetwork-3.4.2.orig/kopete/protocols/configure.in.in	2005-05-23 14:07:47.000000000 +0200
+++ kdenetwork-3.4.2/kopete/protocols/configure.in.in	2005-07-26 13:56:19.000000000 +0200
@@ -10,6 +10,11 @@
 ac_libgadu_includes=""
 ac_libgadu_libs=""
 
+AC_ARG_WITH(external-libgadu,
+  [AC_HELP_STRING(--with-external-libgadu,
+    [use external libgadu library @<:@default=check@:>@])],
+  [], with_external_libgadu=check)
+
 AC_ARG_WITH(libgadu-includes,
 	AC_HELP_STRING([--with-libgadu-includes=DIR], [where the libgadu includes are.]),
 	[  ac_libgadu_includes="$withval" ])
@@ -26,12 +31,12 @@
 	LIBGG_LIBS="-L$ac_libgadu_libs"
 fi
 
-
-ac_save_LIBS="$LIBS"
-ac_save_CFLAGS="$CFLAGS"
-LIBS="$LIBGG_LIBS -lgadu $LIBPTHREAD"
-CFLAGS="$CFLAGS $LIBGG_INCLUDES"
-AC_MSG_CHECKING([libgadu version 1.5(rcX) with pthread support])
+if test "x$with_external_libgadu" != xno; then
+	ac_save_LIBS="$LIBS"
+	ac_save_CFLAGS="$CFLAGS"
+	LIBS="$LIBGG_LIBS -lgadu $LIBPTHREAD"
+	CFLAGS="$CFLAGS $LIBGG_INCLUDES"
+	AC_MSG_CHECKING([libgadu version 1.5(rcX) with pthread support])
 	AC_TRY_RUN(
 	[
 	
@@ -61,28 +66,37 @@
 	], [
 	LIBGG_LIBS="$LIBGG_LIBS -lgadu $LIBPTHREAD"
 	AC_MSG_RESULT([yes])
-	AC_SUBST(LIBGG_INCLUDES)
-	AC_SUBST(LIBGG_LIBS)
 	COMPILE_GADU=true
-	AC_SUBST(COMPILE_GADU)
 	use_libgadu_copy=
 	], [
-	if test "$kde_use_threading" = "yes" ; then
-	AC_MSG_RESULT([no, falling back on supplied libgadu-copy])
-	use_libgadu_copy=yes
-	COMPILE_GADU=true
+	AC_MSG_RESULT([no])
+	])
+	LIBS="$ac_save_LIBS"
+	CFLAGS="$ac_save_CFLAGS"
+
+	if test "x$with_external_libgadu" != xcheck && test -z "$COMPILE_GADU"; then
+		AC_MSG_ERROR([--with-external-libgadu was given, but test for libgadu failed])
+	fi
+fi
+
+if test -z "$COMPILE_GADU"; then
+	AC_MSG_CHECKING([if supplied libgadu-copy can be used])
+	if test "$kde_use_threading" = "yes"; then
+		AC_MSG_RESULT([yes])
+		use_libgadu_copy=yes
+		COMPILE_GADU=true
 	else
-	use_libgadu_copy=
-	AC_MSG_RESULT([no, cannot fall back on libgadu-copy (no pthread)])
-	COMPILE_GADU=	
+		AC_MSG_RESULT([no (no pthread), support for Gadu-Gadu will be disabled])
+		use_libgadu_copy=
+		COMPILE_GADU=
 	fi
-	AC_SUBST(COMPILE_GADU)	
-	])
+fi
+
+AC_SUBST(LIBGG_INCLUDES)
+AC_SUBST(LIBGG_LIBS)
+AC_SUBST(COMPILE_GADU)
 AM_CONDITIONAL(include_gadu, test -n "$COMPILE_GADU")
 AM_CONDITIONAL(include_libggcopy, test -n "$use_libgadu_copy")
-LIBS="$ac_save_LIBS"
-CFLAGS="$ac_save_CFLAGS"
-
 
 if test "$use_libgadu_copy" = "yes"; then
 	cp ${srcdir}/kopete/protocols/gadu/libgadu/libgadu-config.h.in \
diff -Nur kdenetwork-3.4.2.orig/wifi/configure.in.in kdenetwork-3.4.2/wifi/configure.in.in
--- kdenetwork-3.4.2.orig/wifi/configure.in.in	2005-05-23 14:08:02.000000000 +0200
+++ kdenetwork-3.4.2/wifi/configure.in.in	2005-07-26 13:57:27.000000000 +0200
@@ -1,7 +1,14 @@
-AC_LANG_SAVE
-AC_LANG_CPLUSPLUS
-AC_MSG_CHECKING([if wireless tools >= 25 are installed])
-AC_TRY_COMPILE(
+AC_ARG_WITH(wifi,
+  [AC_HELP_STRING(--with-wifi,
+    [enable support for wireless tools @<:@default=check@:>@])],
+  [], with_wifi=check)
+
+kde_libiw_installed=no
+if test "x$with_wifi" != xno; then
+	AC_LANG_SAVE
+	AC_LANG_CPLUSPLUS
+	AC_MSG_CHECKING([if wireless tools >= 25 are installed])
+	AC_TRY_COMPILE(
 	[
 		#include <iwlib.h>
 	],
@@ -14,14 +21,10 @@
 	,
 		kde_libiw_installed=no
 		AC_MSG_RESULT(no)
-)
-
-if test "$kde_libiw_installed" = "no"; then
-	DO_NOT_COMPILE="$DO_NOT_COMPILE wifi"
-fi
+	)
 
-AC_MSG_CHECKING([if wireless tools >= 27 are installed])
-AC_TRY_COMPILE(
+	AC_MSG_CHECKING([if wireless tools >= 27 are installed])
+	AC_TRY_COMPILE(
 	[
 		#include <iwlib.h>
 	],
@@ -54,6 +57,15 @@
                AC_MSG_RESULT(no)
         )
 	
-)
+	)
+
+	AC_LANG_RESTORE
 
-AC_LANG_RESTORE
+	if test "x$with_wifi" != xcheck && test "x$kde_libiw_installed" = xno; then
+		AC_MSG_ERROR([--with-wifi was given, but test for wireless-tools failed])
+	fi
+fi
+
+if test "$kde_libiw_installed" = "no"; then
+	DO_NOT_COMPILE="$DO_NOT_COMPILE wifi"
+fi
