Index: ksim/monitors/snmp/configure.in.in
===================================================================
--- ksim/monitors/snmp/configure.in.in	(revision 433553)
+++ ksim/monitors/snmp/configure.in.in	(working copy)
@@ -1,17 +1,20 @@
+AC_ARG_WITH(snmp,
+  [AS_HELP_STRING(--with-snmp,
+    [enable support for SNMP @<:@default=check@:>@])],
+  [], with_snmp=check)
 
-KDE_CHECK_HEADER( net-snmp/library/snmp_api.h, [ have_netsnmp_h=yes ], [ have_netsnmp_h=no ] )
+enable_snmp=no
+if test "x$with_snmp" != xno; then
+  KDE_CHECK_HEADER( net-snmp/library/snmp_api.h, [ have_netsnmp_h=yes ], [ have_netsnmp_h=no ] )
 
-enable_snmp=
-
-if test "$have_netsnmp_h" = yes; then
+  if test "$have_netsnmp_h" = yes; then
     KDE_CHECK_LIB( netsnmp, snmp_sess_init, [
         AC_SUBST( LIBSNMP, "-lnetsnmp" )
         enable_snmp=yes
     ], [], [] )
-fi
+  fi
 
-if test "$enable_snmp" != yes; then
-
+  if test "$enable_snmp" != yes; then
     AC_MSG_CHECKING([if libnetsnmp needs -lcrypto])
 
     dnl use a different symbol to prevent autoconf from caching
@@ -22,7 +25,11 @@
     ], [
         AC_MSG_RESULT(no)
     ], [-lcrypto] )
+  fi
+
+  if test "x$with_snmp" != xcheck && test "x$enable_snmp" != xyes; then
+    AC_MSG_FAILURE([--with-snmp was given, but test for net-snmp failed])
+  fi
 fi
 
-AM_CONDITIONAL(include_ksim_monitors_snmp, test -n "$enable_snmp")
-
+AM_CONDITIONAL(include_ksim_monitors_snmp, test "x$enable_snmp" = xyes)
