Use of tainted arguments in exec is deprecated at /var/www/cgi-bin/cvsweb.cgi line 2043.
===================================================================
RCS file: /home2/webcvs/mirror/kdebase/kioslave/ldap/configure.in.in,v
retrieving revision 1.18
retrieving revision 1.19
diff -u -p -r1.18 -r1.19
--- kioslave/ldap/configure.in.in	2004/02/12 20:14:04	1.18
+++ kioslave/ldap/configure.in.in	2004/08/29 14:50:59	1.19
@@ -95,7 +95,7 @@ NOTFOUND) AC_MSG_RESULT(searched but not
   ;;
 esac
 
-AC_CHECK_HEADERS(sasl.h)
+AC_CHECK_HEADERS(sasl/sasl.h sasl.h)
 
 AC_SUBST(LDAP_INCS)
 AC_SUBST(LDAP_LIBS)
Use of tainted arguments in exec is deprecated at /var/www/cgi-bin/cvsweb.cgi line 2043.
===================================================================
RCS file: /home2/webcvs/mirror/kdebase/kioslave/ldap/kio_ldap.cpp,v
retrieving revision 1.41
retrieving revision 1.41.2.1
diff -u -p -r1.41 -r1.41.2.1
--- kioslave/ldap/kio_ldap.cpp	2004/07/03 21:48:18	1.41
+++ kioslave/ldap/kio_ldap.cpp	2004/08/29 14:55:42	1.41.2.1
@@ -21,9 +21,13 @@
 #include <kinstance.h>
 #include <klocale.h>
 
+#ifdef HAVE_SASL_SASL_H //prefer libsasl2
+#include <sasl/sasl.h>
+#else
 #ifdef HAVE_SASL_H
 #include <sasl.h>
 #endif
+#endif
 #include <kabc/ldif.h>
 
 #include "kio_ldap.h"
@@ -506,7 +510,7 @@ typedef struct kldap_sasl_defaults_t {
   QString authzid;
 } kldap_sasl_defaults;
 
-#ifdef HAVE_SASL_H
+#if defined HAVE_SASL_H || defined HAVE_SASL_SASL_H
 static int kldap_sasl_interact( LDAP *, unsigned, void *defaults, void *in )
 {
   sasl_interact_t *interact = ( sasl_interact_t * ) in;
@@ -644,7 +648,7 @@ void LDAPProtocol::openConnection()
   while (!auth) {
     if ( mAuthSASL ) {
       kdDebug(7125) << "sasl_authentication mechanism:" << mechanism << endl;
-#ifdef HAVE_SASL_H      
+#if defined HAVE_SASL_H || defined HAVE_SASL_SASL_H
       defaults.realm = mRealm;
       defaults.authcid = mUser;
       defaults.passwd = mPassword;
@@ -658,7 +662,7 @@ void LDAPProtocol::openConnection()
     }
     kdDebug(7125) << "user: " << mUser << " bindname: " << mBindName << endl;
     if ( ( !mAuthSASL && mPassword.isEmpty() && !mBindName.isEmpty() ) || ( ret = ( 
-#ifdef HAVE_SASL_H      
+#if defined HAVE_SASL_H || defined HAVE_SASL_SASL_H
       mAuthSASL ? 
         ldap_sasl_interactive_bind_s( mLDAP, NULL, mechanism.utf8(), 
           NULL, NULL, LDAP_SASL_QUIET, &kldap_sasl_interact, &defaults ) :
