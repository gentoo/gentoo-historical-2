diff -ruN gtkmm-1.2.9.orig/src/build_sources/proxy.h.m4 gtkmm-1.2.9/src/build_sources/proxy.h.m4
--- gtkmm-1.2.9.orig/src/build_sources/proxy.h.m4	2004-05-23 16:31:57.125073328 +0200
+++ gtkmm-1.2.9/src/build_sources/proxy.h.m4	2004-05-23 16:38:47.675660152 +0200
@@ -174,20 +174,20 @@
           data.callback=&callback;
           data.obj=this;
           SigC::ScopeNode* node=tmp->receiver();
-          obj->register_data(node);
+          this->obj->register_data(node);
           return tmp;
         }
 
       RType emit(ARG_BOTH($1))
         {
           return reinterpret_cast<RType (*)(LIST(gObj*,1,ARG_TYPE($1),[$1]))>
-            (emit_func) (LIST(obj->gtkobj(),1,ARG_NAME($1),[$1]));
+            (emit_func) (LIST(this->obj->gtkobj(),1,ARG_NAME($1),[$1]));
         }
 
       RType operator()(ARG_BOTH($1))
         {
           return reinterpret_cast<RType (*)(LIST(gObj*,1,ARG_TYPE($1),[$1]))>
-            (emit_func) (LIST(obj->gtkobj(),1,ARG_NAME($1),[$1]));
+            (emit_func) (LIST(this->obj->gtkobj(),1,ARG_NAME($1),[$1]));
         }
 
   };
diff -ruN gtkmm-1.2.9.orig/src/curve.gen_h gtkmm-1.2.9/src/curve.gen_h
--- gtkmm-1.2.9.orig/src/curve.gen_h	2004-05-23 16:31:57.111075456 +0200
+++ gtkmm-1.2.9/src/curve.gen_h	2004-05-23 16:41:01.224357664 +0200
@@ -143,8 +143,8 @@
       int i;
       Iterator iter;
       for (iter=b,i=0;iter!=e;++iter,i++);
-      gfloat data[]=new gfloat[i];
-      get_vector(n,data);
+      gfloat *data=new gfloat[i];
+      get_vector(i,data);
       for (iter=b,i=0;iter!=e;++iter,i++)
         (*iter)=data[i];
       delete [] data;
diff -ruN gtkmm-1.2.9.orig/src/gtk--/base.h gtkmm-1.2.9/src/gtk--/base.h
--- gtkmm-1.2.9.orig/src/gtk--/base.h	2004-05-23 16:31:57.121073936 +0200
+++ gtkmm-1.2.9/src/gtk--/base.h	2004-05-23 16:35:27.421103472 +0200
@@ -90,6 +90,8 @@
 
 struct _GtkObject;
 
+namespace Gtk { Gtk::Object *wrap (GtkObject *o); }
+
 namespace Gtk
 {
 
@@ -482,7 +484,7 @@
   value_type operator*() const
   {
     if (node && node->data)
-      return Gtk::wrap(static_cast<impl*>((*node).data));
+    	return static_cast<value_type>(Gtk::wrap(static_cast<GtkObject*>((*node).data)));
     return 0;
   }
 
