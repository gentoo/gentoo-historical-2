diff -Naur gtkmm-2.2.12-orig/gtk/gtkmm/notebook.cc gtkmm-2.2.12/gtk/gtkmm/notebook.cc
--- gtkmm-2.2.12-orig/gtk/gtkmm/notebook.cc	2004-06-03 10:05:24.000000000 -0600
+++ gtkmm-2.2.12/gtk/gtkmm/notebook.cc	2007-02-14 13:46:28.000000000 -0600
@@ -796,7 +796,7 @@
   return RType();
 }
 
-void Notebook_Class::change_current_page_callback(GtkNotebook* self, gint p0)
+gboolean Notebook_Class::change_current_page_callback(GtkNotebook* self, gint p0)
 {
   CppObjectType *const obj = dynamic_cast<CppObjectType*>(
       Glib::ObjectBase::_get_current_wrapper((GObject*)self));
@@ -829,6 +829,9 @@
     if(base && base->change_current_page)
       (*base->change_current_page)(self, p0);
   }
+
+  typedef gboolean RType;
+  return RType();
 }
 
 void Notebook_Class::move_focus_out_callback(GtkNotebook* self, GtkDirectionType p0)
diff -Naur gtkmm-2.2.12-orig/gtk/gtkmm/private/notebook_p.h gtkmm-2.2.12/gtk/gtkmm/private/notebook_p.h
--- gtkmm-2.2.12-orig/gtk/gtkmm/private/notebook_p.h	2004-01-24 09:56:44.000000000 -0600
+++ gtkmm-2.2.12/gtk/gtkmm/private/notebook_p.h	2007-02-14 13:46:40.000000000 -0600
@@ -36,7 +36,7 @@
   static void switch_page_callback(GtkNotebook* self, GtkNotebookPage* p0, guint p1);
   static gboolean select_page_callback(GtkNotebook* self, gboolean p0);
   static gboolean focus_tab_callback(GtkNotebook* self, GtkNotebookTab p0);
-  static void change_current_page_callback(GtkNotebook* self, gint p0);
+  static gboolean change_current_page_callback(GtkNotebook* self, gint p0);
   static void move_focus_out_callback(GtkNotebook* self, GtkDirectionType p0);
 
   //Callbacks (virtual functions):
diff -Naur gtkmm-2.2.12-orig/gtk/gtkmm/private/scrolledwindow_p.h gtkmm-2.2.12/gtk/gtkmm/private/scrolledwindow_p.h
--- gtkmm-2.2.12-orig/gtk/gtkmm/private/scrolledwindow_p.h	2004-01-24 09:57:15.000000000 -0600
+++ gtkmm-2.2.12/gtk/gtkmm/private/scrolledwindow_p.h	2007-02-14 13:46:46.000000000 -0600
@@ -33,7 +33,7 @@
   //Callbacks (default signal handlers):
   //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
   //You could prevent the original default signal handlers being called by overriding the *_impl method.
-  static void scroll_child_callback(GtkScrolledWindow* self, GtkScrollType p0, gboolean p1);
+  static gboolean scroll_child_callback(GtkScrolledWindow* self, GtkScrollType p0, gboolean p1);
   static void move_focus_out_callback(GtkScrolledWindow* self, GtkDirectionType p0);
 
   //Callbacks (virtual functions):
diff -Naur gtkmm-2.2.12-orig/gtk/gtkmm/scrolledwindow.cc gtkmm-2.2.12/gtk/gtkmm/scrolledwindow.cc
--- gtkmm-2.2.12-orig/gtk/gtkmm/scrolledwindow.cc	2004-06-03 10:05:50.000000000 -0600
+++ gtkmm-2.2.12/gtk/gtkmm/scrolledwindow.cc	2007-02-14 13:46:52.000000000 -0600
@@ -166,7 +166,7 @@
 }
 
 
-void ScrolledWindow_Class::scroll_child_callback(GtkScrolledWindow* self, GtkScrollType p0, gboolean p1)
+gboolean ScrolledWindow_Class::scroll_child_callback(GtkScrolledWindow* self, GtkScrollType p0, gboolean p1)
 {
   CppObjectType *const obj = dynamic_cast<CppObjectType*>(
       Glib::ObjectBase::_get_current_wrapper((GObject*)self));
@@ -200,6 +200,9 @@
     if(base && base->scroll_child)
       (*base->scroll_child)(self, p0, p1);
   }
+
+  typedef gboolean RType;
+  return RType();
 }
 
 void ScrolledWindow_Class::move_focus_out_callback(GtkScrolledWindow* self, GtkDirectionType p0)
