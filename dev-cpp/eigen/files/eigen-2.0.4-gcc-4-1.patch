diff -r 4caa5b8cc482 Eigen/StdVector
--- a/Eigen/StdVector	Thu Aug 20 12:27:01 2009 -0400
+++ b/Eigen/StdVector	Fri Aug 21 11:35:55 2009 -0400
@@ -112,10 +112,8 @@
     else if (__new_size < vector_base::size())
       vector_base::erase(vector_base::begin() + __new_size, vector_base::end());
   }
-  #elif defined(_GLIBCXX_VECTOR) && EIGEN_GNUC_AT_LEAST(4,1)
+  #elif defined(_GLIBCXX_VECTOR) && EIGEN_GNUC_AT_LEAST(4,2)
   // workaround GCC std::vector implementation
-  // Note that before gcc-4.1 we already have: std::vector::resize(size_type,const T&),
-  // no no need to workaround !
   void resize(size_type __new_size, const value_type& __x)
   {                                              
     if (__new_size < vector_base::size())               
@@ -123,7 +121,17 @@
     else                       
       vector_base::insert(vector_base::end(), __new_size - vector_base::size(), __x); 
   }                                                              
+  #elif defined(_GLIBCXX_VECTOR) && EIGEN_GNUC_AT_LEAST(4,1)
+  void resize(size_type __new_size, const value_type& __x)
+  {
+    if (__new_size < vector_base::size())
+      erase(vector_base::begin() + __new_size, vector_base::end());
+    else
+      insert(vector_base::end(), __new_size - vector_base::size(), __x);
+  }
   #else
+  // Before gcc-4.1 we already have: std::vector::resize(size_type,const T&),
+  // so no need for a workaround !
   using vector_base::resize;
   #endif  
 };
