Index: ChangeLog
===================================================================
RCS file: /cvs/gnome/gnomemm/libgnomecanvasmm/ChangeLog,v
retrieving revision 1.55.2.2
diff -u -p -r1.55.2.2 ChangeLog
--- ChangeLog	2 May 2004 10:06:31 -0000	1.55.2.2
+++ ChangeLog	11 Jul 2004 18:05:21 -0000
@@ -1,3 +1,7 @@
+2004-07-11  Ed Catmur <ed@catmur.co.uk>
+
+	* examples/canvas_events/canvas_events.cc: use named enum, for gcc 3.4
+
 2004-05-01  Takashi Takekawa <takekawa@users.sourceforge.jp>
  
          * libgnomecanvas/libgnomecanvas.[h,cc] (GNOMEMM_PROPERTY,
Index: examples/canvas_events/canvas_events.cc
===================================================================
RCS file: /cvs/gnome/gnomemm/libgnomecanvasmm/examples/canvas_events/canvas_events.cc,v
retrieving revision 1.1
diff -u -p -r1.1 canvas_events.cc
--- examples/canvas_events/canvas_events.cc	9 Dec 2002 09:41:19 -0000	1.1
+++ examples/canvas_events/canvas_events.cc	11 Jul 2004 18:05:21 -0000
@@ -14,7 +14,7 @@
 
 guint32 etime = 0;
 guint	status = 0;
-enum
+enum someEnum
 {
   CE = 0,
   CEA = 1,
@@ -42,12 +42,12 @@ public:
   virtual ~CanvasExample();
 
 protected:
-  void on_event_explorer_notify(GdkEvent* e, guint caller);
-  void on_button_event_stub_notify(GdkEventButton* e, guint caller);
-  bool on_button_event_stub(GdkEventButton* e, guint caller);
+  void on_event_explorer_notify(GdkEvent* e, someEnum caller);
+  void on_button_event_stub_notify(GdkEventButton* e, someEnum caller);
+  bool on_button_event_stub(GdkEventButton* e, someEnum caller);
 
 private:
-  bool on_event_explorer(GdkEvent* e, guint caller);
+  bool on_event_explorer(GdkEvent* e, someEnum caller);
   Gnome::Canvas::Group m_canvasgroup;
 };
 
@@ -89,7 +89,7 @@ CanvasExample::~CanvasExample()
 }
 
 bool
-CanvasExample::on_event_explorer(GdkEvent* e, guint caller)
+CanvasExample::on_event_explorer(GdkEvent* e, someEnum caller)
 {
   GdkEventButton* b;
   // Ignore all but button-press events:
@@ -133,19 +133,19 @@ CanvasExample::on_event_explorer(GdkEven
 }
 
 void
-CanvasExample::on_event_explorer_notify(GdkEvent* e, guint caller)
+CanvasExample::on_event_explorer_notify(GdkEvent* e, someEnum caller)
 {
   std::cerr << "on_event_explorer_notify" << std::endl;
 }
 
 bool
-CanvasExample::on_button_event_stub(GdkEventButton* b, guint caller)
+CanvasExample::on_button_event_stub(GdkEventButton* b, someEnum caller)
 {
   return on_event_explorer((GdkEvent *) b, caller);
 }
 
 void
-CanvasExample::on_button_event_stub_notify(GdkEventButton* b, guint caller)
+CanvasExample::on_button_event_stub_notify(GdkEventButton* b, someEnum caller)
 {
   std::cerr << "on_button_event_stub_notify" << std::endl;
 }
