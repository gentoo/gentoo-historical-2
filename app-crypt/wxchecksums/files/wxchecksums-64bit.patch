--- src/frmSums.cpp.orig	2006-03-04 14:47:42.000000000 +0200
+++ src/frmSums.cpp	2006-10-03 17:18:36.000000000 +0300
@@ -1397,7 +1397,7 @@
 
     // Gets the column order
     for (i = 0; i < LVW_SUMS_NBCOLS; i++)
-      cols[i] = static_cast<ChecksumsListView::Columns>(reinterpret_cast<int>(d.lstSumsHeaders->GetClientData(i)));
+      cols[i] = static_cast<ChecksumsListView::Columns>(reinterpret_cast<long>(d.lstSumsHeaders->GetClientData(i)));
     if (!lvwSums->setColumns(cols))
       lvwSums->reformat();
 
@@ -1410,7 +1410,7 @@
     if (d.lstLanguages->GetSelection() >= 0)
     {
       Languages languages;
-      AppPrefs::get()->write(prLANGUAGE_NAME, languages.getLanguageShortName(reinterpret_cast<int>(d.lstLanguages->GetClientData(d.lstLanguages->GetSelection()))));
+      AppPrefs::get()->write(prLANGUAGE_NAME, languages.getLanguageShortName(reinterpret_cast<long>(d.lstLanguages->GetClientData(d.lstLanguages->GetSelection()))));
     }
 
     // Command line
--- src/md5.cpp.orig	2006-10-03 17:17:38.000000000 +0300
+++ src/md5.cpp	2006-10-03 17:18:32.000000000 +0300
@@ -145,9 +145,17 @@
     // To check alignment gcc has an appropriate operator.  Other compilers
     // don't.
       #if __GNUC__ >= 2
-        #define UNALIGNED_P(p) (((wxUint32) p) % __alignof__(wxUint32) != 0)
+        #if defined __LP64__ && __LP64__ == 1
+          #define UNALIGNED_P(p) (((wxUint64) p) % __alignof__(wxUint64) != 0)
+        #else
+          #define UNALIGNED_P(p) (((wxUint32) p) % __alignof__(wxUint32) != 0)
+        #endif
       #else
-        #define UNALIGNED_P(p) (((wxUint32) p) % sizeof(wxUint32) != 0)
+        #if defined __LP64__ && __LP64__ == 1
+          #define UNALIGNED_P(p) (((wxUint64) p) % sizeof(wxUint64) != 0)
+        #else
+          #define UNALIGNED_P(p) (((wxUint32) p) % sizeof(wxUint32) != 0)
+        #endif
       #endif  // __GNUC__ >= 2
 
     if (UNALIGNED_P(buf))
