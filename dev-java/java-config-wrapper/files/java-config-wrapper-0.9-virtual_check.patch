Index: src/shell/java-check-environment
===================================================================
--- src/shell/java-check-environment	(revision 2457)
+++ src/shell/java-check-environment	(working copy)
@@ -175,10 +175,23 @@
 	return ${this_result}
 }
 
+check_virtual_provides() {
+    local this_result=0
+    local provides=$(find /var/db/pkg -name PROVIDE | xargs egrep -l 'virtual/jdk|virtual/jre')
+    if [[ -n ${provides} ]]; then
+        qeerror "Found PROVIDE files from old-style virtuals. Please remove them:"
+        qecho "# rm ${provides}"
+
+        this_result=1
+    fi
+	update_result ${this_result}
+	return ${this_result}
+}
+
 qeinfo "=== Java Environment Checker ==="
 qeinfo "The purpose of this script is to check the sanity of your Java Environment."
 qeinfo "We have significantly changed and improved the way Java is handled in many respects."
-qeinfo "Please refer to https://projects.gentooexperimental.org/expj/wiki/ for details"
+qeinfo "Please refer to http://www.gentoo.org/proj/en/java/java-upgrade.xml for details"
 qecho
 
 RESULT=0
@@ -187,7 +200,7 @@
 # Get the list of checks to perform from the command line
 checks=$@
 # or use our default
-checks=${checks:="vm_environment_files user_settings generation_1_system_vm"}
+checks=${checks:="vm_environment_files user_settings generation_1_system_vm virtual_provides"}
 
 for check in ${checks}; do
 	if [ "$(type -t check_${checks})" == "function" ]; then
@@ -195,6 +208,7 @@
 		check_${check}
 		result=$?
 		qeend ${result}
+        qecho
 	else
 		eerror "Could not find function 'check_${check}'"
 		exit 1
