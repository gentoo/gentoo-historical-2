diff -uprN axion-1.0-M2.orig/src/org/axiondb/functions/Base64DecodeFunction.java axion-1.0-M2/src/org/axiondb/functions/Base64DecodeFunction.java
--- axion-1.0-M2.orig/src/org/axiondb/functions/Base64DecodeFunction.java	2005-03-27 20:08:11.177027480 +0200
+++ axion-1.0-M2/src/org/axiondb/functions/Base64DecodeFunction.java	2005-03-27 20:13:52.629118872 +0200
@@ -40,7 +40,7 @@
 
 package org.axiondb.functions;
 
-import org.apache.commons.codec.base64.Base64;
+import org.apache.commons.codec.binary.Base64;
 import org.axiondb.AxionException;
 import org.axiondb.DataType;
 import org.axiondb.FunctionFactory;
@@ -77,7 +77,7 @@ public class Base64DecodeFunction extend
             if(null == strval) {
                 return null;
             } else {
-                return Base64.decode(strval.getBytes());
+                return new Base64().decode(strval.getBytes());
             }
         } else {
             throw new AxionException("Value " + val + " cannot be converted to a StringType.");
diff -uprN axion-1.0-M2.orig/src/org/axiondb/functions/Base64EncodeFunction.java axion-1.0-M2/src/org/axiondb/functions/Base64EncodeFunction.java
--- axion-1.0-M2.orig/src/org/axiondb/functions/Base64EncodeFunction.java	2005-03-27 20:08:11.178027328 +0200
+++ axion-1.0-M2/src/org/axiondb/functions/Base64EncodeFunction.java	2005-03-27 20:14:12.834047256 +0200
@@ -46,7 +46,7 @@ import java.io.InputStream;
 import java.sql.Blob;
 import java.sql.SQLException;
 
-import org.apache.commons.codec.base64.Base64;
+import org.apache.commons.codec.binary.Base64;
 import org.axiondb.AxionException;
 import org.axiondb.DataType;
 import org.axiondb.FunctionFactory;
@@ -79,13 +79,13 @@ public class Base64EncodeFunction extend
         Selectable sel = getArgument(0);
         Object val = sel.evaluate(row);
         if(val instanceof byte[]) {
-            return new String(Base64.encode((byte[])val));            
+            return new String(new Base64().encode((byte[])val));            
         } else if(null == val) {
             return null;
         } else {
             try {
                 val = sel.getDataType().toBlob(val);
-                return new String(Base64.encode(readBlob((Blob)val)));            
+                return new String(new Base64().encode(readBlob((Blob)val)));            
             } catch(SQLException e) {
                 throw new AxionException(e);
             } catch(IOException e) {
