<?xml version="1.0" encoding="UTF-8"?>

<!--build.xml generated by maven from project.xml version 1.0-RC-01
  on date December 29 2006, time 0256-->
<project default="jar" name="groovy" basedir=".">
  <!--Load local and user build preferences-->
  <property file="build.properties"></property>
  <property file="${user.home}/build.properties"></property>
  <!--Build properties-->
  <property name="defaulttargetdir" value="${basedir}/target"></property>
  <property name="libdir" value="${user.home}/.maven/repository"></property>
  <property name="classesdir" value="${basedir}/target/classes"></property>
  <property name="testclassesdir" value="${basedir}/target/test-classes"></property>
  <property name="testreportdir" value="${basedir}/target/test-reports"></property>
  <property name="distdir" value="${basedir}/dist"></property>
  <property name="javadocdir" value="${basedir}/dist/docs/api"></property>
  <property name="final.name" value="groovy-1.0-RC-01"></property>
  <property name="proxy.host" value=""></property>
  <property name="proxy.port" value=""></property>
  <property name="proxy.username" value=""></property>
  <property name="proxy.password" value=""></property>
  <path id="build.classpath">
  	<fileset dir="${libdir}" includes="**/*.jar"/>
  </path>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}"></mkdir>
    <!--Test if user defined a proxy-->
    <condition property="useProxy">
      <and>
        <isset property="proxy.host"></isset>
        <not>
          <equals trim="true" arg2="" arg1="${proxy.host}"></equals>
        </not>
      </and>
    </condition>
  </target>
  <target name="compile" description="o Compile the code" depends="">
    <mkdir dir="${classesdir}"></mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${basedir}/src/main"></pathelement>
      </src>
      <classpath refid="build.classpath"></classpath>
    </javac>
    <copy todir="${classesdir}">
      <fileset dir="${basedir}/src/main">
        <include name="**/*.properties"></include>
        <include name="**/*.xml"></include>
      </fileset>
    </copy>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}"></jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}"></delete>
    <delete dir="${distdir}"></delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist"></mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar"></fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*"></fileset>
    </copy>
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures."></fail>
  </target>
  <target name="internal-test" if="test" depends="junit-present,compile-tests">
    <mkdir dir="${testreportdir}"></mkdir>
    <junit dir="${basedir}" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value="."></sysproperty>
      <formatter type="xml"></formatter>
      <formatter usefile="false" type="plain"></formatter>
      <classpath>
        <path refid="build.classpath"></path>
        <pathelement path="${testclassesdir}"></pathelement>
        <pathelement path="${classesdir}"></pathelement>
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="${basedir}/src/test">
          <include name="**/Uber*.*"></include>
          <exclude name="**/SignedJarTest.*"></exclude>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="junit-present" unless="test" depends="init">
    <echo>================================= WARNING ================================</echo>
    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
    <echo>==========================================================================</echo>
  </target>
  <target name="compile-tests" if="test" depends="junit-present,compile">
    <mkdir dir="${testclassesdir}"></mkdir>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${basedir}/src/test"></pathelement>
      </src>
      <classpath>
        <path refid="build.classpath"></path>
        <pathelement path="${classesdir}"></pathelement>
      </classpath>
    </javac>
    <copy todir="${testclassesdir}">
      <fileset dir="${basedir}/src/test">
        <include name="**/*.properties"></include>
        <include name="**/*.xml"></include>
        <include name="**/*.xsd"></include>
      </fileset>
    </copy>
    <copy todir="${testclassesdir}">
      <fileset dir="${basedir}/src/test">
        <include name="**/*.*"></include>
        <include name="**/groovy*"></include>
      </fileset>
    </copy>
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="">
    <mkdir dir="${javadocdir}"></mkdir>
    <tstamp>
      <format pattern="2003-yyyy" property="year"></format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  The Codehaus. All Rights Reserved."></property>
    <property name="title" value="groovy 1.0-RC-01 API"></property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="${basedir}/src/main" packagenames=".*">
      <classpath>
        <path refid="build.classpath"></path>
      </classpath>
    </javadoc>
  </target>
</project>
