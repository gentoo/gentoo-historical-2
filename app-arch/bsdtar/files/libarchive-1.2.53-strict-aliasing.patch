Index: libarchive-1.2.53/libarchive/archive_read.c
===================================================================
--- libarchive-1.2.53.orig/libarchive/archive_read.c
+++ libarchive-1.2.53/libarchive/archive_read.c
@@ -392,7 +392,7 @@ archive_read_data(struct archive *a, voi
 	while (s > 0) {
 		if (a->read_data_remaining <= 0) {
 			r = archive_read_data_block(a,
-			    (const void **)&a->read_data_block,
+			    &a->read_data_block,
 			    &a->read_data_remaining,
 			    &a->read_data_offset);
 			if (r == ARCHIVE_EOF)
Index: libarchive-1.2.53/libarchive/archive_read_support_compression_bzip2.c
===================================================================
--- libarchive-1.2.53.orig/libarchive/archive_read_support_compression_bzip2.c
+++ libarchive-1.2.53/libarchive/archive_read_support_compression_bzip2.c
@@ -339,7 +339,7 @@ drive_decompressor(struct archive *a, st
 	for (;;) {
 		if (state->stream.avail_in == 0) {
 			ret = (a->client_reader)(a, a->client_data,
-			    (const void **)&state->stream.next_in);
+			    &state->stream.next_in);
 			if (ret < 0) {
 				/*
 				 * TODO: Find a better way to handle
Index: libarchive-1.2.53/libarchive/archive_read_support_compression_compress.c
===================================================================
--- libarchive-1.2.53.orig/libarchive/archive_read_support_compression_compress.c
+++ libarchive-1.2.53/libarchive/archive_read_support_compression_compress.c
@@ -460,7 +460,7 @@ getbits(struct archive *a, struct privat
 	while (state->bits_avail < n) {
 		if (state->avail_in <= 0) {
 			ret = (a->client_reader)(a, a->client_data,
-			    (const void **)&state->next_in);
+			    &state->next_in);
 			if (ret < 0)
 				return (ARCHIVE_FATAL);
 			if (ret == 0)
Index: libarchive-1.2.53/libarchive/archive_read_support_compression_gzip.c
===================================================================
--- libarchive-1.2.53.orig/libarchive/archive_read_support_compression_gzip.c
+++ libarchive-1.2.53/libarchive/archive_read_support_compression_gzip.c
@@ -349,7 +349,7 @@ drive_decompressor(struct archive *a, st
 	for (;;) {
 		if (state->stream.avail_in == 0) {
 			ret = (a->client_reader)(a, a->client_data,
-			    (const void **)&state->stream.next_in);
+			    &state->stream.next_in);
 			if (ret < 0) {
 				/*
 				 * TODO: Find a better way to handle
Index: libarchive-1.2.53/libarchive/archive_read_support_compression_none.c
===================================================================
--- libarchive-1.2.53.orig/libarchive/archive_read_support_compression_none.c
+++ libarchive-1.2.53/libarchive/archive_read_support_compression_none.c
@@ -203,7 +203,7 @@ archive_decompressor_none_read_ahead(str
 			 * aren't, hence the cast.
 			 */
 			bytes_read = (a->client_reader)(a, a->client_data,
-			    (const void **)&state->client_buff);
+			    &state->client_buff);
 			if (bytes_read < 0) {		/* Read error. */
 				state->client_total = state->client_avail = 0;
 				state->client_next = state->client_buff = NULL;
