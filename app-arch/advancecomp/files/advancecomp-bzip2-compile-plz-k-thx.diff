diff -ruN advancecomp-1.8/compress.cc advancecomp-1.8.new/compress.cc
--- advancecomp-1.8/compress.cc	2003-10-05 18:59:02.000000000 +0100
+++ advancecomp-1.8.new/compress.cc	2003-10-31 19:32:12.000000000 +0000
@@ -177,14 +177,14 @@
 }
 
 #ifdef USE_BZIP2
-bool compress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int blocksize, int workfactor) {
-	return BZ2_bzBuffToBuffCompress(out_data,&out_size,const_cast<unsigned char*>(in_data),in_size,blocksize,0,workfactor) == BZ_OK;
+bool compress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned& out_size, int blocksize, int workfactor) {
+	return BZ2_bzBuffToBuffCompress(out_data,&out_size,const_cast<char*>(in_data),in_size,blocksize,0,workfactor) == BZ_OK;
 }
 
-bool decompress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size) {
+bool decompress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned out_size) {
 	unsigned size = out_size;
 
-	if (BZ2_bzBuffToBuffDecompress(out_data,&size,const_cast<unsigned char*>(in_data),in_size,0,0)!=BZ_OK)
+	if (BZ2_bzBuffToBuffDecompress(out_data,&size,const_cast< char*>(in_data),in_size,0,0)!=BZ_OK)
 		return false;
 
 	if (size != out_size)
diff -ruN advancecomp-1.8/compress.h advancecomp-1.8.new/compress.h
--- advancecomp-1.8/compress.h	2003-10-05 18:59:10.000000000 +0100
+++ advancecomp-1.8.new/compress.h	2003-10-31 19:31:25.000000000 +0000
@@ -40,8 +40,8 @@
 bool decompress_deflate_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size);
 bool compress_deflate_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int compression_level, int strategy, int mem_level);
 
-bool decompress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size);
-bool compress_bzip2(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int blocksize, int workfactor);
+bool decompress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned out_size);
+bool compress_bzip2(const char* in_data, unsigned in_size, char* out_data, unsigned& out_size, int blocksize, int workfactor);
 
 bool decompress_rfc1950_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned out_size);
 bool compress_rfc1950_zlib(const unsigned char* in_data, unsigned in_size, unsigned char* out_data, unsigned& out_size, int compression_level, int strategy, int mem_level);
diff -ruN advancecomp-1.8/stamp-h1 advancecomp-1.8.new/stamp-h1
--- advancecomp-1.8/stamp-h1	1970-01-01 01:00:00.000000000 +0100
+++ advancecomp-1.8.new/stamp-h1	2003-10-31 19:32:35.000000000 +0000
@@ -0,0 +1 @@
+timestamp for config.h
diff -ruN advancecomp-1.8/zipsh.cc advancecomp-1.8.new/zipsh.cc
--- advancecomp-1.8/zipsh.cc	2003-02-10 19:25:05.000000000 +0000
+++ advancecomp-1.8.new/zipsh.cc	2003-10-31 19:34:31.000000000 +0000
@@ -38,7 +38,7 @@
 		}
 #ifdef USE_BZIP2
 	} else if (info.compression_method == ZIP_METHOD_BZIP2) {
-		if (!decompress_bzip2(data,compressed_size_get(),uncompressed_data,uncompressed_size_get())) {
+		if (!decompress_bzip2((char *)data,compressed_size_get(),(char *)uncompressed_data,uncompressed_size_get())) {
 			data_free(uncompressed_data);
 			throw error() << "Invalid compressed data on file " << name_get();
 		}
@@ -246,7 +246,7 @@
 			c1_met = ZIP_METHOD_BZIP2;
 			c1_fla = 0;
 
-			if (!compress_bzip2(uncompressed_data,uncompressed_size_get(),c1_data,c1_size,bzip2_level,bzip2_workfactor)) {
+			if (!compress_bzip2((char *)uncompressed_data,uncompressed_size_get(),(char *)c1_data,c1_size,bzip2_level,bzip2_workfactor)) {
 				data_free(c1_data);
 				c1_data = 0;
 			}
