diff -Nurp a/compat.h ./compat.h
--- a/compat.h	2008-08-05 12:13:37.000000000 -0600
+++ b/compat.h	2008-08-18 10:59:06.974647262 -0600
@@ -1,6 +1,9 @@
 #ifndef _COMPAT_H_
 #define _COMPAT_H_
 
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,26)
+#define trylock_page(page) (!TestSetPageLocked(page))
+#endif
 
 /*
  * Even if AppArmor isn't enabled, it still has different prototypes.
diff -Nurp a/ctree.h ./ctree.h
--- a/ctree.h	2008-08-05 12:13:37.000000000 -0600
+++ b/ctree.h	2008-08-18 10:59:07.004646324 -0600
@@ -1648,7 +1648,7 @@ int btrfs_csum_truncate(struct btrfs_tra
 /* inode.c */
 
 /* RHEL and EL kernels have a patch that renames PG_checked to FsMisc */
-#ifdef ClearPageFsMisc
+#if defined(ClearPageFsMisc) && !defined(ClearPageChecked)
 #define ClearPageChecked ClearPageFsMisc
 #define SetPageChecked SetPageFsMisc
 #define PageChecked PageFsMisc
diff -Nurp a/extent_io.c ./extent_io.c
--- a/extent_io.c	2008-08-05 12:13:37.000000000 -0600
+++ b/extent_io.c	2008-08-18 10:59:07.044650492 -0600
@@ -14,6 +14,7 @@
 #include <linux/pagevec.h>
 #include "extent_io.h"
 #include "extent_map.h"
+#include "compat.h"
 
 /* temporary define until extent_map moves out of btrfs */
 struct kmem_cache *btrfs_cache_create(const char *name, size_t size,
@@ -3055,7 +3056,7 @@ int read_extent_buffer_pages(struct exte
 	for (i = start_i; i < num_pages; i++) {
 		page = extent_buffer_page(eb, i);
 		if (!wait) {
-			if (TestSetPageLocked(page))
+			if (!trylock_page(page))
 				goto unlock_exit;
 		} else {
 			lock_page(page);
