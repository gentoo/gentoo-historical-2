--- udev-019/udev-add.c.orig	2004-02-29 01:06:08.867518640 +0200
+++ udev-019/udev-add.c	2004-02-29 01:12:55.516698568 +0200
@@ -132,9 +132,27 @@ static int make_node(char *filename, int
 	return 0;
 }
 
-static int create_node(struct udevice *dev, int fake)
+static int unlink_entry(char *filename, int fake)
 {
 	struct stat stats;
+	int retval;
+	
+	if (!fake && (lstat(filename, &stats) == 0)) {
+		if ((stats.st_mode & S_IFMT) != S_IFDIR) {
+			retval = unlink(filename);
+			if (retval) {
+				dbg("unlink(%s) failed with error '%s'",
+				    filename, strerror(errno));
+				return retval;
+			}
+		}
+	}
+
+	return 0;
+}
+
+static int create_node(struct udevice *dev, int fake)
+{
 	char filename[255];
 	char linktarget[255];
 	char partitionname[255];
@@ -198,6 +216,8 @@ static int create_node(struct udevice *d
 	}
 
 	if (!fake) {
+		/* unlink existing files to ensure that our symlink is created */
+		unlink_entry(filename, fake);
 		info("creating device node '%s'", filename);
 		make_node(filename, dev->major, dev->minor, dev->mode, uid, gid);
 	} else {
@@ -212,6 +232,8 @@ static int create_node(struct udevice *d
 		if (!fake) {
 			for (i = 1; i <= dev->partitions; i++) {
 				sprintf(partitionname, "%s%i", filename, i);
+				/* unlink existing files to ensure that our symlink is created */
+				unlink_entry(partitionname, fake);
 				make_node(partitionname, dev->major,
 					  dev->minor + i, dev->mode, uid, gid);
 			}
@@ -254,13 +276,7 @@ static int create_node(struct udevice *d
 			strfieldcat(linktarget, &dev->name[tail]);
 
 			/* unlink existing files to ensure that our symlink is created */
-			if (!fake && (lstat(filename, &stats) == 0)) {
-				if ((stats.st_mode & S_IFMT) != S_IFDIR) {
-					if (unlink(filename))
-						dbg("unlink(%s) failed with error '%s'",
-						    filename, strerror(errno));
-				}
-			}
+			unlink_entry(filename, fake);
 
 			dbg("symlink(%s, %s)", linktarget, filename);
 			if (!fake) {
