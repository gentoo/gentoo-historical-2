#!/sbin/runscript
# Copyright 1999-2005 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/sys-fs/clvm/files/clvmd.rc,v 1.4 2008/03/29 15:42:28 xmerlin Exp $

CLVM_BIN="/sbin/clvmd"
VGCHANGE="/sbin/vgchange"
VGSCAN="/sbin/vgscan"
VGDISPLAY="/sbin/vgdisplay"

depend() {
	use dns logger
	use net
	need cman
	before gfs
}

load_modules() {
	local module modules
	modules=$1
	
	for module in ${modules}; do
		ebegin "Loading ${module} kernel module"
		modprobe ${module}
		eend $? "Failed to load ${module} kernel module"
	done
}

unload_modules() {
	local module modules
	modules=$1
	
	for module in ${modules}; do
		ebegin "Unloading ${module} kernel module"
		modprobe -r ${module}
		eend $? "Failed to unload ${module} kernel module"
	done
}

umount_gfs_filesystems() {
	local sig retry
	local remaining="$(awk '$3 == "gfs" { print $2 }' /proc/mounts | sort -r)"

	if [ -n "${remaining}" ]
	then
	        sig=
	        retry=3
	        while [ -n "${remaining}" -a "${retry}" -gt 0 ]
	        do
	                if [ "${retry}" -lt 3 ]
			then
	                        ebegin "Unmounting GFS filesystems (retry)"
	                        umount ${remaining} &>/dev/null
	                        eend $? "Failed to unmount GFS filesystems this retry"
	                else
	                        ebegin "Unmounting GFS filesystems"
	                        umount ${remaining} &>/dev/null
	                        eend $? "Failed to unmount GFS filesystems"
	                fi
	                remaining="$(awk '$3 == "gfs" { print $2 }' /proc/mounts | sort -r)"
	                [ -z "${remaining}" ] && break
	                /bin/fuser -k -m ${sig} ${remaining} &>/dev/null
	                sleep 5
	                retry=$((${retry} -1))
	                sig=-9
	        done
	fi
}

start() {

	local module=$(awk '$1 == "dm_mod" { print $1 }' /proc/{modules,devices})

	if [ -z "${module}" ]; then
		load_modules "dm-mod"
		sleep 1s
	fi

	ebegin "Starting clvmd"
	start-stop-daemon --start --quiet --exec ${CLVM_BIN}
	eend $?

	ebegin "Scanning LVM volumes"
	${VGSCAN} &>/dev/null
	eend $?
	
	#if [ "$?" -eq 0 ] && [ -x /sbin/vgchange ] && [ -f /etc/lvmtab -o -d /etc/lvm ]
	#then
	#	ebegin "Setting up the Logical Volume Manager"
	#	/sbin/vgchange -aly >/dev/null
	#	eend $? "Failed to setup the LVM"
	#fi

	if [ -n "$LVM_VGS" ]
	then
		for vg in $LVM_VGS
		do
			ebegin "  Activating VG: ${vg} "
                        $VGCHANGE -ayl ${vg} >/dev/null
                        eend $?
		done
	else
		clustervgs=`$VGDISPLAY 2> /dev/null | awk 'BEGIN {RS="VG Name"} {if (/Clustered/) print $1;}'`
		for vg in $clustervgs; do
			ebegin "  Activating Clustered VG: ${vg} "
			$VGCHANGE -ayl ${vg} >/dev/null
			eend $?
		done
	fi
}

stop() {
	# umount GFS filesystems
	umount_gfs_filesystems

	sleep 2	

	if [ -n "$LVM_VGS" ]
	then
		for vg in $LVM_VGS
		do
			ebegin "  Shutting Down VG: ${vg} "
			$VGCHANGE -anl ${vg} >/dev/null
			eend $?
		done
	else
		# Deactivate only clustered volumes
		clustervgs=`$VGDISPLAY 2> /dev/null | awk 'BEGIN {RS="VG Name"} {if (/Clustered/) print $1;}'`
		for vg in $clustervgs; do
			ebegin "  Shutting Down Clustered VG: ${vg} "
			$VGCHANGE -anl ${vg} >/dev/null
			eend $?
		done
	fi

	ebegin "Stopping clvmd"
	#start-stop-daemon --stop -s 9 --quiet --exec ${CLVM_BIN} --name clvmd
	killall -TERM ${CLVM_BIN} >/dev/null
	eend $?

}
