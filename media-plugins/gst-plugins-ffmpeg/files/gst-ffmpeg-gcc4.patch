diff -Naur gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/avcodec.h gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/avcodec.h
--- gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/avcodec.h	2004-12-16 18:47:15.000000000 +0100
+++ gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/avcodec.h	2005-05-15 00:59:20.508942904 +0200
@@ -1757,6 +1757,13 @@
 #define FF_OPT_MAX_DEPTH 10
 } AVOption;
 
+#ifdef HAVE_MMX
+extern const struct AVOption avoptions_common[3 + 5];
+#else
+extern const struct AVOption avoptions_common[3];
+#endif
+extern const struct AVOption avoptions_workaround_bug[11];
+
 /**
  * Parse option(s) and sets fields in passed structure
  * @param strct	structure where the parsed results will be written
diff -Naur gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/common.h gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/common.h
--- gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/common.h	2004-12-16 18:47:16.000000000 +0100
+++ gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/common.h	2005-05-15 00:59:20.510942600 +0200
@@ -62,14 +62,6 @@
 #define AVOPTION_SUB(ptr) { .name = NULL, .help = (const char*)ptr }
 #define AVOPTION_END() AVOPTION_SUB(NULL)
 
-struct AVOption;
-#ifdef HAVE_MMX
-extern const struct AVOption avoptions_common[3 + 5];
-#else
-extern const struct AVOption avoptions_common[3];
-#endif
-extern const struct AVOption avoptions_workaround_bug[11];
-
 #endif /* HAVE_AV_CONFIG_H */
 
 /* Suppress restrict if it was not defined in config.h.  */
diff -Naur gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/i386/dsputil_mmx.c gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/i386/dsputil_mmx.c
--- gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/i386/dsputil_mmx.c	2004-12-16 18:48:06.000000000 +0100
+++ gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/i386/dsputil_mmx.c	2005-05-15 00:59:29.139630840 +0200
@@ -672,26 +672,22 @@
         "punpcklwd %%mm0, %%mm1		\n\t"
         "punpckhwd %%mm4, %%mm3		\n\t"
         "punpckhwd %%mm0, %%mm6		\n\t"
-        "movd %%mm5, %0			\n\t"
+        "movd %%mm5, (%0)		\n\t"
         "punpckhdq %%mm5, %%mm5		\n\t"
-        "movd %%mm5, %1			\n\t"
-        "movd %%mm3, %2			\n\t"
+        "movd %%mm5, (%0,%2)		\n\t"
+        "movd %%mm3, (%0,%2,2)		\n\t"
         "punpckhdq %%mm3, %%mm3		\n\t"
-        "movd %%mm3, %3			\n\t"
-        "movd %%mm1, %4			\n\t"
+        "movd %%mm3, (%0,%3)		\n\t"
+        "movd %%mm1, (%1)		\n\t"
         "punpckhdq %%mm1, %%mm1		\n\t"
-        "movd %%mm1, %5			\n\t"
-        "movd %%mm6, %6			\n\t"
+        "movd %%mm1, (%1,%2)		\n\t"
+        "movd %%mm6, (%1,%2,2)		\n\t"
         "punpckhdq %%mm6, %%mm6		\n\t"
-        "movd %%mm6, %7			\n\t"
-        : "=m" (*(uint32_t*)(src + 0*stride)),
-          "=m" (*(uint32_t*)(src + 1*stride)),
-          "=m" (*(uint32_t*)(src + 2*stride)),
-          "=m" (*(uint32_t*)(src + 3*stride)),
-          "=m" (*(uint32_t*)(src + 4*stride)),
-          "=m" (*(uint32_t*)(src + 5*stride)),
-          "=m" (*(uint32_t*)(src + 6*stride)),
-          "=m" (*(uint32_t*)(src + 7*stride))
+        "movd %%mm6, (%1,%3)		\n\t"
+        :: "r" (src),
+           "r" (src + 4*stride),
+           "r" ((long)   stride ),
+           "r" ((long)(3*stride))
     );
 }
 
diff -Naur gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/libpostproc/postprocess_template.c gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/libpostproc/postprocess_template.c
--- gst-ffmpeg-0.8.4/gst-libs/ext/ffmpeg/libavcodec/libpostproc/postprocess_template.c	2004-12-16 18:48:16.000000000 +0100
+++ gst-ffmpeg-0.8.4-gcc4/gst-libs/ext/ffmpeg/libavcodec/libpostproc/postprocess_template.c	2005-05-15 00:59:20.506943208 +0200
@@ -611,6 +611,7 @@
 static inline void RENAME(doVertDefFilter)(uint8_t src[], int stride, PPContext *c)
 {
 #if defined (HAVE_MMX2) || defined (HAVE_3DNOW)
+	PPContext *ptr_c_pQPb = c->pQPb;
 /*
 	uint8_t tmp[16];
 	const int l1= stride;
@@ -832,7 +833,7 @@
 		"movq %%mm2, (%0, %1, 4)			\n\t"
 
 		:
-		: "r" (src), "r" ((long)stride), "m" (c->pQPb)
+		: "r" (src), "r" ((long)stride), "m" (ptr_c_pQPb)
 		: "%"REG_a, "%"REG_c
 	);
 
@@ -2758,6 +2759,7 @@
 	if(dc_mask & eq_mask){
 		long offset= -8*step;
 		int64_t *temp_sums= sums;
+		int64_t dc_eq_mask = dc_mask & eq_mask;
 
 		asm volatile(
 		"movq %2, %%mm0					\n\t"  // QP,..., QP
@@ -2930,7 +2932,7 @@
 		" js 1b						\n\t"
 
 		: "+r"(offset), "+r"(temp_sums)
-		: "r" ((long)step), "r"(src - offset), "m"(dc_mask & eq_mask)
+		: "r" ((long)step), "r"(src - offset), "m"(dc_eq_mask)
 		);
 	}else
 		src+= step; // src points to begin of the 8x8 Block
