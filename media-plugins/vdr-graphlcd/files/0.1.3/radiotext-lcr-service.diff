diff -Naur graphlcd-0.1.3.orig/state.c graphlcd-0.1.3/state.c
--- graphlcd-0.1.3.orig/state.c	2006-01-15 18:25:47.000000000 +0100
+++ graphlcd-0.1.3/state.c	2006-03-03 17:25:38.914590500 +0100
@@ -16,6 +16,7 @@
 
 #include <vdr/eitscan.h>
 #include <vdr/i18n.h>
+#include <vdr/plugin.h>
 
 #include "compat.h"
 
@@ -619,7 +620,10 @@
 void cGraphLCDState::SetChannel(int ChannelNumber)
 {
 	char tmp[16];
-
+// patch start (http://www.vdr-portal.de/board/thread.php?postid=415431#post415431)
+   if (ChannelNumber == 0)
+       return;
+// patch end
 	mutex.Lock();
 
 	channel.number = ChannelNumber;
@@ -638,6 +642,8 @@
 
 void cGraphLCDState::GetProgramme()
 {
+    bool ptitle = false;
+
 	mutex.Lock();
 #if VDRVERSNUM < 10300
 	const cEventInfo * present = NULL, * following = NULL;
@@ -654,9 +660,11 @@
 				{
 					event.presentTime = present->GetTime();
 					event.presentTitle = "";
-					if (!isempty(present->GetTitle()))
+					if (!isempty(present->GetTitle())) {
 						event.presentTitle = present->GetTitle();
 					event.presentSubtitle = "";
+					ptitle = true;
+					}
 					if (!isempty(present->GetSubtitle()))
 						event.presentSubtitle = present->GetSubtitle();
 				}
@@ -688,9 +696,11 @@
 				{
 					event.presentTime = present->StartTime();
 					event.presentTitle = "";
-					if (!isempty(present->Title()))
+					if (!isempty(present->Title())) {
 						event.presentTitle = present->Title();
 					event.presentSubtitle = "";
+					ptitle = true;
+					}
 					if (!isempty(present->ShortText()))
 						event.presentSubtitle = present->ShortText();
 				}
@@ -708,6 +718,54 @@
 		}
 	}
 #endif
+
+#if VDRVERSNUM >= 10330
+   { // get&display Radiotext
+       cPlugin *p;
+       p = cPluginManager::CallFirstService("RadioTextService-v1.0", NULL);
+       if (p) {
+           RadioTextService_v1_0 rtext;
+           if (cPluginManager::CallFirstService("RadioTextService-v1.0", &rtext)) {
+               if (rtext.rds_info == 2 && strstr(rtext.rds_title, "---") == NULL) {
+                   char rtpinfo[2][65], rtstr[140];
+                   strcpy(rtpinfo[0], rtext.rds_title);
+                   strcpy(rtpinfo[1], rtext.rds_artist);
+                   sprintf(rtstr, "%02d:%02d  %s | %s", rtext.title_start->tm_hour, rtext.title_start->tm_min, trimright(rtpinfo[0]), trimright(rtpinfo[1]));
+                       ptitle ? event.presentSubtitle = rtstr : event.presentTitle = rtstr;
+               }
+               else if (rtext.rds_info > 0) {
+                   char rtstr[65];
+                   strcpy(rtstr, rtext.rds_text);
+                   ptitle ? event.presentSubtitle = trimright(rtstr) : event.presentTitle = trimright(rtstr);
+               }
+           }
+       }
+   }
+#endif
+
+#if VDRVERSNUM >= 10330
+   { // get&display LcrData
+       cPlugin *p;
+       p = cPluginManager::CallFirstService("LcrService-v1.0", NULL);
+       if (p)
+       {
+           LcrService_v1_0 lcrData;
+           if (cPluginManager::CallFirstService("LcrService-v1.0", &lcrData))
+           {
+               if ( strstr( lcrData.destination, "---" ) == NULL )
+               {
+                   char lcrStringParts[3][25], lcrString[100];
+                   strcpy( lcrStringParts[0], (const char *)lcrData.destination );
+                   strcpy( lcrStringParts[1], (const char *)lcrData.price );
+                   strcpy( lcrStringParts[2], (const char *)lcrData.pulse );
+                   sprintf(lcrString, "%s | %s", trimright(lcrStringParts[1]), trimright(lcrStringParts[2]));
+                   event.presentTitle = trimright(lcrStringParts[0]);
+                   event.presentSubtitle = trimright(lcrString);
+               }
+           }
+       }
+   }
+#endif
 	mutex.Unlock();
 }
 
diff -Naur graphlcd-0.1.3.orig/state.h graphlcd-0.1.3/state.h
--- graphlcd-0.1.3.orig/state.h	2006-01-15 18:19:59.000000000 +0100
+++ graphlcd-0.1.3/state.h	2006-03-03 17:13:36.801461250 +0100
@@ -127,4 +127,21 @@
 	tVolumeState GetVolumeState();
 };
 
+// Radiotext
+struct RadioTextService_v1_0 {
+  int rds_info;
+  int rds_pty;
+  char *rds_text;
+  char *rds_title;
+  char *rds_artist;
+  struct tm *title_start;
+};
+
+// LcrData
+struct LcrService_v1_0 {
+  cString destination;
+  cString price;
+  cString pulse;
+};
+
 #endif
