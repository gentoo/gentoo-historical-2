--- swh-plugins-0.4.3-orig/delay_1898.xml	2004-06-23 23:06:32.673601008 +0200
+++ swh-plugins-0.4.3/delay_1898.xml	2004-06-23 23:08:48.793907576 +0200
@@ -81,7 +81,7 @@
 
           for (i=0; i<to_process; i++) {
             float read = *(readptr++);
-            *(writeptr++) = *(in++);
+            *(writeptr++) = in[i];
 	    buffer_write(out[i], read);
           }
 
@@ -103,7 +103,7 @@
           read_phase = write_phase - (long)delay_samples;
 
           read = buffer[read_phase & buffer_mask];
-          buffer[write_phase & buffer_mask] = *(in++);
+          buffer[write_phase & buffer_mask] = in[i];
 	  buffer_write(out[i], read);
         }
 
@@ -199,7 +199,7 @@
           read = LIN_INTERP (frac,
                                  buffer[(read_phase-1) & buffer_mask],
                                  buffer[read_phase & buffer_mask]);
-          buffer[write_phase & buffer_mask] = *(in++);
+          buffer[write_phase & buffer_mask] = in[i];
 	  buffer_write(out[i], read);
           write_phase++;
         }
@@ -219,7 +219,7 @@
           read = LIN_INTERP (frac,
                              buffer[(read_phase-1) & buffer_mask],
                              buffer[read_phase & buffer_mask]); 
-          buffer[write_phase & buffer_mask] = *(in++);
+          buffer[write_phase & buffer_mask] = in[i];
 	  buffer_write(out[i], read);
         }
 
@@ -316,7 +316,7 @@
                                           buffer[read_phase & buffer_mask], 
                                           buffer[(read_phase+1) & buffer_mask], 
                                           buffer[(read_phase+2) & buffer_mask]);
-          buffer[write_phase++ & buffer_mask] = *(in++);
+          buffer[write_phase++ & buffer_mask] = in[i];
 	  buffer_write(out[i], read);
         }
       } else {
@@ -337,7 +337,7 @@
                               buffer[read_phase & buffer_mask], 
                               buffer[(read_phase+1) & buffer_mask], 
                               buffer[(read_phase+2) & buffer_mask]);
-          buffer[write_phase & buffer_mask] = *(in++);
+          buffer[write_phase & buffer_mask] = in[i];
 	  buffer_write(out[i], read);
         }
 
