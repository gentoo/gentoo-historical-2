Index: text2skin-1.1-cvs_ext-0.10-patched-20070506/xml/object.h
===================================================================
--- text2skin-1.1-cvs_ext-0.10-patched-20070506.orig/xml/object.h
+++ text2skin-1.1-cvs_ext-0.10-patched-20070506/xml/object.h
@@ -55,7 +55,7 @@ public:
 	uint           Type(void)      const { return mRefreshType; }
 	bool           Parse(const std::string &Text);
 	bool           ParseChanged(const std::string &Text);
-	cxRefresh     &cxRefresh::operator=(const cxRefresh &b);
+	cxRefresh     &operator=(const cxRefresh &b);
 
 private:
 	uint           mRefreshType;
Index: text2skin-1.1-cvs_ext-0.10-patched-20070506/xml/skin.h
===================================================================
--- text2skin-1.1-cvs_ext-0.10-patched-20070506.orig/xml/skin.h
+++ text2skin-1.1-cvs_ext-0.10-patched-20070506/xml/skin.h
@@ -28,21 +28,21 @@ public:
 	bool Limit( int ma, int min ) const {
 		return mMajor < ma ? true : (mMajor == ma ? mMinor <= min : false);
 	}
-	bool cxVersion::operator==( const cxVersion &v ) const {
+	bool operator==( const cxVersion &v ) const {
 		return mMajor == v.mMajor && mMinor == v.mMinor;
 	}
-	bool cxVersion::operator>=( const cxVersion &v ) const { 
+	bool operator>=( const cxVersion &v ) const { 
 		return Require(  v.mMajor , v.mMinor);
 	}
-	bool cxVersion::operator>=( const char *c ) const { 
+	bool operator>=( const char *c ) const { 
 		cxVersion v;
 		if( !v.Parse(c) ) return false;
 		return Require(  v.mMajor , v.mMinor);
 	}
-	bool cxVersion::operator<=( const cxVersion &v ) const {
+	bool operator<=( const cxVersion &v ) const {
 		return Limit( v.mMajor , v.mMinor );
 	}
-	bool cxVersion::operator<=( const char *c ) const { 
+	bool operator<=( const char *c ) const { 
 		cxVersion v;
 		if( !v.Parse(c) ) return false;
 		return Limit(  v.mMajor , v.mMinor);
