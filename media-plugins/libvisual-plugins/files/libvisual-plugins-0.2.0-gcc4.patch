--- plugins/actor/bumpscope/bump_scope.c~	2005-01-18 13:52:43.000000000 +0100
+++ plugins/actor/bumpscope/bump_scope.c	2005-09-01 09:45:42.000000000 +0200
@@ -56,7 +56,7 @@
 
 		__asm __volatile
 			("pxor %%mm6, %%mm6"
-			 ::: "mm6");
+			 ::);
 		
 		while(i -= 4)
 		{
@@ -81,8 +81,7 @@
 				 , [pix2] "m" (*(iptr - bpl))
 				 , [pix3] "m" (*(iptr - 1))
 				 , [pix4] "m" (*(iptr + 1))
-				 , [pix5] "m" (*(iptr + bpl))
-				 : "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7");
+				 , [pix5] "m" (*(iptr + bpl)));
 			
 			iptr += 4;
 		}
 
--- plugins/actor/oinksie/gfx-blur.c~	2005-01-13 05:12:01.000000000 +0100
+++ plugins/actor/oinksie/gfx-blur.c	2005-09-01 09:52:26.000000000 +0200
@@ -43,8 +43,7 @@
 			 "\n\t movd %[fade], %%mm4"
 			 "\n\t psllq $32, %%mm3"
 			 "\n\t por %%mm4, %%mm3"
-			 :: [fade] "m" (fadeflag)
-			 : "mm3", "mm4");
+			 :: [fade] "m" (fadeflag));
 
 		
 		for (i = 0; i < priv->screen_size; i += 8) {
@@ -52,8 +51,7 @@
 				("\n\t movq %[buf], %%mm0"
 				 "\n\t psubsb %%mm3, %%mm0"
 				 "\n\t movq %%mm0, %[buf]"
-				 :: [buf] "m" (*buf)
-				 : "mm0");
+				 :: [buf] "m" (*buf));
 		}
 
 		__asm __volatile
@@ -95,7 +93,7 @@
 #ifdef VISUAL_ARCH_X86
 		__asm __volatile
 			("\n\t pxor %%mm6, %%mm6"
-			 ::: "mm6");
+			 ::);
 		
 		/* Prepare substraction register */
 		for (i = 0; i < scrsh; i += 4) {
@@ -117,8 +115,7 @@
 				 :: [buf] "m" (*(buf + i))
 				 , [add1] "m" (*(buf + i + priv->screen_width))
 				 , [add2] "m" (*(buf + i + priv->screen_width + 1))
-				 , [add3] "m" (*(buf + i + priv->screen_width - 1))
-				 : "mm0", "mm1", "mm2", "mm3", "mm6");
+				 , [add3] "m" (*(buf + i + priv->screen_width - 1)));
 		}
 
 		for (i = priv->screen_size - 1; i > scrsh; i -= 4) {
@@ -140,8 +137,7 @@
 				 :: [buf] "m" (*(buf + i))
 				 , [add1] "m" (*(buf + i - priv->screen_width))
 				 , [add2] "m" (*(buf + i - priv->screen_width + 1))
-				 , [add3] "m" (*(buf + i - priv->screen_width - 1))
-				 : "mm0", "mm1", "mm2", "mm3", "mm6");
+				 , [add3] "m" (*(buf + i - priv->screen_width - 1)));
 		}
 		
 		__asm __volatile
@@ -176,7 +172,7 @@
 #ifdef VISUAL_ARCH_X86
 		__asm __volatile
 			("\n\t pxor %%mm6, %%mm6"
-			 ::: "mm6");
+			 ::);
 
 		/* Prepare substraction register */
 		for (i = scrsh; i > 0; i -= 4) {
@@ -198,8 +194,7 @@
 				 :: [buf] "m" (*(buf + i))
 				 , [add1] "m" (*(buf + i + priv->screen_width))
 				 , [add2] "m" (*(buf + i + priv->screen_width + 1))
-				 , [add3] "m" (*(buf + i + priv->screen_width - 1))
-				 : "mm0", "mm1", "mm2", "mm3", "mm6");
+				 , [add3] "m" (*(buf + i + priv->screen_width - 1)));
 		}
 
 		for (i = scrsh; i < priv->screen_size - 2; i += 4) {
@@ -221,8 +216,7 @@
 				 :: [buf] "m" (*(buf + i))
 				 , [add1] "m" (*(buf + i - priv->screen_width))
 				 , [add2] "m" (*(buf + i - priv->screen_width + 1))
-				 , [add3] "m" (*(buf + i - priv->screen_width - 1))
-				 : "mm0", "mm1", "mm2", "mm3", "mm6");
+				 , [add3] "m" (*(buf + i - priv->screen_width - 1)));
 		}
 
 		__asm __volatile
--- plugins/actor/infinite/display.c~	2005-01-13 22:21:38.000000000 +0100
+++ plugins/actor/infinite/display.c	2005-09-01 09:29:36.000000000 +0200
@@ -70,6 +70,7 @@
 	 */
 	
 	if (cpucaps->hasMMX == 100) {
+#if 0
 #ifdef VISUAL_ARCH_X86
 		int add_src2[2];
 		uint8_t *ptr_pix2[2];
@@ -94,8 +95,7 @@
 			 "\n\t pxor %%mm6, %%mm6"
 			 "\n\t pxor %%mm4, %%mm4"
 			 :: [plugw] "m" (plugwidth)
-			 , [aflag] "m" (aflag)
-			 : "mm4", "mm5", "mm6", "mm7");
+			 , [aflag] "m" (aflag));
 
 		for (j = 0; j < priv->plugheight; j++) {
 			for (i = 0; i < priv->plugwidth; i += 2) {
@@ -131,8 +131,7 @@
 						:: [interpol] "m" (*(coords))
 						, [addsrc2] "m" (add_src2)
 						, [surf1] "m" (ptr_surf)
-						, [pix] "m" (*ptr_pix2)
-						: "mm0", "mm1", "mm2", "mm3", "mm4");
+						, [pix] "m" (*ptr_pix2));
 //				printf ("%x %x\n", ptr_pix2[0], ptr_pix2[1]);
 //				printf ("%p %p\n", ptr_pix2[0], ptr_pix2[1]);
 				int color1 = 0, color2 = 0;
@@ -156,6 +155,7 @@
 		__asm __volatile
 			("emms");
 #endif
+#endif /* #if 0 */
 	} else {
 		for (j=0;j<priv->plugheight;j++) {
 			for (i=0;i<priv->plugwidth;i++) {
--- plugins/actor/JESS/renderer.c~	2005-01-12 01:41:29.000000000 +0100
+++ plugins/actor/JESS/renderer.c	2005-09-01 09:42:03.000000000 +0200
@@ -394,7 +394,7 @@
 #ifdef VISUAL_ARCH_X86
 			__asm __volatile
 				("\n\t pxor %%mm6, %%mm6"
-				 ::: "mm6");
+				 ::);
 
 			for (pix = priv->pixel; pix < (uint8_t *) bmax-1; pix += 8)
 			{
@@ -410,8 +410,7 @@
 					 :: [pix1] "m" (*pix)
 					 , [pix2] "m" (*(pix + 1))
 					 , [pix3] "m" (*(pix + priv->resx))
-					 , [pix4] "m" (*(pix + priv->resx + 1))
-					 : "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7");
+					 , [pix4] "m" (*(pix + priv->resx + 1)));
 
 			}
 
@@ -433,7 +432,7 @@
 #ifdef VISUAL_ARCH_X86
 			__asm __volatile
 				("\n\t pxor %%mm6, %%mm6"
-				 ::: "mm6");
+				 ::);
 		
 			for (pix = priv->pixel; pix < (uint8_t *) bmax-4; )
 			{
@@ -449,8 +448,7 @@
 					 :: [pix1] "m" (*pix)
 					 , [pix2] "m" (*(pix + 4))
 					 , [pix3] "m" (*(pix + priv->pitch))
-					 , [pix4] "m" (*(pix + pitch_4))
-					 : "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7");
+					 , [pix4] "m" (*(pix + pitch_4)));
 				
 				pix += 8;
 			}
--- plugins/actor/corona/corona.cpp~	2005-01-20 04:49:13.000000000 +0100
+++ plugins/actor/corona/corona.cpp	2005-09-01 09:47:46.000000000 +0200
@@ -342,7 +342,7 @@
 #ifdef VISUAL_ARCH_X86
 		__asm __volatile
 			("pxor %%mm6, %%mm6"
-			 ::: "mm6");
+			 ::);
 		
 		while (n -= 4) {
 			__asm __volatile
@@ -366,8 +366,7 @@
 				 , [pix2] "m" (*(ptr - m_width))
 				 , [pix3] "m" (*(ptr - 1))
 				 , [pix4] "m" (*(ptr + 1))
-				 , [pix5] "m" (*(ptr + m_width))
-				 : "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7");
+				 , [pix5] "m" (*(ptr + m_width)));
 			ptr += 4;
 		}
 
--- plugins/morph/alphablend/morph_alphablend.c~	2005-01-11 20:31:31.000000000 +0100
+++ plugins/morph/alphablend/morph_alphablend.c	2005-09-01 10:21:30.000000000 +0200
@@ -210,7 +210,7 @@
 #ifdef VISUAL_ARCH_X86	
 	__asm __volatile
 		("\n\t pxor %%mm6, %%mm6"
-		 ::: "mm6");
+		 ::);
 
 	for (i = size; i > 4; i -= 4) {
 		__asm __volatile
@@ -231,8 +231,7 @@
 			 : [dest] "=m" (*(dest + i))
 			 : [src1] "m" (*(src1 + i))
 			 , [src2] "m" (*(src2 + i))
-			 , [alpha] "m" (ialpha)
-			 : "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7");
+			 , [alpha] "m" (ialpha));
 	}
 
 	while (i--)
@@ -282,7 +281,7 @@
 #ifdef VISUAL_ARCH_X86	
 	__asm __volatile
 		("\n\t pxor %%mm6, %%mm6"
-		 ::: "mm6");
+		 ::);
 	
 	for (i = 0; i < size; i += 4) {
 		__asm __volatile
@@ -306,8 +305,7 @@
 			 : [dest] "=m" (*(dest + i))
 			 : [src1] "m" (*(src1 + i))
 			 , [src2] "m" (*(src2 + i))
-			 , [alpha] "m" (ialpha)
-			 : "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7");
+			 , [alpha] "m" (ialpha));
 	}
         
 	__asm __volatile
