--- xmms-jess-2.9.1.orig/jess.c
+++ xmms-jess-2.9.1/jess.c
@@ -209,6 +209,7 @@
 
   printf("SDL Setvideo mode Ok\n");
 
+  SDL_WM_SetCaption("JESS", "JESS");
   SDL_ShowCursor(0);
   SDL_EventState (SDL_ACTIVEEVENT, SDL_IGNORE);
   SDL_EventState (SDL_MOUSEMOTION, SDL_IGNORE);
@@ -255,6 +256,7 @@
 
   printf("SDL Setvideo mode Ok\n");
 
+  SDL_WM_SetCaption("JESS", "JESS");
   SDL_ShowCursor(0);
   SDL_EventState (SDL_ACTIVEEVENT, SDL_IGNORE);
   SDL_EventState (SDL_MOUSEMOTION, SDL_IGNORE);
--- xmms-jess-2.9.1.orig/draw.c
+++ xmms-jess-2.9.1/draw.c
@@ -286,12 +286,13 @@
 {
 
   float x, y, z, xres4 = (float) (resx >> 2);
-  float fyres2 = yres2;
+  float fyres2;
   gint16 ax = 0, ay = 0, ix, iy, i, j, nb_x, nb_y;
   int tx[16][16], ty[16][16];
   unsigned char color[16][16];
   nb_x = 16;
   nb_y = 16;
+  fyres2 = yres2;
 
   for (i = 0; i < nb_x; i++)
     {
@@ -510,7 +511,7 @@
 	  }
       }
     break;
-  default:
+/*  default: */
   }
   /*  printf("  Appel rotation_3d\n");
   printf("  Appel perspective\n");
@@ -525,23 +526,23 @@
 /*  	{ */
 /*  	  switch(mode) */
 /*  	    { */
-  /*  	    case 0: /* galaxie z commande par alpha et spirale par alpha */ 
+  /*  	    case 0: / * galaxie z commande par alpha et spirale par alpha * / */
 /*  	      x = RESFACTXF ((float) 25*(i+1)*cos(i*2*PI/nb_x*cos(alpha)*i+ j*2*PI/nb_y) ); */
 /*  	      y = RESFACTYF ((float) 25*(i+1)*sin(i*2*PI/nb_x*cos(alpha)*i+ j*2*PI/nb_y) ); */
 /*  	      z = RESFACTXF (40*cos(5*alpha)); */
 /*  	      break; */
-/*  	    case 1: /* ouverture */ 
+/*  	    case 1: / * ouverture * / */
 /*  	      x = RESFACTXF ((float) 50*(i*i*i*PI/(nb_x*nb_x*nb_x)*fabs(lys.dEdt_moyen*5000) + sin((i+1)*PI/nb_x))*cos(5*alpha*i*2*PI/nb_x +  j*2*PI/nb_y)  ); */
 /*  	      y = RESFACTYF ((float) 50*(i*i*i*PI/(nb_x*nb_x*nb_x)*fabs(lys.dEdt_moyen*5000) + sin((i+1)*PI/nb_x))*sin(5*alpha*i*2*PI/nb_x +  j*2*PI/nb_y) ); */
 /*  	      z = RESFACTXF ((float) 100*cos((float)i/nb_x*PI)*(1 + lys.dEdt_moyen*1000) ); */
 /*  	      break; */
-/*  	    case 2: /* oeuf */ 
+/*  	    case 2: / * oeuf * / */
 /*  	      x = RESFACTXF ((float) 130*sin((i+1)*PI/nb_x)*cos(-i*2*PI/(5*nb_x)+ j*2*PI/nb_y) ); */
 /*  	      y = RESFACTYF ((float) 130*sin((i+1)*PI/nb_x)*sin(-i*2*PI/(5*nb_x)+ j*2*PI/nb_y) ); */
 /*  	      z = -RESFACTXF (130*cos((float)i/nb_x*PI)*lys.dEdt_moyen*1000 ); */
 	  
 /*  	      break; */
-/*  	    case 3: /* forme bizzare se deforme*/ 
+/*  	    case 3: / * forme bizzare se deforme * / */
 /*  	      x = RESFACTXF ((float) 25*(i+1)*cos(-i*2*PI/(10*nb_x)+ j*2*PI/nb_y) ); */
 /*  	      y = RESFACTYF ((float) 25*(i+1)*sin(-i*2*PI/(10*nb_x)+ j*2*PI/nb_y) ); */
 /*  	      z = RESFACTXF (60* (cos(j*2*PI/nb_y+10*alpha)+cos(i*2*PI/nb_y)) ); */
@@ -623,7 +624,7 @@
 	}
       break;
 
-    default:
+/*    default: */
     }
 }
 
@@ -643,7 +644,9 @@
       select = 1;
       stars_create_state(pos[0], 0);
       stars_create_state(pos[1], 1);
-   printf("NEW SESSION\n");
+   #ifdef DEBUG
+   	printf("NEW SESSION\n");
+   #endif
     }
   else if(new == NEW) /* on creer une nouvelle forme */
     { 
@@ -659,7 +662,9 @@
 	}
       select = 1 - select;
       stars_create_state(pos[select], rand()%2+1);
+#ifdef DEBUG
       printf("NEW\n");
+#endif
     }
   else  /* on gere */
     {
--- xmms-jess-2.9.1.orig/misc.c
+++ xmms-jess-2.9.1/misc.c
@@ -196,9 +196,11 @@
 	  break;
 
 	default:
+	  ;
 	}   
       break;
     default:
+      ;
     }
 
 }
--- xmms-jess-2.9.1.orig/analyser.c
+++ xmms-jess-2.9.1/analyser.c
@@ -130,8 +130,10 @@
       conteur.dt = time_last(FOUR,NON);
       conteur.fps = (gint) 1/time_last(FOUR,REINIT);
 
+#ifdef DEBUG
        if (conteur.term_display == OUI) 
-	printf("FPS :%i\r", conteur.fps);   
+       printf("FPS :%i\r", conteur.fps);   
+#endif
 }
 
 
@@ -154,8 +156,6 @@
 
 
 
-
-
 /*
 void C_E_moyen(void)
 {
--- xmms-jess-2.9.1.orig/renderer.c
+++ xmms-jess-2.9.1/renderer.c
@@ -93,7 +93,7 @@
 		     conteur.angle2 / 60, 200, 130);
       break;
 
-    default:
+/*    default: */
     }
 
   conteur.k3 += 10;
@@ -395,9 +395,11 @@
  
 void render_deformation(int defmode)
 {
-   unsigned int bmax, *tab1, *tab2, *tab3, *tab4, i;
+   unsigned long bmax, i;
+   unsigned int *tab1, *tab2, *tab3, *tab4;
    unsigned char *pix = pixel , *buf = buffer, *aux;
    
+   tab1 = NULL;
 
    SDL_LockSurface(screen);
 
@@ -412,7 +414,7 @@
        tab2 = table2;
        tab3 = table3;
        tab4 = table4;
-       bmax = resx * resy + (unsigned int) pixel;
+       bmax = resx * resy + (unsigned long) pixel;
 
        switch(defmode)
 	 {
@@ -468,7 +470,7 @@
 	 }
        for (i = 0; i < resy*resx; i++)
 	 {
-	   aux  =  (unsigned char *) ((*(tab1) << 2 ) + (unsigned int) buffer);
+	   aux  =  (unsigned char *) ((*(tab1) << 2 ) + (unsigned long) buffer);
 	   *pix = *(aux) ;
 	   pix++;
 	   *pix = *(aux + 1);  
@@ -494,7 +496,7 @@
   /* j'ai mis pixel par defaut... */
 
   unsigned char *pix = pixel;
-  unsigned int bmax,pitch_4;
+  unsigned long bmax,pitch_4;
 
   pix = pixel;
   if (pixel == NULL) return;
@@ -508,7 +510,7 @@
 
   if (video == 8)
     {
-      bmax = resx * (resy-1) + (unsigned int) pixel;
+      bmax = resx * (resy-1) + (unsigned long) pixel;
       for (pix = pixel; pix < (unsigned char *) bmax-1; pix++)
 	{
 	  *pix += *(pix+1) + *(pix+resx) + *(pix+resx+1); 
@@ -517,7 +519,7 @@
   else
     {
       pitch_4 = pitch+4;
-      bmax = pitch*(resy-1) + (unsigned int) pixel;
+      bmax = pitch*(resy-1) + (unsigned long) pixel;
       for (pix = pixel; pix < (unsigned char *) bmax-4; )
 	{
 	  *pix += *(pix + 4) + *(pix + pitch) + *(pix + pitch_4); 
@@ -529,5 +531,5 @@
  	  pix++; 
 	}
     }
-  non:;
+/*  non:; */
 }
--- xmms-jess-2.9.1.orig/palette.c
+++ xmms-jess-2.9.1/palette.c
@@ -102,7 +102,9 @@
     colors_used[i].b = courbes_palette(i, l);
   }
 
-  printf("Switch to color mode %i\n",j+10*k+100*l);
+ #ifdef DEBUG
+   printf("Switch to color mode %i\n",j+10*k+100*l);
+ #endif
   SDL_SetColors(screen, colors_used, 0, 256);
 }
