#!/sbin/runscript

opts="${opts} attach"
PIDFILE=/var/run/boinc.pid

depend() {
	# we can use dns and net, but we can also in most cases live without them
	use dns net
}

create_work_directory() {
	if [ ! -d "${RUNTIMEDIR}" ]; then
		einfo "Directory ${RUNTIMEDIR} not existing, creating now."
		mkdir "${RUNTIMEDIR}"
		chown "${USER}:${GROUP}" "${RUNTIMEDIR}"
		if [ ! -d "${RUNTIMEDIR}" ]; then
			eeror "Directory ${RUNTIMEDIR} could not be created!"
			return 1
		fi
		ln -s /etc/ssl/certs/ca-certificates.crt "${RUNTIMEDIR}"/ca-bundle.crt
	fi
}

generate_logs() {
	if [ ! -f "${LOGFILE}" ]; then
		einfo "No ${LOGFILE} around. Creating new..."
		einfo "You really should use app-admin/logrotate for the log rotation."
		touch "${LOGFILE}"
		chown "${USER}:${GROUP}" "${LOGFILE}"
	fi
}

cuda_check() {
	if [ -f /opt/cuda/lib/libcudart.so ]; then
		# symlink wont harm :]
		ln -snf /opt/cuda/lib/libcudart.so "${RUNTIMEDIR}"/libcudart.so
	fi
}

start() {
	ebegin "Starting BOINC"

	create_work_directory || return 1
	cuda_check

	cd "${RUNTIMEDIR}"

	if [ ! -f lockfile ]; then
		einfo "File $RUNTIMEDIR/lockfile does not exist, assuming first run."
		einfo "You need to setup an account on the BOINC project homepage beforehand!"
		einfo "Go to http://boinc.berkeley.edu/ and locate your project."
		einfo "Then either run /etc/init.d/boinc attach or connect with a gui client"
		einfo "and attach to a project with that."
		echo
		ewarn "Note that for attaching to some project you need your network up and running."
		ewarn "network is needed only for jobs fetching afterwards"
	fi

	if [ "${ALLOW_REMOTE_RPC}" = "yes" ]; then
		ARGS="${ARGS} --allow_remote_gui_rpc"
	fi

	if [ -n "${RC_UNAME}" ]; then
		PARAMS="--background --stdout '${LOGFILE}' --stderr '${LOGFILE}' -- ${ARGS}"
	else
		PARAMS="-- ${ARGS} >> '${LOGFILE}' 2>&1"
	fi

	generate_logs

	start-stop-daemon \
		--start --quiet --chdir "${RUNTIMEDIR}" \
		--make-pidfile \
		--pidfile "${PIDFILE}" \
		--chuid "${USER}:${GROUP}" \
		--nicelevel "${NICELEVEL}" \
		--exec "${BOINCBIN}" ${PARAMS}

	RESULT=$?

	eend ${RESULT}
}

attach() {
	local password args url key
	local was_started=true

	printf "    Enter the Project URL: "
	read url
	printf "    Enter your Account Key: "
	read key

	password=$(cat "${RUNTIMEDIR}/gui_rpc_auth.cfg")
	args="--project_attach ${url} ${key}"

	if ! service_started; then
		was_started=false
		"${RC_SERVICE}" start
	fi

	ebegin "Attaching to project"
		boinccmd --host localhost --passwd ${password} ${args}
	eend $?

	unset password args url key

	sleep 10
	tail "${LOGFILE}"

	[[ ${was_started} = "false" ]] && "${RC_SERVICE}" stop
}

stop() {
	ebegin "Stopping BOINC"
	start-stop-daemon --stop --retry 3 --quiet --exec "${BOINCBIN}"
	rm -f "${PIDFILE}"
	eend $?
}

restart() {
	stop
	sleep 3
	start
}
