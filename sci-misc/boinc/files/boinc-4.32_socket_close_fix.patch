--- lib/gui_rpc_client.C.orig	2005-04-19 11:00:04.000000000 -0500
+++ lib/gui_rpc_client.C	2005-04-19 11:12:57.000000000 -0500
@@ -936,16 +936,15 @@
 //
 void RPC_CLIENT::close() {
     //fprintf(stderr, "RPC_CLIENT::close called\n");
-#ifdef _WIN32
-    ::closesocket(sock);
-#else
-    ::close(sock);
-#endif
-    sock = 0;
+	if (sock) {
+		boinc_close_socket(sock);
+		sock = 0;
+	}
 }
 
 int RPC_CLIENT::init(const char* host, bool asynch) {
     int retval;
+	memset(&addr, 0, sizeof(addr));
     addr.sin_family = AF_INET;
     addr.sin_port = htons(GUI_RPC_PORT_ALT);
 
@@ -957,7 +956,7 @@
         }
         addr.sin_addr.s_addr = *(int*)hep->h_addr_list[0];
     } else {
-        addr.sin_addr.s_addr = htonl(0x7f000001);
+        addr.sin_addr.s_addr = inet_addr("127.0.0.1");
     }
 
     retval = boinc_socket(sock);
@@ -979,6 +978,10 @@
     } else {
         retval = connect(sock, (const sockaddr*)(&addr), sizeof(addr));
         if (retval) {
+			//fprintf(stderr, "connect 2 on %d returned %d\n", sock, retval);
+			perror("connect");
+			boinc_close_socket(sock);
+			boinc_socket(sock);
 #ifdef _WIN32
             printf("connect 1: Winsock error '%d'\n", WSAGetLastError());
 #endif
