--- scala-mode-constants.el~	2009-01-13 15:02:44.000000000 +0100
+++ scala-mode-constants.el	2009-02-09 16:13:41.000000000 +0100
@@ -49,6 +49,7 @@
 
 (provide 'scala-mode-constants)
 
+(require 'cl)
 (require 'regexp-opt)
 
 ;; Helper functions
--- scala-mode-feature-tags.el~	2009-01-13 15:02:44.000000000 +0100
+++ scala-mode-feature-tags.el	2009-02-09 16:15:31.000000000 +0100
@@ -49,6 +49,7 @@
 
 (provide 'scala-mode-feature-tags)
 
+(require 'cl)
 (require 'etags)
 
 (defgroup scala-mode-feature:tags nil
--- scala-mode-fontlock.el~	2009-01-13 15:02:44.000000000 +0100
+++ scala-mode-fontlock.el	2009-02-09 16:19:54.000000000 +0100
@@ -49,7 +49,11 @@
 
 (provide 'scala-mode-fontlock)
 
+(require 'cl)
 (require 'font-lock)
+(require 'scala-mode-constants)
+(require 'scala-mode-lib)
+(require 'scala-mode-navigation)
 
 (defun scala-mark-borders (funs)
   (loop for (fun . flag) in funs
--- scala-mode-indent.el~	2009-01-13 15:02:44.000000000 +0100
+++ scala-mode-indent.el	2009-02-09 16:14:08.000000000 +0100
@@ -49,6 +49,10 @@
 
 (provide 'scala-mode-indent)
 
+(require 'cl)
+(require 'scala-mode-constants)
+(require 'scala-mode-navigation)
+
 (defcustom scala-mode-indent:step 2
   "Indentation step."
   :type 'integer
--- scala-mode-navigation.el~	2009-01-13 15:02:44.000000000 +0100
+++ scala-mode-navigation.el	2009-02-09 16:21:24.000000000 +0100
@@ -49,6 +49,8 @@
 
 (provide 'scala-mode-navigation)
 
+(require 'scala-mode-constants)
+
 (defun scala-when-looking-at* (regexp &optional thunk)
   (let ((saved-match-data (match-data)))
     (if (looking-at regexp)
--- scala-mode-ui.el~	2009-01-13 15:02:44.000000000 +0100
+++ scala-mode-ui.el	2009-02-09 16:24:27.000000000 +0100
@@ -50,13 +50,15 @@
 (provide 'scala-mode-ui)
 
 (require 'easymenu)
+(require 'scala-mode-lib)
 
 (eval-when-compile
   (require 'scala-mode-inf))
 
-(defcustom scala-mode-ui:prefix-key "\C-c"
-  "Key prefix for scala mode."
-  :group 'scala)
+(eval-and-compile
+  (defcustom scala-mode-ui:prefix-key "\C-c"
+    "Key prefix for scala mode."
+    :group 'scala))
 
 (defmacro scala-mode-ui:key (key)
   "Simple macro for appending 'scala-mode-prefix-key' to key commands"
