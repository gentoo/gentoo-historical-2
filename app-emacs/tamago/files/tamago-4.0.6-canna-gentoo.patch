--- canna-20011204.diff	2002-11-06 19:18:33.000000000 +0900
+++ tamago-4.0.6-gentoo.patch	2002-11-06 19:18:45.000000000 +0900
@@ -1,6 +1,6 @@
-diff -ruwN tamago-4.0.6/ChangeLog tamago/ChangeLog
---- tamago-4.0.6/ChangeLog	Mon Jan 17 09:48:50 2000
-+++ tamago/ChangeLog	Tue Dec  4 16:47:00 2001
+diff -Naur tamago-4.0.6/ChangeLog tamago-4.0.6-gentoo/ChangeLog
+--- tamago-4.0.6/ChangeLog	2000-01-17 09:48:50.000000000 +0900
++++ tamago-4.0.6-gentoo/ChangeLog	2002-05-20 17:22:08.000000000 +0900
 @@ -1,6 +1,221 @@
 +2001-12-01  ?
 +
@@ -238,9 +238,9 @@
  	* Version 4.0.0 released.
 -	
 -
-diff -ruwN tamago-4.0.6/Makefile.in tamago/Makefile.in
---- tamago-4.0.6/Makefile.in	Sun Jan 16 00:39:09 2000
-+++ tamago/Makefile.in	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/Makefile.in tamago-4.0.6-gentoo/Makefile.in
+--- tamago-4.0.6/Makefile.in	2000-01-16 00:39:09.000000000 +0900
++++ tamago-4.0.6-gentoo/Makefile.in	2002-05-20 17:22:08.000000000 +0900
 @@ -31,7 +31,7 @@
  #       ;; install files into the emacs site-lisp directory
  #       ;; ex. /usr/local/share/emacs/site-lisp/egg
@@ -269,9 +269,9 @@
  its/hangul.elc its/kata.elc its/quanjiao.elc \
  its/zenkaku.elc its/zhuyin.elc: its-keydef.elc
  
-diff -ruwN tamago-4.0.6/egg/canna.el tamago/egg/canna.el
---- tamago-4.0.6/egg/canna.el	Tue Jan  4 15:56:14 2000
-+++ tamago/egg/canna.el	Tue Dec  4 16:47:00 2001
+diff -Naur tamago-4.0.6/egg/canna.el tamago-4.0.6-gentoo/egg/canna.el
+--- tamago-4.0.6/egg/canna.el	2000-01-04 15:56:14.000000000 +0900
++++ tamago-4.0.6-gentoo/egg/canna.el	2002-05-20 17:22:08.000000000 +0900
 @@ -30,257 +30,876 @@
  
  ;;; Code:
@@ -584,6 +584,9 @@
 +	       (bp (canna-bunsetsu-get-bunsetsu-pos b))
  	       (s (cannarpc-get-bunsetsu-source env bp)))
 -	  (cannabunsetsu-set-source b s)))))
+-
+-(defun canna-get-bunsetsu-converted (b)
+-  (cannabunsetsu-get-converted b))
 +	  (canna-bunsetsu-set-source b s)))))
 +(defun canna-get-bunsetsu-converted (b) (canna-bunsetsu-get-converted b))
 +(defun canna-get-source-language (b) 'Japanese)
@@ -630,9 +633,6 @@
 +				  env))
 +			    canna-environments)))))
  
--(defun canna-get-bunsetsu-converted (b)
--  (cannabunsetsu-get-converted b))
--
 -(defconst canna-dictionary-specification
 -  '("iroha"
 -    "fuzokugo"
@@ -1326,9 +1326,9 @@
 +  (apply 'egg-mode (append arg canna-backend-alist)))
  
  ;;; egg/canna.el ends here.
-diff -ruwN tamago-4.0.6/egg/cannarpc.el tamago/egg/cannarpc.el
---- tamago-4.0.6/egg/cannarpc.el	Tue Jan  4 15:48:42 2000
-+++ tamago/egg/cannarpc.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/egg/cannarpc.el tamago-4.0.6-gentoo/egg/cannarpc.el
+--- tamago-4.0.6/egg/cannarpc.el	2000-01-04 15:48:42.000000000 +0900
++++ tamago-4.0.6-gentoo/egg/cannarpc.el	2002-05-20 17:22:08.000000000 +0900
 @@ -45,17 +45,31 @@
  	  ((eq c 'GetDirectoryList)      7)
  	  ((eq c 'MountDictionary)       8)
@@ -1567,7 +1567,7 @@
  (defun cannarpc-get-bunsetsu-source (env bunsetsu-pos)
    (cannarpc-call-with-environment env (dummy result)
      (comm-format (b b w w w w) (canna-const GetYomi) 0 6 context
-@@ -183,23 +273,123 @@
+@@ -183,18 +273,19 @@
        (comm-unpack (S) result)
        result)))
  
@@ -1590,10 +1590,10 @@
  			   nil)))
  	    (if bl
  		(setq bl (setcdr bl bl1))
- 	      (setq bunsetsu-list (setq bl bl1))))
+@@ -202,4 +293,103 @@
  	  (setq i (1+ i)))
  	bunsetsu-list))))
-+
+ 
 +(defun cannarpc-set-kugiri-changed (env yomi-length bunsetsu-pos)
 +  ;; yomi-length -2$B!DJ8@a=L$a(B -1$B!DJ8@a?-$P$7(B
 +  (let* ((i bunsetsu-pos)
@@ -1692,11 +1692,11 @@
 +    (if (= result 255)
 +	-1
 +      result)))
- 
++
  ;;; egg/cannarpc.el ends here.
-diff -ruwN tamago-4.0.6/egg/sj3.el tamago/egg/sj3.el
---- tamago-4.0.6/egg/sj3.el	Thu Jan 13 16:09:50 2000
-+++ tamago/egg/sj3.el	Tue Dec  4 16:47:00 2001
+diff -Naur tamago-4.0.6/egg/sj3.el tamago-4.0.6-gentoo/egg/sj3.el
+--- tamago-4.0.6/egg/sj3.el	2000-01-13 16:09:50.000000000 +0900
++++ tamago-4.0.6-gentoo/egg/sj3.el	2002-05-20 17:22:08.000000000 +0900
 @@ -35,33 +35,89 @@
  (require 'egg-edep)
  
@@ -1884,9 +1884,9 @@
    (apply 'egg-mode (append arg sj3-backend-alist)))
  
  ;;; egg/sj3.el ends here.
-diff -ruwN tamago-4.0.6/egg/sj3rpc.el tamago/egg/sj3rpc.el
---- tamago-4.0.6/egg/sj3rpc.el	Thu Jan 13 12:36:08 2000
-+++ tamago/egg/sj3rpc.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/egg/sj3rpc.el tamago-4.0.6-gentoo/egg/sj3rpc.el
+--- tamago-4.0.6/egg/sj3rpc.el	2000-01-13 12:36:08.000000000 +0900
++++ tamago-4.0.6-gentoo/egg/sj3rpc.el	2002-05-20 17:22:08.000000000 +0900
 @@ -31,9 +31,18 @@
  
  ;;; Code:
@@ -2129,9 +2129,9 @@
 +    (- result)))
  
  ;;; egg/sj3rpc.el ends here.
-diff -ruwN tamago-4.0.6/egg/wnn.el tamago/egg/wnn.el
---- tamago-4.0.6/egg/wnn.el	Tue Jan  4 16:08:04 2000
-+++ tamago/egg/wnn.el	Tue Dec  4 16:47:00 2001
+diff -Naur tamago-4.0.6/egg/wnn.el tamago-4.0.6-gentoo/egg/wnn.el
+--- tamago-4.0.6/egg/wnn.el	2000-01-04 16:08:04.000000000 +0900
++++ tamago-4.0.6-gentoo/egg/wnn.el	2002-05-20 17:22:08.000000000 +0900
 @@ -36,7 +36,7 @@
  (require 'egg-edep)
  
@@ -2293,9 +2293,9 @@
    (apply 'egg-mode (append arg wnn-backend-alist)))
  
  ;;; egg/wnn.el ends here.
-diff -ruwN tamago-4.0.6/egg/wnnrpc.el tamago/egg/wnnrpc.el
---- tamago-4.0.6/egg/wnnrpc.el	Tue Jan  4 15:49:24 2000
-+++ tamago/egg/wnnrpc.el	Tue Dec  4 16:47:00 2001
+diff -Naur tamago-4.0.6/egg/wnnrpc.el tamago-4.0.6-gentoo/egg/wnnrpc.el
+--- tamago-4.0.6/egg/wnnrpc.el	2000-01-04 15:49:24.000000000 +0900
++++ tamago-4.0.6-gentoo/egg/wnnrpc.el	2002-05-20 17:22:08.000000000 +0900
 @@ -693,10 +693,10 @@
  
  (defmacro wnnrpc-get-result (&rest body)
@@ -2626,9 +2626,9 @@
  
 -;;; egg/wnnrpc.el ends here.
 +;;; egg/wnnrpc.el ends here
-diff -ruwN tamago-4.0.6/egg-cnv.el tamago/egg-cnv.el
---- tamago-4.0.6/egg-cnv.el	Tue Jan 11 20:59:10 2000
-+++ tamago/egg-cnv.el	Tue Dec  4 16:47:01 2001
+diff -Naur tamago-4.0.6/egg-cnv.el tamago-4.0.6-gentoo/egg-cnv.el
+--- tamago-4.0.6/egg-cnv.el	2000-01-11 20:59:10.000000000 +0900
++++ tamago-4.0.6-gentoo/egg-cnv.el	2002-05-20 17:22:08.000000000 +0900
 @@ -34,19 +34,29 @@
  (require 'egg-edep)
  
@@ -3208,9 +3208,9 @@
 -;;; egg-cnv.el ends here.
 +
 +;;; egg-cnv.el ends here
-diff -ruwN tamago-4.0.6/egg-com.el tamago/egg-com.el
---- tamago-4.0.6/egg-com.el	Tue Jan  4 15:49:56 2000
-+++ tamago/egg-com.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/egg-com.el tamago-4.0.6-gentoo/egg-com.el
+--- tamago-4.0.6/egg-com.el	2000-01-04 15:49:56.000000000 +0900
++++ tamago-4.0.6-gentoo/egg-com.el	2002-05-20 17:22:08.000000000 +0900
 @@ -136,6 +136,7 @@
  		    (cons ccl-decode-fixed-euc-kr ccl-encode-fixed-euc-kr))
  
@@ -3326,527 +3326,530 @@
  		    ((eq f 'w) `(setq ,arg (comm-unpack-u16)))
  		    ((eq f 'b) `(setq ,arg (comm-unpack-u8)))
  		    ((eq f 'S) `(setq ,arg (comm-unpack-u16-string)))
-diff -ruwN tamago-4.0.6/egg-sim-old.el tamago/egg-sim-old.el
---- tamago-4.0.6/egg-sim-old.el	Mon Jan 17 01:43:15 2000
-+++ tamago/egg-sim-old.el	Thu Jan  1 09:00:00 1970
-@@ -1,514 +0,0 @@
--;;; egg-sim.el --- EGG Simple Input Method
--
--;; Copyright (C) 2000 Electrotechnical Laboratory, JAPAN.
--;; Licensed to the Free Software Foundation.
--;; Copyright (C) 2000 TOMURA Satoru <tomura@etl.go.jp>
--
--
--;; Author: TOMURA Satoru <tomura@etl.go.jp>
--
--;; Maintainer: TOMURA Satoru <tomura@etl.go.jp>
--
--;; Keywords: mule, multilingual, input method
--
--;; This file is part of EGG.
--
--;; EGG is free software; you can redistribute it and/or modify
--;; it under the terms of the GNU General Public License as published by
--;; the Free Software Foundation; either version 2, or (at your option)
--;; any later version.
--
--;; EGG is distributed in the hope that it will be useful,
--;; but WITHOUT ANY WARRANTY; without even the implied warranty of
--;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--;; GNU General Public License for more details.
--
--;; You should have received a copy of the GNU General Public License
--;; along with GNU Emacs; see the file COPYING.  If not, write to the
--;; Free Software Foundation, Inc., 59 Temple Place - Suite 330,
--;; Boston, MA 02111-1307, USA.
--
--;;; Commentary:
--
--;;; Code:
--
--;;; This code is based on egg-jsymbol.el of Egg V3.
--
--;;; 92.10.18 modified for Mule Ver.0.9.6 by K.Handa <handa@etl.go.jp>
--;;;	Moved from egg.el
--;;; 92.12.26 modified for Mule Ver.0.9.7 by T.Shingu <shingu@cpr.canon.co.jp>
--;;;	JIS Hojo Kanji support.
--
--(require 'menudiag)
--
--(provide 'egg-sim)
--
--(defun make-char-list (charset &optional from to)
--  (let ((result nil)
--	(chars (charset-chars charset))
--	min max)
--    (setq min (if (= chars 96) 32 33)
--	  max (if (= chars 96) 127 126))
--    (setq from (if from (+ min (1- from)) min)
--	  to   (if to (+ min (1- to)) max))
--    (and (<= min from)
--	 (<= to max)
--	 (cond ((= (charset-dimension charset) 1)
--		(while (<= from to)
--		  (setq result (cons (char-to-string
--				      (make-char charset to))
--				     result)
--			to (1- to)))
--		result)
--	       ((= (charset-dimension charset) 2)
--		(while (<= from to)
--		  (let ((code max))
--		    (while (<= min code)
--		      (setq result (cons (char-to-string
--					  (make-char charset to code))
--					 result)
--			    code (1- code))))
--		  (setq to (1- to)))
--		result)))))
--
--(defvar egg-sim-ascii-menu
--  '(menu "ASCII:" ,(make-char-list 'ascii)))
--
--(defvar egg-sim-latin-1-menu
--  `(menu "ISO 8859-1:" ,(make-char-list 'latin-iso8859-1)))
--
--(defvar egg-sim-latin-2-menu
--  `(menu "ISO 8859-2:" ,(make-char-list 'latin-iso8859-2)))
--
--(defvar egg-sim-latin-3-menu
--  `(menu "ISO 8859-3:" ,(make-char-list 'latin-iso8859-3)))
--
--(defvar egg-sim-latin-4-menu
--  `(menu "ISO 8859-4:" ,(make-char-list 'latin-iso8859-4)))
--
--(defvar egg-sim-latin-5-menu
--  `(menu "ISO 8859-9:" ,(make-char-list 'latin-iso8859-9)))
--
--(defvar egg-sim-cyrillic-menu
--  `(menu "ISO 8859-5:" ,(make-char-list 'cyrillic-iso8859-5)))
--
--(defvar egg-sim-arabic-menu
--  `(menu "ISO 8859-6:" ,(make-char-list 'arabic-iso8859-6)))
--
--(defvar egg-sim-greek-menu
--  `(menu "ISO 8859-7:" ,(make-char-list 'greek-iso8859-7)))
--
--(defvar egg-sim-hebrew-menu
--  `(menu "ISO 8859-8:" ,(make-char-list 'hebrew-iso8859-8)))
--
--(defvar egg-sim-thai-menu
--  `(menu "TIS620.2529:" ,(make-char-list 'thai-tis620)))
--
--(defvar egg-sim-lao-menu
--  `(menu "lao:"         ,(make-char-list 'lao)))
--
--(defvar egg-sim-vietnamese-menu
--  `(menu "Vietnamese:"
--	 (("VISCII1.1(lower-case)" .
--	   (menu "VISCII1.1 lower-case:" 
--		 ,(make-char-list 'vietnamese-viscii-lower)))
--	  ("VISCII1.1(upper-case)" . 
--	   (menu "VISCII1.1 upper-case:"
--		 ,(make-char-list 'vietnamese-viscii-upper))))))
--
--(defvar egg-sim-chinese-big5-menu
--  `(menu "Big5:"
--	 (("Level1" .
--	   (menu "Big 5 Level1:" , (make-char-list 'chinese-big5-1)))
--	  ("Level2" .
--	   (menu "Big 5 Level2:" , (make-char-list 'chinese-big5-2))))))
--
--(defvar egg-sim-chinese-cns-menu
--  `(menu "CNS 11643:"
--	 (("Plane-1" .
--	   (menu "CNS 11643-1:" ,(make-char-list 'chinese-cns11643-1)))
--	  ("Plane- 2" .
--	   (menu "CNS 11643-2:" ,(make-char-list 'chinese-cns11643-2)))
--	  ("Plane-3" .
--	   (menu "CNS 11643-3:" ,(make-char-list 'chinese-cns11643-3)))
--	  ("Plane-4" .
--	   (menu "CNS 11643-4:" ,(make-char-list 'chinese-cns11643-4)))
--	  ("Plane-5" .
--	   (menu "CNS 11643-5:" ,(make-char-list 'chinese-cns11643-5)))
--	  ("Plane-6" .
--	   (menu "CNS 11643-6:" ,(make-char-list 'chinese-cns11643-6)))
--	  ("Plane-7" .
--	   (menu "CNS 11643-7:" ,(make-char-list 'chinese-cns11643-7))))))
--
--(defvar egg-sim-chinese-gb-menu
--  `(menu "GB 2312:" 
--	 (("All" . 
--	   (menu "GB 2312:" ,(make-char-list 'chinese-gb2312)))
--	  ("Symbols" . 
--	   (menu "GB2312/1:" ,(make-char-list 'chinese-gb2312 1 1)))
--	  ("Numbers" . 
--	   (menu "GB2312/2:" ,(make-char-list 'chinese-gb2312 2 2)))
--	  ("Fullwidth ASCII" . 
--	   (menu "GB2312/3:" ,(make-char-list 'chinese-gb2312 3 3)))
--	  ("Hiragana" .
--	   (menu "GB2312/4:" ,(make-char-list 'chinese-gb2312 4 4)))
--	  ("Katanaka" . 
--	   (menu "GB2312/5:" ,(make-char-list 'chinese-gb2312 5 5)))
--	  ("Greek" . 
--	   (menu "GB2312/6:" ,(make-char-list 'chinese-gb2312 6 6)))
--	  ("Cyrillic" . 
--	   (menu "GB2312/7:" ,(make-char-list 'chinese-gb2312 7 7)))
--	  ("Pinyin/Bopomofo" . 
--	   (menu "GB2312/8:" ,(make-char-list 'chinese-gb2312 8 8)))
--	  ("Box Drawings" . 
--	   (menu "GB2312/9:" ,(make-char-list 'chinese-gb2312 9 9)))
--	  )))
--
--(defvar egg-sim-chinese-menu
--  `(menu "Chinese:"
--	 (("GB2312"  . , egg-sim-chinese-gb-menu)
--	  ("CNS11643" . , egg-sim-chinese-cns-menu)
--	  ("Big5" . , egg-sim-chinese-big5-menu))))
--
--(defvar egg-sim-korean-menu
--  `(menu "Korean:"
--	 (("KSC5601"  .
--	   (menu "KSC 5601:" ,(make-char-list 'korean-ksc5601)))
--	  ("Symbol" .
--	   (menu "KSC 5601/1-2:" ,(make-char-list 'korean-ksc5601 1 2)))
--	  ("Fullwidth ASCII" .
--	   (menu "KSC 5601/3:" , (make-char-list 'korean-ksc5601 3 3)))
--	  ("Jamo" .
--	   (menu "KSC 5601/4:" , (make-char-list 'korean-ksc5601 4 4)))
--	  ("Roman Number/Greek" .
--	   (menu "KSC 5601/5:" , (make-char-list 'korean-ksc5601 5 5)))
--	  ("Box Drawings" .
--	   (menu "KSC 5601/6:" , (make-char-list 'korean-ksc5601 6 6)))
--	  ("Unit" .
--	   (menu "KSC 5601/7:" , (make-char-list 'korean-ksc5601 7 7)))
--	  ("Misc." .
--	   (menu "KSC 5601/8-9:" , (make-char-list 'korean-ksc5601 8 9)))
--	  ("Hiragana" .
--	   (menu "KSC 5601/10:" , (make-char-list 'korean-ksc5601 10 10)))
--	  ("Katakana" .
--	   (menu "KSC 5601/11:" , (make-char-list 'korean-ksc5601 11 11)))
--	  ("Cyrillic" .
--	   (menu "KSC 5601/12:" , (make-char-list 'korean-ksc5601 12 12)))
--	  ("Hangul" .
--	   (menu "KSC 5601/16-40:" , (make-char-list 'korean-ksc5601 16 40)))
--	  ("Hanja" .
--	   (menu "KSC 5601/42-93:" , (make-char-list 'korean-ksc5601 42 93))))))
--
--(defvar egg-sim-japanese-menu 
--  `(menu "Japanese:"
--	 (("JISX0201" .
--	   ,(append (make-char-list 'latin-jisx0201)
--		    (make-char-list 'katakana-jisx0201)))
--	  ("JISX0208" .
--	   (menu "JIS X 0208:" ,(make-char-list 'japanese-jisx0208)))
--	  ("JISX0212" .
--	   (menu "JIS X 0212:" ,(make-char-list 'japanese-jisx0212)))
--	  ("JISX0208/0212" .
--	   (menu "$B5-9fF~NO(B:"
--		 (("JIS$BF~NO(B" . japanese-jisx0208)
--		  ("$B5-9f(B"     . 
--		   (menu "$B5-9f(B:"     , (make-char-list 'japanese-jisx0208 1 2)))
--		  ("$B1Q?t;z(B"   . 
--		   (menu "$B1Q?t;z(B:"   , (make-char-list 'japanese-jisx0208 3 3)))
--		  ("$B$R$i$,$J(B" . 
--		   (menu "$B$R$i$,$J(B:" , (make-char-list 'japanese-jisx0208 4 4)))
--		  ("$B%+%?%+%J(B" . 
--		   (menu "$B%+%?%+%J(B:" , (make-char-list 'japanese-jisx0208 5 5)))
--		  ("$B%.%j%7%cJ8;z(B" . 
--		   (menu "$B%.%j%7%cJ8;z(B:" , (make-char-list 'japanese-jisx0208 6 6)))
--		  ("$B%-%j%kJ8;z(B" . 
--		   (menu "$B%-%j%kJ8;z(B:" , (make-char-list 'japanese-jisx0208 7 7)))
--		  ("$B7S@~(B" . 
--		   (menu "$B7S@~(B:" , (make-char-list 'japanese-jisx0208 8 8)))
--			  ;;;"$BIt<sF~NO(B"  (bushyu-input)
--                          ;;; "$B2h?tF~NO(B" (kakusuu-input)
--		  ("$BBh0l?e=`(B" . 
--		   (menu "$BBh0l?e=`(B:" , (make-char-list 'japanese-jisx0208 16 47)))
--		  ("$BBhFs?e=`(B" . 
--		   (menu "$BBhFs?e=`(B:" , (make-char-list 'japanese-jisx0208 48 84)))
--		  ("$BJd=u4A;z(B" . 
--		   (menu "$BJd=u4A;z(B:" , (make-char-list 'japanese-jisx0212 2 77)))))))))
--
--(defvar egg-sim-ipa-menu
--  `(menu "IPA:" ,(make-char-list 'ipa)))
--
--(defvar egg-sisheng-menu
--  `(menu "SiSheng characters" ,(make-char-list 'chinese-sisheng)))
--
--(defvar egg-sim-code-input-menu
--  `(menu "Charset:"
--	 (("JISX0208" . japanese-jisx0208)
--	  ("JISX0212" . japanese-jisx0212)
--	  ("CNS11643-1" . chinese-cns11634-1)
--	  ("CNS11643-2" . chinese-cns11634-2)
--	  ("CNS11643-3" . chinese-cns11634-3)
--	  ("CNS11643-4" . chinese-cns11634-4)
--	  ("CNS11643-5" . chinese-cns11634-5)
--	  ("CNS11643-6" . chinese-cns11634-6)
--	  ("CNS11643-7" . chinese-cns11634-7)
--	  ("Big5-1" . chinese-big5-1)
--	  ("Big5-2" . chinese-big5-2)
--	  ("GB2312" . chinese-gb2312)
--	  ("KSC5601" . korean-ksc5601))))
--
--(defvar egg-simple-input-method-menu-item-list
--  `(("Code Input" . ,egg-sim-code-input-menu)
--    ("Arabic"   . , egg-sim-arabic-menu)
--    ("ASCII"    . , egg-sim-ascii-menu)
--    ("Chinese"  . , egg-sim-chinese-menu)
--    ("Cyrillic" . , egg-sim-cyrillic-menu)
--    ("Greek"    . , egg-sim-greek-menu)
--    ("Hebrew"   . , egg-sim-hebrew-menu)
--    ("Japanese" . , egg-sim-japanese-menu)
--    ("Korean"   . , egg-sim-korean-menu)
--    ("Latin" . 
--     (menu "Latin:"
--	   (("Latin-1" . , egg-sim-latin-1-menu)
--	    ("Latin-2" . , egg-sim-latin-2-menu)
--	    ("Latin-3" . , egg-sim-latin-3-menu)
--	    ("Latin-4" . , egg-sim-latin-4-menu)
--	    ("Latin-5" . , egg-sim-latin-5-menu))))
--    ("Thai/Lao" . 
--     (menu "Thai/Lao:"
--	   (("Thai" . , egg-sim-thai-menu)
--	    ("Lao"  . , egg-sim-lao-menu))))
--    ("Vietnamese" . , egg-sim-vietnamese-menu)
--    ("Phonetic code" . 
--     (menu "Phonetic code:"
--	   (("SISHENG" . , egg-sisheng-menu)
--	    ("IPA" .  , egg-sim-ipa-menu))))
--    ))
--
--(defvar egg-language-environment-alist 
--  `(("ASCII"         . , egg-sim-ascii-menu)
--    ("Chinese-BIG5"  . , egg-sim-chinese-big5-menu)
--    ("Chinese-CNS"   . , egg-sim-chinese-cns-menu)
--    ("Chinese-GB"    . , egg-sim-chinese-gb-menu)
--    ("Cyrillic-ISO"  . , egg-sim-cyrillic-menu)
--    ("Cyrillic-KOI8" . , egg-sim-cyrillic-menu)
--    ("Cyrillic-ALT"  . , egg-sim-cyrillic-menu)
--    ("Czech"         . , egg-sim-latin-2-menu)
--    ("Devanagari")
--    ("English"       . , egg-sim-ascii-menu)
--    ("Ethiopic")
--    ("German"        . , egg-sim-latin-1-menu)
--    ("Greek"         . , egg-sim-greek-menu)
--    ("Hebrew"        . , egg-sim-hebrew-menu)
--    ("Hindi")
--    ("IPA"           . , egg-sim-ipa-menu)
--    ("Japanese"      . , egg-sim-japanese-menu)
--    ("Korean"        . , egg-sim-korean-menu)
--    ("Lao"           . , egg-sim-lao-menu)
--    ("Latin-1"       . , egg-sim-latin-1-menu)
--    ("Latin-2"       . , egg-sim-latin-2-menu)
--    ("Latin-3"       . , egg-sim-latin-3-menu)
--    ("Latin-4"       . , egg-sim-latin-4-menu)
--    ("Latin-5"       . , egg-sim-latin-5-menu)
--    ("Romaian"       . , egg-sim-latin-2-menu)
--    ("Slovenian"     . , egg-sim-latin-2-menu)
--    ("Slovak"        . , egg-sim-latin-2-menu)
--    ("Thai"          . , egg-sim-thai-menu)
--    ("Tibetan")
--    ("Turkish"       . , egg-sim-latin-5-menu)
--    ("Vietnamese"    . , egg-sim-vietnamese-menu)))
--
--(defvar egg-simple-input-method-menu
--  `(menu "Character set:" , egg-simple-input-method-menu-item-list))
--
--;;;;###autoload
--(defun egg-simple-input-method()
--  (interactive)
--  (let ((result (egg-simple-input-menu)))
--    (cond((stringp result)
--	  (insert result))
--	 ((symbolp result)
--	  (egg-character-code-input result
--				    (format "%s/Character Code in Hexadecimal:"
--					    (charset-description result)))))))
--
--(defun egg-simple-input-menu ()
--  (let ((menu (cdr-safe (assoc current-language-environment 
--			       egg-language-environment-alist))))
--    (if menu
--	(menudiag-select
--	 `(menu "Character set:" ,(cons (cons current-language-environment
--					      menu)
--					egg-simple-input-method-menu-item-list)))
--      (menudiag-select egg-simple-input-method-menu))))
--
--(defun egg-character-code-input (charset prompt)
--  (egg-insert-character-code-from-minibuffer charset prompt))
--
--(defun egg-insert-character-code-from-minibuffer (charset prompt)
--  (let ((str (read-from-minibuffer prompt)) val)
--    (while (null (setq val (egg-read-character-code-from-string str charset)))
--      (beep)
--      (setq str (read-from-minibuffer prompt str)))
--    (insert (make-char charset (car val) (cdr val)))))
--
--(defun egg-hexadigit-value (ch)
--  (cond((and (<= ?0 ch) (<= ch ?9))
--	(- ch ?0))
--       ((and (<= ?a ch) (<= ch ?f))
--	(+ (- ch ?a) 10))
--       ((and (<= ?A ch) (<= ch ?F))
--	(+ (- ch ?A) 10))))
--
--(defun egg-read-character-code-from-string (str charset)
--  (if (and (= (length str) 4)
--	   (<= 2 (egg-hexadigit-value (aref str 0)))
--	   (egg-hexadigit-value (aref str 1))
--	   (<= 2 (egg-hexadigit-value (aref str 2)))
--	   (egg-hexadigit-value (aref str 3)))
--      (let ((code1 (+ (* 16 (egg-hexadigit-value (aref str 0)))
--		      (egg-hexadigit-value (aref str 1))))
--	    (code2 (+ (* 16 (egg-hexadigit-value (aref str 2)))
--		      (egg-hexadigit-value (aref str 3))))
--	    (min (if (= (charset-chars charset) 94)
--		     33 32))
--	    (max (if (= (charset-chars charset) 94)
--		     126 127)))
--	(and (<= min code1)
--	     (<= code1 max)
--	     (<= min code2)
--	     (<= code2 max)
--	     (cons code1 code2)))))
--
--;;;
--;;;
--;;;
--
--(defun make-non-iso2022-code-table-file (name)
--  (with-temp-file name
--    (set-buffer-multibyte nil)
--    (insert ";;; -*- coding: -*-\n\n")
--    (insert " |")
--
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "  %X " i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (insert "-+")
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "----" i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "%X|" i))
--	(let ((j 0) (c i))
--	  (while (< j 16)
--	    (insert (format " \"%c\"" c))
--	    (setq j (1+ j)
--		  c (+ c 16)))
--	  (insert (format "\n")))
--	(setq i (1+ i))))))
--
--(defun make-iso2022-94char-code-table-file (name)
--  (with-temp-file name
--    (set-buffer-multibyte nil)
--    (insert ";;; -*- coding: -*-\n\n")
--    (insert " |")
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "  %X " i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (insert "-+")
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "----" i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "%X|" i))
--	(let ((j 0) (c i))
--	  (while (< j 16)
--	    (if (or (<= c 31)
--		    (= c 127)
--		    (and (<= 128 c)
--			 (<= c 160))
--		    (= c 255))
--		(insert "    ")
--	      (insert (format " \"%c\"" c)))
--	    (setq j (1+ j)
--		  c (+ c 16)))
--	  (insert (format "\n")))
--	(setq i (1+ i))))))
--  
--(defun make-iso2022-96char-code-table-file (name)
--  (with-temp-file name
--    (set-buffer-multibyte nil)
--    (insert ";;; -*- coding: -*-\n\n")
--    (insert " |")
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "  %X " i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (insert "-+")
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "----" i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (let ((i 0))
--      (while (< i 16)
--	(insert (format "%X|" i))
--	(let ((j 0) (c i))
--	  (while (< j 16)
--	    (if (or (<= c 31)
--		    (= c 127)
--		    (and (<= 128 c)
--			 (< c 160)))
--		(insert "    ")
--	      (insert (format " \"%c\"" c)))
--	    (setq j (1+ j)
--		  c (+ c 16)))
--	  (insert (format "\n")))
--	(setq i (1+ i))))))
--
--(defun make-euc-code-table-file (name)
--  (with-temp-file name
--    (set-buffer-multibyte nil)
--    (insert ";;; -*- coding: -*-\n\n")
--    (insert "  |")
--    (let ((i 1))
--      (while (<= i 94)
--        ;;                "XX"
--	(insert (format "  %02d " i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (insert "-+")
--    (let ((i 1))
--      (while (<= i 94)
--	(insert (format "-----" i))
--	(setq i (1+ i))))
--    (insert "\n")
--
--    (let ((i 1))
--      (while (<= i 94)
--	(insert (format "%02d|" i))
--	(let ((j 1))
--	  (while (<= j 94)
--	    (insert (format " \"%c%c\""
--			    (+ i 32 128)
--			    (+ j 32 128)))
--	    (setq j (1+ j)))
--	  (insert (format "\n")))
--	(setq i (1+ i))))))
-diff -ruwN tamago-4.0.6/egg-sim.el tamago/egg-sim.el
---- tamago-4.0.6/egg-sim.el	Mon Jan 17 01:51:34 2000
-+++ tamago/egg-sim.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/egg-sim-old.el.rej tamago-4.0.6-gentoo/egg-sim-old.el.rej
+--- tamago-4.0.6/egg-sim-old.el.rej	1970-01-01 09:00:00.000000000 +0900
++++ tamago-4.0.6-gentoo/egg-sim-old.el.rej	2002-05-20 17:22:18.000000000 +0900
+@@ -0,0 +1,517 @@
++***************
++*** 0 ****
++--- 1,514 ----
+++ ;;; egg-sim.el --- EGG Simple Input Method
+++ 
+++ ;; Copyright (C) 2000 Electrotechnical Laboratory, JAPAN.
+++ ;; Licensed to the Free Software Foundation.
+++ ;; Copyright (C) 2000 TOMURA Satoru <tomura@etl.go.jp>
+++ 
+++ 
+++ ;; Author: TOMURA Satoru <tomura@etl.go.jp>
+++ 
+++ ;; Maintainer: TOMURA Satoru <tomura@etl.go.jp>
+++ 
+++ ;; Keywords: mule, multilingual, input method
+++ 
+++ ;; This file is part of EGG.
+++ 
+++ ;; EGG is free software; you can redistribute it and/or modify
+++ ;; it under the terms of the GNU General Public License as published by
+++ ;; the Free Software Foundation; either version 2, or (at your option)
+++ ;; any later version.
+++ 
+++ ;; EGG is distributed in the hope that it will be useful,
+++ ;; but WITHOUT ANY WARRANTY; without even the implied warranty of
+++ ;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+++ ;; GNU General Public License for more details.
+++ 
+++ ;; You should have received a copy of the GNU General Public License
+++ ;; along with GNU Emacs; see the file COPYING.  If not, write to the
+++ ;; Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+++ ;; Boston, MA 02111-1307, USA.
+++ 
+++ ;;; Commentary:
+++ 
+++ ;;; Code:
+++ 
+++ ;;; This code is based on egg-jsymbol.el of Egg V3.
+++ 
+++ ;;; 92.10.18 modified for Mule Ver.0.9.6 by K.Handa <handa@etl.go.jp>
+++ ;;;	Moved from egg.el
+++ ;;; 92.12.26 modified for Mule Ver.0.9.7 by T.Shingu <shingu@cpr.canon.co.jp>
+++ ;;;	JIS Hojo Kanji support.
+++ 
+++ (require 'menudiag)
+++ 
+++ (provide 'egg-sim)
+++ 
+++ (defun make-char-list (charset &optional from to)
+++   (let ((result nil)
+++ 	(chars (charset-chars charset))
+++ 	min max)
+++     (setq min (if (= chars 96) 32 33)
+++ 	  max (if (= chars 96) 127 126))
+++     (setq from (if from (+ min (1- from)) min)
+++ 	  to   (if to (+ min (1- to)) max))
+++     (and (<= min from)
+++ 	 (<= to max)
+++ 	 (cond ((= (charset-dimension charset) 1)
+++ 		(while (<= from to)
+++ 		  (setq result (cons (char-to-string
+++ 				      (make-char charset to))
+++ 				     result)
+++ 			to (1- to)))
+++ 		result)
+++ 	       ((= (charset-dimension charset) 2)
+++ 		(while (<= from to)
+++ 		  (let ((code max))
+++ 		    (while (<= min code)
+++ 		      (setq result (cons (char-to-string
+++ 					  (make-char charset to code))
+++ 					 result)
+++ 			    code (1- code))))
+++ 		  (setq to (1- to)))
+++ 		result)))))
+++ 
+++ (defvar egg-sim-ascii-menu
+++   '(menu "ASCII:" ,(make-char-list 'ascii)))
+++ 
+++ (defvar egg-sim-latin-1-menu
+++   `(menu "ISO 8859-1:" ,(make-char-list 'latin-iso8859-1)))
+++ 
+++ (defvar egg-sim-latin-2-menu
+++   `(menu "ISO 8859-2:" ,(make-char-list 'latin-iso8859-2)))
+++ 
+++ (defvar egg-sim-latin-3-menu
+++   `(menu "ISO 8859-3:" ,(make-char-list 'latin-iso8859-3)))
+++ 
+++ (defvar egg-sim-latin-4-menu
+++   `(menu "ISO 8859-4:" ,(make-char-list 'latin-iso8859-4)))
+++ 
+++ (defvar egg-sim-latin-5-menu
+++   `(menu "ISO 8859-9:" ,(make-char-list 'latin-iso8859-9)))
+++ 
+++ (defvar egg-sim-cyrillic-menu
+++   `(menu "ISO 8859-5:" ,(make-char-list 'cyrillic-iso8859-5)))
+++ 
+++ (defvar egg-sim-arabic-menu
+++   `(menu "ISO 8859-6:" ,(make-char-list 'arabic-iso8859-6)))
+++ 
+++ (defvar egg-sim-greek-menu
+++   `(menu "ISO 8859-7:" ,(make-char-list 'greek-iso8859-7)))
+++ 
+++ (defvar egg-sim-hebrew-menu
+++   `(menu "ISO 8859-8:" ,(make-char-list 'hebrew-iso8859-8)))
+++ 
+++ (defvar egg-sim-thai-menu
+++   `(menu "TIS620.2529:" ,(make-char-list 'thai-tis620)))
+++ 
+++ (defvar egg-sim-lao-menu
+++   `(menu "lao:"         ,(make-char-list 'lao)))
+++ 
+++ (defvar egg-sim-vietnamese-menu
+++   `(menu "Vietnamese:"
+++ 	 (("VISCII1.1(lower-case)" .
+++ 	   (menu "VISCII1.1 lower-case:" 
+++ 		 ,(make-char-list 'vietnamese-viscii-lower)))
+++ 	  ("VISCII1.1(upper-case)" . 
+++ 	   (menu "VISCII1.1 upper-case:"
+++ 		 ,(make-char-list 'vietnamese-viscii-upper))))))
+++ 
+++ (defvar egg-sim-chinese-big5-menu
+++   `(menu "Big5:"
+++ 	 (("Level1" .
+++ 	   (menu "Big 5 Level1:" , (make-char-list 'chinese-big5-1)))
+++ 	  ("Level2" .
+++ 	   (menu "Big 5 Level2:" , (make-char-list 'chinese-big5-2))))))
+++ 
+++ (defvar egg-sim-chinese-cns-menu
+++   `(menu "CNS 11643:"
+++ 	 (("Plane-1" .
+++ 	   (menu "CNS 11643-1:" ,(make-char-list 'chinese-cns11643-1)))
+++ 	  ("Plane- 2" .
+++ 	   (menu "CNS 11643-2:" ,(make-char-list 'chinese-cns11643-2)))
+++ 	  ("Plane-3" .
+++ 	   (menu "CNS 11643-3:" ,(make-char-list 'chinese-cns11643-3)))
+++ 	  ("Plane-4" .
+++ 	   (menu "CNS 11643-4:" ,(make-char-list 'chinese-cns11643-4)))
+++ 	  ("Plane-5" .
+++ 	   (menu "CNS 11643-5:" ,(make-char-list 'chinese-cns11643-5)))
+++ 	  ("Plane-6" .
+++ 	   (menu "CNS 11643-6:" ,(make-char-list 'chinese-cns11643-6)))
+++ 	  ("Plane-7" .
+++ 	   (menu "CNS 11643-7:" ,(make-char-list 'chinese-cns11643-7))))))
+++ 
+++ (defvar egg-sim-chinese-gb-menu
+++   `(menu "GB 2312:" 
+++ 	 (("All" . 
+++ 	   (menu "GB 2312:" ,(make-char-list 'chinese-gb2312)))
+++ 	  ("Symbols" . 
+++ 	   (menu "GB2312/1:" ,(make-char-list 'chinese-gb2312 1 1)))
+++ 	  ("Numbers" . 
+++ 	   (menu "GB2312/2:" ,(make-char-list 'chinese-gb2312 2 2)))
+++ 	  ("Fullwidth ASCII" . 
+++ 	   (menu "GB2312/3:" ,(make-char-list 'chinese-gb2312 3 3)))
+++ 	  ("Hiragana" .
+++ 	   (menu "GB2312/4:" ,(make-char-list 'chinese-gb2312 4 4)))
+++ 	  ("Katanaka" . 
+++ 	   (menu "GB2312/5:" ,(make-char-list 'chinese-gb2312 5 5)))
+++ 	  ("Greek" . 
+++ 	   (menu "GB2312/6:" ,(make-char-list 'chinese-gb2312 6 6)))
+++ 	  ("Cyrillic" . 
+++ 	   (menu "GB2312/7:" ,(make-char-list 'chinese-gb2312 7 7)))
+++ 	  ("Pinyin/Bopomofo" . 
+++ 	   (menu "GB2312/8:" ,(make-char-list 'chinese-gb2312 8 8)))
+++ 	  ("Box Drawings" . 
+++ 	   (menu "GB2312/9:" ,(make-char-list 'chinese-gb2312 9 9)))
+++ 	  )))
+++ 
+++ (defvar egg-sim-chinese-menu
+++   `(menu "Chinese:"
+++ 	 (("GB2312"  . , egg-sim-chinese-gb-menu)
+++ 	  ("CNS11643" . , egg-sim-chinese-cns-menu)
+++ 	  ("Big5" . , egg-sim-chinese-big5-menu))))
+++ 
+++ (defvar egg-sim-korean-menu
+++   `(menu "Korean:"
+++ 	 (("KSC5601"  .
+++ 	   (menu "KSC 5601:" ,(make-char-list 'korean-ksc5601)))
+++ 	  ("Symbol" .
+++ 	   (menu "KSC 5601/1-2:" ,(make-char-list 'korean-ksc5601 1 2)))
+++ 	  ("Fullwidth ASCII" .
+++ 	   (menu "KSC 5601/3:" , (make-char-list 'korean-ksc5601 3 3)))
+++ 	  ("Jamo" .
+++ 	   (menu "KSC 5601/4:" , (make-char-list 'korean-ksc5601 4 4)))
+++ 	  ("Roman Number/Greek" .
+++ 	   (menu "KSC 5601/5:" , (make-char-list 'korean-ksc5601 5 5)))
+++ 	  ("Box Drawings" .
+++ 	   (menu "KSC 5601/6:" , (make-char-list 'korean-ksc5601 6 6)))
+++ 	  ("Unit" .
+++ 	   (menu "KSC 5601/7:" , (make-char-list 'korean-ksc5601 7 7)))
+++ 	  ("Misc." .
+++ 	   (menu "KSC 5601/8-9:" , (make-char-list 'korean-ksc5601 8 9)))
+++ 	  ("Hiragana" .
+++ 	   (menu "KSC 5601/10:" , (make-char-list 'korean-ksc5601 10 10)))
+++ 	  ("Katakana" .
+++ 	   (menu "KSC 5601/11:" , (make-char-list 'korean-ksc5601 11 11)))
+++ 	  ("Cyrillic" .
+++ 	   (menu "KSC 5601/12:" , (make-char-list 'korean-ksc5601 12 12)))
+++ 	  ("Hangul" .
+++ 	   (menu "KSC 5601/16-40:" , (make-char-list 'korean-ksc5601 16 40)))
+++ 	  ("Hanja" .
+++ 	   (menu "KSC 5601/42-93:" , (make-char-list 'korean-ksc5601 42 93))))))
+++ 
+++ (defvar egg-sim-japanese-menu 
+++   `(menu "Japanese:"
+++ 	 (("JISX0201" .
+++ 	   ,(append (make-char-list 'latin-jisx0201)
+++ 		    (make-char-list 'katakana-jisx0201)))
+++ 	  ("JISX0208" .
+++ 	   (menu "JIS X 0208:" ,(make-char-list 'japanese-jisx0208)))
+++ 	  ("JISX0212" .
+++ 	   (menu "JIS X 0212:" ,(make-char-list 'japanese-jisx0212)))
+++ 	  ("JISX0208/0212" .
+++ 	   (menu "$B5-9fF~NO(B:"
+++ 		 (("JIS$BF~NO(B" . japanese-jisx0208)
+++ 		  ("$B5-9f(B"     . 
+++ 		   (menu "$B5-9f(B:"     , (make-char-list 'japanese-jisx0208 1 2)))
+++ 		  ("$B1Q?t;z(B"   . 
+++ 		   (menu "$B1Q?t;z(B:"   , (make-char-list 'japanese-jisx0208 3 3)))
+++ 		  ("$B$R$i$,$J(B" . 
+++ 		   (menu "$B$R$i$,$J(B:" , (make-char-list 'japanese-jisx0208 4 4)))
+++ 		  ("$B%+%?%+%J(B" . 
+++ 		   (menu "$B%+%?%+%J(B:" , (make-char-list 'japanese-jisx0208 5 5)))
+++ 		  ("$B%.%j%7%cJ8;z(B" . 
+++ 		   (menu "$B%.%j%7%cJ8;z(B:" , (make-char-list 'japanese-jisx0208 6 6)))
+++ 		  ("$B%-%j%kJ8;z(B" . 
+++ 		   (menu "$B%-%j%kJ8;z(B:" , (make-char-list 'japanese-jisx0208 7 7)))
+++ 		  ("$B7S@~(B" . 
+++ 		   (menu "$B7S@~(B:" , (make-char-list 'japanese-jisx0208 8 8)))
+++ 			  ;;;"$BIt<sF~NO(B"  (bushyu-input)
+++                           ;;; "$B2h?tF~NO(B" (kakusuu-input)
+++ 		  ("$BBh0l?e=`(B" . 
+++ 		   (menu "$BBh0l?e=`(B:" , (make-char-list 'japanese-jisx0208 16 47)))
+++ 		  ("$BBhFs?e=`(B" . 
+++ 		   (menu "$BBhFs?e=`(B:" , (make-char-list 'japanese-jisx0208 48 84)))
+++ 		  ("$BJd=u4A;z(B" . 
+++ 		   (menu "$BJd=u4A;z(B:" , (make-char-list 'japanese-jisx0212 2 77)))))))))
+++ 
+++ (defvar egg-sim-ipa-menu
+++   `(menu "IPA:" ,(make-char-list 'ipa)))
+++ 
+++ (defvar egg-sisheng-menu
+++   `(menu "SiSheng characters" ,(make-char-list 'chinese-sisheng)))
+++ 
+++ (defvar egg-sim-code-input-menu
+++   `(menu "Charset:"
+++ 	 (("JISX0208" . japanese-jisx0208)
+++ 	  ("JISX0212" . japanese-jisx0212)
+++ 	  ("CNS11643-1" . chinese-cns11634-1)
+++ 	  ("CNS11643-2" . chinese-cns11634-2)
+++ 	  ("CNS11643-3" . chinese-cns11634-3)
+++ 	  ("CNS11643-4" . chinese-cns11634-4)
+++ 	  ("CNS11643-5" . chinese-cns11634-5)
+++ 	  ("CNS11643-6" . chinese-cns11634-6)
+++ 	  ("CNS11643-7" . chinese-cns11634-7)
+++ 	  ("Big5-1" . chinese-big5-1)
+++ 	  ("Big5-2" . chinese-big5-2)
+++ 	  ("GB2312" . chinese-gb2312)
+++ 	  ("KSC5601" . korean-ksc5601))))
+++ 
+++ (defvar egg-simple-input-method-menu-item-list
+++   `(("Code Input" . ,egg-sim-code-input-menu)
+++     ("Arabic"   . , egg-sim-arabic-menu)
+++     ("ASCII"    . , egg-sim-ascii-menu)
+++     ("Chinese"  . , egg-sim-chinese-menu)
+++     ("Cyrillic" . , egg-sim-cyrillic-menu)
+++     ("Greek"    . , egg-sim-greek-menu)
+++     ("Hebrew"   . , egg-sim-hebrew-menu)
+++     ("Japanese" . , egg-sim-japanese-menu)
+++     ("Korean"   . , egg-sim-korean-menu)
+++     ("Latin" . 
+++      (menu "Latin:"
+++ 	   (("Latin-1" . , egg-sim-latin-1-menu)
+++ 	    ("Latin-2" . , egg-sim-latin-2-menu)
+++ 	    ("Latin-3" . , egg-sim-latin-3-menu)
+++ 	    ("Latin-4" . , egg-sim-latin-4-menu)
+++ 	    ("Latin-5" . , egg-sim-latin-5-menu))))
+++     ("Thai/Lao" . 
+++      (menu "Thai/Lao:"
+++ 	   (("Thai" . , egg-sim-thai-menu)
+++ 	    ("Lao"  . , egg-sim-lao-menu))))
+++     ("Vietnamese" . , egg-sim-vietnamese-menu)
+++     ("Phonetic code" . 
+++      (menu "Phonetic code:"
+++ 	   (("SISHENG" . , egg-sisheng-menu)
+++ 	    ("IPA" .  , egg-sim-ipa-menu))))
+++     ))
+++ 
+++ (defvar egg-language-environment-alist 
+++   `(("ASCII"         . , egg-sim-ascii-menu)
+++     ("Chinese-BIG5"  . , egg-sim-chinese-big5-menu)
+++     ("Chinese-CNS"   . , egg-sim-chinese-cns-menu)
+++     ("Chinese-GB"    . , egg-sim-chinese-gb-menu)
+++     ("Cyrillic-ISO"  . , egg-sim-cyrillic-menu)
+++     ("Cyrillic-KOI8" . , egg-sim-cyrillic-menu)
+++     ("Cyrillic-ALT"  . , egg-sim-cyrillic-menu)
+++     ("Czech"         . , egg-sim-latin-2-menu)
+++     ("Devanagari")
+++     ("English"       . , egg-sim-ascii-menu)
+++     ("Ethiopic")
+++     ("German"        . , egg-sim-latin-1-menu)
+++     ("Greek"         . , egg-sim-greek-menu)
+++     ("Hebrew"        . , egg-sim-hebrew-menu)
+++     ("Hindi")
+++     ("IPA"           . , egg-sim-ipa-menu)
+++     ("Japanese"      . , egg-sim-japanese-menu)
+++     ("Korean"        . , egg-sim-korean-menu)
+++     ("Lao"           . , egg-sim-lao-menu)
+++     ("Latin-1"       . , egg-sim-latin-1-menu)
+++     ("Latin-2"       . , egg-sim-latin-2-menu)
+++     ("Latin-3"       . , egg-sim-latin-3-menu)
+++     ("Latin-4"       . , egg-sim-latin-4-menu)
+++     ("Latin-5"       . , egg-sim-latin-5-menu)
+++     ("Romaian"       . , egg-sim-latin-2-menu)
+++     ("Slovenian"     . , egg-sim-latin-2-menu)
+++     ("Slovak"        . , egg-sim-latin-2-menu)
+++     ("Thai"          . , egg-sim-thai-menu)
+++     ("Tibetan")
+++     ("Turkish"       . , egg-sim-latin-5-menu)
+++     ("Vietnamese"    . , egg-sim-vietnamese-menu)))
+++ 
+++ (defvar egg-simple-input-method-menu
+++   `(menu "Character set:" , egg-simple-input-method-menu-item-list))
+++ 
+++ ;;;;###autoload
+++ (defun egg-simple-input-method()
+++   (interactive)
+++   (let ((result (egg-simple-input-menu)))
+++     (cond((stringp result)
+++ 	  (insert result))
+++ 	 ((symbolp result)
+++ 	  (egg-character-code-input result
+++ 				    (format "%s/Character Code in Hexadecimal:"
+++ 					    (charset-description result)))))))
+++ 
+++ (defun egg-simple-input-menu ()
+++   (let ((menu (cdr-safe (assoc current-language-environment 
+++ 			       egg-language-environment-alist))))
+++     (if menu
+++ 	(menudiag-select
+++ 	 `(menu "Character set:" ,(cons (cons current-language-environment
+++ 					      menu)
+++ 					egg-simple-input-method-menu-item-list)))
+++       (menudiag-select egg-simple-input-method-menu))))
+++ 
+++ (defun egg-character-code-input (charset prompt)
+++   (egg-insert-character-code-from-minibuffer charset prompt))
+++ 
+++ (defun egg-insert-character-code-from-minibuffer (charset prompt)
+++   (let ((str (read-from-minibuffer prompt)) val)
+++     (while (null (setq val (egg-read-character-code-from-string str charset)))
+++       (beep)
+++       (setq str (read-from-minibuffer prompt str)))
+++     (insert (make-char charset (car val) (cdr val)))))
+++ 
+++ (defun egg-hexadigit-value (ch)
+++   (cond((and (<= ?0 ch) (<= ch ?9))
+++ 	(- ch ?0))
+++        ((and (<= ?a ch) (<= ch ?f))
+++ 	(+ (- ch ?a) 10))
+++        ((and (<= ?A ch) (<= ch ?F))
+++ 	(+ (- ch ?A) 10))))
+++ 
+++ (defun egg-read-character-code-from-string (str charset)
+++   (if (and (= (length str) 4)
+++ 	   (<= 2 (egg-hexadigit-value (aref str 0)))
+++ 	   (egg-hexadigit-value (aref str 1))
+++ 	   (<= 2 (egg-hexadigit-value (aref str 2)))
+++ 	   (egg-hexadigit-value (aref str 3)))
+++       (let ((code1 (+ (* 16 (egg-hexadigit-value (aref str 0)))
+++ 		      (egg-hexadigit-value (aref str 1))))
+++ 	    (code2 (+ (* 16 (egg-hexadigit-value (aref str 2)))
+++ 		      (egg-hexadigit-value (aref str 3))))
+++ 	    (min (if (= (charset-chars charset) 94)
+++ 		     33 32))
+++ 	    (max (if (= (charset-chars charset) 94)
+++ 		     126 127)))
+++ 	(and (<= min code1)
+++ 	     (<= code1 max)
+++ 	     (<= min code2)
+++ 	     (<= code2 max)
+++ 	     (cons code1 code2)))))
+++ 
+++ ;;;
+++ ;;;
+++ ;;;
+++ 
+++ (defun make-non-iso2022-code-table-file (name)
+++   (with-temp-file name
+++     (set-buffer-multibyte nil)
+++     (insert ";;; -*- coding: -*-\n\n")
+++     (insert " |")
+++ 
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "  %X " i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (insert "-+")
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "----" i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "%X|" i))
+++ 	(let ((j 0) (c i))
+++ 	  (while (< j 16)
+++ 	    (insert (format " \"%c\"" c))
+++ 	    (setq j (1+ j)
+++ 		  c (+ c 16)))
+++ 	  (insert (format "\n")))
+++ 	(setq i (1+ i))))))
+++ 
+++ (defun make-iso2022-94char-code-table-file (name)
+++   (with-temp-file name
+++     (set-buffer-multibyte nil)
+++     (insert ";;; -*- coding: -*-\n\n")
+++     (insert " |")
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "  %X " i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (insert "-+")
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "----" i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "%X|" i))
+++ 	(let ((j 0) (c i))
+++ 	  (while (< j 16)
+++ 	    (if (or (<= c 31)
+++ 		    (= c 127)
+++ 		    (and (<= 128 c)
+++ 			 (<= c 160))
+++ 		    (= c 255))
+++ 		(insert "    ")
+++ 	      (insert (format " \"%c\"" c)))
+++ 	    (setq j (1+ j)
+++ 		  c (+ c 16)))
+++ 	  (insert (format "\n")))
+++ 	(setq i (1+ i))))))
+++   
+++ (defun make-iso2022-96char-code-table-file (name)
+++   (with-temp-file name
+++     (set-buffer-multibyte nil)
+++     (insert ";;; -*- coding: -*-\n\n")
+++     (insert " |")
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "  %X " i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (insert "-+")
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "----" i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (let ((i 0))
+++       (while (< i 16)
+++ 	(insert (format "%X|" i))
+++ 	(let ((j 0) (c i))
+++ 	  (while (< j 16)
+++ 	    (if (or (<= c 31)
+++ 		    (= c 127)
+++ 		    (and (<= 128 c)
+++ 			 (< c 160)))
+++ 		(insert "    ")
+++ 	      (insert (format " \"%c\"" c)))
+++ 	    (setq j (1+ j)
+++ 		  c (+ c 16)))
+++ 	  (insert (format "\n")))
+++ 	(setq i (1+ i))))))
+++ 
+++ (defun make-euc-code-table-file (name)
+++   (with-temp-file name
+++     (set-buffer-multibyte nil)
+++     (insert ";;; -*- coding: -*-\n\n")
+++     (insert "  |")
+++     (let ((i 1))
+++       (while (<= i 94)
+++         ;;                "XX"
+++ 	(insert (format "  %02d " i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (insert "-+")
+++     (let ((i 1))
+++       (while (<= i 94)
+++ 	(insert (format "-----" i))
+++ 	(setq i (1+ i))))
+++     (insert "\n")
+++ 
+++     (let ((i 1))
+++       (while (<= i 94)
+++ 	(insert (format "%02d|" i))
+++ 	(let ((j 1))
+++ 	  (while (<= j 94)
+++ 	    (insert (format " \"%c%c\""
+++ 			    (+ i 32 128)
+++ 			    (+ j 32 128)))
+++ 	    (setq j (1+ j)))
+++ 	  (insert (format "\n")))
+++ 	(setq i (1+ i))))))
+diff -Naur tamago-4.0.6/egg-sim.el tamago-4.0.6-gentoo/egg-sim.el
+--- tamago-4.0.6/egg-sim.el	2000-01-17 01:51:34.000000000 +0900
++++ tamago-4.0.6-gentoo/egg-sim.el	2002-05-20 17:22:18.000000000 +0900
 @@ -73,7 +73,7 @@
  		result)))))
  
@@ -3856,60 +3859,63 @@
  
  (defvar egg-sim-latin-1-menu
    `(menu "ISO 8859-1:" ,(make-char-list 'latin-iso8859-1)))
-diff -ruwN tamago-4.0.6/egg-simv.el tamago/egg-simv.el
---- tamago-4.0.6/egg-simv.el	Mon Jan 17 01:42:21 2000
-+++ tamago/egg-simv.el	Thu Jan  1 09:00:00 1970
-@@ -1,47 +0,0 @@
--
-- |  0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 
---+----------------------------------------------------------------
--0|         " " "0" "@" "P" "`" "p" ",2U(B" ",20(B" ",2u(B" ",10(B" ",2`(B" ",2p(B" ",1`(B" ",1p(B"
--1|         "!" "1" "A" "Q" "a" "q" ",2!(B" ",21(B" ",1!(B" ",11(B" ",2a(B" ",1Q(B" ",1a(B" ",1q(B"
--2| ",2F(B"     """ "2" "B" "R" "b" "r" ",2"(B" ",22(B" ",1"(B" ",12(B" ",2b(B" ",2r(B" ",1b(B" ",1r(B"
--3|         "#" "3" "C" "S" "c" "s" ",2#(B" ",25(B" ",1#(B" ",2^(B" ",2c(B" ",2s(B" ",1c(B" ",1s(B"
--4|     ",2V(B" "$" "4" "D" "T" "d" "t" ",2$(B" ",2~(B" ",1$(B" ",2=(B" ",2d(B" ",2t(B" ",1d(B" ",1t(B"
--5| ",2G(B"     "%" "5" "E" "U" "e" "u" ",2%(B" ",2>(B" ",1%(B" ",15(B" ",2e(B" ",1U(B" ",1e(B" ",1u(B"
--6| ",2g(B"     "&" "6" "F" "V" "f" "v" ",2&(B" ",26(B" ",1&(B" ",16(B" ",1F(B" ",1V(B" ",1f(B" ",1v(B"
--7|         "'" "7" "G" "W" "g" "w" ",2'(B" ",27(B" ",1'(B" ",17(B" ",1G(B" ",1W(B" ",1g(B" ",1w(B"
--8|         "(" "8" "H" "X" "h" "x" ",2((B" ",28(B" ",1((B" ",18(B" ",2h(B" ",1X(B" ",1h(B" ",1x(B"
--9|     ",2[(B" ")" "9" "I" "Y" "i" "y" ",2)(B" ",2v(B" ",1)(B" ",2q(B" ",2i(B" ",2y(B" ",1i(B" ",1y(B"
--A|         "*" ":" "J" "Z" "j" "z" ",2*(B" ",2w(B" ",1*(B" ",2Q(B" ",2j(B" ",2z(B" ",1j(B" ",1z(B"
--B|         "+" ";" "K" "[" "k" "{" ",2+(B" ",2o(B" ",1+(B" ",2W(B" ",2k(B" ",1[(B" ",1k(B" ",1{(B"
--C|         "," "<" "L" "\" "l" "|" ",2,(B" ",2|(B" ",1,(B" ",2X(B" ",2l(B" ",1\(B" ",1l(B" ",1|(B"
--D|         "-" "=" "M" "]" "m" "}" ",2-(B" ",2{(B" ",1-(B" ",1=(B" ",2m(B" ",2}(B" ",1m(B" ",1}(B"
--E|     ",2\(B" "." ">" "N" "^" "n" "~" ",2.(B" ",2x(B" ",1.(B" ",1>(B" ",2n(B" ",1^(B" ",1n(B" ",1~(B"
--F|         "/" "?" "O" "_" "o"     ",2/(B" ",2O(B" ",1/(B" ",2_(B" ",1O(B" ",1_(B" ",1o(B" ",2f(B"
--
--"a" ",1`(B" ",1d(B" ",1c(B" ",1a(B" ",1U(B"
--",1e(B" ",1"(B" ",1F(B" ",1G(B" ",1!(B" ",1#(B"
--",1b(B" ",1%(B" ",1&(B" ",1g(B" ",1$(B" ",1'(B"
--"e" ",1i(B" ",1k(B" ",1((B" ",1h(B" ",1)(B"
--",1j(B" ",1*(B" ",1,(B" ",1-(B" ",1+(B" ",1.(B" 
--"i" ",1m(B" ",1o(B" ",1n(B" ",1l(B" ",18(B"
--"o" ",1s(B" ",1v(B" ",1u(B" ",1r(B" ",1w(B"
--",1t(B" ",1/(B" ",11(B" ",12(B" ",10(B" ",15(B"
--",1=(B" ",1>(B" ",17(B" ",1^(B" ",16(B" ",1~(B"
--"u" ",1z(B" ",1|(B" ",1{(B" ",1y(B" ",1x(B"
--",1_(B" ",1Q(B" ",1X(B" ",1f(B" ",1W(B" ",1q(B"
--"y" ",1}(B" ",1V(B" ",1[(B" ",1O(B" ",1\(B"
--
--"A" ",2`(B" ",2d(B" ",2c(B" ",2a(B" ",2U(B"
--",2e(B" ",2"(B" ",2F(B" ",2G(B" ",2!(B" ",2#(B" 
--",2b(B" ",2%(B" ",2&(B" ",2g(B" ",2$(B" ",2'(B" 
--"E" ",2h(B" ",2k(B" ",2((B" ",2i(B" ",2)(B" 
--",2j(B" ",2+(B" ",2,(B" ",2-(B" ",2*(B" ",2.(B" 
--"I" ",2l(B" ",2o(B" ",2n(B" ",2m(B" ",28(B"
--"O" ",2r(B" ",2v(B" ",2u(B" ",2s(B" ",2w(B"
--",2t(B" ",20(B" ",21(B" ",22(B" ",2/(B" ",25(B"
--",2=(B" ",26(B" ",27(B" ",2^(B" ",2>(B" ",2~(B" 
--"U" ",2y(B" ",2|(B" ",2{(B" ",2z(B" ",2x(B" 
--",2_(B" ",2W(B" ",2X(B" ",2f(B" ",2Q(B" ",2q(B"
--"Y" ",2O(B" ",2V(B" ",2[(B" ",2}(B" ",2\(B" 
--
--",2p(B" ",1p(B"
-diff -ruwN tamago-4.0.6/egg-x0213.el tamago/egg-x0213.el
---- tamago-4.0.6/egg-x0213.el	Thu Jan  1 09:00:00 1970
-+++ tamago/egg-x0213.el	Sat Dec  1 18:42:24 2001
+diff -Naur tamago-4.0.6/egg-simv.el.rej tamago-4.0.6-gentoo/egg-simv.el.rej
+--- tamago-4.0.6/egg-simv.el.rej	1970-01-01 09:00:00.000000000 +0900
++++ tamago-4.0.6-gentoo/egg-simv.el.rej	2002-05-20 17:22:19.000000000 +0900
+@@ -0,0 +1,50 @@
++***************
++*** 0 ****
++--- 1,47 ----
+++ 
+++  |  0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F 
+++ -+----------------------------------------------------------------
+++ 0|         " " "0" "@" "P" "`" "p" ",2U(B" ",20(B" ",2u(B" ",10(B" ",2`(B" ",2p(B" ",1`(B" ",1p(B"
+++ 1|         "!" "1" "A" "Q" "a" "q" ",2!(B" ",21(B" ",1!(B" ",11(B" ",2a(B" ",1Q(B" ",1a(B" ",1q(B"
+++ 2| ",2F(B"     """ "2" "B" "R" "b" "r" ",2"(B" ",22(B" ",1"(B" ",12(B" ",2b(B" ",2r(B" ",1b(B" ",1r(B"
+++ 3|         "#" "3" "C" "S" "c" "s" ",2#(B" ",25(B" ",1#(B" ",2^(B" ",2c(B" ",2s(B" ",1c(B" ",1s(B"
+++ 4|     ",2V(B" "$" "4" "D" "T" "d" "t" ",2$(B" ",2~(B" ",1$(B" ",2=(B" ",2d(B" ",2t(B" ",1d(B" ",1t(B"
+++ 5| ",2G(B"     "%" "5" "E" "U" "e" "u" ",2%(B" ",2>(B" ",1%(B" ",15(B" ",2e(B" ",1U(B" ",1e(B" ",1u(B"
+++ 6| ",2g(B"     "&" "6" "F" "V" "f" "v" ",2&(B" ",26(B" ",1&(B" ",16(B" ",1F(B" ",1V(B" ",1f(B" ",1v(B"
+++ 7|         "'" "7" "G" "W" "g" "w" ",2'(B" ",27(B" ",1'(B" ",17(B" ",1G(B" ",1W(B" ",1g(B" ",1w(B"
+++ 8|         "(" "8" "H" "X" "h" "x" ",2((B" ",28(B" ",1((B" ",18(B" ",2h(B" ",1X(B" ",1h(B" ",1x(B"
+++ 9|     ",2[(B" ")" "9" "I" "Y" "i" "y" ",2)(B" ",2v(B" ",1)(B" ",2q(B" ",2i(B" ",2y(B" ",1i(B" ",1y(B"
+++ A|         "*" ":" "J" "Z" "j" "z" ",2*(B" ",2w(B" ",1*(B" ",2Q(B" ",2j(B" ",2z(B" ",1j(B" ",1z(B"
+++ B|         "+" ";" "K" "[" "k" "{" ",2+(B" ",2o(B" ",1+(B" ",2W(B" ",2k(B" ",1[(B" ",1k(B" ",1{(B"
+++ C|         "," "<" "L" "\" "l" "|" ",2,(B" ",2|(B" ",1,(B" ",2X(B" ",2l(B" ",1\(B" ",1l(B" ",1|(B"
+++ D|         "-" "=" "M" "]" "m" "}" ",2-(B" ",2{(B" ",1-(B" ",1=(B" ",2m(B" ",2}(B" ",1m(B" ",1}(B"
+++ E|     ",2\(B" "." ">" "N" "^" "n" "~" ",2.(B" ",2x(B" ",1.(B" ",1>(B" ",2n(B" ",1^(B" ",1n(B" ",1~(B"
+++ F|         "/" "?" "O" "_" "o"     ",2/(B" ",2O(B" ",1/(B" ",2_(B" ",1O(B" ",1_(B" ",1o(B" ",2f(B"
+++ 
+++ "a" ",1`(B" ",1d(B" ",1c(B" ",1a(B" ",1U(B"
+++ ",1e(B" ",1"(B" ",1F(B" ",1G(B" ",1!(B" ",1#(B"
+++ ",1b(B" ",1%(B" ",1&(B" ",1g(B" ",1$(B" ",1'(B"
+++ "e" ",1i(B" ",1k(B" ",1((B" ",1h(B" ",1)(B"
+++ ",1j(B" ",1*(B" ",1,(B" ",1-(B" ",1+(B" ",1.(B" 
+++ "i" ",1m(B" ",1o(B" ",1n(B" ",1l(B" ",18(B"
+++ "o" ",1s(B" ",1v(B" ",1u(B" ",1r(B" ",1w(B"
+++ ",1t(B" ",1/(B" ",11(B" ",12(B" ",10(B" ",15(B"
+++ ",1=(B" ",1>(B" ",17(B" ",1^(B" ",16(B" ",1~(B"
+++ "u" ",1z(B" ",1|(B" ",1{(B" ",1y(B" ",1x(B"
+++ ",1_(B" ",1Q(B" ",1X(B" ",1f(B" ",1W(B" ",1q(B"
+++ "y" ",1}(B" ",1V(B" ",1[(B" ",1O(B" ",1\(B"
+++ 
+++ "A" ",2`(B" ",2d(B" ",2c(B" ",2a(B" ",2U(B"
+++ ",2e(B" ",2"(B" ",2F(B" ",2G(B" ",2!(B" ",2#(B" 
+++ ",2b(B" ",2%(B" ",2&(B" ",2g(B" ",2$(B" ",2'(B" 
+++ "E" ",2h(B" ",2k(B" ",2((B" ",2i(B" ",2)(B" 
+++ ",2j(B" ",2+(B" ",2,(B" ",2-(B" ",2*(B" ",2.(B" 
+++ "I" ",2l(B" ",2o(B" ",2n(B" ",2m(B" ",28(B"
+++ "O" ",2r(B" ",2v(B" ",2u(B" ",2s(B" ",2w(B"
+++ ",2t(B" ",20(B" ",21(B" ",22(B" ",2/(B" ",25(B"
+++ ",2=(B" ",26(B" ",27(B" ",2^(B" ",2>(B" ",2~(B" 
+++ "U" ",2y(B" ",2|(B" ",2{(B" ",2z(B" ",2x(B" 
+++ ",2_(B" ",2W(B" ",2X(B" ",2f(B" ",2Q(B" ",2q(B"
+++ "Y" ",2O(B" ",2V(B" ",2[(B" ",2}(B" ",2\(B" 
+++ 
+++ ",2p(B" ",1p(B"
+diff -Naur tamago-4.0.6/egg-x0213.el tamago-4.0.6-gentoo/egg-x0213.el
+--- tamago-4.0.6/egg-x0213.el	1970-01-01 09:00:00.000000000 +0900
++++ tamago-4.0.6-gentoo/egg-x0213.el	2002-05-20 17:22:19.000000000 +0900
 @@ -0,0 +1,111 @@
 +;;; jisx0213.el --- Charset Definition for JIS X 0213
 +
@@ -4022,9 +4028,9 @@
 +    (cons ccl-decode-fixed-euc-jisx0213 ccl-encode-fixed-euc-jisx0213))))
 +
 +(provide 'egg-x0213)
-diff -ruwN tamago-4.0.6/egg.el tamago/egg.el
---- tamago-4.0.6/egg.el	Mon Jan 17 09:36:17 2000
-+++ tamago/egg.el	Tue Dec  4 16:47:01 2001
+diff -Naur tamago-4.0.6/egg.el tamago-4.0.6-gentoo/egg.el
+--- tamago-4.0.6/egg.el	2000-01-17 09:36:17.000000000 +0900
++++ tamago-4.0.6-gentoo/egg.el	2002-05-20 17:22:19.000000000 +0900
 @@ -30,13 +30,19 @@
  
  ;;; Code:
@@ -4241,9 +4247,9 @@
  
  (defun egg-mark-modification (beg end)
    (if (and (null egg-suppress-marking)
-diff -ruwN tamago-4.0.6/eggrc tamago/eggrc
---- tamago-4.0.6/eggrc	Tue Jan  4 15:50:44 2000
-+++ tamago/eggrc	Tue Dec  4 16:47:01 2001
+diff -Naur tamago-4.0.6/eggrc tamago-4.0.6-gentoo/eggrc
+--- tamago-4.0.6/eggrc	2000-01-04 15:50:44.000000000 +0900
++++ tamago-4.0.6-gentoo/eggrc	2002-05-20 17:22:19.000000000 +0900
 @@ -1,4 +1,4 @@
 -;;; eggrc --- EGG Input Method Startup File
 +;;; eggrc --- EGG Input Method Startup File -*- emacs-lisp -*-
@@ -4367,9 +4373,9 @@
 +  (canna-define-environment "Bushu" 0 t)
 +  (canna-add-dict "bushu" nil))
 + )
-diff -ruwN tamago-4.0.6/its/ascii.el tamago/its/ascii.el
---- tamago-4.0.6/its/ascii.el	Tue Jan  4 16:08:35 2000
-+++ tamago/its/ascii.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/its/ascii.el tamago-4.0.6-gentoo/its/ascii.el
+--- tamago-4.0.6/its/ascii.el	2000-01-04 16:08:35.000000000 +0900
++++ tamago-4.0.6-gentoo/its/ascii.el	2002-05-20 17:22:19.000000000 +0900
 @@ -26,10 +26,7 @@
  ;; Boston, MA 02111-1307, USA.
  
@@ -4382,9 +4388,9 @@
  
  ;;; Code:
  
-diff -ruwN tamago-4.0.6/its/aynu.el tamago/its/aynu.el
---- tamago-4.0.6/its/aynu.el	Thu Jan  1 09:00:00 1970
-+++ tamago/its/aynu.el	Tue Dec  4 16:47:01 2001
+diff -Naur tamago-4.0.6/its/aynu.el tamago-4.0.6-gentoo/its/aynu.el
+--- tamago-4.0.6/its/aynu.el	1970-01-01 09:00:00.000000000 +0900
++++ tamago-4.0.6-gentoo/its/aynu.el	2002-05-20 17:22:19.000000000 +0900
 @@ -0,0 +1,285 @@
 +;;; its/aynu.el --- Aynu Katakana Input in Egg Input Method Architecture
 +
@@ -4671,9 +4677,9 @@
 +(provide 'its/aynu)
 +
 +;;; its/aynu.el ends here
-diff -ruwN tamago-4.0.6/its/greek.el tamago/its/greek.el
---- tamago-4.0.6/its/greek.el	Thu Jan  1 09:00:00 1970
-+++ tamago/its/greek.el	Mon Aug 20 19:09:07 2001
+diff -Naur tamago-4.0.6/its/greek.el tamago-4.0.6-gentoo/its/greek.el
+--- tamago-4.0.6/its/greek.el	1970-01-01 09:00:00.000000000 +0900
++++ tamago-4.0.6-gentoo/its/greek.el	2002-05-20 17:22:19.000000000 +0900
 @@ -0,0 +1,251 @@
 +(eval-when-compile
 +  (require 'its)
@@ -4926,9 +4932,9 @@
 + (its-defrule "y:;" ",F`(B"))
 +
 +(provide 'its/greek)
-diff -ruwN tamago-4.0.6/its/hankata.el tamago/its/hankata.el
---- tamago-4.0.6/its/hankata.el	Wed Jan  5 13:45:22 2000
-+++ tamago/its/hankata.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/its/hankata.el tamago-4.0.6-gentoo/its/hankata.el
+--- tamago-4.0.6/its/hankata.el	2000-01-05 13:45:22.000000000 +0900
++++ tamago-4.0.6-gentoo/its/hankata.el	2002-05-20 17:22:19.000000000 +0900
 @@ -24,10 +24,7 @@
  ;; Boston, MA 02111-1307, USA.
  
@@ -4941,9 +4947,9 @@
  
  ;;; Code:
  
-diff -ruwN tamago-4.0.6/its/jeonkak.el tamago/its/jeonkak.el
---- tamago-4.0.6/its/jeonkak.el	Tue Jan  4 16:09:13 2000
-+++ tamago/its/jeonkak.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/its/jeonkak.el tamago-4.0.6-gentoo/its/jeonkak.el
+--- tamago-4.0.6/its/jeonkak.el	2000-01-04 16:09:13.000000000 +0900
++++ tamago-4.0.6-gentoo/its/jeonkak.el	2002-05-20 17:22:19.000000000 +0900
 @@ -26,10 +26,7 @@
  ;; Boston, MA 02111-1307, USA.
  
@@ -4956,9 +4962,9 @@
  
  ;;; Code:
  
-diff -ruwN tamago-4.0.6/its/pinyin.el tamago/its/pinyin.el
---- tamago-4.0.6/its/pinyin.el	Tue Jan  4 16:09:25 2000
-+++ tamago/its/pinyin.el	Tue Dec  4 16:47:01 2001
+diff -Naur tamago-4.0.6/its/pinyin.el tamago-4.0.6-gentoo/its/pinyin.el
+--- tamago-4.0.6/its/pinyin.el	2000-01-04 16:09:25.000000000 +0900
++++ tamago-4.0.6-gentoo/its/pinyin.el	2002-05-20 17:22:19.000000000 +0900
 @@ -4,7 +4,7 @@
  
  ;; Author: KATAYAMA Yoshio <kate@pfu.co.jp>
@@ -4968,9 +4974,9 @@
  
  ;; Keywords: mule, multilingual, input method
  
-diff -ruwN tamago-4.0.6/its/quanjiao.el tamago/its/quanjiao.el
---- tamago-4.0.6/its/quanjiao.el	Tue Jan  4 16:09:32 2000
-+++ tamago/its/quanjiao.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/its/quanjiao.el tamago-4.0.6-gentoo/its/quanjiao.el
+--- tamago-4.0.6/its/quanjiao.el	2000-01-04 16:09:32.000000000 +0900
++++ tamago-4.0.6-gentoo/its/quanjiao.el	2002-05-20 17:22:19.000000000 +0900
 @@ -26,10 +26,7 @@
  ;; Boston, MA 02111-1307, USA.
  
@@ -4983,9 +4989,9 @@
  
  ;;; Code:
  
-diff -ruwN tamago-4.0.6/its/thai.el tamago/its/thai.el
---- tamago-4.0.6/its/thai.el	Tue Jan  4 16:09:40 2000
-+++ tamago/its/thai.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/its/thai.el tamago-4.0.6-gentoo/its/thai.el
+--- tamago-4.0.6/its/thai.el	2000-01-04 16:09:40.000000000 +0900
++++ tamago-4.0.6-gentoo/its/thai.el	2002-05-20 17:22:19.000000000 +0900
 @@ -69,7 +69,7 @@
  	(setq next-keyseq (concat keyseq (car (car vowel)))
  	      next-output (concat output (cdr (car vowel)))
@@ -5013,9 +5019,9 @@
      ("8"  ",T$(B" consonant)    ("*"  ",Tu(B")
      ("9"  ",T5(B" consonant)    ("("  ",Tv(B")
      ("0"  ",T((B" consonant)    (")"  ",Tw(B")
-diff -ruwN tamago-4.0.6/its/zenkaku.el tamago/its/zenkaku.el
---- tamago-4.0.6/its/zenkaku.el	Tue Jan  4 16:09:48 2000
-+++ tamago/its/zenkaku.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/its/zenkaku.el tamago-4.0.6-gentoo/its/zenkaku.el
+--- tamago-4.0.6/its/zenkaku.el	2000-01-04 16:09:48.000000000 +0900
++++ tamago-4.0.6-gentoo/its/zenkaku.el	2002-05-20 17:22:19.000000000 +0900
 @@ -26,10 +26,7 @@
  ;; Boston, MA 02111-1307, USA.
  
@@ -5028,9 +5034,9 @@
  
  ;;; Code:
  
-diff -ruwN tamago-4.0.6/its/zhuyin.el tamago/its/zhuyin.el
---- tamago-4.0.6/its/zhuyin.el	Tue Jan  4 16:09:56 2000
-+++ tamago/its/zhuyin.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/its/zhuyin.el tamago-4.0.6-gentoo/its/zhuyin.el
+--- tamago-4.0.6/its/zhuyin.el	2000-01-04 16:09:56.000000000 +0900
++++ tamago-4.0.6-gentoo/its/zhuyin.el	2002-05-20 17:22:19.000000000 +0900
 @@ -142,9 +142,9 @@
         (mapcar (lambda (s) (its-defoutput (car s) (nth 1 s)))
  	       (list B P M F D T N L G K H J Q X))
@@ -5044,9 +5050,9 @@
  
  (define-its-state-machine its-zhuyin-cn-map
    "zhuyin-cn" "$AW"(BG" Chinese-GB
-diff -ruwN tamago-4.0.6/its-keydef.el tamago/its-keydef.el
---- tamago-4.0.6/its-keydef.el	Wed Jan  5 13:43:30 2000
-+++ tamago/its-keydef.el	Tue Dec  4 16:47:01 2001
+diff -Naur tamago-4.0.6/its-keydef.el tamago-4.0.6-gentoo/its-keydef.el
+--- tamago-4.0.6/its-keydef.el	2000-01-05 13:43:30.000000000 +0900
++++ tamago-4.0.6-gentoo/its-keydef.el	2002-05-20 17:22:19.000000000 +0900
 @@ -43,6 +43,7 @@
  
  (defvar its-select-alist nil)
@@ -5064,9 +5070,9 @@
  	      (egg-exit-conversion)))
  	    (setq its-current-select-func func
  		  its-current-map ',map
-diff -ruwN tamago-4.0.6/its.el tamago/its.el
---- tamago-4.0.6/its.el	Mon Jan 17 09:36:17 2000
-+++ tamago/its.el	Tue Dec  4 16:47:01 2001
+diff -Naur tamago-4.0.6/its.el tamago-4.0.6-gentoo/its.el
+--- tamago-4.0.6/its.el	2000-01-17 09:36:17.000000000 +0900
++++ tamago-4.0.6-gentoo/its.el	2002-05-20 17:22:19.000000000 +0900
 @@ -31,11 +31,13 @@
  
  ;;; Code:
@@ -5389,9 +5395,7 @@
 -    (its-put-cursor t)))
 +(defconst its-full-half-table (make-vector 100 nil))
 +(defconst its-half-full-table (make-vector 100 nil))
- 
--(defun its-japanese-hankaku (obj)
--  (japanese-hankaku obj 'ascii-only))
++
 +(let ((table '((Japanese
 +		(?$B!!(B . ?\ ) (?$B!$(B . ?,)  (?$B!%(B . ?.)  (?$B!"(B . ?,)  (?$B!#(B . ?.)
 +		(?$B!'(B . ?:)  (?$B!((B . ?\;) (?$B!)(B . ??)  (?$B!*(B . ?!)
@@ -5515,11 +5519,11 @@
 +      (setq pair (cdr pair)))
 +    hash))
  
--;;; its-zenkaku : zenkaku-region for input-buffer
--(defun its-zenkaku ()
+-(defun its-japanese-hankaku (obj)
+-  (japanese-hankaku obj 'ascii-only))
 +;;; its-half-width : half-width-region for input-buffer
 +(defun its-half-width ()
-   (interactive)
++  (interactive)
 +  (its-convert
 +   (lambda (str lang)
 +     (concat (mapcar (lambda (c)
@@ -5527,10 +5531,12 @@
 +						      its-full-half-table))
 +			   c))
 +		     (string-to-sequence str 'list))))))
-+
+ 
+-;;; its-zenkaku : zenkaku-region for input-buffer
+-(defun its-zenkaku ()
 +;;; its-full-width : full-width-region for input-buffer
 +(defun its-full-width ()
-+  (interactive)
+   (interactive)
 +  (its-convert
 +   (lambda (str lang)
 +     (if (egg-chinese-syllable str 0)
@@ -5609,9 +5615,9 @@
 -;;; its.el ends here.
 +
 +;;; its.el ends here
-diff -ruwN tamago-4.0.6/jisx0213.el tamago/jisx0213.el
---- tamago-4.0.6/jisx0213.el	Thu Jan  1 09:00:00 1970
-+++ tamago/jisx0213.el	Tue Jul 10 06:53:45 2001
+diff -Naur tamago-4.0.6/jisx0213.el tamago-4.0.6-gentoo/jisx0213.el
+--- tamago-4.0.6/jisx0213.el	1970-01-01 09:00:00.000000000 +0900
++++ tamago-4.0.6-gentoo/jisx0213.el	2002-05-20 17:22:19.000000000 +0900
 @@ -0,0 +1,39 @@
 +;;; jisx0213.el --- Charset Definition for JIS X 0213
 +
@@ -5652,9 +5658,9 @@
 +(unless (charsetp 'japanese-jisx0213-2)
 +  (define-charset 254 'japanese-jisx0213-2
 +    [2 94 2 0 ?P 0 "JISX0213-2" "JISX0213-2" "JISX0213-2 (Japanese)"]))
-diff -ruwN tamago-4.0.6/leim-list.el tamago/leim-list.el
---- tamago-4.0.6/leim-list.el	Tue Jan 11 22:47:31 2000
-+++ tamago/leim-list.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/leim-list.el tamago-4.0.6-gentoo/leim-list.el
+--- tamago-4.0.6/leim-list.el	2000-01-11 22:47:31.000000000 +0900
++++ tamago-4.0.6-gentoo/leim-list.el	2002-05-20 17:22:19.000000000 +0900
 @@ -32,8 +32,10 @@
  ;;; Code:
  
@@ -5690,9 +5696,9 @@
  (defgroup its nil "" 
    :group 'egg :load "its")
  
-diff -ruwN tamago-4.0.6/menudiag.el tamago/menudiag.el
---- tamago-4.0.6/menudiag.el	Tue Jan  4 15:53:49 2000
-+++ tamago/menudiag.el	Sun Jan 28 03:53:13 2001
+diff -Naur tamago-4.0.6/menudiag.el tamago-4.0.6-gentoo/menudiag.el
+--- tamago-4.0.6/menudiag.el	2000-01-04 15:53:49.000000000 +0900
++++ tamago-4.0.6-gentoo/menudiag.el	2002-05-20 17:22:19.000000000 +0900
 @@ -50,7 +50,7 @@
  ;;
  
@@ -6394,7 +6400,7 @@
 +  (menudiag-send-variables menudiag-done menudiag-value)
 +  (buffer-enable-undo)
    (exit-minibuffer))
-+
+ 
 +(defun menudiag-retun-to-minibuf ()
 +  (interactive)
 +  (menudiag-check-current-menu-list)
@@ -6414,6 +6420,6 @@
 +  (interactive)
 +  (set-buffer menudiag-selection-main-buffer)
 +  (menudiag-exit))
- 
++
  (provide 'menudiag)
  ;;; menudiag.el ends here.
