# import certain parts of guide.dtd

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

style.class = b | box | brite | c | comment | e | i | path
link.class = uri | mail
logic.class =
  figure
  | fig
  | img
  | br
  | note
  | impo
  | warn
  | pre
  | p
  | table
  | ul
  | ol
  | glepindex
all.class = logic.class | style.class | link.class
# allow for custom sections
title = element title { title.attlist, (text | style.class)* }
title.attlist &= empty
chapter = element chapter { chapter.attlist, title, section+ }
chapter.attlist &= empty
section = element section { section.attlist, title?, body }
section.attlist &= empty
body = element body { body.attlist, all.class* }
body.attlist &= empty
# allow for layout etc. in some cases so define the classes
figure = element figure { figure.attlist, empty }
figure.attlist &=
  attribute caption { text }?,
  attribute short { text }?,
  attribute link { text }
fig = element fig { fig.attlist, empty }
fig.attlist &=
  attribute short { text }?,
  attribute linkto { text }?,
  attribute link { text }
img = element img { img.attlist, empty }
img.attlist &= attribute src { text }
br = element br { br.attlist, text }
br.attlist &= empty
note = element note { note.attlist, (text | all.class)* }
note.attlist &= empty
impo = element impo { impo.attlist, (text | all.class)* }
impo.attlist &= empty
warn = element warn { warn.attlist, (text | all.class)* }
warn.attlist &= empty
pre = element pre { pre.attlist, (text | all.class)* }
pre.attlist &= attribute caption { text }
p = element p { p.attlist, (text | all.class)* }
p.attlist &= empty
table = element table { table.attlist, tcolumn*, tr+ }
table.attlist &= empty
tcolumn = element tcolumn { tcolumn.attlist, empty }
tcolumn.attlist &= attribute width { text }
tr = element tr { tr.attlist, (th | ti)+ }
tr.attlist &= empty
th = element th { th.attlist, (text | all.class)* }
th.attlist &= empty
ti = element ti { ti.attlist, (text | all.class)* }
ti.attlist &= empty
ul = element ul { ul.attlist, li+ }
ul.attlist &= empty
ol = element ol { ol.attlist, li+ }
ol.attlist &= empty
li = element li { li.attlist, (text | all.class)* }
li.attlist &= empty
b = element b { b.attlist, (text | style.class | link.class)* }
b.attlist &= empty
brite =
  element brite { brite.attlist, (text | style.class | link.class)* }
brite.attlist &= empty
c = element c { c.attlist, (text | style.class | link.class)* }
c.attlist &= empty
comment =
  element comment {
    comment.attlist, (text | style.class | link.class)*
  }
comment.attlist &= empty
e = element e { e.attlist, (text | style.class | link.class)* }
e.attlist &= empty
i = element i { i.attlist, (text | style.class | link.class)* }
i.attlist &= empty
path = element path { path.attlist, (text | style.class | link.class)* }
path.attlist &= empty
mail = element mail { mail.attlist, (text | style.class)* }
mail.attlist &= attribute link { text }
uri = element uri { uri.attlist, (text | style.class)* }
uri.attlist &= attribute link { text }?
glepindex = element glepindex { glepindex.attlist, empty }
glepindex.attlist &=
  attribute status { text }?,
  [ a:defaultValue = "/proj/en/glep/gleps.xml" ]
  attribute index { text }?
project =
  element project {
    project.attlist,
    name,
    longname?,
    date?,
    author*,
    description,
    longdescription,
    goals?,
    (dev
     | resource
     | subproject
     | plannedproject
     | extraproject
     | extrachapter
     | herd
     | task
     | author)*
  }
project.attlist &= empty
name = element name { name.attlist, text }
name.attlist &= empty
longname = element longname { longname.attlist, text }
longname.attlist &= empty
date = element date { date.attlist, text }
date.attlist &= empty
author = element author { author.attlist, (text | mail)* }
author.attlist &= attribute title { text }?
description = element description { description.attlist, text }
description.attlist &= empty
longdescription =
  element longdescription {
    longdescription.attlist, (text | all.class)*
  }
longdescription.attlist &= empty
goals = element goals { goals.attlist, (text | all.class)* }
goals.attlist &= empty
dev = element dev { dev.attlist, text }
dev.attlist &=
  [ a:defaultValue = "member" ] attribute role { text }?,
  attribute description { text }?
resource = element resource { resource.attlist, text }
resource.attlist &= attribute link { text }?
subproject = element subproject { subproject.attlist, empty }
subproject.attlist &=
  attribute ref { text },
  [ a:defaultValue = "no" ] attribute inheritmembers { "yes" | "no" }?,
  [ a:defaultValue = "no" ] attribute inheritresources { "yes" | "no" }?
extraproject =
  element extraproject { extraproject.attlist, (text | all.class)* }
extraproject.attlist &=
  attribute name { text },
  attribute lead { text }?,
  attribute link { text }?
plannedproject =
  element plannedproject { plannedproject.attlist, (text | all.class)* }
plannedproject.attlist &= attribute name { text }
extrachapter =
  element extrachapter { extrachapter.attlist, title, section+ }
extrachapter.attlist &=
  [ a:defaultValue = "bottom" ]
  attribute position {
    "top"
    | "bottom"
    | "subproject"
    | "goals"
    | "resources"
    | "devs"
    | "tasks"
  }?
herd = element herd { herd.attlist, empty }
herd.attlist &= attribute name { text }
# TASK tags declaration
task =
  element task {
    task.attlist,
    name,
    description,
    longdescription?,
    startdate,
    enddate?,
    (reference | milestone | dev | depends)*
  }
task.attlist &=
  attribute id { xsd:ID }?,
  attribute lead { text },
  [ a:defaultValue = "no" ] attribute finished { "yes" | "no" }?
startdate = element startdate { startdate.attlist, text }
startdate.attlist &= empty
enddate = element enddate { enddate.attlist, text }
enddate.attlist &= empty
reference =
  element reference { reference.attlist, (text | bug | link.class)* }
reference.attlist &= empty
bug = element bug { bug.attlist, text }
bug.attlist &= attribute no { text }
milestone =
  element milestone { milestone.attlist, enddate, description }
milestone.attlist &=
  [ a:defaultValue = "no" ] attribute finished { "yes" | "no" }?
depends = element depends { depends.attlist, text }
depends.attlist &= attribute ref { xsd:IDREF }
box |= notAllowed
start = project | chapter
