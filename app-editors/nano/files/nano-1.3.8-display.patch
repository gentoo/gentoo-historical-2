http://lists.gnu.org/archive/html/nano-devel/2005-09/msg00012.html

--- nano-1.3.8/src/global.c
+++ nano-1.3.8/src/global.c
@@ -528,11 +528,11 @@
 
     sc_init_one(&main_list, NANO_FORWARD_KEY, N_("Forward"),
 	IFHELP(nano_forward_msg, NANO_NO_KEY), NANO_NO_KEY,
-	NANO_NO_KEY, VIEW, do_right_void);
+	NANO_NO_KEY, VIEW, do_right);
 
     sc_init_one(&main_list, NANO_BACK_KEY, N_("Back"),
 	IFHELP(nano_back_msg, NANO_NO_KEY), NANO_NO_KEY,
-	NANO_NO_KEY, VIEW, do_left_void);
+	NANO_NO_KEY, VIEW, do_left);
 
     sc_init_one(&main_list, NANO_HOME_KEY, N_("Home"),
 	IFHELP(nano_home_msg, NANO_NO_KEY), NANO_NO_KEY,
--- nano-1.3.8/src/move.c
+++ nano-1.3.8/src/move.c
@@ -248,7 +248,7 @@
     update_line(current, current_x);
 }
 
-void do_left(bool allow_update)
+void do_left(void)
 {
     size_t pww_save = placewewant;
     if (current_x > 0)
@@ -259,16 +259,11 @@
     }
     placewewant = xplustabs();
     check_statusblank();
-    if (allow_update && need_horizontal_update(pww_save))
+    if (need_horizontal_update(pww_save))
 	update_line(current, current_x);
 }
 
-void do_left_void(void)
-{
-    do_left(TRUE);
-}
-
-void do_right(bool allow_update)
+void do_right(void)
 {
     size_t pww_save = placewewant;
     assert(current_x <= strlen(current->data));
@@ -281,11 +276,6 @@
     }
     placewewant = xplustabs();
     check_statusblank();
-    if (allow_update && need_horizontal_update(pww_save))
+    if (need_horizontal_update(pww_save))
 	update_line(current, current_x);
 }
-
-void do_right_void(void)
-{
-    do_right(TRUE);
-}
--- nano-1.3.8/src/nano.c
+++ nano-1.3.8/src/nano.c
@@ -1304,7 +1304,7 @@
 void do_backspace(void)
 {
     if (current != fileage || current_x > 0) {
-	do_left(FALSE);
+	do_left();
 	do_delete();
     }
 }
@@ -4093,7 +4093,7 @@
 	    mark_beginx += char_buf_len;
 #endif
 
-	do_right(FALSE);
+	do_right();
 
 #ifndef DISABLE_WRAPPING
 	/* If we're wrapping text, we need to call edit_refresh(). */
--- nano-1.3.8/src/proto.h
+++ nano-1.3.8/src/proto.h
@@ -353,10 +353,8 @@
 void do_page_down(void);
 void do_up(void);
 void do_down(void);
-void do_left(bool allow_update);
-void do_left_void(void);
-void do_right(bool allow_update);
-void do_right_void(void);
+void do_left(void);
+void do_right(void);
 
 /* Public functions in nano.c. */
 void print_view_warning(void);
