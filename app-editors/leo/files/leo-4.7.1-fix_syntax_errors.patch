--- leo/plugins/ConceptualSort.py
+++ leo/plugins/ConceptualSort.py
@@ -207,8 +207,7 @@
                 usort = compile( code, 'user_sort', 'exec' )
                 def lcsort2( a, b, atts =atts ):
                     z = {}
-                    # exec usort in {}, z
-                    exec(usort,{},z)
+                    exec usort in {}, z
                     rv = z[ 'user_sort' ]( a, b, atts )
                     return rv
                 self.children.sort( lcsort2 )
--- leo/plugins/LeoN.py
+++ leo/plugins/LeoN.py
@@ -216,7 +216,7 @@
 
         # receive an operation to execute
         if dbg >=1:
-            print("Site %i;%s; '%s'; receiving %s"%(self.site_index, self.state_vector, self.get_text(), t_op)
+            print("Site %i;%s; '%s'; receiving %s"%(self.site_index, self.state_vector, self.get_text(), t_op))
 
 
         if is_causally_ready(t_op, self): 		# check if it is causally ready
@@ -308,7 +308,7 @@
         if undoed: # if there was an undo, then redo
             if dbg>=1:
                 print("Site %i; '%s'; undoed %s; executed %s;"%(
-                    self.site_index, self.get_text(), undoed, EOnew) # just for debugging
+                    self.site_index, self.get_text(), undoed, EOnew)) # just for debugging
             EOoL = [] # EO'm+1 List
 
             EOoL.append( IT( HB[m+1], EOnew ) ) 
