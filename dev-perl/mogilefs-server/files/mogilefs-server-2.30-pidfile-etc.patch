commit c938d5081c9b4028e45dfdcc25ae6188579bea0c
Author: robbat2 <robbat2@f67b2e87-0811-0410-a7e0-dd94e48410d6>
Date:   Fri Jan 16 10:29:08 2009 +0000

    Update CHANGES for mogstored pidfile.
    
    git-svn-id: http://code.sixapart.com/svn/mogilefs/trunk@1285 f67b2e87-0811-0410-a7e0-dd94e48410d6

commit b116bd5960baeee2aca7e762d08cf56eea0ae34a
Author: robbat2 <robbat2@f67b2e87-0811-0410-a7e0-dd94e48410d6>
Date:   Fri Jan 16 10:28:14 2009 +0000

    Include a pidfile in mogstored finally, abusing the pidfile functionality of perlbal.
    
    git-svn-id: http://code.sixapart.com/svn/mogilefs/trunk@1284 f67b2e87-0811-0410-a7e0-dd94e48410d6

commit 2a8dc9e352d49dc31860c783cf3c90d14cdbbb35
Author: robbat2 <robbat2@f67b2e87-0811-0410-a7e0-dd94e48410d6>
Date:   Fri Jan 16 10:05:15 2009 +0000

    New FSCK work and error for BCNT for bad devcount values (they would not otherwise be caught unless the triggered another fix).
    
    git-svn-id: http://code.sixapart.com/svn/mogilefs/trunk@1283 f67b2e87-0811-0410-a7e0-dd94e48410d6

commit 7117e2da2260834887a388bedd48a9b791c5c528
Author: robbat2 <robbat2@f67b2e87-0811-0410-a7e0-dd94e48410d6>
Date:   Thu Jan 15 05:40:33 2009 +0000

    If the testcases were being run with default mysql (eg empty password for root), they tried to call mogdbsetup ... --dbpassword= ..., which mogdbsetup (Getopt::Long actually) promptly complained about. Make the password fields take an optional argument to prevent this.
    
    git-svn-id: http://code.sixapart.com/svn/mogilefs/trunk@1282 f67b2e87-0811-0410-a7e0-dd94e48410d6

MERGED:

diff --git a/server/CHANGES b/server/CHANGES
index f164f61..3e84b91 100644
--- a/server/CHANGES
+++ b/server/CHANGES
@@ -1,3 +1,8 @@
+        * mogstored: pidfile support
+
+        * New FSCK work and error for BCNT for bad devcount values (they would
+          not otherwise be caught unless the triggered another fix).
+
 2009-01-12: Release version 2.30
 
         * fsck will now fix broken 'devcount' cols.
diff --git a/server/TODO b/server/TODO
index 9c64c6b..3a88c96 100644
--- a/server/TODO
+++ b/server/TODO
@@ -93,8 +93,5 @@
 :: [replicate(12648)] Copier failed replicating 15693848
 ......
 
--- fsck should catch weird state where file exists in 'file' table with
-   devcount>0 but does not exist in file_on. Or count does not match.
-
 -- fsck for case where row from file_to_replicate(fid,fromdevid) does not exist
    in file_on(fid,devid). This is a byproduct of a failed inject.
diff --git a/server/lib/MogileFS/FID.pm b/server/lib/MogileFS/FID.pm
index dc10ee4..1fdc9e9 100644
--- a/server/lib/MogileFS/FID.pm
+++ b/server/lib/MogileFS/FID.pm
@@ -14,6 +14,7 @@ sub new {
         dkey     => undef,
         length   => undef,
         classid  => undef,
+        devcount => undef,
         _loaded  => 0,
         _devids  => undef,   # undef, or pre-loaded arrayref devid list
     }, $class;
diff --git a/server/lib/MogileFS/Store.pm b/server/lib/MogileFS/Store.pm
index 2a75bcb..bb8b27f 100644
--- a/server/lib/MogileFS/Store.pm
+++ b/server/lib/MogileFS/Store.pm
@@ -1237,7 +1237,7 @@ sub get_fids_above_id {
 
     my @ret;
     my $dbh = $self->dbh;
-    my $sth = $dbh->prepare("SELECT fid, dmid, dkey, length, classid ".
+    my $sth = $dbh->prepare("SELECT fid, dmid, dkey, length, classid, devcount ".
                             "FROM   file ".
                             "WHERE  fid > ? ".
                             "ORDER BY fid LIMIT $limit");
diff --git a/server/lib/MogileFS/Worker/Fsck.pm b/server/lib/MogileFS/Worker/Fsck.pm
index dcd4360..1735797 100644
--- a/server/lib/MogileFS/Worker/Fsck.pm
+++ b/server/lib/MogileFS/Worker/Fsck.pm
@@ -25,6 +25,7 @@ use constant EV_CANT_FIX         => "GONE";
 use constant EV_START_SEARCH     => "SRCH";
 use constant EV_FOUND_FID        => "FOND";
 use constant EV_RE_REPLICATE     => "REPL";
+use constant EV_BAD_COUNT        => "BCNT";
 
 use POSIX ();
 
@@ -200,6 +201,16 @@ sub check_fid {
         return $fix->();
     }
 
+    # This is a simple fixup case
+    unless (scalar($fid->devids) == $fid->devcount) {
+        # log a bad count
+        $fid->fsck_log(EV_BAD_COUNT);
+
+        # TODO: We could fix this without a complete fix pass
+        # $fid->update_devcount();
+        return $fix->();
+    }
+
     # in the fast case, do nothing else (don't check if assumed file
     # locations are actually there).  in the fast case, all we do is
     # check the replication policy, which is already done, so finish.
@@ -342,6 +353,12 @@ sub fix_fid {
         return HANDLED;
     }
 
+    # Clean up the device count if it's wrong
+    unless(scalar($fid->devids) == $fid->devcount) {
+        $fid->update_devcount();
+        $fid->fsck_log(EV_BAD_COUNT);
+    }
+
     return HANDLED;
 }
 
diff --git a/server/mogdbsetup b/server/mogdbsetup
index de9b73c..fd1941a 100755
--- a/server/mogdbsetup
+++ b/server/mogdbsetup
@@ -30,9 +30,9 @@ usage()
                       "dbport=s"         => \$args{dbport},
                       "dbname=s"         => \$args{dbname},
                       "dbrootuser=s"     => \$args{dbrootuser},
-                      "dbrootpassword=s" => \$args{dbrootpass},
+                      "dbrootpassword:s" => \$args{dbrootpass},
                       "dbuser=s"         => \$args{dbuser},
-                      "dbpassword=s"     => \$args{dbpass},
+                      "dbpassword:s"     => \$args{dbpass},
                       "help"             => \$opt_help,
                       "verbose"          => \$opt_verbose,
                       "yes"              => \$opt_yes,
diff --git a/server/mogstored b/server/mogstored
index 1bb0184..de720d6 100755
--- a/server/mogstored
+++ b/server/mogstored
@@ -68,6 +68,7 @@ my $docroot     = "/var/mogdata";
 my $default_config = "/etc/mogilefs/mogstored.conf";
 my $server      = $ENV{MOGSTORED_SERVER_TYPE} || "perlbal";
 my $serverbin   = "";
+my $pidfile     = undef;
 
 # Rename binary in process list to make init scripts saner
 $0 = "mogstored";
@@ -82,6 +83,7 @@ my %config_opts = (
                    'maxconns=i'   => \$max_conns,
                    'server=s'     => \$server,
                    'serverbin=s'  => \$serverbin,
+                   'pidfile=s'    => \$pidfile,
                    );
 usage() unless Getopt::Long::GetOptions(%config_opts);
 
@@ -92,7 +94,7 @@ $opt_config = $default_config if ! $opt_config && -e $default_config;
 load_config_file($opt_config => \%config_opts) if $opt_config;
 
 # initialize basic required Perlbal machinery, for any HTTP server
-Perlbal::run_manage_commands(qq{
+my $perlbal_init = qq{
    CREATE SERVICE mogstored
      SET role = web_server
      SET docroot = $docroot
@@ -101,7 +103,9 @@ Perlbal::run_manage_commands(qq{
     CREATE SERVICE mgmt
        SET role = management
      ENABLE mgmt
-}, sub { print STDERR "$_[0]\n"; });
+};
+$perlbal_init .= "\nSERVER pidfile = $pidfile" if defined($pidfile);
+Perlbal::run_manage_commands($perlbal_init , sub { print STDERR "$_[0]\n"; });
 
 # start HTTP server
 my $httpsrv_class = "Mogstored::HTTPServer::" . ucfirst($server);
