Origin: other, http://github.com/oalders/DateTime-Format-ISO8601/commit/ed1ed506e3f914bd78ec452e50ec15fefe19ac75
--- a/lib/DateTime/Format/ISO8601.pm
+++ b/lib/DateTime/Format/ISO8601.pm
@@ -112,7 +112,7 @@
             },
         }
     );
-       
+
     # ISO8601 only allows years 0 to 9999
     # this implimentation ignores the needs of expanded formats
     my $dt = DateTime->from_object( object => $args{ object } );
@@ -182,7 +182,7 @@
                 params => [ qw( year month day ) ],
             },
             {
-                # uncombined with above because 
+                # uncombined with above because
                 #regex => qr/^ (\d{4}) -??  (\d\d) -?? (\d\d) $/x,
                 # was matching 152746-05
 
@@ -805,20 +805,18 @@
 
 sub _fix_1_digit_year {
     my %p = @_;
-     
-    no strict 'refs';
-    my $year = ( $p{ self }{ base_datetime } || DateTime->now )->year;
-    use strict;
 
-    $year =~ s/.$//;
-    $p{ parsed }{ year } =  $year . $p{ parsed }{ year };
+    no strict 'refs';
+    my $year = ( $p{ self }{ base_datetime } || DateTime->now )->strftime('%C') * 100;
 
+    use strict;
+    $p{ parsed }{ year } =  $year + $p{ parsed }{ year };
     return 1;
 }
 
 sub _fix_2_digit_year {
     my %p = @_;
-     
+
     # this is a mess because of the need to support parse_* being called
     # as a class method
     no strict 'refs';
@@ -904,7 +902,7 @@
 sub _fractional_second {
     my %p = @_;
 
-    $p{ parsed }{ nanosecond } = ".$p{ parsed }{ nanosecond }" * 10**9; 
+    $p{ parsed }{ nanosecond } = ".$p{ parsed }{ nanosecond }" * 10**9;
 
     return 1;
 }
@@ -912,7 +910,7 @@
 sub _fractional_minute {
     my %p = @_;
 
-    $p{ parsed }{ second } = ".$p{ parsed }{ second }" * 60; 
+    $p{ parsed }{ second } = ".$p{ parsed }{ second }" * 60;
 
     return 1;
 }
@@ -920,7 +918,7 @@
 sub _fractional_hour {
     my %p = @_;
 
-    $p{ parsed }{ minute } = ".$p{ parsed }{ minute }" * 60; 
+    $p{ parsed }{ minute } = ".$p{ parsed }{ minute }" * 60;
 
     return 1;
 }
@@ -953,7 +951,7 @@
     my $dt = DateTime->new(
                 year => $p{ parsed }{ year },
              );
-                                                                                
+
     if ( $dt->week_number == 1 ) {
         $p{ parsed }{ week } -= 1;
     }
--- a/t/02_examples.t
+++ b/t/02_examples.t
@@ -228,7 +228,7 @@
 {
     #-YWwwD -5W155
     my $dt = DateTime::Format::ISO8601->parse_datetime( '-5W155' );
-    is( $dt->year, '2005' );
+    is( $dt->year, '2005', '-5W155' );
     is( $dt->week_number, '15' );
     is( $dt->day_of_week, '5' );
 }
@@ -236,7 +236,7 @@
 {
     #-Y-Www-D -5-W15-5
     my $dt = DateTime::Format::ISO8601->parse_datetime( '-5-W15-5' );
-    is( $dt->year, '2005' );
+    is( $dt->year, '2005', '-5-W15-5' );
     is( $dt->week_number, '15' );
     is( $dt->day_of_week, '5' );
 }
@@ -244,14 +244,14 @@
 {
     #-YWww -5W15
     my $dt = DateTime::Format::ISO8601->parse_datetime( '-5W15' );
-    is( $dt->year, '2005' );
+    is( $dt->year, '2005', '-5W15' );
     is( $dt->week_number, '15' );
 }
 
 {
     #-Y-Www -5-W15
     my $dt = DateTime::Format::ISO8601->parse_datetime( '-5-W15' );
-    is( $dt->year, '2005' );
+    is( $dt->year, '2005', '-5W15' );
     is( $dt->week_number, '15' );
 }
 
