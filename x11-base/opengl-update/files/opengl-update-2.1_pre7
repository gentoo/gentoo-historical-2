#!/bin/bash
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/x11-base/opengl-update/files/opengl-update-2.1_pre7,v 1.2 2005/02/08 10:38:59 eradicator Exp $
# Author:  Martin Schlemmer <azarah@gentoo.org>
# Further modifications by Donnie Berkholz <spyderous@gentoo.org>
# Further modifications based off submissions to bug #54984 <cyfred@gentoo.org>
# Further modifications by Jeremy Huddleston <eradicator@gentoo.org>

. /etc/init.d/functions.sh

hasq() {
	local x

	local me=${1}
	shift
        
	for x in "${@}"; do
		if [[ "${x}" == "${me}" ]]; then
			return 0
		fi
	done
	return 1
}

check_user() {
	if [[ $(id -u) -ne 0 ]]; then
		eerror "${0}: Must be run as root."
		exit 1
	fi
}

check_version() {
	if ! portageq has_version / '>=x11-base/xorg-x11-6.8.0-r4'; then
		eerror "This version requires >=x11-base/xorg-x11-6.8.0-r4"
		exit 1
	fi
}

get_current_implem() {
	local implem
	if [[ -f ${ENV_D} ]]; then
		source ${ENV_D}
		if [[ -n "${OPENGL_PROFILE}" ]]; then
			implem="${OPENGL_PROFILE}"
		elif [[ -n "${LDPATH}" ]]; then
			implem="${LDPATH%%:*}"
			implem="${implem##*opengl/}"
			implem="${implem%/lib*}"
		fi
		unset LDPATH
		unset OPENGL_PROFILE
	fi

	echo ${implem}
}

get_implementations() {
	local implems
	for dir in ${PREFIX}/lib{,32,64}/opengl/*; do 
		if [[ -d "${dir}" && ${dir##*/} != "global" ]] && ! hasq ${dir##*/} ${implems}; then
			implems=${implems:+${implems} }${dir##*/}
		fi
	done
	echo ${implems}
}

usage() {
	# Get grammar right in message
	local IS_ARE IMPLEM_PLURAL
	if [[ $(echo ${AVAIL_IMPLEMS} | wc -w) -eq 1 ]]; then
		IS_ARE="is"
		IMPLEM_PLURAL=""
	else
		IS_ARE="are"
		IMPLEM_PLURAL="s"
	fi

	cat << FOO
Usage: ${0##*/} [<options>] <GL implementation>
       Set the opengl implementation.
       Valid options:
       --use-old: only change the implementation if isn't already set.
       --prefix: set the source prefix (default: /usr)
       --dst-prefix: set the destination prefix (default: /usr)

Usage: ${0##*/} --get-implementation
       Print the current implementaion

Note:
       This utility switches between OpenGL implementations.  There ${IS_ARE}
       $(echo ${AVAIL_IMPLEMS} | wc -w) available implementation${IMPLEM_PLURAL}: ${AVAIL_IMPLEMS}

Examples:
       ${0##*/} xorg-x11
       This will setup things to use libGL.so from X.org.

       ${0##*/} nvidia
       This will setup things to use libGL.so from the nVidia drivers.

FOO
	exit 1
}

parse_options() {
	local opt
	while [[ ${#} -gt 0 ]]; do
		opt=${1}
		shift
		case ${opt} in
			--use-old)
				if [[ -n "${ACTION}" ]]; then
					ACTION="error"
					eerror "Invalid usage."
				else
					if [[ -n "${CURRENT_GL_IMPLEM}" ]] && hasq ${CURRENT_GL_IMPLEM} ${AVAIL_IMPLEMS}; then
						ACTION="nothing"
					fi
				fi				
			;;
			--get-implementation)
				if [[ -n "${ACTION}" ]]; then
					ACTION="error"
					eerror "Invalid usage."
				else
					ACTION="get-implementation"
				fi				
			;;
			--prefix=*)
				PREFIX=${opt#*=}
				AVAIL_IMPLEMS=$(get_implementations)
			;;
			--dst-prefix=*)
				DST_PREFIX=${opt#*=}
			;;
			--help|-h|-?)
				ACION="usage"
			;;
			*)
				if hasq ${opt} ${AVAIL_IMPLEMS}; then
					NEW_GL_IMPLEM="${opt}"
					if [[ "${ACTION}" != "nothing" ]]; then
						if [[ -n "${ACTION}" ]]; then
							ACTION="error"
							eerror "Invalid usage."
						else
							ACTION="set-implementation"
						fi
					fi				
				else
					eerror "Unrecognized option: ${opt}"
					ACTION="error"
				fi
			;;
		esac
	done
}

set-new-implementation() {
	local GL_IMPLEM=${1}
	local GL_LOCAL

	check_version

	if ! hasq ${GL_IMPLEM} ${AVAIL_IMPLEMS}; then
		eerror "Invalid profile selected."
		exit 1
	fi

	ebegin "Switching to ${GL_IMPLEM} OpenGL interface"
		rm -f ${ENV_D} &> /dev/null

		LIBDIRS="lib lib32 lib64"
		for LIBDIR in ${LIBDIRS}; do
			# Special case handling of lib32 because it can be a symlink to
			# emul libs
			if [[ "${LIBDIR}" = "lib32" ]]; then
				[[ -d "${PREFIX}/${LIBDIR}" ]] || continue
			else
				[[ -d "${PREFIX}/${LIBDIR}" && ! -h "${PREFIX}/${LIBDIR}" ]] || continue
			fi

			# System wide tls stuff
			[[ -h "${DST_PREFIX}/${LIBDIR}/tls" ]] && rm -f ${DST_PREFIX}/${LIBDIR}/tls
			[[ -d "${DST_PREFIX}/${LIBDIR}/tls" ]] || mkdir -p ${DST_PREFIX}/${LIBDIR}/tls

			# Fallback on xorg-x11 if we don't have this implementation for this LIBDIR.
			if [[ ! -d ${PREFIX}/${LIBDIR}/opengl/"${GL_IMPLEM}" ]]; then
				GL_LOCAL="xorg-x11"
			else
				GL_LOCAL="${GL_IMPLEM}"
			fi
		
			# Provide the right libnvidia-tls depending on ntpl or not
			if [[ "${GL_LOCAL}" = "nvidia" ]]; then
				if [[ -e "${PREFIX}/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls" ]]; then
					rm -f ${PREFIX}/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls &> /dev/null
				fi
		
				if getconf GNU_LIBPTHREAD_VERSION | grep -qi nptl; then
					ln -sf ${PREFIX}/${LIBDIR}/opengl/${GL_LOCAL}/tls ${PREFIX}/${LIBDIR}/opengl/${GL_IMPLEM}/lib/tls &> /dev/null
				fi
			fi

			mkdir -p ${DST_PREFIX}/${LIBDIR}
			pushd ${DST_PREFIX}/${LIBDIR} &> /dev/null
				# First remove old symlinks
				for file in libGL.so* libGLcore.so* libnvidia-tls.so*  tls/libnvidia-tls.so*; do
					[[ -h ${file} ]] && rm -f ${file}
				done

				# Note that we don't do .so*, just .so on purpose.  The
				# loader knows to look in the profile dir, and the
				# linked just needs the .so
				for file in ${PREFIX}/${LIBDIR}/opengl/${GL_LOCAL}/lib/*.{so,a,la}; do
					[[ -f "${file}" ]] || continue
					[[ -f "${file##*/}" ]] && rm -f ${file##*/}

					# Fix libtool archives (#48297)
					if [[ "${file%.la}" != "${file}" ]]; then
						sed "s:${PREFIX}/[^/]*/opengl/[^/]*/lib:${DST_PREFIX}/${LIBDIR}:g" ${file} > ${file##*/}
					else
						ln -s ${file}
					fi
				done
			popd &> /dev/null

			if [[ -e "${PREFIX}/${LIBDIR}/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls" ]]; then
				mkdir -p ${DST_PREFIX}/${LIBDIR}/tls
				pushd ${DST_PREFIX}/${LIBDIR}/tls &> /dev/null
					for file in ${PREFIX}/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls/*.{so,a,la}; do
						[[ -f "${file}" ]] || continue
						[[ -f "${file##*/}" ]] && rm -f ${file##*/}

						# Fix libtool archives (#48297)
						if [ "${file%.la}" != "${file}" ]; then
							sed "s:${PREFIX}/[^/]*/opengl/[^/]*/lib:${DST_PREFIX}/${LIBDIR}:g" ${file} > ${file##*/}
						else
							ln -s ${file}
						fi
					done
				popd &> /dev/null
			fi

			if [[ -e "${PREFIX}/${LIBDIR}/opengl/${GL_LOCAL}/extensions" ]]; then
				mkdir -p ${DST_PREFIX}/${LIBDIR}/modules/extensions
				pushd ${DST_PREFIX}/${LIBDIR}/modules/extensions &> /dev/null
					# First remove old symlinks
					for file in libglx.so libglx.a; do
						[[ -h ${file} ]] && rm -f ${file}
					done

					for file in ${PREFIX}/opengl/${GL_LOCAL}/extensions/*.{so,a,la}; do
						[[ -f "${file}" ]] || continue
						[[ -f "${file##*/}" ]] && rm -f ${file##*/}

						# Fix libtool archives (#48297)
						if [[ "${file%.la}" != "${file}" ]]; then
							sed "s:${PREFIX}/[^/]*/opengl/[^/]*/lib:${DST_PREFIX}/${LIBDIR}:g" ${file} > ${file##*/}
						else
							ln -s ${file}
						fi
					done
				popd &> /dev/null
			fi

			# Setup the includes
			# Hack until /usr/X11R6 is gone...
			[[ ${DST_PREFIX} == "/usr" ]] && DST_PREFIX="/usr/X11R6"
			mkdir -p ${DST_PREFIX}/include/GL
			pushd ${DST_PREFIX}/include/GL &> /dev/null
				for file in gl.h glx.h glxtokens.h glext.h glxext.h glxmd.h glxproto.h; do
					[[ -f "${file}" ]] && rm -f ${file}

					# IMPORTANT
					# It is preferable currently to use the standard glext.h file
					# however if an OpenGL provider must use a self produced glext.h
					# then it should be installed to ${GL_IMPLEM}/include

					if [[ -e ${PREFIX}/${LIBDIR}/opengl/${GL_IMPLEM}/include/${file} ]]; then
						if [[ -e ${PREFIX}/${LIBDIR}/opengl/global/include/${file} ]]; then
							ewarn "Profile-specific header file is being used for ${file} instead of the global version provided."
						fi
						ln -s ${PREFIX}/${LIBDIR}/opengl/${GL_IMPLEM}/include/${file}
					elif [[ -e ${PREFIX}/${LIBDIR}/opengl/global/include/${file} ]]; then
						ln -s ${PREFIX}/${LIBDIR}/opengl/global/include/${file}
					fi
				done
			popd &> /dev/null

			# Setup the $LDPATH
			ldpath="${ldpath:+${ldpath}:}${PREFIX}/${LIBDIR}/opengl/${GL_LOCAL}/lib"

		done

		echo "LDPATH=\"${ldpath}\"" > ${ENV_D}
		echo "OPENGL_PROFILE=\"${GL_IMPLEM}\"" >> ${ENV_D}

		env-update

	eend 0
}

ENV_D="/etc/env.d/03opengl"
NEW_GL_IMPLEM=""
ACTION=""
PREFIX="/usr"
DST_PREFIX="/usr"
AVAIL_IMPLEMS=$(get_implementations)
CURRENT_GL_IMPLEM=$(get_current_implem)

check_user
parse_options ${@}

case ${ACTION} in
	get-implementation)
		if [[ -n "${CURRENT_GL_IMPLEM}" ]]; then
			echo ${CURRENT_GL_IMPLEM}
			exit 0
		else
			exit 2
		fi
	;;
	set-implementation)
		if [[ -n "${NEW_GL_IMPLEM}" ]]; then
			set-new-implementation ${NEW_GL_IMPLEM}
			exit $?
		else
			usage
			exit 1
		fi
	;;
	nothing)
		exit 0
	;;
	usage)
		usage
		exit 0
	;;
	error)
		usage
		exit 1
	;;
	*)
		usage
		exit 1
	;;
esac
