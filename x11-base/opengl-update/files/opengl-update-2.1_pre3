#!/bin/bash
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/x11-base/opengl-update/files/opengl-update-2.1_pre3,v 1.1 2005/01/26 05:59:52 eradicator Exp $
# Author:  Martin Schlemmer <azarah@gentoo.org>
# Further modifications by Donnie Berkholz <spyderous@gentoo.org>
# Further modifications based off submissions to bug #54984 <cyfred@gentoo.org>
# Further modifications by Jeremy Huddleston <eradicator@gentoo.org>

. /etc/init.d/functions.sh

need_version() {
	local X11 X11_VER X11_MAJOR_VER X11_MINOR_VER X11_MICRO_VER ERROR_MSG
	ERROR_MSG="This version requires >=x11-base/xorg-x11-6.8.0-r4"
	X11="$(portageq match / virtual/x11)"
	# Got the egrep from ferringb, who got it from portage code
	X11_VER="$(echo ${X11} | egrep -o '(cvs\.)?([[:digit:]]+)((\.[[:digit:]]+)*)([a-z]?)((_(pre|p|beta|alpha|rc)[[:digit:]]*)*)(-r([[:digit:]]+))?$')"
	X11_MAJOR_VER="${X11_VER%%.*}"
	# Hack around a little to get the minor version
	X11_MINOR_VER="${X11_VER#*.}"
	X11_MINOR_VER="${X11_MINOR_VER%%.*}"
	X11_REVISION_VER="${X11_VER##*-r}"

	# If version <6.*, die
	if [ ${X11_MAJOR_VER} -lt 6 ]
	then
		einfo "Detected X ${X11_MAJOR_VER}.${X11_MINOR_VER} series, revision ${X11_REVISION_VER}"
		eerror "${ERROR_MSG}"
		exit 1
	# If version =6.* and <6.8.*, die
	elif [ ${X11_MAJOR_VER} -eq 6 -a ${X11_MINOR_VER} -lt 8 ]
	then
		einfo "Detected X ${X11_MAJOR_VER}.${X11_MINOR_VER} series, revision ${X11_REVISION_VER}"
		eerror "${ERROR_MSG}"
		exit 1	
	# If version =6.8.0 and <r4, die
	elif [ "${X11_VER}" = "6.8.0" ]
	then
		if [ ! ${X11_REVISION_VER} -lt 4 ]
		then
			einfo "Detected X ${X11_MAJOR_VER}.${X11_MINOR_VER} series, revision ${X11_REVISION_VER}"
			eerror "${ERROR_MSG}"
			exit 1
		fi
	fi
}

count_implementations() {
	local DIR
	COUNT="0"
	for DIR in $(ls /usr/lib/opengl)
	do
		if [ "${DIR}" != "global" ]
		then
			DIRS="${DIRS} ${DIR}"
			COUNT="$((COUNT + 1))"
		fi
	done
}

usage() {
# In addition to the below function, there are two extra uses for this.
#
# They aren't in the printed help message because they're intended
# 	for developer use.
# 1) --use-old $NEW_IMPLEM will switch to the new implementation only if
# 	no old setup existed (i.e., X has never been installed)
# 2) --get-implementation will return the implementation

count_implementations

# Get grammar right in message
local IS_ARE IMPLEM_PLURAL
if [ ${COUNT} -eq 1 ]
then
	IS_ARE="is"
	IMPLEM_PLURAL=""
else
	IS_ARE="are"
	IMPLEM_PLURAL="s"
fi

cat << FOO
usage: ${0##*/} <GL implementation>

note:
       This utility switches between OpenGL implementations.  There ${IS_ARE}
       ${COUNT} available implementation${IMPLEM_PLURAL}: ${DIRS}.

examples:
       ${0##*/} xorg-x11
       This will setup things to use libGL.so from X.org.

       ${0##*/} nvidia
       This will setup things to use libGL.so from the nVidia drivers.

FOO
	exit 1
}

need_version

if [ "$#" -ne 1 -a "$#" -ne 2 ] || \
	[ "$#" -eq 2 -a "$1" != "--use-old" ]
then
	usage
fi

GL_IMPLEM=""

# Discover GL implementation if it exists
get_implem() {
	if [ -f /etc/env.d/03opengl ]
	then
		source /etc/env.d/03opengl
		if [ -n "${LDPATH}" ]
		then
			GL_IMPLEM="${LDPATH%%:*}"
			GL_IMPLEM="${GL_IMPLEM##*opengl/}"
			GL_IMPLEM="${GL_IMPLEM%/lib*}"
			unset LDPATH
		fi
	fi
}

# Return current GL implementation
if [ "$1" = "--get-implementation" ]
then
	get_implem

	if [ -n "${GL_IMPLEM}" ]
	then
		echo "${GL_IMPLEM}"
	fi

	if [ -z "${GL_IMPLEM}" ]
	then
		exit 2
	fi

	exit 0
fi

if [ $(id -u) -ne 0 ]
then
	eerror "${0}: must be root."
	exit 1
fi

# Only use specified implementation if it is not already selected.
if [ "$1" = "--use-old" ]
then
	shift

	get_implem

	if [ -z "${GL_IMPLEM}" ]
	then
		GL_IMPLEM="$1"
	fi
else
	GL_IMPLEM="$1"
fi

if [ ! -d /usr/lib/opengl/${GL_IMPLEM} ]
then
	usage
fi

ebegin "Switching to ${GL_IMPLEM} OpenGL interface"
	rm -f /etc/env.d/03opengl &> /dev/null

	LIBDIRS="lib lib32 lib64"
	for LIBDIR in ${LIBDIRS}; do
		[ -d "/usr/${LIBDIR}" -a ! -h "/usr/${LIBDIR}" ] || continue
		# System wide tls stuff
		[ -h "/usr/${LIBDIR}/tls" ] && rm -f /usr/${LIBDIR}/tls
		[ -d "/usr/${LIBDIR}/tls" ] || mkdir -p /usr/${LIBDIR}/tls

		# Fallback on xorg-x11 if we don't have this implementation for this LIBDIR.
		if [ ! -d /usr/${LIBDIR}/opengl/"${GL_IMPLEM}" ]; then
			GL_LOCAL="xorg-x11"
		else
			GL_LOCAL="${GL_IMPLEM}"
		fi
		
		# Provide the right libnvidia-tls depending on ntpl or not
		if [ "${GL_LOCAL}" = "nvidia" ]; then
			if [ -e "/usr/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls" ]; then
				rm -f /usr/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls
			fi
		
			if getconf GNU_LIBPTHREAD_VERSION | grep -i nptl; then
				ln -sf /usr/${LIBDIR}/opengl/${GL_LOCAL}/tls /usr/${LIBDIR}/opengl/${GL_IMPLEM}/lib/tls
				# This shouldn't be neccessary...
				#ldpath="${ldpath:+${ldpath}:}/usr/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls"
			fi
		fi

		pushd /usr/${LIBDIR}
			# First remove old symlinks
			for file in libGL.so* libGLcore.so* libnvidia-tls.so*  tls/libnvidia-tls.so*; do
				[ -h ${file} ] && rm -f ${file}
			done

			# Note that we don't do .so*, just .so on purpose.  The
			# loader knows to look in the profile dir, and the
			# linked just needs the .so
			for file in opengl/${GL_LOCAL}/lib/*.{so,a,la}; do
				[ -f "${file}" ] || continue
				rm -f $(basename ${file})

				# Fix libtool archives (#48297)
				if [ "${file%.la}" != "${file}" ]; then
					sed "s:/usr/[^/]*/opengl/[^/]*/lib:/usr/${LIBDIR}:g" ${file} > $(basename ${file})
				else
					ln -s ${file}
				fi
			done
		popd

		if [ -e "/usr/${LIBDIR}/opengl/${GL_LOCAL}/lib/tls" ]; then
			pushd /usr/${LIBDIR}/tls
				for file in ../opengl/${GL_LOCAL}/lib/tls/*.{so,a,la}; do
					[ -f "${file}" ] || continue
					rm -f $(basename ${file})

					# Fix libtool archives (#48297)
					if [ "${file%.la}" != "${file}" ]; then
						sed "s:/usr/[^/]*/opengl/[^/]*/lib:/usr/${LIBDIR}:g" ${file} > $(basename ${file})
					else
						ln -s ${file}
					fi
				done
			popd
		fi

		if [ -e "/usr/${LIBDIR}/opengl/${GL_LOCAL}/extensions" ]; then
			mkdir -p /usr/${LIBDIR}/modules/extensions
			pushd /usr/${LIBDIR}/modules/extensions
				# First remove old symlinks
				for file in libglx.so libglx.a; do
					[ -h ${file} ] && rm -f ${file}
				done

				for file in ../../opengl/${GL_LOCAL}/extensions/*.{so,a,la}; do
					[ -f "${file}" ] || continue
					rm -f $(basename ${file})

					# Fix libtool archives (#48297)
					if [ "${file%.la}" != "${file}" ]; then
						sed "s:/usr/[^/]*/opengl/[^/]*/lib:/usr/${LIBDIR}:g" ${file} > $(basename ${file})
					else
						ln -s ${file}
					fi
				done
			popd
		fi

		# Setup the includes
		if [ -e "/usr/${LIBDIR}/opengl/${GL_LOCAL}/include" ]; then
			for x in gl.h glx.h glxtokens.h glext.h; do
				if [ -e /usr/X11R6/include/GL/${x} ]; then
					rm -f /usr/X11R6/include/GL/${x}
				fi

				# IMPORTANT
				# It is preferable currently to use the standard glext.h file
				# however if an OpenGL provider must use a self produced glext.h
				# then it should be installed to ${GL_IMPLEM}/include

				if [ -e /usr/${LIBDIR}/opengl/${GL_IMPLEM}/include/${x} ]; then
					ln -sf /usr/${LIBDIR}/opengl/${GL_IMPLEM}/include/${x} \
						/usr/X11R6/include/GL/${x}
				else
					ln -sf /usr/${LIBDIR}/opengl/global/include/${x} \
						/usr/X11R6/include/GL/${x}
				fi
			done
		fi

		# Setup the $LDPATH
		ldpath="${ldpath:+${ldpath}:}/usr/${LIBDIR}/opengl/${GL_LOCAL}/lib"

	done &> /dev/null

	echo "LDPATH=\"${ldpath}\"" > /etc/env.d/03opengl

	env-update

eend 0

# vim:ts=4
