#!/sbin/runscript
# Copyright 1999-2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/net-misc/dhcp/files/dhcpd.init,v 1.1 2006/02/28 10:38:58 uberlord Exp $

DHCPD_CONF="/etc/dhcp/dhcpd.conf"

# Work out our cffile if it's on our DHCPD_OPTS
if [[ " ${DHCPD_OPTS} " == *" -cf "* ]]; then
	DHCPD_CONF=" ${DHCPD_OPTS} "
	DHCPD_CONF="${DHCPD_CONF##* -cf }"
	DHCPD_CONF="${DHCPD_CONF%% *}"

	# Now we have the cffile, we can remove it from our options
	DHCPD_OPTS="${DHCPD_OPTS//-cf/}"
	DHCPD_OPTS="${DHCPD_OPTS//${DHCPD_CONF}/}"
fi

depend() {
	need net
	use logger dns
}

get_var() {
	sed -n 's/^[[:blank:]]\?'"$1"' "*\([^#";]\+\).*/\1/p' \
		"${DHCPD_CHROOT}/${DHCPD_CONF}"
}

start() {
	if [[ ! -f "${DHCPD_CHROOT}/${DHCPD_CONF}" ]] ; then
		eerror "${DHCPD_CHROOT}/${DHCPD_CONF} does not exist"
		return 1
	fi

	local leasefile="$(get_var lease-file-name)"
	leasefile="${DHCPD_CHROOT}/${leasefile:-/var/lib/dhcp/dhcpd.leases}"
	if [[ ! -f ${leasefile} ]] ; then
		ebegin "Creating ${leasefile}"
		touch "${leasefile}"
		chown dhcp:dhcp "${leasefile}"
		eend $? || return 1
	fi

	# Setup LD_PRELOAD so name resolution works in our chroot.
	if [[ -n ${DHCPD_CHROOT} ]] ; then
	    LD_PRELOAD="${LD_PRELOAD} /usr/lib/libresolv.so"
	    export LD_PRELOAD="${LD_PRELOAD} /usr/lib/libnss_dns.so"
	fi

	local pidfile="$(get_var pid-file-name)"
	pidfile="${pidfile:-/var/run/dhcp/dhcpd.pid}"

	ebegin "Starting ${DHCPD_CHROOT:+chrooted }${myservice}"
	start-stop-daemon --start --exec /usr/sbin/dhcpd \
		--pidfile "${DHCPD_CHROOT}/${pidfile}" \
		-- ${DHCPD_OPTS} -q -pf "${pidfile}" -cf "${DHCPD_CONF}" \
		-user dhcp -group dhcp \
		${DHCPD_CHROOT:+-chroot} ${DHCPD_CHROOT} ${DHCPD_IFACE}
	eend $? \
	    && save_options chroot "${DHCPD_CHROOT}" \
	    && save_options pidfile "${pidfile}"
}

stop() {
	local chrooted=""
	[[ -n $(get_options chroot) ]] && chrooted="chrooted "
	ebegin "Stopping ${chrooted}${myservice}"
	start-stop-daemon --stop --exec /usr/sbin/dhcpd \
	    --pidfile "$(get_options pidfile)"
	eend $?
}
