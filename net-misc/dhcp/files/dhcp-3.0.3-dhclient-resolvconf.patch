--- client/scripts/bsdos
+++ client/scripts/bsdos
@@ -1,11 +1,20 @@
 #!/bin/sh
 
 make_resolv_conf() {
-  if [ "x$new_domain_name" != x ] && [ x"$new_domain_name_servers" != x ]; then
-    echo search $new_domain_name >/etc/resolv.conf
+  if [ "x$new_domain_name" != x ] || [ x"$new_domain_name_servers" != x ]; then
+    conf="# Generated by dhclient for interface $interface\n"
+    if [ "x$new_domain_name" != x ]; then
+      conf="${conf}search $new_domain_name\n"
+    fi
     for nameserver in $new_domain_name_servers; do
-      echo nameserver $nameserver >>/etc/resolv.conf
+      conf="${conf}nameserver $nameserver\n"
     done
+    if [ -x /sbin/resolvconf ]; then
+      echo -e "$conf" | resolvconf -a "$interface"
+    else
+      echo -e "$conf" > /etc/resolv.conf
+      chmod 644 /etc/resolv.conf
+    fi
   fi
   # If we're making confs, may as well make an ntp.conf too
   make_ntp_conf
@@ -176,6 +188,7 @@
     ifconfig $interface inet alias $alias_ip_address $alias_subnet_arg
     route add $alias_ip_address 127.0.0.1
   fi
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 0
 fi
 
@@ -221,6 +231,7 @@
   fi
   arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -n -d \1/p' \
 							|sh >/dev/null 2>&1
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 1
 fi
 
--- client/scripts/freebsd
+++ client/scripts/freebsd
@@ -11,25 +11,19 @@
 fi
 
 make_resolv_conf() {
-  if [ x"$new_domain_name_servers" != x ]; then
+  if [ "x$new_domain_name" != x ] || [ x"$new_domain_name_servers" != x ]; then
+    conf="# Generated by dhclient for interface $interface\n"
     if [ "x$new_domain_name" != x ]; then
-      ( echo search $new_domain_name >/etc/resolv.conf )
-      exit_status=$?
-    else
-      if [ -e /etc/resolv.conf ] ; then
-	( rm /etc/resolv.conf )
-	exit_status=$?
-      else
-	( touch /etc/resolv.conf )
-	exit_status=$?
-      fi
+      conf="${conf}search $new_domain_name\n"
     fi
-    if [ $exit_status -ne 0 ]; then
-      $LOGGER "WARNING: Unable to update resolv.conf: Error $exit_status"
+    for nameserver in $new_domain_name_servers; do
+      conf="${conf}nameserver $nameserver\n"
+    done
+    if [ -x /sbin/resolvconf ]; then
+      echo -e "$conf" | resolvconf -a "$interface"
     else
-      for nameserver in $new_domain_name_servers; do
-	( echo nameserver $nameserver >>/etc/resolv.conf )
-      done
+      echo -e "$conf" > /etc/resolv.conf
+      chmod 644 /etc/resolv.conf
     fi
   fi
   # If we're making confs, may as well make an ntp.conf too
@@ -207,6 +201,7 @@
     ifconfig $interface inet alias $alias_ip_address $alias_subnet_arg
     route add $alias_ip_address 127.0.0.1
   fi
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 0
 fi
 
@@ -256,6 +251,7 @@
   fi
   arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -d \1/p' \
 							|sh >/dev/null 2>&1
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 1
 fi
 
--- client/scripts/linux
+++ client/scripts/linux
@@ -23,12 +23,20 @@
 # of the $1 in its args.
 
 make_resolv_conf() {
-  if [ "x$new_domain_name" != x ] && [ x"$new_domain_name_servers" != x ]; then
-    echo search $new_domain_name >/etc/resolv.conf
-    chmod 644 /etc/resolv.conf
+  if [ "x$new_domain_name" != x ] || [ x"$new_domain_name_servers" != x ]; then
+    conf="# Generated by dhclient for interface $interface\n"
+    if [ "x$new_domain_name" != x ]; then
+      conf="${conf}search $new_domain_name\n"
+    fi
     for nameserver in $new_domain_name_servers; do
-      echo nameserver $nameserver >>/etc/resolv.conf
+      conf="${conf}nameserver $nameserver\n"
     done
+    if [ -x /sbin/resolvconf ]; then
+      echo -e "$conf" | resolvconf -a "$interface"
+    else
+      echo -e "$conf" > /etc/resolv.conf
+      chmod 644 /etc/resolv.conf
+    fi
   fi
   # If we're making confs, may as well make an ntp.conf too
   make_ntp_conf
@@ -183,6 +191,7 @@
     ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
     route add -host $alias_ip_address dev $interface:0
   fi
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 0
 fi
 
@@ -211,6 +220,7 @@
     exit_with_hooks 0
   fi
   ifconfig $interface inet 0.0.0.0 
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 1
 fi
 
--- client/scripts/netbsd
+++ client/scripts/netbsd
@@ -1,11 +1,20 @@
 #!/bin/sh
 
 make_resolv_conf() {
-  if [ "x$new_domain_name" != x ] && [ x"$new_domain_name_servers" != x ]; then
-    echo search $new_domain_name >/etc/resolv.conf
+  if [ "x$new_domain_name" != x ] || [ x"$new_domain_name_servers" != x ]; then
+    conf="# Generated by dhclient for interface $interface\n"
+    if [ "x$new_domain_name" != x ]; then
+      conf="${conf}search $new_domain_name\n"
+    fi
     for nameserver in $new_domain_name_servers; do
-      echo nameserver $nameserver >>/etc/resolv.conf
+      conf="${conf}nameserver $nameserver\n"
     done
+    if [ -x /sbin/resolvconf ]; then
+      echo -e "$conf" | resolvconf -a "$interface"
+    else
+      echo -e "$conf" > /etc/resolv.conf
+      chmod 644 /etc/resolv.conf
+    fi
   fi
   # If we're making confs, may as well make an ntp.conf too
   make_ntp_conf
@@ -176,6 +185,7 @@
     ifconfig $interface inet alias $alias_ip_address $alias_subnet_arg
     route add $alias_ip_address 127.0.0.1
   fi
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 0
 fi
 
@@ -221,6 +231,7 @@
   fi
   arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -n -d \1/p' \
 							|sh >/dev/null 2>&1
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 1
 fi
 
--- client/scripts/openbsd
+++ client/scripts/openbsd
@@ -1,11 +1,20 @@
 #!/bin/sh
 
 make_resolv_conf() {
-  if [ "x$new_domain_name" != x ] && [ x"$new_domain_name_servers" != x ]; then
-    echo search $new_domain_name >/etc/resolv.conf
+  if [ "x$new_domain_name" != x ] || [ x"$new_domain_name_servers" != x ]; then
+    conf="# Generated by dhclient for interface $interface\n"
+    if [ "x$new_domain_name" != x ]; then
+      conf="${conf}search $new_domain_name\n"
+    fi
     for nameserver in $new_domain_name_servers; do
-      echo nameserver $nameserver >>/etc/resolv.conf
+      conf="${conf}nameserver $nameserver\n"
     done
+    if [ -x /sbin/resolvconf ]; then
+      echo -e "$conf" | resolvconf -a "$interface"
+    else
+      echo -e "$conf" > /etc/resolv.conf
+      chmod 644 /etc/resolv.conf
+    fi
   fi
   # If we're making confs, may as well make an ntp.conf too
   make_ntp_conf
@@ -176,6 +185,7 @@
     ifconfig $interface inet alias $alias_ip_address $alias_subnet_arg
     route add $alias_ip_address 127.0.0.1
   fi
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 0
 fi
 
@@ -221,6 +231,7 @@
   fi
   arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -n -d \1/p' \
 							|sh >/dev/null 2>&1
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 1
 fi
 
--- client/scripts/solaris
+++ client/scripts/solaris
@@ -1,11 +1,20 @@
 #!/bin/sh  
 
 make_resolv_conf() {
-  if [ "x$new_domain_name" != x ] && [ x"$new_domain_name_servers" != x ]; then
-    echo search $new_domain_name >/etc/resolv.conf
+  if [ "x$new_domain_name" != x ] || [ x"$new_domain_name_servers" != x ]; then
+    conf="# Generated by dhclient for interface $interface\n"
+    if [ "x$new_domain_name" != x ]; then
+      conf="${conf}search $new_domain_name\n"
+    fi
     for nameserver in $new_domain_name_servers; do
-      echo nameserver $nameserver >>/etc/resolv.conf
+      conf="${conf}nameserver $nameserver\n"
     done
+    if [ -x /sbin/resolvconf ]; then
+      echo -e "$conf" | resolvconf -a "$interface"
+    else
+      echo -e "$conf" > /etc/resolv.conf
+      chmod 644 /etc/resolv.conf
+    fi
   fi
   # If we're making confs, may as well make an ntp.conf too
   make_ntp_conf
@@ -157,6 +166,7 @@
     $ifconfig ${interface}:1 inet $alias_ip_address $alias_subnet_arg
     route add $alias_ip_address 127.0.0.1 1
   fi
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 0
 fi
 
@@ -186,6 +196,7 @@
   for router in $old_routers; do
     route delete default $router >/dev/null 2>&1
   done
+  [ -x /sbin/resolvconf ] && resolvconf -d "$interface"
   exit_with_hooks 1
 fi
 
