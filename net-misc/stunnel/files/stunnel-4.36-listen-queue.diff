diff -urN stunnel-4.36/src/options.c stunnel-4.36-new/src/options.c
--- stunnel-4.36/src/options.c	2011-04-30 15:14:02.000000000 -0700
+++ stunnel-4.36-new/src/options.c	2011-05-26 11:42:10.455120934 -0700
@@ -1484,6 +1484,24 @@
         break;
     }
 
+    /* listenqueue */
+    switch(cmd) {
+    case CMD_INIT:
+        section->listenqueue=SOMAXCONN;
+        break;
+    case CMD_EXEC:
+        if(strcasecmp(opt, "listenqueue"))
+            break;
+        section->listenqueue=atoi(arg);
+        return (section->listenqueue?NULL:"Bad verify level");
+    case CMD_DEFAULT:
+        s_log(LOG_NOTICE, "%-15s = %d", "listenqueue", SOMAXCONN);
+        break;
+    case CMD_HELP:
+        s_log(LOG_NOTICE, "%-15s = defines the maximum length the queue of pending connections may grow to", "listenqueue");
+        break;
+    }
+
     if(cmd==CMD_EXEC)
         return option_not_found;
     return NULL; /* OK */
diff -urN stunnel-4.36/src/prototypes.h stunnel-4.36-new/src/prototypes.h
--- stunnel-4.36/src/prototypes.h	2011-05-01 11:18:01.000000000 -0700
+++ stunnel-4.36-new/src/prototypes.h	2011-05-26 11:42:33.285154425 -0700
@@ -158,6 +158,7 @@
     int timeout_close; /* maximum close_notify time */
     int timeout_connect; /* maximum connect() time */
     int timeout_idle; /* maximum idle connection time */
+    int listenqueue; /* Listen baklog */
     enum {FAILOVER_RR, FAILOVER_PRIO} failover; /* failover strategy */
 
         /* protocol name for protocol.c */
diff -urN stunnel-4.36/src/stunnel.c stunnel-4.36-new/src/stunnel.c
--- stunnel-4.36/src/stunnel.c	2011-05-02 14:51:02.000000000 -0700
+++ stunnel-4.36-new/src/stunnel.c	2011-05-26 11:46:37.775513010 -0700
@@ -241,7 +241,7 @@
             }
             s_log(LOG_DEBUG, "Service %s bound to %s",
                 opt->servname, opt->local_address);
-            if(listen(opt->fd, SOMAXCONN)) {
+            if(listen(opt->fd, opt->listenqueue)) {
                 sockerror("listen");
                 return 0;
             }
