diff -urN rsync-2.5.1/flist.c rsync-2.5.1-fixed/flist.c
--- rsync-2.5.1/flist.c	Thu Jan  3 01:09:35 2002
+++ rsync-2.5.1-fixed/flist.c	Fri Jan 25 01:55:01 2002
@@ -557,7 +557,7 @@
 	file->gid = st.st_gid;
 	file->dev = st.st_dev;
 	file->inode = st.st_ino;
-#ifdef HAVE_ST_RDEV
+#ifdef HAVE_STRUCT_STAT_ST_RDEV
 	file->rdev = st.st_rdev;
 #endif
 
diff -urN rsync-2.5.1/io.c rsync-2.5.1-fixed/io.c
--- rsync-2.5.1/io.c	Thu Nov 29 18:21:08 2001
+++ rsync-2.5.1-fixed/io.c	Fri Jan 25 01:54:11 2002
@@ -438,6 +438,8 @@
 			}
 
 			if (ret <= 0) {
+				/* Don't try to write errors back across the stream */
+				io_multiplexing_close();
 				rprintf(FERROR,
 					"error writing %d unbuffered bytes"
 					" - exiting: %s\n", len,
diff -urN rsync-2.5.1/main.c rsync-2.5.1-fixed/main.c
--- rsync-2.5.1/main.c	Thu Nov 29 18:21:08 2001
+++ rsync-2.5.1-fixed/main.c	Fri Jan 25 01:54:11 2002
@@ -794,10 +794,12 @@
 	}
 
 	signal(SIGINT,SIGNAL_CAST sig_int);
-	signal(SIGPIPE,SIGNAL_CAST sig_int);
 	signal(SIGHUP,SIGNAL_CAST sig_int);
 	signal(SIGTERM,SIGNAL_CAST sig_int);
 
+	/* Ignore SIGPIPE; we check error codes consistently. */
+	signal(SIGPIPE,SIG_IGN);
+
 	/* Initialize push_dir here because on some old systems getcwd
 	   (implemented by forking "pwd" and reading its output) doesn't
 	   work when there are other child processes.  Also, on all systems
