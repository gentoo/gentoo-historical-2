--- trunk/contrib/scripts/vmail.cgi	2004/09/15 05:11:41	3781
+++ trunk/contrib/scripts/vmail.cgi	2005/10/30 16:30:35	6896
@@ -11,10 +11,15 @@
 # (icky, I know....  if you know better perl please help!)
 #
 #
+# Synchronization added by GDS Partners (www.gdspartners.com)
+#			 Stojan Sljivic (stojan.sljivic@gdspartners.com)
+#
 use CGI qw/:standard/;
 use Carp::Heavy;
 use CGI::Carp qw(fatalsToBrowser);
 use DBI;
+use Fcntl qw ( O_WRONLY O_CREAT O_EXCL );
+use Time::HiRes qw ( usleep );
 
 $context=""; # Define here your by default context (so you dont need to put voicemail@context in the login
 
@@ -44,6 +49,57 @@
 $footer = "<hr><font size=-1><a href=\"http://www.asterisk.org\">The Asterisk Open Source PBX</a> Copyright 2004, <a href=\"http://www.digium.com\">Digium, Inc.</a></a>";
 $stdcontainerend = "</td></tr><tr><td align=right>$footer</td></tr></table>\n";
 
+sub lock_path() {
+
+	my($path) = @_;
+	my $rand;
+	my $rfile;
+	my $start;
+	my $res;
+	
+	$rand = rand 99999999;	
+	$rfile = "$path/.lock-$rand";
+	
+	sysopen(RFILE, $rfile, O_WRONLY | O_CREAT | O_EXCL, 0666) or return -1;
+	close(RFILE);
+	
+	$res = link($rfile, "$path/.lock");
+	$start = time;
+	if ($res == 0) {
+	while (($res == 0) && (time - $start <= 5)) {
+		$res = link($rfile, "$path/.lock");
+		usleep(1);
+	}
+	}
+	unlink($rfile);
+	
+	if ($res == 0) {
+		return -1;
+	} else {
+		return 0;
+	}
+}
+
+sub unlock_path() {
+
+	my($path) = @_;
+	
+	unlink("$path/.lock");
+}
+
+sub untaint() {
+
+	my($data) = @_;
+	
+	if ($data =~ /^([-\@\w.]+)$/) {
+		$data = $1;
+	} else {
+		die "Security violation.";
+	}
+	
+	return $data;
+}
+
 sub login_screen() {
 	print header;
 	my ($message) = @_;
@@ -120,7 +176,7 @@
 
                                 # db variables are present.  Use db for authentication.
                                 my $dbh = DBI->connect("DBI:mysql:$dbname:$dbhost",$dbuser,$dbpass);
-                                my $sth = $dbh->prepare(qq{select fullname,context from users where mailbox='$mbox' and password='$pass' and context='$context'});
+                                my $sth = $dbh->prepare(qq{select fullname,context from voicemail where mailbox='$mbox' and password='$pass' and context='$context'});
                                 $sth->execute();
                                 if (($fullname, $category) = $sth->fetchrow_array()) {;
                                         return ($fullname ? $fullname : "Extension $mbox in $context",$category);
@@ -184,7 +240,7 @@
 
                                 # db variables are present.  Use db for authentication.
                                 my $dbh = DBI->connect("DBI:mysql:$dbname:$dbhost",$dbuser,$dbpass);
-                                my $sth = $dbh->prepare(qq{select fullname,context from users where mailbox='$mbox' and password='$pass' and context='$context'});
+                                my $sth = $dbh->prepare(qq{select fullname,context from voicemail where mailbox='$mbox' and password='$pass' and context='$context'});
                                 $sth->execute();
 				if (($fullname, $category) = $sth->fetchrow_array()) {;
                                         return ($fullname ? $fullname : "unknown", $category);
@@ -242,7 +298,7 @@
 
                                 # db variables are present.  Use db for authentication.
                                 my $dbh = DBI->connect("DBI:mysql:$dbname:$dbhost",$dbuser,$dbpass);
-                                my $sth = $dbh->prepare(qq{select mailbox,fullname,context from users where context='$context' order by mailbox});
+                                my $sth = $dbh->prepare(qq{select mailbox,fullname,context from voicemail where context='$context' order by mailbox});
                                 $sth->execute();
                                 while (($mailbox, $fullname, $category) = $sth->fetchrow_array()) {
                                         $text = $mailbox;
@@ -489,14 +545,16 @@
 sub message_audio()
 {
 	my ($forcedownload) = @_;
-	my $folder = param('folder');
-	my $msgid = param('msgid');
-	my $mailbox = param('mailbox');
-	my $context = param('context');
+	my $folder = &untaint(param('folder'));
+	my $msgid = &untaint(param('msgid'));
+	my $mailbox = &untaint(param('mailbox'));
+	my $context = &untaint(param('context'));
 	my $format = param('format');
 	if (!$format) {
 		$format = &getcookie('format');
 	}
+	&untaint($format);
+
 	my $path = "/var/spool/asterisk/voicemail/$context/$mailbox/$folder/msg${msgid}.$format";
 
 	$msgid =~ /^\d\d\d\d$/ || die("Msgid Liar ($msgid)!");
@@ -719,6 +777,8 @@
 	}
 	
 	my $path = "/var/spool/asterisk/voicemail/$context/$mbox/$newfolder";
+	$path =~ /^(.*)$/;
+	$path = $1;
 	mkdir $path, 0770;
 	my $path = "/var/spool/asterisk/voicemail/$context/$mbox/$oldfolder";
 	opendir(DIR, $path) || die("Unable to open directory\n");
@@ -742,6 +802,10 @@
 	my ($orig, $new) = @_;
 	my $res;
 	my $data;
+	$orig =~ /^(.*)$/;
+	$orig = $1;
+	$new =~ /^(.*)$/;
+	$new = $1;
 	open(IN, "<$orig") || die("Unable to open '$orig'\n");
 	open(OUT, ">$new") || DIE("Unable to open '$new'\n");
 	while(($res = sysread(IN, $data, 4096)) > 0) {
@@ -788,8 +852,12 @@
 	}
 	
 	my $path = "/var/spool/asterisk/voicemail/$context/$newmbox";
+	$path =~ /^(.*)$/;
+	$path = $1;
 	mkdir $path, 0770;
 	my $path = "/var/spool/asterisk/voicemail/$context/$newmbox/INBOX";
+	$path =~ /^(.*)$/;
+	$path = $1;
 	mkdir $path, 0770;
 	my $path = "/var/spool/asterisk/voicemail/$context/$mbox/$oldfolder";
 	opendir(DIR, $path) || die("Unable to open directory\n");
@@ -863,19 +931,29 @@
 		die("Bah! Not a valid mailbox '$newmbox'\n");
 		return "";
 	}
-	$msgcount = &msgcount($context, $newmbox, "INBOX");
+	
 	my $txt;
-	if ($newmbox ne $mbox) {
-#		print header;
-		foreach $msg (@msgs) {
-#			print "Forwarding $msg from $mbox to $newmbox<BR>\n";
-			&message_copy($context, $mbox, $newmbox, $folder, $msg, sprintf "%04d", $msgcount);
-			$msgcount++;
+	$context = &untaint($context);
+	$newmbox = &untaint($newmbox);
+	my $path = "/var/spool/asterisk/voicemail/$context/$newmbox/INBOX";
+	if (&lock_path($path) == 0) {
+		$msgcount = &msgcount($context, $newmbox, "INBOX");
+		
+		if ($newmbox ne $mbox) {
+#			print header;
+			foreach $msg (@msgs) {
+#				print "Forwarding $msg from $mbox to $newmbox<BR>\n";
+				&message_copy($context, $mbox, $newmbox, $folder, $msg, sprintf "%04d", $msgcount);
+				$msgcount++;
+			}
+			$txt = "Forwarded messages " . join(', ', @msgs) . "to $newmbox";
+		} else {
+			$txt = "Can't forward messages to yourself!\n";
 		}
-		$txt = "Forwarded messages " . join(', ', @msgs) . "to $newmbox";
+		&unlock_path($path); 
 	} else {
-		$txt = "Can't forward messages to yourself!\n";
-	} 
+		$txt = "Cannot forward messages: Unable to lock path.\n";
+	}
 	if ($toindex) {
 		&message_index($folder, $txt);
 	} else {
@@ -900,33 +978,42 @@
 		$context = "default";
 	}
 	my $passwd = param('password');
-	my $msgcount = &msgcount($context, $mbox, $folder);
-	my $omsgcount = &msgcount($context, $mbox, $newfolder) if $newfolder;
-#	print header;
-	if ($newfolder ne $folder) {
-		$y = 0;
-		for ($x=0;$x<$msgcount;$x++) {
-			my $msg = sprintf "%04d", $x;
-			my $newmsg = sprintf "%04d", $y;
-			if (grep(/^$msg$/, @msgs)) {
-				if ($newfolder) {
-					&message_rename($context, $mbox, $folder, $msg, $newfolder, sprintf "%04d", $omsgcount);
-					$omsgcount++;
+	$context = &untaint($context);
+	$mbox = &untaint($mbox);
+	$folder = &untaint($folder);
+	my $path = "/var/spool/asterisk/voicemail/$context/$mbox/$folder";
+	if (&lock_path($path) == 0) {
+		my $msgcount = &msgcount($context, $mbox, $folder);
+		my $omsgcount = &msgcount($context, $mbox, $newfolder) if $newfolder;
+	#	print header;
+		if ($newfolder ne $folder) {
+			$y = 0;
+			for ($x=0;$x<$msgcount;$x++) {
+				my $msg = sprintf "%04d", $x;
+				my $newmsg = sprintf "%04d", $y;
+				if (grep(/^$msg$/, @msgs)) {
+					if ($newfolder) {
+						&message_rename($context, $mbox, $folder, $msg, $newfolder, sprintf "%04d", $omsgcount);
+						$omsgcount++;
+					} else {
+						&message_delete($context, $mbox, $folder, $msg);
+					}
 				} else {
-					&message_delete($context, $mbox, $folder, $msg);
+					&message_rename($context, $mbox, $folder, $msg, $folder, $newmsg);
+					$y++;
 				}
+			}
+			if ($del) {
+				$txt = "Deleted messages "  . join (', ', @msgs);
 			} else {
-				&message_rename($context, $mbox, $folder, $msg, $folder, $newmsg);
-				$y++;
+				$txt = "Moved messages "  . join (', ', @msgs) . " to $newfolder";
 			}
-		}
-		if ($del) {
-			$txt = "Deleted messages "  . join (', ', @msgs);
 		} else {
-			$txt = "Moved messages "  . join (', ', @msgs) . " to $newfolder";
+			$txt = "Can't move a message to the same folder they're in already";
 		}
+		&unlock_path($path);
 	} else {
-		$txt = "Can't move a message to the same folder they're in already";
+		$txt = "Cannot move/delete messages: Unable to lock path.\n";
 	}
 	# Not as many messages now
 	$msgcount--;
