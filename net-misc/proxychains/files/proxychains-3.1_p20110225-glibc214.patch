--- proxychains-3.1_p20110225.orig/proxychains/libproxychains.c
+++ proxychains-3.1_p20110225/proxychains/libproxychains.c
@@ -261,124 +261,3 @@
 	*proxy_count=count;
 	proxychains_got_chain_data=1;
 }
-
-
-
-int connect (int sock, const struct sockaddr *addr, unsigned int len)
-{
-	int socktype=0,optlen=0,flags=0,ret=0;
-	char str[256];
-	struct in_addr *p_addr_in;
-	size_t i;
-
-	if(!init_l)
-		init_lib();
-	optlen=sizeof(socktype);
-	getsockopt(sock,SOL_SOCKET,SO_TYPE,&socktype,&optlen);
-	if (! (SOCKFAMILY(*addr)==AF_INET  && socktype==SOCK_STREAM))
-		return true_connect(sock,addr,len);
-
-	p_addr_in = &((struct sockaddr_in *)addr)->sin_addr;
-
-	//PDEBUG("localnet: %s; ", inet_ntop(AF_INET,&in_addr_localnet, str, sizeof(str)));
-	//PDEBUG("netmask: %s; " , inet_ntop(AF_INET, &in_addr_netmask, str, sizeof(str)));
-	//PDEBUG("target: %s\n", inet_ntop(AF_INET, p_addr_in, str, sizeof(str)));
-
-	for (i = 0; i < num_localnet_addr; i++) {
-		if ((localnet_addr[i].in_addr.s_addr & localnet_addr[i].netmask.s_addr)
-			== (p_addr_in->s_addr & localnet_addr[i].netmask.s_addr))
-		{
-			PDEBUG("accessing localnet using true_connect\n");
-			return true_connect(sock,addr,len);
-		}
-	}
-
-	flags=fcntl(sock, F_GETFL, 0);
-	if(flags & O_NONBLOCK)
-	fcntl(sock, F_SETFL, !O_NONBLOCK);
-	ret=connect_proxy_chain(
-		sock,
-		SOCKADDR(*addr),
-		SOCKPORT(*addr),
-		proxychains_pd,
-		proxychains_proxy_count,
-		proxychains_ct,
-		  proxychains_max_chain );
-	fcntl(sock, F_SETFL, flags);
-	if(ret!=SUCCESS)
-	errno=ECONNREFUSED;
-	return ret;
-}
-
-struct hostent *gethostbyname(const char *name)
-{
-	PDEBUG("gethostbyname: %s\n",name);
-	if(!init_l)
-		init_lib();
-	if(proxychains_resolver)
-		return proxy_gethostbyname(name);
-	else
-		return true_gethostbyname(name);
-			
-	return NULL;
-}
-int getaddrinfo(const char *node, const char *service,
-		const struct addrinfo *hints,
-		struct addrinfo **res)
-{
-	int ret = 0;
-	PDEBUG("getaddrinfo: %s %s\n",node ,service);
-	if(!init_l)
-		init_lib();
-	if(proxychains_resolver)
-		ret = proxy_getaddrinfo(node, service, hints, res);
-	else
-		ret = true_getaddrinfo(node, service, hints, res);
-			
-	return ret;
-}
-void freeaddrinfo(struct addrinfo *res)
-{
-	PDEBUG("freeaddrinfo %p \n",res);
-	if(!init_l)
-		init_lib();
-	if(!proxychains_resolver)
-		true_freeaddrinfo(res);
-	else {
-		free(res->ai_addr);
-		free(res);
-	}
-	return;
-}
-
-int getnameinfo (const struct sockaddr * sa,
-			socklen_t salen, char * host,
-			socklen_t hostlen, char * serv,
-			socklen_t servlen, unsigned int flags)
-{
-	int ret = 0;
-	if(!init_l)
-		init_lib();
-	if(!proxychains_resolver) {
-		ret = true_getnameinfo(sa,salen,host,hostlen,
-				serv,servlen,flags);
-	} else {
-		if(hostlen) 
-			strncpy(host, inet_ntoa(SOCKADDR_2(*sa)),hostlen);
-		if(servlen) 
-			snprintf(serv, servlen,"%d",ntohs(SOCKPORT(*sa)));
-	}
-	PDEBUG("getnameinfo: %s %s\n", host, serv);
-	return ret;
-}
-
-struct hostent *gethostbyaddr (const void *addr, socklen_t len, int type)
-{
-	PDEBUG("TODO: gethostbyaddr hook\n"); 
-	if(!init_l)
-		init_lib();
-	if(!proxychains_resolver)
-		return true_gethostbyaddr(addr,len,type);
-	return NULL;
-}
-	
