--- ospf_neighbor.c.orig	Thu Jul  4 07:06:41 2002
+++ ospf_neighbor.c	Sun Sep 29 20:31:59 2002
@@ -119,6 +119,9 @@
   OSPF_NSM_TIMER_OFF (nbr->t_ls_req);
   OSPF_NSM_TIMER_OFF (nbr->t_ls_upd);
 
+  /* Cancel all events. *//* Thread lookup cost would be negligible. */
+  thread_cancel_event (master, nbr);
+
   XFREE (MTYPE_OSPF_NEIGHBOR, nbr);
 }
 
--- ospf_nsm.c.orig	Thu Jul  4 07:06:41 2002
+++ ospf_nsm.c	Mon Sep 30 09:32:40 2002
@@ -770,9 +770,24 @@
     nbr->crypt_seqnum = 0;
   
   /* Generete NeighborChange ISM event. */
+#ifdef BUGGY_ISM_TRANSITION
   if ((old_state < NSM_TwoWay && state >= NSM_TwoWay) ||
       (old_state >= NSM_TwoWay && state < NSM_TwoWay))
     OSPF_ISM_EVENT_EXECUTE (oi, ISM_NeighborChange);
+#else /* BUGGY_ISM_TRANSITION */
+  switch (oi->state) {
+  case ISM_DROther:
+  case ISM_Backup:
+  case ISM_DR:
+    if ((old_state < NSM_TwoWay && state >= NSM_TwoWay) ||
+        (old_state >= NSM_TwoWay && state < NSM_TwoWay))
+      OSPF_ISM_EVENT_EXECUTE (oi, ISM_NeighborChange);
+    break;
+  default:
+    /* ISM_PointToPoint -> ISM_Down, ISM_Loopback -> ISM_Down, etc. */
+    break;
+  }
+#endif /* BUGGY_ISM_TRANSITION */
 
   /* Performance hack. Send hello immideately when some neighbor enter
      Init state.  This whay we decrease neighbor discovery time. Gleb.*/
