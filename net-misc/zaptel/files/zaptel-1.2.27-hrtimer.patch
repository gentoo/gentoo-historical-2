diff -uNr zaptel-1.2.27.ORIG/ztdummy.c zaptel-1.2.27/ztdummy.c
--- zaptel-1.2.27.ORIG/ztdummy.c	2009-04-06 10:36:51.000000000 +0100
+++ zaptel-1.2.27/ztdummy.c	2009-04-06 10:40:21.000000000 +0100
@@ -107,6 +107,19 @@
 #  error "This kernel is too old: not supported by this file"
 #endif
 
+#if defined(USE_HIGHRESTIMER) && ( LINUX_VERSION_CODE < KERNEL_VERSION(2,6,28) )
+/* compatibility with new hrtimer interface */
+static inline ktime_t hrtimer_get_expires(const struct hrtimer *timer)
+{
+	return timer->expires;
+}
+
+static inline void hrtimer_set_expires(struct hrtimer *timer, ktime_t time)
+{
+	timer->expires = time;
+}
+#endif
+
 static struct ztdummy *ztd;
 
 static int debug = 0;
@@ -192,7 +205,7 @@
 	 * expired.
 	 * We should worry if overrun is 2 or more; then we really missed 
 	 * a tick */
-	overrun = hrtimer_forward(&zaptimer, htmr->expires, 
+	overrun = hrtimer_forward(&zaptimer, hrtimer_get_expires(htmr),
 			ktime_set(0, ZAPTEL_TIME_NS));
 	if(overrun > 1) {
 		if(printk_ratelimit())
@@ -217,7 +230,7 @@
 {
     zt_receive(&ztd->span);
     zt_transmit(&ztd->span);
-    timer.expires = jiffies + 1;
+    hrtimer_set_expires(timer, jiffies + 1);
     add_timer(&timer);
 }
 #endif
