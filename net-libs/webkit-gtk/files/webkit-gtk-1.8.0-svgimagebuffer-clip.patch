Index: /trunk/Source/WebCore/ChangeLog
===================================================================
--- /trunk/Source/WebCore/ChangeLog	(revision 110561)
+++ /trunk/Source/WebCore/ChangeLog	(revision 110563)
@@ -1,2 +1,31 @@
+2012-03-13  Stephen Chenney  <schenney@chromium.org>
+
+        Crash in WebCore::GraphicsContext::paintingDisabled
+        https://bugs.webkit.org/show_bug.cgi?id=80669
+
+        Reviewed by Nikolas Zimmermann.
+
+        The SVGImageBufferTools::clipToImageBuffer method deletes the clip
+        image when it thinks it is not needed. However, there are cases when
+        it is in fact still needed, particularly when the clip buffer is
+        coming from higher up in the stack where it may be needed again.
+
+        So this patch adds a flag to only allow deletion of the image buffer
+        if it was created at the most recent call site.
+
+        Tests: svg/custom/circular-clip-path-references-crash-expected.svg
+               svg/custom/circular-clip-path-references-crash.svg
+
+        * rendering/svg/RenderSVGResourceClipper.cpp:
+        (WebCore::RenderSVGResourceClipper::applyClippingToContext):
+        * rendering/svg/RenderSVGResourceGradient.cpp:
+        (WebCore::clipToTextMask):
+        * rendering/svg/RenderSVGResourceMasker.cpp:
+        (WebCore::RenderSVGResourceMasker::applyResource):
+        * rendering/svg/SVGImageBufferTools.cpp:
+        (WebCore::SVGImageBufferTools::clipToImageBuffer):
+        * rendering/svg/SVGImageBufferTools.h:
+        (SVGImageBufferTools):
+
 2012-03-13  Gavin Peters  <gavinp@chromium.org>
 
Index: /trunk/Source/WebCore/rendering/svg/SVGImageBufferTools.cpp
===================================================================
--- /trunk/Source/WebCore/rendering/svg/SVGImageBufferTools.cpp	(revision 109016)
+++ /trunk/Source/WebCore/rendering/svg/SVGImageBufferTools.cpp	(revision 110563)
@@ -122,5 +122,5 @@
 }
 
-void SVGImageBufferTools::clipToImageBuffer(GraphicsContext* context, const AffineTransform& absoluteTransform, const FloatRect& targetRect, OwnPtr<ImageBuffer>& imageBuffer)
+void SVGImageBufferTools::clipToImageBuffer(GraphicsContext* context, const AffineTransform& absoluteTransform, const FloatRect& targetRect, OwnPtr<ImageBuffer>& imageBuffer, bool safeToClear)
 {
     ASSERT(context);
@@ -137,5 +137,5 @@
     // When nesting resources, with objectBoundingBox as content unit types, there's no use in caching the
     // resulting image buffer as the parent resource already caches the result.
-    if (!currentContentTransformation().isIdentity())
+    if (safeToClear && !currentContentTransformation().isIdentity())
         imageBuffer.clear();
 }
Index: /trunk/Source/WebCore/rendering/svg/RenderSVGResourceGradient.cpp
===================================================================
--- /trunk/Source/WebCore/rendering/svg/RenderSVGResourceGradient.cpp	(revision 106108)
+++ /trunk/Source/WebCore/rendering/svg/RenderSVGResourceGradient.cpp	(revision 110563)
@@ -99,5 +99,5 @@
 
     targetRect = textRootBlock->repaintRectInLocalCoordinates();
-    SVGImageBufferTools::clipToImageBuffer(context, absoluteTransform, targetRect, imageBuffer);
+    SVGImageBufferTools::clipToImageBuffer(context, absoluteTransform, targetRect, imageBuffer, false);
 
     AffineTransform matrix;
Index: /trunk/Source/WebCore/rendering/svg/RenderSVGResourceMasker.cpp
===================================================================
--- /trunk/Source/WebCore/rendering/svg/RenderSVGResourceMasker.cpp	(revision 106108)
+++ /trunk/Source/WebCore/rendering/svg/RenderSVGResourceMasker.cpp	(revision 110563)
@@ -87,5 +87,6 @@
     ASSERT_UNUSED(resourceMode, resourceMode == ApplyToDefaultMode);
 
-    if (!m_masker.contains(object))
+    bool missingMaskerData = !m_masker.contains(object);
+    if (missingMaskerData)
         m_masker.set(object, new MaskerData);
 
@@ -117,5 +118,5 @@
         return false;
 
-    SVGImageBufferTools::clipToImageBuffer(context, absoluteTransform, repaintRect, maskerData->maskImage);
+    SVGImageBufferTools::clipToImageBuffer(context, absoluteTransform, repaintRect, maskerData->maskImage, missingMaskerData);
     return true;
 }
Index: /trunk/Source/WebCore/rendering/svg/SVGImageBufferTools.h
===================================================================
--- /trunk/Source/WebCore/rendering/svg/SVGImageBufferTools.h	(revision 106157)
+++ /trunk/Source/WebCore/rendering/svg/SVGImageBufferTools.h	(revision 110563)
@@ -43,5 +43,5 @@
 
     static void renderSubtreeToImageBuffer(ImageBuffer*, RenderObject*, const AffineTransform&);
-    static void clipToImageBuffer(GraphicsContext*, const AffineTransform& absoluteTransform, const FloatRect& targetRect, OwnPtr<ImageBuffer>&);
+    static void clipToImageBuffer(GraphicsContext*, const AffineTransform& absoluteTransform, const FloatRect& targetRect, OwnPtr<ImageBuffer>&, bool safeToClear);
 
     static void calculateTransformationToOutermostSVGCoordinateSystem(const RenderObject*, AffineTransform& absoluteTransform);
Index: /trunk/Source/WebCore/rendering/svg/RenderSVGResourceClipper.cpp
===================================================================
--- /trunk/Source/WebCore/rendering/svg/RenderSVGResourceClipper.cpp	(revision 109097)
+++ /trunk/Source/WebCore/rendering/svg/RenderSVGResourceClipper.cpp	(revision 110563)
@@ -156,5 +156,6 @@
                                                       const FloatRect& repaintRect, GraphicsContext* context)
 {
-    if (!m_clipper.contains(object))
+    bool missingClipperData = !m_clipper.contains(object);
+    if (missingClipperData)
         m_clipper.set(object, new ClipperData);
 
@@ -202,5 +203,5 @@
         return false;
 
-    SVGImageBufferTools::clipToImageBuffer(context, absoluteTransform, repaintRect, clipperData->clipMaskImage);
+    SVGImageBufferTools::clipToImageBuffer(context, absoluteTransform, repaintRect, clipperData->clipMaskImage, missingClipperData);
     return true;
 }
