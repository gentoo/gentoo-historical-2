diff -aur wvstreams-3.75.0/include/uniconftree.h /tmp/wvstreams-3.75.0/include/uniconftree.h
--- wvstreams-3.75.0/include/uniconftree.h	2004-03-13 20:59:36.000000000 +0200
+++ /tmp/wvstreams-3.75.0/include/uniconftree.h	2004-09-04 16:43:30.393037423 +0300
@@ -48,7 +48,7 @@
 
     /** Returns a pointer to the parent node, or NULL if there is none. */
     Sub *parent() const
-        { return static_cast<Sub*>(xparent); }
+        { return static_cast <Sub*>(this->xparent); }
 
     /** Reparents this node. */
     void setparent(Sub *parent)
@@ -56,7 +56,7 @@
     
     /** Returns a pointer to the root node of the tree. */
     Sub *root() const
-        { return static_cast<Sub*>(Base::_root()); }
+        { return static_cast <Sub*>(Base::_root()); }
     
     /**
      * Returns full path of this node relative to an ancestor.
@@ -93,13 +93,13 @@
     /** Removes and deletes all children of this node. */
     void zap()
     {
-        if (!xchildren)
+        if (!(this->xchildren))
             return;
         // set xchildren to NULL first so that the zap() will happen faster
         // otherwise, each child will attempt to unlink itself uselessly
 
-        typename Base::Container *oldchildren = xchildren;
-        xchildren = NULL;
+        typename Base::Container *oldchildren = this->xchildren;
+        this->xchildren = NULL;
 
         // delete all children
         typename Base::Container::Iter i(*oldchildren);
diff -aur wvstreams-3.75.0/include/wvscatterhash.h /tmp/wvstreams-3.75.0/include/wvscatterhash.h
--- wvstreams-3.75.0/include/wvscatterhash.h	2004-03-13 20:59:36.000000000 +0200
+++ /tmp/wvstreams-3.75.0/include/wvscatterhash.h	2004-09-04 16:25:34.378896875 +0300
@@ -154,7 +154,7 @@
         { _set_autofree(Accessor::get_key(data), hash(data), auto_free); }
 
     bool get_autofree(const T *data)
-        { _get_autofree(Accessor::get_key(data), hash(data)); }
+        { return _get_autofree(Accessor::get_key(data), hash(data)); }
 
     void zap()
         { _zap(); }
diff -aur wvstreams-3.75.0/include/wvsorter.h /tmp/wvstreams-3.75.0/include/wvsorter.h
--- wvstreams-3.75.0/include/wvsorter.h	2004-03-13 20:59:36.000000000 +0200
+++ /tmp/wvstreams-3.75.0/include/wvsorter.h	2004-09-04 16:26:41.699819665 +0300
@@ -90,7 +90,7 @@
     for (i.rewind(); i.next(); )
 	n++;
     
-    array = new (void *) [n+2];
+    array = new void * [n+2];
     void **aptr = array;
 
     *aptr++ = NULL; // initial link is NULL, to act like a normal iterator
diff -aur wvstreams-3.75.0/utils/wvbuffer.cc /tmp/wvstreams-3.75.0/utils/wvbuffer.cc
--- wvstreams-3.75.0/utils/wvbuffer.cc	2004-03-13 20:59:36.000000000 +0200
+++ /tmp/wvstreams-3.75.0/utils/wvbuffer.cc	2004-09-04 16:28:40.100538512 +0300
@@ -9,13 +9,13 @@
 /***** Specialization for raw memory buffers *****/
 
 // Instantiate some commonly used templates
-template WvBufBaseCommonImpl<unsigned char>;
-template WvInPlaceBufBase<unsigned char>;
-template WvConstInPlaceBufBase<unsigned char>;
-template WvCircularBufBase<unsigned char>;
-template WvDynBufBase<unsigned char>;
-template WvNullBufBase<unsigned char>;
-template WvBufCursorBase<unsigned char>;
+template class WvBufBaseCommonImpl<unsigned char>;
+template class WvInPlaceBufBase<unsigned char>;
+template class WvConstInPlaceBufBase<unsigned char>;
+template class WvCircularBufBase<unsigned char>;
+template class WvDynBufBase<unsigned char>;
+template class WvNullBufBase<unsigned char>;
+template class WvBufCursorBase<unsigned char>;
 
 void WvBufBase<unsigned char>::putstr(WvStringParm str)
 {
