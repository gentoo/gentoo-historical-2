diff -ur a/configure.in.in b/configure.in.in
--- a/configure.in.in	2008-05-11 17:53:52.000000000 -0500
+++ b/configure.in.in	2009-02-13 19:30:38.000000000 -0600
@@ -34,29 +34,28 @@
 	       [AC_HELP_STRING(--enable-mode=arg, [where arg is 32 or 64. Make kdar use 32 bit or 64 bit integers in place of infinint (default=infinint)])],
 	       [build_mode=$enableval], [])
 
-MEM_LDFLAGS=$LDFLAGS
 if test "x$build_mode" = "x32"; then
 AC_MSG_CHECKING([for libdar32])
-LDFLAGS=-ldar32
-AC_RUN_IFELSE([AC_LANG_PROGRAM([[#include <dar/libdar.hpp>]],
+LIBS="-ldar32 $LIBS"
+AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <dar/libdar.hpp>]],
 [[using namespace libdar;
  U_I major, minor;
-get_version(major, minor);]])], [LIBS="$LIBS -ldar32"
+get_version(major, minor);]])], [
 AC_MSG_RESULT([yes])], [AC_MSG_ERROR([required library not found. Please install libdar32.])])
 fi
 if test "x$build_mode" = "x64"; then
 AC_MSG_CHECKING([for libdar64])
-LDFLAGS=-ldar64
-AC_RUN_IFELSE([AC_LANG_PROGRAM([[#include <dar/libdar.hpp>]],
+LIBS="-ldar64 $LIBS"
+AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <dar/libdar.hpp>]],
 [[using namespace libdar;
 U_I major, minor;
-get_version(major, minor);]])], [LIBS="$LIBS -ldar64"
+get_version(major, minor);]])], [
 AC_MSG_RESULT([yes])], [AC_MSG_ERROR([required library not found. Please install libdar64.])])
 fi
 if test "x$build_mode" = "x"; then
 AC_MSG_CHECKING([for libdar])
-LDFLAGS=-ldar
-AC_RUN_IFELSE([AC_LANG_PROGRAM([[#include <dar/libdar.hpp>]],
+LIBS="-ldar $LIBS"
+AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <dar/libdar.hpp>]],
 [[using namespace libdar;
 U_I major, minor;
 get_version(major, minor);]])], [LIBS="$LIBS -ldar"
@@ -64,7 +63,6 @@
 AC_MSG_RESULT([yes])], [AC_MSG_ERROR([required library not found. Please install libdar.])])
 fi
 
-LDFLAGS=$MEM_LDFLAGS
 if test "x$build_mode" = "x32"; then
 CXXFLAGS="$MEM_CXXFLAGS -DLIBDAR_MODE=32"
 fi
