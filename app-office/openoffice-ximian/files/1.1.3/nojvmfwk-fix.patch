--- patches/vclplug/psprint-nojvmfwk.diff	2004/12/03 12:47:25	1.1
+++ patches/vclplug/psprint-nojvmfwk.diff	2004/12/03 13:11:12	1.1.2.3
@@ -0,0 +1,146 @@
+Index: psprint/source/helper/helper.cxx
+===================================================================
+--- psprint/source/helper/helper.cxx.orig	2004-12-03 12:51:50.722009016 +0000
++++ psprint/source/helper/helper.cxx	2004-12-03 12:52:00.583509840 +0000
+@@ -73,7 +73,7 @@
+ #include <rtl/bootstrap.hxx>
+ #include <sal/config.h>
+ #ifdef SOLAR_JAVA
+-#include <jvmfwk/framework.h>
++#include "jvmaccess/javainfo.hxx"
+ #endif // SOLAR_JAVA
+ 
+ #ifdef MACOSX
+@@ -247,36 +247,87 @@ const OUString& psp::getFontPath()
+ 
+         // append jre/jdk fonts if possible
+         OString aJREpath;
+-
+-#ifdef SOLAR_JAVA        
+-        JavaInfo * pInfo = NULL;
+-        javaFrameworkError jerr = jfw_getSelectedJRE( & pInfo);
+-        if (jerr == JFW_E_NONE && pInfo != NULL)
+-        {
+-            OUString aSys;
+-            if( osl_getSystemPathFromFileURL( pInfo->sLocation, &aSys.pData ) == osl_File_E_None )
+-                aJREpath = OUStringToOString( aSys, osl_getThreadTextEncoding() );
+-        }
+-        jfw_freeJavaInfo(pInfo);
+-#endif
+-            
+-        if( aJREpath.getLength() > 0 )
++        if( aUserPath.getLength() )
+         {
+-            OString aTestPath( aJREpath );
+-            aTestPath += "/jre/lib/fonts";
+-            if( access( aTestPath.getStr(), R_OK ) )
++            OUString aJavaRc( aUserPath );
++            aJavaRc += OUString( RTL_CONSTASCII_USTRINGPARAM( "/user/config/" SAL_CONFIGFILE( "java" ) ) );
++            Config aConfig( aJavaRc );
++            aConfig.SetGroup( "Java" );
++            aJREpath = aConfig.ReadKey( "Home" );
++            if( ! aJREpath.getLength() )
++            {
++                aJavaRc = aNetPath;
++                aJavaRc += OUString( RTL_CONSTASCII_USTRINGPARAM( "/share/config/" SAL_CONFIGFILE("java") ) );
++                Config aShareConfig( aJavaRc );
++                aShareConfig.SetGroup( "Java" );
++                aJREpath = aShareConfig.ReadKey( "Home" );
++            }
++                
++            if( aJREpath.compareTo( "file:", 5 ) == 0 )
+             {
+-                aTestPath = aJREpath;
+-                aTestPath += "/lib/fonts";
++                OUString aURL( OStringToOUString( aJREpath, osl_getThreadTextEncoding() ) );
++                OUString aSys;
++                if( osl_getSystemPathFromFileURL( aURL.pData, &aSys.pData ) == osl_File_E_None )
++                    aJREpath = OUStringToOString( aSys, osl_getThreadTextEncoding() );
++            }
++            
++            if( aJREpath.getLength() > 0 )
++            {
++                OString aTestPath( aJREpath );
++                aTestPath += "/jre/lib/fonts";
+                 if( access( aTestPath.getStr(), R_OK ) )
+-                    aJREpath = OString();
++                {
++                    aTestPath = aJREpath;
++                    aTestPath += "/lib/fonts";
++                    if( access( aTestPath.getStr(), R_OK ) )
++                        aJREpath = OString();
++                    else
++                        aJREpath = aTestPath;
++                }
+                 else
+                     aJREpath = aTestPath;
+             }
+-            else
+-                aJREpath = aTestPath;
+         }
+ 
++#ifdef SOLAR_JAVA
++        // if no javarc (e.g. in setup) exists or it failed try the UDK method
++        if( ! aJREpath.getLength() )
++        {
++            OString aJavaLib;
++            try
++            {
++                OUString aLib;
++                if (osl::FileBase::getSystemPathFromFileURL(
++                            jvmaccess::JavaInfo::createBestInfo(true).
++                                getRuntimeLibLocation(),
++                            aLib)
++                        == osl::FileBase::E_None)
++                    aLib.convertToString(
++                        &aJavaLib, osl_getThreadTextEncoding(),
++                        RTL_UNICODETOTEXT_FLAGS_UNDEFINED_ERROR
++                            | RTL_UNICODETOTEXT_FLAGS_INVALID_ERROR);
++            }
++            catch (jvmaccess::JavaInfo::InitException &)
++            {}
++
++            if (aJavaLib.getLength() != 0)
++            {
++                sal_Int32 nIndex;
++                while( ( nIndex = aJavaLib.lastIndexOf( '/' ) ) != -1 )
++                {
++                    aJavaLib = aJavaLib.copy( 0, nIndex );
++                    OString aTmpPath = aJavaLib;
++                    aTmpPath += "/lib/fonts";
++                    if( access( aTmpPath.getStr(), R_OK ) == 0 )
++                    {
++                        aJREpath = aTmpPath;
++                        break;
++                    }
++                }
++            }
++        }
++#endif // SOLAR_JAVA
++
+         if( aJREpath.getLength() )
+         {
+             aPath += OUString( RTL_CONSTASCII_USTRINGPARAM( ";" ) );
+Index: psprint/prj/build.lst
+===================================================================
+--- psprint/prj/build.lst.orig	2004-12-03 12:40:47.820785320 +0000
++++ psprint/prj/build.lst	2004-12-03 12:52:14.974322104 +0000
+@@ -1,4 +1,4 @@
+-pp	psprint	:	tools unotools cpputools jvmaccess SO:print_header jvmfwk NULL
++pp	psprint	:	tools unotools cpputools jvmaccess SO:print_header NULL
+ pp	psprint									usr1	-	all	pp_mkout NULL
+ pp	psprint\source\fontsubset				nmake	-	all	pp_fontsset NULL
+ pp	psprint\source\printer					nmake	-	u	pp_printer NULL
+Index: psprint/util/makefile.mk
+===================================================================
+--- psprint/util/makefile.mk.orig	2004-12-03 12:40:47.863778784 +0000
++++ psprint/util/makefile.mk	2004-12-03 13:10:17.206797760 +0000
+@@ -105,7 +105,7 @@ SHL1STDLIBS=$(UNOTOOLSLIB)		\
+ 			$(SALLIB)			\
+ 			-lX11
+ .IF "$(SOLAR_JAVA)"!=""
+-SHL1STDLIBS+=$(JVMFWKLIB)
++SHL1STDLIBS+=$(JVMACCESSLIB)
+ .ENDIF
+ 
+ SHL1DEF=	$(MISC)$/$(SHL1TARGET).def
--- patches/OOO_1_1_3/apply	2004/12/02 20:17:41	1.83.2.35
+++ patches/OOO_1_1_3/apply	2004/12/03 12:47:25	1.83.2.36
@@ -45,12 +45,6 @@
 # 
 [ VCLPlug ]
 psprint-m46-backport.diff
-# Newer psprint (fixes various CUPS bugs)
-psprint-m46-to-m62.diff
-# default encoding ADOBE_STANDARD is new so revert to MS_1252
-psprint-defaultencoding.diff
-# revert FONTCONFIG_FONTS change to ENABLE_FONTCONFIG
-psprint-fontconfigvar.diff
 vcl-inc.diff
 vcl-prj.diff
 vcl-source-app.diff
@@ -90,6 +84,14 @@
 sj2-win-handle.diff
 dbaccess-win-handle.diff
 
+# Newer psprint (fixes various CUPS bugs)
+psprint-m46-to-m62.diff
+# default encoding ADOBE_STANDARD is new so revert to MS_1252
+psprint-defaultencoding.diff
+# revert FONTCONFIG_FONTS change to ENABLE_FONTCONFIG
+psprint-fontconfigvar.diff
+# revert back to old JDK path detection method
+psprint-nojvmfwk.diff
 # Use the right colors for menus/menuitems #?????
 vcl-unx-gtk-menu-style.diff
