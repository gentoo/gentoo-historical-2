From b74bf4146e866fbcd41ad075296c9a4eee16c829 Mon Sep 17 00:00:00 2001
From: David Tardon <dtardon@redhat.com>
Date: Mon, 12 Aug 2013 09:39:59 +0200
Subject: [PATCH] only use the SSPI support with internal neon

neon 0.30.0 has added support for SSPI (author of the commit is kso,
which sounds familiar :-), so NE_FEATURE_SSPI is defined, but the
signature of ne_auth_creds remains the same as before. That means that
build with system neon 0.30.0 fails...
---
 RepositoryExternal.mk                      | 1 +
 ucb/source/ucp/webdav-neon/NeonSession.cxx | 4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/RepositoryExternal.mk b/RepositoryExternal.mk
index f866957..8c19c27 100644
--- a/RepositoryExternal.mk
+++ b/RepositoryExternal.mk
@@ -867,6 +867,7 @@ ifeq ($(SYSTEM_NEON),YES)
 define gb_LinkTarget__use_neon
 $(call gb_LinkTarget_add_defs,$(1),\
 	-DNEON_VERSION=0x$(NEON_VERSION) \
+	-DSYSTEM_NEON \
 )
 $(call gb_LinkTarget_set_include,$(1),\
 	$$(INCLUDE) \
diff --git a/ucb/source/ucp/webdav-neon/NeonSession.cxx b/ucb/source/ucp/webdav-neon/NeonSession.cxx
index 34a1937..cee643a 100644
--- a/ucb/source/ucp/webdav-neon/NeonSession.cxx
+++ b/ucb/source/ucp/webdav-neon/NeonSession.cxx
@@ -228,7 +228,7 @@ extern "C" int NeonSession_ResponseBlockWriter( void * inUserData,
 }
 
 extern "C" int NeonSession_NeonAuth( void *       inUserData,
-#ifdef NE_FEATURE_SSPI
+#if defined NE_FEATURE_SSPI && ! defined SYSTEM_NEON
                                      const char * inAuthProtocol,
 #endif
                                      const char * inRealm,
@@ -297,7 +297,7 @@ extern "C" int NeonSession_NeonAuth( void *       inUserData,
 
     bool bCanUseSystemCreds = false;
 
-#ifdef NE_FEATURE_SSPI
+#if defined NE_FEATURE_SSPI && ! defined SYSTEM_NEON
     bCanUseSystemCreds
         = (attempt == 0) && // avoid endless loops
           ne_has_support( NE_FEATURE_SSPI ) && // Windows-only feature.
-- 
1.7.12.4

