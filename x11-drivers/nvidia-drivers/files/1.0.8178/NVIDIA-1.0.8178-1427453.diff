diff -ru usr/src/nv/Makefile.kbuild usr/src/nv.1427453/Makefile.kbuild
--- usr/src/nv/Makefile.kbuild	2005-11-23 03:58:01.000000000 +0100
+++ usr/src/nv.1427453/Makefile.kbuild	2005-12-08 14:38:09.666628250 +0100
@@ -186,6 +186,10 @@
   ifeq ($(shell $(CONFTEST) sysctl_max_map_count), 1)
     EXTRA_CFLAGS += -DNV_SYSCTL_MAX_MAP_COUNT_PRESENT
   endif
+
+  ifeq ($(shell $(CONFTEST) vm_insert_page), 1)
+	EXTRA_CFLAGS += -DNV_VM_INSERT_PAGE_PRESENT
+  endif
 endif
 
 ifeq ($(shell $(CONFTEST) remap_pfn_range), 1)
diff -ru usr/src/nv/conftest.sh usr/src/nv.1427453/conftest.sh
--- usr/src/nv/conftest.sh	2005-11-23 03:58:01.000000000 +0100
+++ usr/src/nv.1427453/conftest.sh	2005-12-08 14:38:09.666628250 +0100
@@ -41,7 +41,7 @@
         echo "#include <linux/mm.h>
         int nv_remap_page_range(void) {
            pgprot_t pgprot = __pgprot(0);
-           remap_page_range(NULL, 0L, 0L, 0L, pgprot);
+           return remap_page_range(NULL, 0L, 0L, 0L, pgprot);
         }" > conftest$$.c
 
         $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
@@ -56,7 +56,7 @@
         echo "#include <linux/mm.h>
         int nv_remap_page_range(void) {
            pgprot_t pgprot = __pgprot(0);
-           remap_page_range(0L, 0L, 0L, pgprot);
+           return remap_page_range(0L, 0L, 0L, pgprot);
         }" > conftest$$.c
 
         $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
@@ -527,7 +527,7 @@
         echo "#include <linux/mm.h>
         int nv_remap_pfn_range(void) {
             pgprot_t pgprot = __pgprot(0);
-            remap_pfn_range(NULL, 0L, 0L, 0L, pgprot);
+            return remap_pfn_range(NULL, 0L, 0L, 0L, pgprot);
         }" > conftest$$.c
 
         $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
@@ -643,4 +643,26 @@
         fi
     ;;
 
+    vm_insert_page)
+        #
+        # Determine if vm_insert_page() is present.
+        #
+
+        echo "#include <linux/mm.h>
+        int nv_vm_insert_page(void) {
+            struct page *page;
+            return vm_insert_page(NULL, 0L, page);
+        }" > conftest$$.c
+
+        $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+        rm -f conftest$$.c
+
+        if [ -f conftest$$.o ]; then
+            rm -f conftest$$.o
+            echo 1
+        else
+            echo 0
+        fi
+    ;;
+
 esac
diff -ru usr/src/nv/nv-linux.h usr/src/nv.1427453/nv-linux.h
--- usr/src/nv/nv-linux.h	2005-11-23 03:58:01.000000000 +0100
+++ usr/src/nv.1427453/nv-linux.h	2005-12-08 14:38:09.666628250 +0100
@@ -666,9 +666,13 @@
 #define PCI_CAP_ID_EXP 0x10
 #endif
 
+#if defined(NV_VM_INSERT_PAGE_PRESENT)
+#define NV_VM_INSERT_PAGE(vma, addr, page) \
+    vm_insert_page(vma, addr, page)
+#endif
 #if defined(NV_REMAP_PFN_RANGE_PRESENT)
 #define NV_REMAP_PAGE_RANGE(from, offset, x...) \
-     remap_pfn_range(vma, from, ((offset) >> PAGE_SHIFT), x)
+    remap_pfn_range(vma, from, ((offset) >> PAGE_SHIFT), x)
 #elif defined(NV_REMAP_PAGE_RANGE_5_PRESENT)
 #define NV_REMAP_PAGE_RANGE(x...) remap_page_range(vma, x)
 #elif defined(NV_REMAP_PAGE_RANGE_4_PRESENT)
diff -ru usr/src/nv/nv-vm.c usr/src/nv.1427453/nv-vm.c
--- usr/src/nv/nv-vm.c	2005-11-23 03:58:01.000000000 +0100
+++ usr/src/nv.1427453/nv-vm.c	2005-12-08 14:38:46.228913250 +0100
@@ -105,6 +105,15 @@
 #endif
 }
 
+static inline BOOL nv_page_locked(nv_pte_t *page_ptr)
+{
+    BOOL locked = FALSE; 
+#if defined(PageReserved)
+    locked = PageReserved(NV_GET_PAGE_STRUCT(page_ptr->phys_addr));
+#endif 
+    return locked;
+}
+
 #if defined(NV_SG_MAP_BUFFERS)
 
 /* track how much memory has been remapped through the iommu/swiotlb */
@@ -704,7 +713,7 @@
         if (!NV_ALLOC_MAPPING_CONTIG(at->flags))
             nv_sg_unmap_buffer(dev, &page_ptr->sg_list, page_ptr);
 #endif
-        if (!NV_ALLOC_MAPPING_CONTIG(at->flags) && !NV_ALLOC_MAPPING_VMALLOC(at->flags))
+        if (!NV_ALLOC_MAPPING_CONTIG(at->flags) && !NV_ALLOC_MAPPING_VMALLOC(at->flags) && !nv_page_locked(page_ptr))
             NV_FREE_PAGES(page_ptr->virt_addr, 0);
     }
     nv_flush_caches();
diff -ru usr/src/nv/nv.c usr/src/nv.1427453/nv.c
--- usr/src/nv/nv.c	2005-11-23 03:58:01.000000000 +0100
+++ usr/src/nv.1427453/nv.c	2005-12-08 14:38:09.666628250 +0100
@@ -2118,8 +2118,13 @@
         for (j = i; j < (i + pages); j++)
         {
             nv_verify_page_mappings(at->page_table[j], NV_ALLOC_MAPPING(at->flags));
+#if defined(NV_VM_INSERT_PAGE_PRESENT)
+            if (NV_VM_INSERT_PAGE(vma, start,
+                    NV_GET_PAGE_STRUCT(at->page_table[j]->phys_addr)))
+#else
             if (NV_REMAP_PAGE_RANGE(start, at->page_table[j]->phys_addr,
                     PAGE_SIZE, vma->vm_page_prot))
+#endif
             {
                 NV_ATOMIC_DEC(at->usage_count);
                 return -EAGAIN;
