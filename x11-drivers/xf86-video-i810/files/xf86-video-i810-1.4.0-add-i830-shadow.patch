diff -urN -x Makefile.in -x Makefile -x configure -x depcomp -x aclocal.m4 -x config.guess -x config.sub -x install-sh -x ltmain.sh -x missing -x mkinstalldirs xf86-video-i810-1.4.0.orig/src/i810_driver.c xf86-video-i810-1.4.0/src/i810_driver.c
--- xf86-video-i810-1.4.0.orig/src/i810_driver.c	2005-08-01 13:15:48.000000000 -0700
+++ xf86-video-i810-1.4.0/src/i810_driver.c	2005-08-10 17:58:33.000000000 -0700
@@ -2269,9 +2269,9 @@
 #endif
 
    if (pI810->directRenderingEnabled) {
-      xf86DrvMsg(pScrn->scrnIndex, driFrom, "Direct rendering enabled\n");
+      xf86DrvMsg(pScrn->scrnIndex, X_INFO, "Direct rendering enabled\n");
    } else {
-      xf86DrvMsg(pScrn->scrnIndex, driFrom, "Direct rendering disabled\n");
+      xf86DrvMsg(pScrn->scrnIndex, X_WARNING, "Direct rendering disabled\n");
    }
 
    pScreen->SaveScreen = I810SaveScreen;
diff -urN -x Makefile.in -x Makefile -x configure -x depcomp -x aclocal.m4 -x config.guess -x config.sub -x install-sh -x ltmain.sh -x missing -x mkinstalldirs xf86-video-i810-1.4.0.orig/src/i830_driver.c xf86-video-i810-1.4.0/src/i830_driver.c
--- xf86-video-i810-1.4.0.orig/src/i830_driver.c	2005-08-01 13:15:48.000000000 -0700
+++ xf86-video-i810-1.4.0/src/i830_driver.c	2005-08-10 17:58:34.000000000 -0700
@@ -1736,11 +1736,7 @@
       dspbase = DSPBBASE;
    }
 
-   if (pScrn->depth > 8) {
-      OUTREG(dspreg, INREG(dspreg) | DISPPLANE_GAMMA_ENABLE);
-   } else {
-      OUTREG(dspreg, INREG(dspreg) & ~DISPPLANE_GAMMA_ENABLE);
-   }
+   OUTREG(dspreg, INREG(dspreg) | DISPPLANE_GAMMA_ENABLE);
    OUTREG(dspbase, INREG(dspbase));
 
    /* It seems that an initial read is needed. */
@@ -2697,16 +2693,22 @@
 
    xf86DrvMsg(pScrn->scrnIndex, X_INFO, "BIOS Build: %d\n",pI830->bios_version);
 
-   if (IS_I915G(pI830) || IS_I915GM(pI830) || IS_I945G(pI830))
+   /* Great..
+    * Intel changed the BIOS version codes and started at 1200.
+    * We know that bios codes for 830M started around 2400.
+    * So we test those conditions to make this judgement. Ugh.
+    */
+   if (pI830->availablePipes == 2 && pI830->bios_version < 2000)
       pI830->newPipeSwitch = TRUE;
-   else
-   if (pI830->availablePipes == 2 && pI830->bios_version >= 3062) {
+   else if (pI830->availablePipes == 2 && pI830->bios_version >= 3062) 
       /* BIOS build 3062 changed the pipe switching functionality */
       pI830->newPipeSwitch = TRUE;
-      xf86DrvMsg(pScrn->scrnIndex, X_INFO, "Using new Pipe switch code\n");
-   } else
+   else
       pI830->newPipeSwitch = FALSE;
 
+   if (pI830->newPipeSwitch)
+      xf86DrvMsg(pScrn->scrnIndex, X_INFO, "Using new Pipe switch code\n");
+
    pI830->devicePresence = FALSE;
    from = X_DEFAULT;
    if (xf86ReturnOptValBool(pI830->Options, OPTION_DEVICE_PRESENCE, FALSE)) {
@@ -3467,7 +3469,7 @@
    for (i = 0; i < 8; i++) {
       OUTREG(FENCE + i * 4, pI830->ModeReg.Fence[i]);
       if (I810_DEBUG & DEBUG_VERBOSE_VGA)
-	 ErrorF("Fence Register : %lx\n", pI830->ModeReg.Fence[i]);
+	 ErrorF("Fence Register : %x\n", pI830->ModeReg.Fence[i]);
    }
 }
 
diff -urN -x Makefile.in -x Makefile -x configure -x depcomp -x aclocal.m4 -x config.guess -x config.sub -x install-sh -x ltmain.sh -x missing -x mkinstalldirs xf86-video-i810-1.4.0.orig/src/i830_shadow.c xf86-video-i810-1.4.0/src/i830_shadow.c
--- xf86-video-i810-1.4.0.orig/src/i830_shadow.c	1969-12-31 16:00:00.000000000 -0800
+++ xf86-video-i810-1.4.0/src/i830_shadow.c	2005-07-18 16:51:58.000000000 -0700
@@ -0,0 +1,253 @@
+/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/s3virge/s3v_shadow.c,v 1.3 2000/03/31 20:13:33 dawes Exp $ */
+
+/*
+   Copyright (c) 1999,2000  The XFree86 Project Inc. 
+   based on code written by Mark Vojkovich <markv@valinux.com>
+*/
+
+/*
+ * Ported from the savage driver to the I830 by
+ * Helmar Spangenberg <hspangenberg@frey.de> and Dima Dorfman
+ */
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include "xf86.h"
+#include "i830.h"
+#include "shadowfb.h"
+#include "servermd.h"
+
+
+void
+I830RefreshArea(ScrnInfoPtr pScrn, int num, BoxPtr pbox)
+{
+    I830Ptr pI830 = I830PTR(pScrn);
+    int width, height, Bpp, FBPitch;
+    unsigned char *src, *dst;
+   
+    Bpp = pScrn->bitsPerPixel >> 3;
+    FBPitch = BitmapBytePad(pScrn->displayWidth * pScrn->bitsPerPixel);
+
+    while(num--) {
+	width = (pbox->x2 - pbox->x1) * Bpp;
+	height = pbox->y2 - pbox->y1;
+	src = pI830->shadowPtr + (pbox->y1 * pI830->shadowPitch) + 
+						(pbox->x1 * Bpp);
+	dst = pI830->FbBase + (pbox->y1 * FBPitch) + (pbox->x1 * Bpp);
+
+	while(height--) {
+	    memcpy(dst, src, width);
+	    dst += FBPitch;
+	    src += pI830->shadowPitch;
+	}
+	
+	pbox++;
+    }
+} 
+
+
+void
+I830PointerMoved(int index, int x, int y)
+{
+    ScrnInfoPtr pScrn = xf86Screens[index];
+    I830Ptr pI830 = I830PTR(pScrn);
+    int newX, newY;
+
+    if(pI830->rotate == 1) {
+	newX = pScrn->pScreen->height - y - 1;
+	newY = x;
+    } else {
+	newX = y;
+	newY = pScrn->pScreen->width - x - 1;
+    }
+
+    (*pI830->PointerMoved)(index, newX, newY);
+}
+
+void
+I830RefreshArea8(ScrnInfoPtr pScrn, int num, BoxPtr pbox)
+{
+    I830Ptr pI830 = I830PTR(pScrn);
+    int count, width, height, y1, y2, dstPitch, srcPitch;
+    CARD8 *dstPtr, *srcPtr, *src;
+    CARD32 *dst;
+
+    dstPitch = pScrn->displayWidth;
+    srcPitch = -pI830->rotate * pI830->shadowPitch;
+
+    while(num--) {
+	width = pbox->x2 - pbox->x1;
+	y1 = pbox->y1 & ~3;
+	y2 = (pbox->y2 + 3) & ~3;
+	height = (y2 - y1) >> 2;  /* in dwords */
+
+	if(pI830->rotate == 1) {
+	    dstPtr = pI830->FbBase + 
+			(pbox->x1 * dstPitch) + pScrn->virtualX - y2;
+	    srcPtr = pI830->shadowPtr + ((1 - y2) * srcPitch) + pbox->x1;
+	} else {
+	    dstPtr = pI830->FbBase + 
+			((pScrn->virtualY - pbox->x2) * dstPitch) + y1;
+	    srcPtr = pI830->shadowPtr + (y1 * srcPitch) + pbox->x2 - 1;
+	}
+
+	while(width--) {
+	    src = srcPtr;
+	    dst = (CARD32*)dstPtr;
+	    count = height;
+	    while(count--) {
+		*(dst++) = src[0] | (src[srcPitch] << 8) | 
+					(src[srcPitch * 2] << 16) | 
+					(src[srcPitch * 3] << 24);
+		src += srcPitch * 4;
+	    }
+	    srcPtr += pI830->rotate;
+	    dstPtr += dstPitch;
+	}
+
+	pbox++;
+    }
+} 
+
+
+void
+I830RefreshArea16(ScrnInfoPtr pScrn, int num, BoxPtr pbox)
+{
+    I830Ptr pI830 = I830PTR(pScrn);
+    int count, width, height, y1, y2, dstPitch, srcPitch;
+    CARD16 *dstPtr, *srcPtr, *src;
+    CARD32 *dst;
+
+    dstPitch = pScrn->displayWidth;
+    srcPitch = -pI830->rotate * pI830->shadowPitch >> 1;
+
+    while(num--) {
+	width = pbox->x2 - pbox->x1;
+	y1 = pbox->y1 & ~1;
+	y2 = (pbox->y2 + 1) & ~1;
+	height = (y2 - y1) >> 1;  /* in dwords */
+
+	if(pI830->rotate == 1) {
+	    dstPtr = (CARD16*)pI830->FbBase + 
+			(pbox->x1 * dstPitch) + pScrn->virtualX - y2;
+	    srcPtr = (CARD16*)pI830->shadowPtr + 
+			((1 - y2) * srcPitch) + pbox->x1;
+	} else {
+	    dstPtr = (CARD16*)pI830->FbBase + 
+			((pScrn->virtualY - pbox->x2) * dstPitch) + y1;
+	    srcPtr = (CARD16*)pI830->shadowPtr + 
+			(y1 * srcPitch) + pbox->x2 - 1;
+	}
+
+	while(width--) {
+	    src = srcPtr;
+	    dst = (CARD32*)dstPtr;
+	    count = height;
+	    while(count--) {
+		*(dst++) = src[0] | (src[srcPitch] << 16);
+		src += srcPitch * 2;
+	    }
+	    srcPtr += pI830->rotate;
+	    dstPtr += dstPitch;
+	}
+
+	pbox++;
+    }
+}
+
+
+/* this one could be faster */
+void
+I830RefreshArea24(ScrnInfoPtr pScrn, int num, BoxPtr pbox)
+{
+    I830Ptr pI830 = I830PTR(pScrn);
+    int count, width, height, y1, y2, dstPitch, srcPitch;
+    CARD8 *dstPtr, *srcPtr, *src;
+    CARD32 *dst;
+
+    dstPitch = BitmapBytePad(pScrn->displayWidth * 24);
+    srcPitch = -pI830->rotate * pI830->shadowPitch;
+
+    while(num--) {
+        width = pbox->x2 - pbox->x1;
+        y1 = pbox->y1 & ~3;
+        y2 = (pbox->y2 + 3) & ~3;
+        height = (y2 - y1) >> 2;  /* blocks of 3 dwords */
+
+	if(pI830->rotate == 1) {
+	    dstPtr = pI830->FbBase + 
+			(pbox->x1 * dstPitch) + ((pScrn->virtualX - y2) * 3);
+	    srcPtr = pI830->shadowPtr + ((1 - y2) * srcPitch) + (pbox->x1 * 3);
+	} else {
+	    dstPtr = pI830->FbBase + 
+			((pScrn->virtualY - pbox->x2) * dstPitch) + (y1 * 3);
+	    srcPtr = pI830->shadowPtr + (y1 * srcPitch) + (pbox->x2 * 3) - 3;
+	}
+
+	while(width--) {
+	    src = srcPtr;
+	    dst = (CARD32*)dstPtr;
+	    count = height;
+	    while(count--) {
+		dst[0] = src[0] | (src[1] << 8) | (src[2] << 16) |
+				(src[srcPitch] << 24);		
+		dst[1] = src[srcPitch + 1] | (src[srcPitch + 2] << 8) |
+				(src[srcPitch * 2] << 16) |
+				(src[(srcPitch * 2) + 1] << 24);		
+		dst[2] = src[(srcPitch * 2) + 2] | (src[srcPitch * 3] << 8) |
+				(src[(srcPitch * 3) + 1] << 16) |
+				(src[(srcPitch * 3) + 2] << 24);	
+		dst += 3;
+		src += srcPitch * 4;
+	    }
+	    srcPtr += pI830->rotate * 3;
+	    dstPtr += dstPitch; 
+	}
+
+	pbox++;
+    }
+}
+
+void
+I830RefreshArea32(ScrnInfoPtr pScrn, int num, BoxPtr pbox)
+{
+    I830Ptr pI830 = I830PTR(pScrn);
+    int count, width, height, dstPitch, srcPitch;
+    CARD32 *dstPtr, *srcPtr, *src, *dst;
+
+    dstPitch = pScrn->displayWidth;
+    srcPitch = -pI830->rotate * pI830->shadowPitch >> 2;
+
+    while(num--) {
+	width = pbox->x2 - pbox->x1;
+	height = pbox->y2 - pbox->y1;
+
+	if(pI830->rotate == 1) {
+	    dstPtr = (CARD32*)pI830->FbBase + 
+			(pbox->x1 * dstPitch) + pScrn->virtualX - pbox->y2;
+	    srcPtr = (CARD32*)pI830->shadowPtr + 
+			((1 - pbox->y2) * srcPitch) + pbox->x1;
+	} else {
+	    dstPtr = (CARD32*)pI830->FbBase + 
+			((pScrn->virtualY - pbox->x2) * dstPitch) + pbox->y1;
+	    srcPtr = (CARD32*)pI830->shadowPtr + 
+			(pbox->y1 * srcPitch) + pbox->x2 - 1;
+	}
+
+	while(width--) {
+	    src = srcPtr;
+	    dst = dstPtr;
+	    count = height;
+	    while(count--) {
+		*(dst++) = *src;
+		src += srcPitch;
+	    }
+	    srcPtr += pI830->rotate;
+	    dstPtr += dstPitch;
+	}
+
+	pbox++;
+    }
+}
diff -urN -x Makefile.in -x Makefile -x configure -x depcomp -x aclocal.m4 -x config.guess -x config.sub -x install-sh -x ltmain.sh -x missing -x mkinstalldirs xf86-video-i810-1.4.0.orig/src/Makefile.am xf86-video-i810-1.4.0/src/Makefile.am
--- xf86-video-i810-1.4.0.orig/src/Makefile.am	2005-08-01 13:15:22.000000000 -0700
+++ xf86-video-i810-1.4.0/src/Makefile.am	2005-08-12 13:45:37.000000000 -0700
@@ -50,6 +50,7 @@
          i830.h \
          i830_memory.c \
          i830_modes.c \
+         i830_shadow.c \
          i830_video.c
 
 if DRI
