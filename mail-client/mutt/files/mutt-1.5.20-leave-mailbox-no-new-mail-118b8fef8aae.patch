http://dev.mutt.org/trac/changeset/118b8fef8aae
http://dev.mutt.org/trac/ticket/3290

Suppress new mail notification from mailbox just left. Closes #3290.


Index: buffy.c
===================================================================
--- buffy.c (revision 5914:25e46aad362b)
+++ buffy.c (revision 5973:118b8fef8aae)
@@ -45,4 +45,6 @@
 static short BuffyCount = 0;	/* how many boxes with new mail */
 static short BuffyNotify = 0;	/* # of unnotified new boxes */
+
+static BUFFY* buffy_get (const char *path);
 
 /* Find the last message in the file. 
@@ -498,4 +500,15 @@
 }
 
+void mutt_buffy_setnotified (const char *path)
+{
+  BUFFY *buffy;
+
+  buffy = buffy_get(path);
+  if (!buffy)
+    return;
+
+  buffy->notified = 1;
+}
+
 int mutt_buffy_notify (void)
 {
@@ -542,2 +555,29 @@
   *s = '\0';
 }
+
+/* fetch buffy object for given path, if present */
+static BUFFY* buffy_get (const char *path)
+{
+  BUFFY *cur;
+  char *epath;
+
+  if (!path)
+    return NULL;
+
+  epath = safe_strdup(path);
+  mutt_expand_path(epath, mutt_strlen(epath));
+
+  for (cur = Incoming; cur; cur = cur->next)
+  {
+    /* must be done late because e.g. IMAP delimiter may change */
+    mutt_expand_path (cur->path, sizeof (cur->path));
+    if (!mutt_strcmp(cur->path, path))
+    {
+      FREE (&epath);
+      return cur;
+    }
+  }
+
+  FREE (&epath);
+  return NULL;
+}
Index: buffy.h
===================================================================
--- buffy.h (revision 5779:7bc332ddd8fc)
+++ buffy.h (revision 5973:118b8fef8aae)
@@ -44,2 +44,5 @@
    according to stat() info taken before a modification */
 void mutt_buffy_cleanup (const char *buf, struct stat *st);
+
+/* mark mailbox just left as already notified */
+void mutt_buffy_setnotified (const char *path);
Index: mx.c
===================================================================
--- mx.c (revision 5930:ed7eb5de7536)
+++ mx.c (revision 5973:118b8fef8aae)
@@ -706,4 +706,8 @@
     return;
 
+  /* never announce that a mailbox we've just left has new mail. #3290
+   * XXX: really belongs in mx_close_mailbox, but this is a nice hook point */
+  mutt_buffy_setnotified(ctx->path);
+
   if (ctx->mx_close)
     ctx->mx_close (ctx);
