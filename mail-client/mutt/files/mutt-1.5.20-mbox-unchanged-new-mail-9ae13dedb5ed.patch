http://dev.mutt.org/trac/changeset/9ae13dedb5ed

Fixup atime for mbox/mmdf also when mailbox is unchanged but has new
mail. See #1362.

Index: mbox.c
===================================================================
--- mbox.c (revision 5921:bd59be56c6b0)
+++ mbox.c (revision 5922:9ae13dedb5ed)
@@ -682,5 +682,5 @@
 /* if mailbox has at least 1 new message, sets mtime > atime of mailbox
  * so buffy check reports new mail */
-static void reset_atime (CONTEXT *ctx, struct stat *st)
+void mbox_reset_atime (CONTEXT *ctx, struct stat *st)
 {
   struct utimbuf utimebuf;
@@ -992,5 +992,5 @@
 
   /* Restore the previous access/modification times */
-  reset_atime (ctx, &statbuf);
+  mbox_reset_atime (ctx, &statbuf);
 
   /* reopen the mailbox in read-only mode */
Index: mx.c
===================================================================
--- mx.c (revision 5907:a2a868fc40ea)
+++ mx.c (revision 5922:9ae13dedb5ed)
@@ -927,4 +927,6 @@
     if (!ctx->quiet)
       mutt_message _("Mailbox is unchanged.");
+    if (ctx->magic == M_MBOX || ctx->magic == M_MMDF)
+      mbox_reset_atime (ctx, NULL);
     mx_fastclose_mailbox (ctx);
     return 0;
Index: mx.h
===================================================================
--- mx.h (revision 4343:2bccf51eedac)
+++ mx.h (revision 5922:9ae13dedb5ed)
@@ -57,4 +57,5 @@
 void mbox_unlock_mailbox (CONTEXT *);
 int mbox_check_empty (const char *);
+void mbox_reset_atime (CONTEXT *, struct stat *);
 
 int mh_read_dir (CONTEXT *, const char *);
