diff -urN claim_1.1.orig/claim.asd claim_1.1/claim.asd
--- claim_1.1.orig/claim.asd	2004-10-30 02:59:54.000000000 -0500
+++ claim_1.1/claim.asd	2004-12-15 23:17:24.000000000 -0600
@@ -19,9 +19,8 @@
   :maintainer "John Wiseman <jjwiseman@yahoo.com>"
   :licence "MIT"
   :description "Common Lisp AOL Instant Messenger (AIM) client interface, or CLAIM"
-  :long-description "CLAIM provides a client interface to AOL's Instant Messaging network using the TOC protocol.  CLAIM supports ACL, LispWorks, OpenMCL and SBCL."
-
+  :long-description "CLAIM provides a client interface to AOL's Instant Messaging network using the TOC protocol.  CLAIM supports Lisp implmenetations supported by the TRIVIAL-SOCKETS package."
   :components ((:file "package")
-	       (:file "sysdeps" :depends-on ("package"))
-	       (:file "claim" :depends-on ("package" "sysdeps")))
-  :depends-on (#+sbcl :sb-bsd-sockets))
+	       (:file "claim" :depends-on ("package")))
+  :depends-on (:trivial-sockets))
+
diff -urN claim_1.1.orig/claim.lisp claim_1.1/claim.lisp
--- claim_1.1.orig/claim.lisp	2004-10-30 14:14:43.000000000 -0500
+++ claim_1.1/claim.lisp	2004-12-15 23:26:27.000000000 -0600
@@ -90,9 +90,8 @@
 
 (defmethod open-socket ((self aim-connection))
   (trace-log self "Opening socket to TOC server.")
-  (or (make-tcp-socket (aim-connection-toc-host self)
-		       (aim-connection-toc-port self))
-      (error "Unable to connect.")))
+  (trivial-sockets:open-stream (aim-connection-toc-host self)
+			       (aim-connection-toc-port self)))
 
 
 (defstruct toc-event
diff -urN claim_1.1.orig/sysdeps.lisp claim_1.1/sysdeps.lisp
--- claim_1.1.orig/sysdeps.lisp	2004-10-30 14:14:43.000000000 -0500
+++ claim_1.1/sysdeps.lisp	1969-12-31 18:00:00.000000000 -0600
@@ -1,39 +0,0 @@
-;;; ------------------------------------------------- -*- Mode: LISP -*-
-;;; CLAIM -- An implementation of the AIM TOC protocol in Lisp.
-;;;
-;;; Copyright 2001, 2002, 2004 I/NET Inc. (http://www.inetmi.com/)
-;;; John Wiseman (jjwiseman@yahoo.com)
-;;; 2004-10-29
-;;;
-;;; Licensed under the MIT license--see the accompanying LICENSE.txt
-;;; file.
-;;;
-;;; Lisp-specific functions.
-
-(in-package :common-lisp)
-
-(defun com.lemonodor.claim::make-tcp-socket (host port)
-  #+openmcl
-  (ccl:make-socket :connect :active
-		   :remote-host host
-		   :remote-port port)
-  #+allegro
-  (socket:make-socket :connect :active
-		      :remote-host host
-		      :remote-port port)
-  #+lispworks
-  (comm:open-tcp-stream host port)
-  #+sbcl
-  (let ((socket (make-instance 'sb-bsd-sockets:inet-socket
-		  :type :stream
-		  :protocol :tcp)))
-    (sb-bsd-sockets:socket-connect socket
-				   (car (sb-bsd-sockets:host-ent-addresses
-					 (sb-bsd-sockets:get-host-by-name host)))
-				   port)
-    (sb-bsd-sockets:socket-make-stream socket
-				       :element-type 'character
-				       :input T
-				       :output T
-				       :buffering :none))
-  )
\ No newline at end of file
