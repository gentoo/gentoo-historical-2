diff -ur cljl.orig/cl-jpeg.asd cljl/cl-jpeg.asd
--- cljl.orig/cl-jpeg.asd	2003-05-06 11:33:44.000000000 -0500
+++ cljl/cl-jpeg.asd	2005-02-04 16:10:49.016927893 -0600
@@ -4,5 +4,6 @@
 (in-package #:cl-jpeg-system)
 
 (defsystem :cl-jpeg
-  :components ((:file "jpeg")))
+  :components ((:file "jpeg"))
+  :depends-on (cl-plus))
 
diff -ur cljl.orig/jpeg.lisp cljl/jpeg.lisp
--- cljl.orig/jpeg.lisp	2003-10-06 12:49:30.000000000 -0500
+++ cljl/jpeg.lisp	2005-02-04 16:14:48.063791775 -0600
@@ -99,25 +99,25 @@
 (eval-when (:compile-toplevel :load-toplevel)
 
 ;;; Source huffman tables for the encoder
-(defconstant *luminance-dc-bits*
+(cl+:defconst *luminance-dc-bits*
   #(#x00 #x01 #x05 #x01 #x01 #x01 #x01 #x01
      #x01 #x00 #x00 #x00 #x00 #x00 #x00 #x00))
 
-(defconstant *luminance-dc-values*
+(cl+:defconst *luminance-dc-values*
   #(#x00 #x01 #x02 #x03 #x04 #x05 #x06 #x07 #x08 #x09 #x0a #x0b))
 
-(defconstant *chrominance-dc-bits*
+(cl+:defconst *chrominance-dc-bits*
   #(#x00 #x03 #x01 #x01 #x01 #x01 #x01 #x01
      #x01 #x01 #x01 #x00 #x00 #x00 #x00 #x00))
 
-(defconstant *chrominance-dc-values*
+(cl+:defconst *chrominance-dc-values*
   #(#x00 #x01 #x02 #x03 #x04 #x05 #x06 #x07 #x08 #x09 #x0a #x0b))
 
-(defconstant *luminance-ac-bits*
+(cl+:defconst *luminance-ac-bits*
   #(#x00 #x02 #x01 #x03 #x03 #x02 #x04 #x03
      #x05 #x05 #x04 #x04 #x00 #x00 #x01 #x7d))
 
-(defconstant *luminance-ac-values*
+(cl+:defconst *luminance-ac-values*
   #(#x01 #x02 #x03 #x00 #x04 #x11 #x05 #x12
      #x21 #x31 #x41 #x06 #x13 #x51 #x61 #x07
      #x22 #x71 #x14 #x32 #x81 #x91 #xa1 #x08
@@ -140,11 +140,11 @@
      #xf1 #xf2 #xf3 #xf4 #xf5 #xf6 #xf7 #xf8
      #xf9 #xfa))
 
-(defconstant *chrominance-ac-bits*
+(cl+:defconst *chrominance-ac-bits*
   #(#x00 #x02 #x01 #x02 #x04 #x04 #x03 #x04
      #x07 #x05 #x04 #x04 #x00 #x01 #x02 #x77))
 
-(defconstant *chrominance-ac-values*
+(cl+:defconst *chrominance-ac-values*
   #(#x00 #x01 #x02 #x03 #x11 #x04 #x05 #x21
      #x31 #x06 #x12 #x41 #x51 #x07 #x61 #x71
      #x13 #x22 #x32 #x81 #x08 #x14 #x42 #x91
@@ -168,7 +168,7 @@
      #xf9 #xfa))
 
 ;;;Zigzag encoding matrix
-(defconstant *zigzag-index*
+(cl+:defconst *zigzag-index*
   #(#(0  1  5  6 14 15 27 28)
     #(2  4  7 13 16 26 29 42)
     #(3  8 12 17 25 30 41 43)
@@ -181,7 +181,7 @@
 ;;; Temporary buffer for zigzag encoding and decoding
 (defvar *zz-result* (make-array 64 :element-type 'unsigned-byte))
 
-(defconstant *zzbuf*
+(cl+:defconst *zzbuf*
   #(#(0  0  0  0  0  0  0  0)
     #(0  0  0  0  0  0  0  0)
     #(0  0  0  0  0  0  0  0)
@@ -290,10 +290,10 @@
 (finish-output)
 )
 
-(defconstant *q-tables* (vector *q-luminance* *q-chrominance*))
+(cl+:defconst *q-tables* (vector *q-luminance* *q-chrominance*))
 
 ;;; This table is used to map coefficients into SSSS value
-(defconstant *csize* (make-array 2047 
+(cl+:defconst *csize* (make-array 2047 
 				 :initial-contents
 				 (loop for i fixnum from 0 to 2046
 				       collecting (integer-length (abs (minus i 1023))))))
