diff -ur cl-odcl-1.3.5.orig/numbers.lisp cl-odcl-1.3.5/numbers.lisp
--- cl-odcl-1.3.5.orig/numbers.lisp	2005-04-11 03:22:10.000000000 -0500
+++ cl-odcl-1.3.5/numbers.lisp	2005-04-11 03:24:08.000000000 -0500
@@ -6,10 +6,10 @@
 (in-package :odcl)
 
 (defun parse-integer-insensitively (string)
-  (flet ((digit-char-p (char)
+  (flet ((char->digit (char)
            (position char "1234567890")))
-    (let ((start (position-if #'digit-char-p string))
-          (end   (position-if #'digit-char-p string :from-end t)))
+    (let ((start (position-if #'char->digit string))
+          (end   (position-if #'char->digit string :from-end t)))
       (when (and start end)
         (parse-integer (subseq string start (1+ end)) :junk-allowed t)))))
 
diff -ur cl-odcl-1.3.5.orig/tree.lisp cl-odcl-1.3.5/tree.lisp
--- cl-odcl-1.3.5.orig/tree.lisp	2005-04-11 03:22:10.000000000 -0500
+++ cl-odcl-1.3.5/tree.lisp	2005-04-11 03:28:50.000000000 -0500
@@ -172,7 +172,7 @@
 
 (defmethod c-add ((tree avl-tree) item &aux result-data)
   (assert (not (null item)))
-  (flet ((merge (data &optional existing-node)
+  (flet ((merge* (data &optional existing-node)
            (unless existing-node
              (setf existing-node (avl/create)))
            (setf result-data (avl/data existing-node)
@@ -186,7 +186,7 @@
            (q nil)
            (r nil))
       (unless p
-        (setf (avl/right _t) (merge item))
+        (setf (avl/right _t) (merge* item))
         (return-from c-add result-data))
       (loop
        ;; A2 [Compare.]
@@ -194,7 +194,7 @@
               ;; A3 [Move left.]
               (setq q (avl/left p))
               (when (null q)
-                (setf q (merge item)
+                (setf q (merge* item)
                       (avl/left p) q)
                 (return))
               (unless (= 0 (avl/balance q))
@@ -205,7 +205,7 @@
               ;; A4 [Move right.]
               (setq q (avl/right p))
               (when (null q)
-                (setf q (merge item)
+                (setf q (merge* item)
                       (avl/right p) q)
                 (return))
               (unless (= 0 (avl/balance q))
@@ -213,7 +213,7 @@
                       s q))
               (setf p q))
              (t
-              (merge item p)
+              (merge* item p)
               (return-from c-add result-data))))
       ;; A5 [Insert.] (initialization done above)
       ;; A6 [Adjust balance factors.]
