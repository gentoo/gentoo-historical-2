diff -u sb-sha1.orig/sb-sha1.asd sb-sha1/sb-sha1.asd
--- sb-sha1.orig/sb-sha1.asd	2003-08-08 02:28:18.000000000 -0500
+++ sb-sha1/sb-sha1.asd	2003-10-17 11:21:43.789994592 -0500
@@ -5,11 +5,15 @@
 
 (in-package #:sb-sha1-system)
 
-(defsystem sb-sha1
+#+sbcl (defsystem sb-sha1
   :depends-on (sb-rotate-byte)
   :version "1.0"
   :components ((:file "sha1")))
 
+#-sbcl (defsystem sb-sha1
+  :version "1.0"
+  :components ((:file "sha1")))
+
 (defmethod perform :after ((o load-op) (c (eql (find-system :sb-sha1))))
   (provide 'sb-sha1))
 
@@ -25,4 +29,3 @@
 (defmethod perform ((o test-op) (c (eql (find-system :sb-sha1-tests))))
   (or (funcall (intern "DO-TESTS" (find-package "SB-RT")))
       (error "test-op failed")))
-			    
\ No newline at end of file
Only in sb-sha1/: sb-sha1.asd.orig
diff -u sb-sha1.orig/sha1.lisp sb-sha1/sha1.lisp
--- sb-sha1.orig/sha1.lisp	2003-09-11 02:40:20.000000000 -0500
+++ sb-sha1/sha1.lisp	2003-10-17 11:25:03.897573616 -0500
@@ -526,9 +526,11 @@
       (update-sha1-state state sequence :start start :end real-end))
     (finalize-sha1-state state)))
 
-(defconstant +buffer-size+ (* 128 1024)
-  "Size of internal buffer to use for sha1sum-stream and sha1sum-file
-operations.  This should be a multiple of 64, the SHA1 block size.")
+(eval-when (:compile-toplevel)
+  (defconstant +buffer-size+ (* 128 1024)
+    "Size of internal buffer to use for sha1sum-stream and
+sha1sum-file operations.  This should be a multiple of 64, the SHA1
+block size."))
 
 (deftype buffer-index () `(integer 0 ,+buffer-size+))
 
