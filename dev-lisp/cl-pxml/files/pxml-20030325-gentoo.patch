diff -u xmlutils.orig/pxml0.cl xmlutils/pxml0.cl
--- xmlutils.orig/pxml0.cl	2003-04-01 00:41:01.000000000 -0600
+++ xmlutils/pxml0.cl	2003-10-16 11:29:53.067861096 -0500
@@ -29,14 +29,14 @@
 ;;
 
 (defpackage net.xml.parser
-  (:use :lisp :clos :excl :net.uri)
+  (:use :lisp #+allegro :clos :acl-compat.excl :net.uri)
   (:export
    #:parse-xml)
   )
 
 (in-package :net.xml.parser)
 
-(unless (fboundp 'pxml-dribble-bug-hook)
+#+allegro (unless (fboundp 'pxml-dribble-bug-hook)
   (let ((pxml-version-strings nil))
     (defun pxml-dribble-bug-hook (stream-or-string)
       (if (stringp stream-or-string)
@@ -47,7 +47,7 @@
 
     (push 'pxml-dribble-bug-hook excl:*dribble-bug-hooks*)))
 
-(funcall 'pxml-dribble-bug-hook "$Id: pxml-20030325-gentoo.patch,v 1.1 2003/10/16 17:37:11 mkennedy Exp $")
+#+allegro (funcall 'pxml-dribble-bug-hook "$Id: pxml-20030325-gentoo.patch,v 1.1 2003/10/16 17:37:11 mkennedy Exp $")
 
 (defun xml-char-p (char)
   (declare (optimize (speed 3) (safety 1)))
diff -u xmlutils.orig/pxml1.cl xmlutils/pxml1.cl
--- xmlutils.orig/pxml1.cl	2003-04-01 00:41:01.000000000 -0600
+++ xmlutils/pxml1.cl	2003-10-16 11:41:46.354425056 -0500
@@ -25,13 +25,13 @@
 
 (in-package :net.xml.parser)
 
-(pxml-dribble-bug-hook "$Id: pxml-20030325-gentoo.patch,v 1.1 2003/10/16 17:37:11 mkennedy Exp $")
+#+allegro (pxml-dribble-bug-hook "$Id: pxml-20030325-gentoo.patch,v 1.1 2003/10/16 17:37:11 mkennedy Exp $")
 
 (defparameter *collectors* (list nil nil nil nil nil nil nil nil))
 
 (defun put-back-collector (col)
   (declare (optimize (speed 3) (safety 1)))
-  (mp::without-scheduling
+  (acl-compat.mp:without-scheduling
     (do ((cols *collectors* (cdr cols)))
 	((null cols)
 	 ; toss it away
@@ -83,7 +83,7 @@
 (defun get-tokenbuf ()
   (declare (optimize (speed 3) (safety 1)))
   (let (buf)
-    (mp::without-scheduling
+    (acl-compat.mp:without-scheduling
       (do* ((bufs *tokenbufs* (cdr bufs))
 	    (this (car bufs) (car bufs)))
 	  ((null bufs))
@@ -185,7 +185,7 @@
 
 (defun put-back-tokenbuf (buf)
   (declare (optimize (speed 3) (safety 1)))
-  (mp::without-scheduling
+  (acl-compat.mp:without-scheduling
     (do ((bufs *tokenbufs* (cdr bufs)))
 	((null bufs)
 	 ; toss it away
@@ -197,7 +197,7 @@
 (defun get-collector ()
   (declare (optimize (speed 3) (safety 1)))
   (let (col)
-    (mp::without-scheduling
+    (acl-compat.mp:without-scheduling
       (do* ((cols *collectors* (cdr cols))
 	    (this (car cols) (car cols)))
 	  ((null cols))
@@ -265,7 +265,7 @@
 			      (iostruct-read-sequence-func iostruct))))))
     (if* (and from-stream (eq tmp-char #\return)) then #\newline else tmp-char)))
 
-(defun unicode-check (p tokenbuf)
+#+allegro (defun unicode-check (p tokenbuf)
   (declare (ignorable tokenbuf) (optimize (speed 3) (safety 1)))
   ;; need no-OO check because external format support isn't completely done yet
   (when (not (typep p 'string-input-simple-stream))
