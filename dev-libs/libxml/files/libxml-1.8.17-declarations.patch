diff -NrU5 libxml-1.8.17.original/debugXML.c libxml-1.8.17/debugXML.c
--- libxml-1.8.17.original/debugXML.c	2009-08-13 19:58:37.000000000 +0000
+++ libxml-1.8.17/debugXML.c	2009-08-13 20:04:58.000000000 +0000
@@ -14,13 +14,11 @@
 #endif
 #include <stdio.h>
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>
 #endif
-#ifdef HAVE_STRING_H
 #include <string.h>
-#endif
 #include "xmlmemory.h"
 #include "tree.h"
 #include "parser.h"
 #include "debugXML.h"
 #include "HTMLtree.h"
diff -NrU5 libxml-1.8.17.original/entities.c libxml-1.8.17/entities.c
--- libxml-1.8.17.original/entities.c	2009-08-13 19:58:37.000000000 +0000
+++ libxml-1.8.17/entities.c	2009-08-13 20:04:58.000000000 +0000
@@ -659,11 +659,11 @@
 #endif
 		buf[sizeof(buf) - 1] = 0;
 		ptr = buf;
 		while (*ptr != 0) *out++ = *ptr++;
 	    } else if ((doc != NULL) && (doc->encoding != NULL) &&
-		       (xmlStrEqual(doc->encoding, "UTF-8"))) {
+		       (xmlStrEqual(doc->encoding, (const xmlChar *) "UTF-8"))) {
 		/*
 		 * We assume we have UTF-8 input.
 		 */
 		char buf[10], *ptr;
 		int val = 0, l = 1;
diff -NrU5 libxml-1.8.17.original/nanoftp.c libxml-1.8.17/nanoftp.c
--- libxml-1.8.17.original/nanoftp.c	2009-08-13 19:58:37.000000000 +0000
+++ libxml-1.8.17/nanoftp.c	2009-08-13 20:04:58.000000000 +0000
@@ -1220,11 +1220,11 @@
     int len, i;
     int res;
     unsigned char ad[6], *adp, *portp;
     unsigned int temp[6];
     struct sockaddr_in dataAddr;
-    size_t dataAddrLen;
+    socklen_t dataAddrLen;
 
     ctxt->dataFd = socket (AF_INET, SOCK_STREAM, IPPROTO_TCP);
     if (ctxt->dataFd < 0) {
         fprintf(stderr, "xmlNanoFTPGetConnection: failed to create socket\n");
     }
diff -NrU5 libxml-1.8.17.original/parser.c libxml-1.8.17/parser.c
--- libxml-1.8.17.original/parser.c	2009-08-13 19:58:37.000000000 +0000
+++ libxml-1.8.17/parser.c	2009-08-13 20:04:58.000000000 +0000
@@ -6521,11 +6521,10 @@
     if (RAW != '&') return;
 
     if (NXT(1) == '#') {
 	int i = 0;
 	xmlChar out[10];
-	int hex = NXT(2);
 	int val = xmlParseCharRef(ctxt);
 	
 	/*
 	 * Just encode the value in UTF-8
 	 */
@@ -10625,10 +10624,12 @@
  *     they are not added to @node
  */
 
 xmlNodePtr
 xmlParseBalancedChunkFile(xmlDocPtr doc, xmlNodePtr node) {
+	/* not implemented */
+	return (xmlNodePtr) NULL;
 }
 
 /**
  * xmlRecoverDoc :
  * @cur:  a pointer to an array of xmlChar
@@ -10711,11 +10712,11 @@
 xmlSAXParseFile(xmlSAXHandlerPtr sax, const char *filename,
                           int recovery) {
     xmlDocPtr ret;
     xmlParserCtxtPtr ctxt;
     char *directory = NULL;
-    xmlSAXHandlerPtr oldsax;
+    xmlSAXHandlerPtr oldsax = NULL;
 
     ctxt = xmlCreateFileParserCtxt(filename);
     if (ctxt == NULL) return(NULL);
     if (sax != NULL) {
 	oldsax = ctxt->sax;
@@ -10939,11 +10940,11 @@
 int
 xmlSAXUserParseFile(xmlSAXHandlerPtr sax, void *user_data,
                     const char *filename) {
     int ret = 0;
     xmlParserCtxtPtr ctxt;
-    xmlSAXHandlerPtr oldsax;
+    xmlSAXHandlerPtr oldsax = NULL;
     
     ctxt = xmlCreateFileParserCtxt(filename);
     if (ctxt == NULL) return -1;
     if (sax != NULL) {
 	oldsax = ctxt->sax;
diff -NrU5 libxml-1.8.17.original/parser.h libxml-1.8.17/parser.h
--- libxml-1.8.17.original/parser.h	2009-08-13 19:58:37.000000000 +0000
+++ libxml-1.8.17/parser.h	2009-08-13 20:04:58.000000000 +0000
@@ -343,20 +343,24 @@
 int		xmlStrcmp		(const xmlChar *str1,
 					 const xmlChar *str2);
 int		xmlStrncmp		(const xmlChar *str1,
 					 const xmlChar *str2,
 					 int len);
+int		xmlStrEqual		(const xmlChar *str1,
+					 const xmlChar *str2);
 int		xmlStrlen		(const xmlChar *str);
 xmlChar *	xmlStrcat		(xmlChar *cur,
 					 const xmlChar *add);
 xmlChar *	xmlStrncat		(xmlChar *cur,
 					 const xmlChar *add,
 					 int len);
 
 /**
  * Basic parsing Interfaces
  */
+void		xmlInitParser		(void);
+void		xmlInitializePredefinedEntities(void);
 xmlDocPtr	xmlParseDoc		(xmlChar *cur);
 xmlDocPtr	xmlParseMemory		(char *buffer,
 					 int size);
 xmlDocPtr	xmlParseFile		(const char *filename);
 int		xmlSubstituteEntitiesDefault(int val);
@@ -371,11 +375,24 @@
 xmlDocPtr	xmlRecoverFile		(const char *filename);
 
 /**
  * Less common routines and SAX interfaces
  */
+int		xmlParseBalancedChunkMemory(xmlDocPtr doc,
+					 xmlSAXHandlerPtr sax,
+					 void *user_data,
+					 int depth,
+					 const xmlChar *string,
+					 xmlNodePtr *list);
 int		xmlParseDocument	(xmlParserCtxtPtr ctxt);
+int		xmlParseExternalEntity	(xmlDocPtr doc,
+					 xmlSAXHandlerPtr sax,
+					 void *user_data,
+					 int depth,
+					 const xmlChar *URL,
+					 const xmlChar *ID,
+					 xmlNodePtr *list);
 xmlDocPtr	xmlSAXParseDoc		(xmlSAXHandlerPtr sax,
 					 xmlChar *cur,
 					 int recovery);
 int		xmlSAXUserParseFile	(xmlSAXHandlerPtr sax,
 					 void *user_data,
diff -NrU5 libxml-1.8.17.original/tree.c libxml-1.8.17/tree.c
--- libxml-1.8.17.original/tree.c	2009-08-13 19:58:37.000000000 +0000
+++ libxml-1.8.17/tree.c	2009-08-13 20:04:58.000000000 +0000
@@ -4420,11 +4420,11 @@
     if (cur->version != NULL) 
 	xmlBufferWriteQuotedString(buf, cur->version);
     else
 	xmlBufferWriteChar(buf, "\"1.0\"");
     if ((cur->encoding != NULL) &&
-	(!xmlStrEqual(cur->encoding, "UTF-8"))) {
+	(!xmlStrEqual(cur->encoding, (const xmlChar *) "UTF-8"))) {
         xmlBufferWriteChar(buf, " encoding=");
 	xmlBufferWriteQuotedString(buf, cur->encoding);
     }
     switch (cur->standalone) {
 /************************************************* 2.3.5 **********
