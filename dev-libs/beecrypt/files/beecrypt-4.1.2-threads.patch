diff -urNp beecrypt-4.1.2.org/c++/mutex.h beecrypt-4.1.2/c++/mutex.h
--- beecrypt-4.1.2.org/c++/mutex.h	2004-09-07 13:47:51.000000000 +0300
+++ beecrypt-4.1.2/c++/mutex.h	2006-10-23 11:19:04.000000000 +0200
@@ -37,7 +37,9 @@ namespace beecrypt {
 	class BEECRYPTCXXAPI mutex
 	{
 	private:
+#ifdef ENABLE_THREADS
 		bc_mutex_t _lock;
+#endif
 
 	public:
 		inline void init() throw (char*)
@@ -55,7 +57,9 @@ namespace beecrypt {
 			if ((rc = pthread_mutex_init(&_lock, 0)))
 				throw strerror(rc);
 			# else
+			#  ifdef ENABLE_THREADS
 			#  error
+			#  endif
 			# endif
 			#endif
 		}
@@ -75,7 +79,9 @@ namespace beecrypt {
 			if ((rc = pthread_mutex_lock(&_lock)))
 				throw strerror(rc);
 			# else
+			#  ifdef ENABLE_THREADS
 			#  error
+			#  endif
 			# endif
 			#endif
 		}
@@ -107,7 +113,9 @@ namespace beecrypt {
 				return false;
 			throw strerror(rc);
 			# else
+			#  ifdef ENABLE_THREADS
 			#  error
+			#  endif
 			# endif
 			#endif
 		}
@@ -126,7 +134,9 @@ namespace beecrypt {
 			if ((rc = pthread_mutex_unlock(&_lock)))
 				throw strerror(rc);
 			# else
+			#  ifdef ENABLE_THREADS
 			#  error
+			#  endif
 			# endif
 			#endif
 		}
@@ -145,7 +155,9 @@ namespace beecrypt {
 			if ((rc = pthread_mutex_destroy(&_lock)))
 				throw strerror(rc);
 			# else
+			#  ifdef ENABLE_THREADS
 			#  error
+			#  endif
 			# endif
 			#endif
 		}
diff -urNp beecrypt-4.1.2.org/c++/security/Security.cxx beecrypt-4.1.2/c++/security/Security.cxx
--- beecrypt-4.1.2.org/c++/security/Security.cxx	2004-11-02 09:06:58.000000000 +0200
+++ beecrypt-4.1.2/c++/security/Security.cxx	2006-10-23 11:19:23.000000000 +0200
@@ -115,10 +115,8 @@ void Security::initialize()
 					{
 						#if WIN32
 						const Provider& (*inst)(void*) = (const Provider& (*)(void*)) GetProcAddress((HMODULE) handle, "provider_const_ref");
-						#elif HAVE_PTHREAD_H
-						const Provider& (*inst)(void*) = (const Provider& (*)(void*)) dlsym(handle, "provider_const_ref");
 						#else
-						# error
+						const Provider& (*inst)(void*) = (const Provider& (*)(void*)) dlsym(handle, "provider_const_ref");
 						#endif
 
 						if (inst)
