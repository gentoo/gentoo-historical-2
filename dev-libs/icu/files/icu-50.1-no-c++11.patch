diff -Naur icu.orig/source/configure.in icu/source/configure.in
--- icu.orig/source/configure.in	2012-11-03 09:16:37.937159045 +0100
+++ icu/source/configure.in	2012-11-03 09:20:30.019550761 +0100
@@ -955,42 +955,6 @@
     ;;
 esac
 
-# GCC >= 4.4 supports UTF16 string literals. The CFLAGS and CXXFLAGS may change in the future.
-if test "$CHECK_UTF16_STRING_RESULT" = "unknown"; then
-    if test "$GCC" = yes; then
-        OLD_CFLAGS="${CFLAGS}"
-        CFLAGS="${CFLAGS} -std=gnu99"
-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-static const char16_t test[] = u"This is a UTF16 literal string.";
-        ]], [[]])],[CC_UTF16_STRING=1],[CC_UTF16_STRING=0])
-        if test "$CC_UTF16_STRING" = 1; then
-            CHECK_UTF16_STRING_RESULT="C only";
-        else
-            CFLAGS="${OLD_CFLAGS}"
-        fi
-    fi
-    if test "$GXX" = yes; then
-        OLD_CXXFLAGS="${CXXFLAGS}"
-        # -Wno-return-type-c-linkage is desired so that stable ICU API is not warned about.
-        CXXFLAGS="${CXXFLAGS} -std=c++11"
-        AC_LANG_PUSH([C++])
-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-static const char16_t test[] = u"This is a UTF16 literal string.";
-        ]], [[]])],[CXX_UTF16_STRING=1],[CXX_UTF16_STRING=0])
-        AC_LANG_POP([C++])
-        if test "$CXX_UTF16_STRING" = 1; then
-            if test "$CC_UTF16_STRING" = 1; then
-                CHECK_UTF16_STRING_RESULT="available";
-            else
-                CHECK_UTF16_STRING_RESULT="C++ only";
-            fi
-        else
-            CXXFLAGS="${OLD_CXXFLAGS}"
-        fi
-    fi
-fi
-AC_MSG_RESULT($CHECK_UTF16_STRING_RESULT)
-
 # Enable/disable extras
 AC_ARG_ENABLE(extras,
 	[  --enable-extras         build ICU extras [default=yes]],
