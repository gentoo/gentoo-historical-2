--- ./src/display.c.cow	2006-08-29 19:48:53.000000000 -0400
+++ ./src/display.c	2006-08-29 18:11:46.000000000 -0400
@@ -1998,7 +1998,7 @@
 					   PAINT_SCREEN_REGION_MASK |
 					   PAINT_SCREEN_FULL_MASK);
 
-			glXSwapBuffers (s->display->display, s->root);
+			glXSwapBuffers (s->display->display, s->output);
 		    }
 		    else if (s->damageMask & COMP_SCREEN_DAMAGE_REGION_MASK)
 		    {
@@ -2022,7 +2022,7 @@
 				    y = s->height - pBox->y2;
 
 				    (*s->copySubBuffer) (s->display->display,
-							 s->root,
+							 s->output,
 							 pBox->x1, y,
 							 pBox->x2 - pBox->x1,
 							 pBox->y2 - pBox->y1);
@@ -2071,7 +2071,7 @@
 					       &s->region,
 					       PAINT_SCREEN_FULL_MASK);
 
-			    glXSwapBuffers (s->display->display, s->root);
+			    glXSwapBuffers (s->display->display, s->output);
 			}
 		    }
 
--- ./src/screen.c.cow	2006-08-29 14:11:48.000000000 -0400
+++ ./src/screen.c	2006-08-29 18:19:32.000000000 -0400
@@ -40,6 +40,8 @@
 #include <X11/Xatom.h>
 #include <X11/Xproto.h>
 #include <X11/extensions/Xrandr.h>
+#include <X11/extensions/Xcomposite.h>
+#include <X11/extensions/shape.h>
 #include <X11/cursorfont.h>
 
 #include <compiz.h>
@@ -878,6 +880,25 @@
 		     (unsigned char *) data, 1);
 }
 
+static void
+makeOutputWindow (CompScreen *s)
+{
+    Display       *dpy = s->display->display;
+    XserverRegion region;
+
+    s->overlay   = XCompositeGetOverlayWindow (dpy, s->root);
+    s->output    = s->overlay;
+
+    region = XFixesCreateRegion (dpy, NULL, 0);
+
+    XFixesSetWindowShapeRegion (dpy,
+				s->output,
+				ShapeInput,
+				0, 0, region);
+
+    XFixesDestroyRegion (dpy, region);
+}
+
 Bool
 addScreen (CompDisplay *display,
 	   int	       screenNum,
@@ -1045,6 +1066,8 @@
 
     s->grabWindow = None;
 
+    makeOutputWindow (s);
+
     templ.visualid = XVisualIDFromVisual (s->attrib.visual);
 
     visinfo = XGetVisualInfo (dpy, VisualIDMask, &templ, &nvisinfo);
@@ -1174,7 +1197,7 @@
 	s->copySubBuffer = (GLXCopySubBufferProc)
 	    getProcAddress (s, "glXCopySubBufferMESA");
 
-    glXMakeCurrent (dpy, s->root, s->ctx);
+    glXMakeCurrent (dpy, s->output, s->ctx);
     currentRoot = s->root;
 
     glExtensions = (const char *) glGetString (GL_EXTENSIONS);
@@ -2844,7 +2867,7 @@
 {
     if (currentRoot != s->root)
     {
-	glXMakeCurrent (s->display->display, s->root, s->ctx);
+	glXMakeCurrent (s->display->display, s->output, s->ctx);
 	currentRoot = s->root;
 
 	s->pendingCommands = TRUE;
--- ./include/compiz.h.cow	2006-08-29 19:36:02.000000000 -0400
+++ ./include/compiz.h	2006-08-29 15:46:43.000000000 -0400
@@ -1288,6 +1288,8 @@
     Region	      damage;
     unsigned long     damageMask;
     Window	      root;
+    Window	      overlay;
+    Window	      output;
     XWindowAttributes attrib;
     Window	      grabWindow;
     CompFBConfig      glxPixmapFBConfigs[MAX_DEPTH + 1];
--- ./src/event.c.cow	2006-08-29 21:37:29.000000000 -0400
+++ ./src/event.c	2006-08-29 21:39:03.000000000 -0400
@@ -1145,7 +1145,12 @@
 	s = findScreenAtDisplay (d, event->xcreatewindow.parent);
 	if (s)
 	{
-	    addWindow (s, event->xcreatewindow.window, getTopWindow (s));
+	    /* The first time some client asks for the composite
+	     * overlay window, the X server creates it, which causes
+	     * an errorneous CreateNotify event.  We catch it and
+	     * ignore it. */
+	    if (s->overlay != event->xcreatewindow.window)
+		addWindow (s, event->xcreatewindow.window, getTopWindow (s));
 	}
 	break;
     case DestroyNotify:
