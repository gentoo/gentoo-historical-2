#!/bin/bash

# Setup the user's local configuration files as unfortunately
# trswm only supports looking in a single place for configs.

# author: Mike Gardiner <obz@gentoo.org>
# last modified: 5 November 2003 
# trswm version: 0.4.9

# the default, distribution supplied files
DISTCONF="/etc/trswm"
DISTCONFFILES=$( ls ${DISTCONF} )

# the directory for local configuration, can be found by 
# prepending the $HOME variable to the beginning of
# TRS_CONFIG_PATH in /usr/include/trswm/tc_defs.h
TCDIR="${HOME}/.trswm-devel"

# and the trswm binary
TRSWM_BIN="/usr/bin/trswm.bin"

# check the local configuration files exist
check_config() {

	local have_missing="false"
	local missing=""
	for conf in ${DISTCONFFILES}; do
		[ ! -e ${TCDIR}/${conf} ] \
			&& missing="$missing $conf" \
			&& have_missing="true"

	done

	[ $have_missing == "true" ] \
		&& echo "Configuration files missing: $missing" \
		|| echo "No configuration files missing"
		
}

# create the local configuration files.
# $1 may be the string "force" which will
# copy DISTCONF/*.lua without checking to see
# what exists, or "noforce" will be force checks.
create_config() {

	# if the config directory doesnt exist, create it
	[ ! -e ${TCDIR} ] && mkdir ${TCDIR}
	# if we're doing a force, then we just copy all
	# of the configs across and finish
	if [ $1 == "force" ]; then
		cp ${DISTCONF}/*.lua ${TCDIR}/
		
	else
		# now check for the config files, and copy across
		# the missing ones
		for conf in ${DISTCONFFILES}; do
			[ ! -e ${TCDIR}/${conf} ] && \
				cp ${DISTCONF}/${conf} ${TCDIR}/
		done

	fi

}

# print out the help information
print_help() {

	echo "Gentoo Linux trswm wrapper (Nov 5, 2003)"
	echo ""
	echo "  Usage is trswm -[h|c|f|m] [--noexec]"
	echo "  Default behaviour is equivalent to trswm -m"
	echo ""
	echo "  Supported options:"
	echo "    -h  --help     -> Print this help"
	echo "    -c  --check    -> Check the local configuration for validity"
	echo "    -f  --force    -> Force reset of local configuration to default"
	echo "    -m  --missing  -> Create missing files in local configuration"
	echo "        --noexec   -> Don't execute the trswm binary (use with -f/-m)"
	echo ""

}

main() {

	# do we want to execute the trswm binary after
	# we've checked the config etc ?
	local trswm_exec="yes"

	case $1 in
		
		-h|--help) 		print_help
						exit 0
						;;
		-c|--check) 	check_config
						exit 0
						;;
		-f|--force) 	create_config "force"
						;;
		-m|--missing) 	create_config "noforce"
						;;
		*) 				create_config "noforce"
						;;

	esac

	# test for whether we have exec set or not
	[ "x$2" == "x--noexec" ] && trswm_exec="no"

	# decide whether to continue on and execute the
	# window manager or not
	[ $trswm_exec == "yes" ] && exec ${TRSWM_BIN}

	exit 0

}

main $@

# vim:set ts=4
