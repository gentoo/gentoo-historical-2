--- WindowMaker-0.91.0/WPrefs.app/Expert.c	2005-05-21 17:04:42.000000000 -0700
+++ /tmp/WindowMaker-0.91.0/WPrefs.app/Expert.c	2005-05-21 16:10:41.000000000 -0700
@@ -54,9 +54,10 @@
     WMSetButtonSelected(panel->swi[4], GetBoolForKey("DontConfirmKill"));
     WMSetButtonSelected(panel->swi[5], GetBoolForKey("DisableBlinking"));
     WMSetButtonSelected(panel->swi[6], GetBoolForKey("AntialiasedText"));
+    WMSetButtonSelected(panel->swi[7], GetBoolForKey("DCMaximize"));
+    WMSetButtonSelected(panel->swi[8], GetBoolForKey("SingleClickLaunch"));
 }
 
-
 static void
 createPanel(Panel *p)
 {
@@ -66,10 +67,10 @@
     panel->box = WMCreateBox(panel->parent);
     WMSetViewExpandsToParent(WMWidgetView(panel->box), 2, 2, 2, 2);
 
-    for (i=0; i<7; i++) {
+    for (i=0; i<9; i++) {
         panel->swi[i] = WMCreateSwitchButton(panel->box);
         WMResizeWidget(panel->swi[i], FRAME_WIDTH-40, 25);
-        WMMoveWidget(panel->swi[i], 20, 20+i*25);
+        WMMoveWidget(panel->swi[i], 20, 20+i*23);
     }
 
     WMSetButtonText(panel->swi[0], _("Disable miniwindows (icons for minimized windows). For use with KDE/GNOME."));
@@ -81,6 +82,9 @@
     WMSetButtonText(panel->swi[6], _("Smooth font edges (needs restart)."));
 
     WMSetButtonEnabled(panel->swi[6], True);
+    WMSetButtonText(panel->swi[7], _("Double click on title bar maximize"));
+    WMSetButtonText(panel->swi[8], _("Launch applications and restore windows with a single click"));
+
 
     WMRealizeWidget(panel->box);
     WMMapSubwidgets(panel->box);
@@ -103,6 +107,8 @@
     SetBoolForKey(WMGetButtonSelected(panel->swi[4]), "DontConfirmKill");
     SetBoolForKey(WMGetButtonSelected(panel->swi[5]), "DisableBlinking");
     SetBoolForKey(WMGetButtonSelected(panel->swi[6]), "AntialiasedText");
+    SetBoolForKey(WMGetButtonSelected(panel->swi[7]), "DCMaximize");
+    SetBoolForKey(WMGetButtonSelected(panel->swi[8]), "SingleClickLaunch");
 }
 
 
--- WindowMaker-0.91.0/src/WindowMaker.h	2005-05-21 17:04:42.000000000 -0700
+++ /tmp/WindowMaker-0.91.0/src/WindowMaker.h	2005-05-21 16:10:41.000000000 -0700
@@ -466,6 +466,12 @@
     /* shading animation */
     signed char shade_speed;
 
+    /* double click on title bar maximize */
+    char dc_maximize;
+
+    /* single click to lauch applications */
+    char single_click;
+
     int edge_resistance;
     char attract;
 
--- WindowMaker-0.91.0/src/appicon.c	2005-05-21 17:04:42.000000000 -0700
+++ /tmp/WindowMaker-0.91.0/src/appicon.c	2005-05-21 16:10:41.000000000 -0700
@@ -585,6 +585,7 @@
     int shad_x = 0, shad_y = 0, docking=0, dockable, collapsed = 0;
     int ix, iy;
     int clickButton = event->xbutton.button;
+    Bool hasMoved = False;
     Pixmap ghost = None;
     Window wins[2];
     Bool movingSingle = False;
@@ -665,6 +666,7 @@
             break;
 
         case MotionNotify:
+            hasMoved = True;
             if (!grabbed) {
                 if (abs(dx-ev.xmotion.x)>=MOVE_THRESHOLD
                     || abs(dy-ev.xmotion.y)>=MOVE_THRESHOLD) {
@@ -802,6 +804,9 @@
             if (wPreferences.auto_arrange_icons)
                 wArrangeIcons(scr, True);
 
+            if (!hasMoved && wPreferences.single_click)
+                iconDblClick(desc, event);
+
             done = 1;
             break;
         }
--- WindowMaker-0.91.0/src/defaults.c	2005-05-21 17:04:42.000000000 -0700
+++ /tmp/WindowMaker-0.91.0/src/defaults.c	2005-05-21 16:10:41.000000000 -0700
@@ -556,6 +556,12 @@
     {"DisableBlinking",	"NO",		NULL,
     &wPreferences.dont_blink,	getBool,	NULL
     },
+    {"DCMaximize", "NO",               NULL,
+    &wPreferences.dc_maximize,   getBool,        NULL
+    },
+    {"SingleClickLaunch", "NO",                NULL,
+    &wPreferences.single_click,  getBool,        NULL
+    },
     /* style options */
     {"MenuStyle", 	"normal",  		seMenuStyles,
     &wPreferences.menu_style, getEnum, 	setMenuStyle
--- WindowMaker-0.91.0/src/dock.c	2005-05-21 17:04:42.000000000 -0700
+++ /tmp/WindowMaker-0.91.0/src/dock.c	2005-05-21 16:12:58.000000000 -0700
@@ -3758,7 +3758,7 @@
 
 
 
-static void
+static Bool
 handleIconMove(WDock *dock, WAppIcon *aicon, XEvent *event)
 {
     WScreen *scr = dock->screen_ptr;
@@ -3774,6 +3774,7 @@
     int tmp;
     Pixmap ghost = None;
     Bool docked;
+    Bool hasMoved = False;
     int superfluous = wPreferences.superfluous; /* we catch it to avoid problems */
     int omnipresent = aicon->omnipresent; /* this must be cached!!! */
 
@@ -3828,6 +3829,7 @@
             break;
 
         case MotionNotify:
+	    hasMoved = True;
             if (!grabbed) {
                 if (abs(ofs_x-ev.xmotion.x)>=MOVE_THRESHOLD
                     || abs(ofs_y-ev.xmotion.y)>=MOVE_THRESHOLD) {
@@ -3977,7 +3979,7 @@
 #ifdef DEBUG
             puts("End icon move");
 #endif
-            return;
+            return hasMoved;
         }
     }
 }
@@ -4114,10 +4116,13 @@
             if (getClipButton(event->xbutton.x, event->xbutton.y)!=CLIP_IDLE
                 && dock->type==WM_CLIP)
                 handleClipChangeWorkspace(scr, event);
-            else
-                handleDockMove(dock, aicon, event);
-        } else
-            handleIconMove(dock, aicon, event);
+	    else
+	        handleDockMove(dock, aicon, event);
+            } else {
+                Bool hasMoved = handleIconMove(dock, aicon, event);
+                if (!hasMoved && wPreferences.single_click)
+                   iconDblClick(desc, event);
+                }
 
     } else if (event->xbutton.button==Button2 && dock->type==WM_CLIP &&
                aicon==scr->clip_icon) {
--- WindowMaker-0.91.0/src/icon.c	2005-05-21 17:04:42.000000000 -0700
+++ /tmp/WindowMaker-0.91.0/src/icon.c	2005-05-21 16:10:41.000000000 -0700
@@ -891,6 +891,7 @@
     int dx=event->xbutton.x, dy=event->xbutton.y;
     int grabbed=0;
     int clickButton=event->xbutton.button;
+    Bool hasMoved = False;
 
     if (WCHECK_STATE(WSTATE_MODAL))
         return;
@@ -942,6 +943,7 @@
             break;
 
         case MotionNotify:
+	    hasMoved = True;
             if (!grabbed) {
                 if (abs(dx-ev.xmotion.x)>=MOVE_THRESHOLD
                     || abs(dy-ev.xmotion.y)>=MOVE_THRESHOLD) {
@@ -979,6 +981,9 @@
 
             if (wPreferences.auto_arrange_icons)
                 wArrangeIcons(wwin->screen_ptr, True);
+            if (!hasMoved && wPreferences.single_click)
+                miniwindowDblClick(desc, event);
+
             return;
 
         }
--- WindowMaker-0.91.0/src/window.c	2005-05-21 17:04:42.000000000 -0700
+++ /tmp/WindowMaker-0.91.0/src/window.c	2005-05-21 16:10:41.000000000 -0700
@@ -3089,13 +3089,29 @@
 
     if (event->xbutton.button==Button1) {
         if (event->xbutton.state == 0) {
-            if (!WFLAGP(wwin, no_shadeable)) {
+           /* check preferences, maximize or shade */
+           if (wPreferences.dc_maximize) {
+              if (!WFLAGP(wwin, no_resizable)) {
+                 /* maximize window */
+                 if (wwin->flags.maximized != 0) {
+                    wUnmaximizeWindow(wwin);
+                    wwin->flags.maximized = 0;
+                 }
+                 else {
+                    wMaximizeWindow(wwin, MAX_VERTICAL|MAX_HORIZONTAL);
+                    wwin->flags.maximized = MAX_VERTICAL|MAX_HORIZONTAL;
+                 }
+              }
+           }
+	   else {
+             if (!WFLAGP(wwin, no_shadeable)) {
                 /* shade window */
                 if (wwin->flags.shaded)
-                    wUnshadeWindow(wwin);
+                   wUnshadeWindow(wwin);
                 else
-                    wShadeWindow(wwin);
-            }
+                   wShadeWindow(wwin);
+           }
+     }
         } else {
             int dir = 0;
 
