Dummy find implementation required by ocaml 4.01.

https://bitbucket.org/mmottl/pomap/issue/1/pomap-301-does-not-build-with-ocaml-401


Index: pomap-3.0.1/lib/ptset.ml
===================================================================
--- pomap-3.0.1.orig/lib/ptset.ml
+++ pomap-3.0.1/lib/ptset.ml
@@ -336,6 +336,8 @@ let rec max_elt = function
   | Leaf k -> k
   | Branch (_,_,s,t) -> max (max_elt s) (max_elt t)
 
+let find e t = if exists (fun x -> (x = e)) t then e else raise Not_found
+
 (*s Another nice property of Patricia trees is to be independent of the
     order of insertion. As a consequence, two Patricia trees have the
     same elements if and only if they are structurally equal. *)
Index: pomap-3.0.1/lib/ptset.mli
===================================================================
--- pomap-3.0.1.orig/lib/ptset.mli
+++ pomap-3.0.1/lib/ptset.mli
@@ -70,6 +70,8 @@ val partition : (elt -> bool) -> t -> t
 
 val split : elt -> t -> t * bool * t
 
+val find : elt -> t -> elt
+
 (*s Warning: [min_elt] and [max_elt] are linear w.r.t. the size of the
     set. In other words, [min_elt t] is barely more efficient than [fold
     min t (choose t)]. *)
