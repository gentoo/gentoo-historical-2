Sync the pervasives interface with ocaml 3.12.0

--- obrowser-1.1.orig/rt/caml/pervasives.mli
+++ obrowser-1.1/rt/caml/pervasives.mli
@@ -142,6 +145,11 @@ external ( or ) : bool -> bool -> bool =
 
 external ( ~- ) : int -> int = "%negint"
 (** Unary negation. You can also write [-e] instead of [~-e]. *)
+
+external ( ~+ ) : int -> int = "%identity"
+(** Unary addition. You can also write [+ e] instead of [~+ e].
+    @since 3.12.0
+*)
 
 external succ : int -> int = "%succint"
 (** [succ x] is [x+1]. *)
@@ -230,6 +237,11 @@ external ( asr ) : int -> int -> int = "
 
 external ( ~-. ) : float -> float = "%negfloat"
 (** Unary negation. You can also write [-.e] instead of [~-.e]. *)
+
+external ( ~+. ) : float -> float = "%identity"
+(** Unary addition. You can also write [+. e] instead of [~+. e].
+    @since 3.12.0
+*)
 
 external ( +. ) : float -> float -> float = "%addfloat"
 (** Floating-point addition *)
@@ -264,6 +276,18 @@ external log : float -> float = "caml_lo
 external log10 : float -> float = "caml_log10_float" "log10" "float"
 (** Base 10 logarithm. *)
 
+external expm1 : float -> float = "caml_expm1_float" "caml_expm1" "float"
+(** [expm1 x] computes [exp x -. 1.0], giving numerically-accurate results
+    even if [x] is close to [0.0].
+    @since 3.12.0
+*)
+
+external log1p : float -> float = "caml_log1p_float" "caml_log1p" "float"
+(** [log1p x] computes [log(1.0 +. x)] (natural logarithm),
+    giving numerically-accurate results even if [x] is close to [0.0].
+    @since 3.12.0
+*)
+
 external cos : float -> float = "caml_cos_float" "cos" "float"
 (** See {!Pervasives.atan2}. *)
 
--- obrowser-1.1.orig/rt/caml/pervasives.ml
+++ obrowser-1.1/rt/caml/pervasives.ml
@@ -51,6 +51,7 @@ external (||) : bool -> bool -> bool = "
 (* Integer operations *)
 
 external (~-) : int -> int = "%negint"
+external (~+) : int -> int = "%identity"
 external succ : int -> int = "%succint"
 external pred : int -> int = "%predint"
 external (+) : int -> int -> int = "%addint"
@@ -77,12 +78,14 @@ let max_int = min_int - 1
 (* Floating-point operations *)
 
 external (~-.) : float -> float = "%negfloat"
+external (~+.) : float -> float = "%identity"
 external (+.) : float -> float -> float = "%addfloat"
 external (-.) : float -> float -> float = "%subfloat"
 external ( *. ) : float -> float -> float = "%mulfloat"
 external (/.) : float -> float -> float = "%divfloat"
 external ( ** ) : float -> float -> float = "caml_power_float" "pow" "float"
 external exp : float -> float = "caml_exp_float" "exp" "float"
+external expm1 : float -> float = "caml_expm1_float" "caml_expm1" "float"
 external acos : float -> float = "caml_acos_float" "acos" "float"
 external asin : float -> float = "caml_asin_float" "asin" "float"
 external atan : float -> float = "caml_atan_float" "atan" "float"
@@ -91,6 +94,7 @@ external cos : float -> float = "caml_co
 external cosh : float -> float = "caml_cosh_float" "cosh" "float"
 external log : float -> float = "caml_log_float" "log" "float"
 external log10 : float -> float = "caml_log10_float" "log10" "float"
+external log1p : float -> float = "caml_log1p_float" "caml_log1p" "float"
 external sin : float -> float = "caml_sin_float" "sin" "float"
 external sinh : float -> float = "caml_sinh_float" "sinh" "float"
 external sqrt : float -> float = "caml_sqrt_float" "sqrt" "float"
