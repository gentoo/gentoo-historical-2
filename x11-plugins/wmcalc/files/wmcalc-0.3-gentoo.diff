diff -u wmcalc-0.3.orig/.wmcalc wmcalc-0.3/.wmcalc
--- wmcalc-0.3.orig/.wmcalc	Tue Nov 14 21:18:08 2000
+++ wmcalc-0.3/.wmcalc	Fri Jul 19 11:48:35 2002
@@ -31,5 +31,5 @@
 # The ImagChar variable allows the user to choose between 'i' and 'j' to 
 # represent the sqrt(-1).  (Electrical Engineers (such as myself) use 'j' 
 # rather than 'i.')
-#ImagChar	i
-ImagChar	j
+ImagChar	i
+#ImagChar	j
diff -u wmcalc-0.3.orig/Makefile wmcalc-0.3/Makefile
--- wmcalc-0.3.orig/Makefile	Sun Dec 10 23:51:48 2000
+++ wmcalc-0.3/Makefile	Fri Jul 19 11:47:22 2002
@@ -1,4 +1,4 @@
-INCLUDES =-I/usr/X11R6/include/X11 -I/usr/local/include
+INCLUDES =-I/usr/X11R6/include -I/usr/X11R6/include/X11 -I/usr/local/include
 LIBINC =-L/usr/X11R6/lib
 LIBS = -lX11 -lXpm -lXext -lm
 
diff -u wmcalc-0.3.orig/wmcalc.c wmcalc-0.3/wmcalc.c
--- wmcalc-0.3.orig/wmcalc.c	Thu Jan 18 01:18:25 2001
+++ wmcalc-0.3/wmcalc.c	Fri Jul 19 11:57:35 2002
@@ -90,6 +90,7 @@
     01/17/01   Updated to use XLookupString to get KeySym
     11/09/00   Added Events for focus and keyboard work.
     11/01/00   File Header Added
+    21/09/01   Added global configfile by Gordon Fraser
  ****************************************************************/
 int main( int argc, char **argv ) {
   XEvent report;
@@ -428,7 +429,7 @@
   flush_expose( iconwin ); 
   XCopyArea(display, visible.pixmap, iconwin, gc, 0, 0,
 	    visible.attributes.width, visible.attributes.height, 0, 0 );
-  if ( Verbose ) printf("In Redraw()\n");	
+  //  if ( Verbose ) printf("In Redraw()\n");	
   displaystr();
 }  /***** End of function redraw() ********************************/
 
@@ -471,7 +472,6 @@
  ****************************************************************/
 int whichKey (KeySym keysym) {
   extern int      Verbose;
-  extern Display  *display;
   int        func   = NO_BUTTON;
 
   if (Verbose) printf("KeySym 0x%x received, decoding...\n", (int) keysym);
diff -u wmcalc-0.3.orig/wmcalc_c.h wmcalc-0.3/wmcalc_c.h
--- wmcalc-0.3.orig/wmcalc_c.h	Thu Jan 18 01:16:14 2001
+++ wmcalc-0.3/wmcalc_c.h	Fri Jul 19 11:46:52 2002
@@ -17,6 +17,7 @@
 #define CALC_CMD_SIZE 128
 #define CONFFILENAME  "/.wmcalc"
 #define CONFTEMPFILE  "/tmp/wmcalc.tmp"
+#define CONFIGGLOBAL  "/etc/wmcalc.conf"
 #define VER           0
 #define REL           3
 
diff -u wmcalc-0.3.orig/wmcalcswitch.c wmcalc-0.3/wmcalcswitch.c
--- wmcalc-0.3.orig/wmcalcswitch.c	Thu Nov  9 20:05:00 2000
+++ wmcalc-0.3/wmcalcswitch.c	Fri Jul 19 12:01:16 2002
@@ -399,10 +399,16 @@
 
   /* Open current Config file */
   if ((fp = fopen(configfile, "r")) == NULL) {  // Can't find config file
-    printf("%s: Configuration File not found\n", configfile);
+    printf("%s: Cannot create configuration file\n", configfile);
     return(ERR_FILE_NOT_FOUND);
   }
 
+  /* We cannot write to the global config-file... */
+  if(!strcmp(configfile, CONFIGGLOBAL)) {
+    strcpy(configfile, getenv("HOME"));  // Added to wmbutton by Gordon Fraser, 9/21/01
+    strcat(configfile, CONFFILENAME);    
+  }
+
   /* Open Temporary File */
   if ((fptmp = fopen(tempfile, "w")) == NULL) {  // Can't open file in /tmp
     fprintf(stderr, "%s: Temporary File Open Failed\n", tempfile);
@@ -479,9 +485,14 @@
   
   sepstr = &sep_ch;
 
-  if ((fp = fopen(configfile, "r")) == NULL) {  // Can't find config file
-    fprintf(stderr, "%s: Configuration File not found\n", configfile);
-    return(ERR_FILE_NOT_FOUND);
+  if ((fp = fopen(configfile, "r")) == NULL) {    // Can't find config file
+    strcpy(configfile, CONFIGGLOBAL);             // ...so try to open global config
+    if ((fp = fopen(configfile, "r")) == NULL) {  // Can't find global config file
+      fprintf(stderr, "%s: Configuration File not found\n", configfile);
+      return(ERR_FILE_NOT_FOUND);
+    } else {
+      write_config();                             // if global config opened, save in homedir
+    }
   }
   else {
     if (Verbose) printf("%s: Found Configuration File\n", configfile);
@@ -498,7 +509,7 @@
 					      understood */
 	i = 0;
 	/* Loop while we haven't found the variable */
-	while (((strncmp(line, CfgVarList[i], strlen(CfgVarList[i]))) != NULL)
+	while (((strncmp(line, CfgVarList[i], strlen(CfgVarList[i]))) != 0)
 	       && (i < MAX_LABEL)) {
 	  i++;
 	}
