--- src/afs/LINUX/osi_vfsops.c.org	2007-10-13 11:44:44.000000000 +0200
+++ src/afs/LINUX/osi_vfsops.c	2007-10-13 11:45:53.000000000 +0200
@@ -263,7 +263,7 @@
 
 
 #if defined(STRUCT_SUPER_HAS_ALLOC_INODE)
-static kmem_cache_t *afs_inode_cachep;
+static struct kmem_cache *afs_inode_cachep;
 
 static struct inode *
 afs_alloc_inode(struct super_block *sb)
@@ -288,7 +288,7 @@
 }
 
 static void
-init_once(void * foo, kmem_cache_t * cachep, unsigned long flags)
+init_once(void * foo, struct kmem_cache * cachep, unsigned long flags)
 {
     struct vcache *vcp = (struct vcache *) foo;
 
@@ -309,7 +309,7 @@
     afs_inode_cachep = kmem_cache_create("afs_inode_cache",
 					 sizeof(struct vcache),
 					 0, SLAB_HWCACHE_ALIGN | SLAB_RECLAIM_ACCOUNT,
-					 init_once, NULL);
+					 init_once);
     if (afs_inode_cachep == NULL)
 	return -ENOMEM;
     return 0;
--- src/afs/LINUX/osi_vnodeops.c.org	2007-10-13 11:59:16.000000000 +0200
+++ src/afs/LINUX/osi_vnodeops.c	2007-10-13 11:59:40.000000000 +0200
@@ -640,9 +640,6 @@
   .mmap =	afs_linux_mmap,
   .open =	afs_linux_open,
   .flush =	afs_linux_flush,
-#ifdef AFS_LINUX26_ENV
-  .sendfile =   generic_file_sendfile,
-#endif
   .release =	afs_linux_release,
   .fsync =	afs_linux_fsync,
   .lock =	afs_linux_lock,
