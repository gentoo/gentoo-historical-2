#!/bin/sh
#RCUPDATE:3 4:75:
# $Id: tomcat,v 1.1 2001/07/10 02:00:22 achim Exp $

. /etc/rc.d/config/functions

# Shell script to start and stop the server
opts="start stop restart"

# There are other, simpler commands to startup the runner. The two
# commented commands good replacements. The first works well with
# Java Platform 1.1 based runtimes. The second works well with
# Java2 Platform based runtimes.

JAVA_HOME=/opt/java
TOMCAT_HOME=/opt/jakarta/tomcat

if [ "$TOMCAT_OPTS" = "" ] ; then
  TOMCAT_OPTS=""
fi

if [ "$ANT_OPTS" = "" ] ; then
  ANT_OPTS=""
fi

if [ "$JSPC_OPTS" = "" ] ; then
  JSPC_OPTS=""
fi

if [ -z "$JAVA_HOME" ] ;  then
  JAVA=`which java`
  if [ -z "$JAVA" ] ; then
    echo "Cannot find JAVA. Please set your PATH."
    exit 1
  fi
  JAVA_BINDIR=`dirname $JAVA`
  JAVA_HOME=$JAVA_BINDIR/..
fi

if [ "$JAVACMD" = "" ] ; then
   # it may be defined in env - including flags!!
   JAVACMD=$JAVA_HOME/bin/java
fi


oldCP=$CLASSPATH

CLASSPATH=.

# Add support for Cocoon if available

if [ -f /opt/tomcat/lib/cocoon/cocoon.jar ]; then

  for i in ${TOMCAT_HOME}/lib/cocoon/*.jar
  do
    CLASSPATH=${i}:${CLASSPATH}
  done
    CLASSPATH=${CLASSPATH}:/usr/lib/java/jndi.jar
fi

for i in ${TOMCAT_HOME}/lib/* ; do
  CLASSPATH=${CLASSPATH}:$i
done

CLASSPATH=${CLASSPATH}:/opt/java/src.jar:/opt/java/lib/tools.jar:/usr/lib/java/jaxp.jar:/usr/lib/java/parser.jar:/usr/lib/java/jcert.jar:/usr/lib/java/jnet.jar:/usr/lib/java/jsse.jar

export CLASSPATH

# We start the server up in the background for a couple of reasons:
#   1) It frees up your command window
#   2) You should use `stop` option instead of ^C to bring down the server
OP="$TOMCAT_OPTS -Dtomcat.home=${TOMCAT_HOME} org.apache.tomcat.startup.Tomcat"
start () {
   ebegin "Starting Jakarta Servlet Engine..."
   $JAVACMD $OP &
   eend $? "Error starting Jakarta Servler Engine!"
}
stop () {
   ebegin "Stopping Jakarta Servlet Engine..."
   $JAVACMD $OP -stop
   eend $? "Error stopping Jakarta Servler Engine!"
}
restart () {
	stop
	start
}

doservice ${@}


