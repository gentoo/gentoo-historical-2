diff -Naur old/pftpfxp-mew/include/defines.h new/pftpfxp-mew/include/defines.h
--- old/pftpfxp-mew/include/defines.h	2006-07-28 08:55:08.000000000 +0200
+++ new/pftpfxp-mew/include/defines.h	2006-07-28 08:57:28.000000000 +0200
@@ -209,9 +209,6 @@
 
 #define PASSWORD_SIZE   60
 
-#define BOOKMARK_RC     ".pftp/bookmarks"
-#define BOOKMARK_RC_BAK ".pftp/bookmarks.bak"
-
 #define DEFAULT_OKAY  "[    okay    ]"
 
 #define PASS_MAGIC   ",.,-.%$&%2.--,.-jio433-:52.-$:-.1hinui#+43+.5230.9401431.-54,.-fdioru892032"
diff -Naur old/pftpfxp-mew/src/bookmark.cc new/pftpfxp-mew/src/bookmark.cc
--- old/pftpfxp-mew/src/bookmark.cc	2006-07-28 08:55:08.000000000 +0200
+++ new/pftpfxp-mew/src/bookmark.cc	2006-07-28 17:16:32.000000000 +0200
@@ -23,15 +23,38 @@
     char *line = new(char[2048]), *enc = new(char[4096]);
     BOOKMARK *bm_temp = global_bookmark;
     char tempcwd[SERVER_WORKINGDIR_SIZE];
+    char *home_directory;
+    char *bookmark_file;
+    char *bookmark_file_bak;
+    int n;
+    
+    home_directory = getenv("HOME");
+    n = strlen(home_directory) + sizeof("/.pftp/bookmarks") + 1;
+    
+    if ((bookmark_file=(char*)malloc(n))==NULL) {
+        fprintf(stderr,"error allocating memory\n");
+        exit( -1);
+    }
+    
+    sprintf(bookmark_file, "%s/.pftp/bookmarks", home_directory);
+    
+    n = strlen(home_directory) + sizeof("/.pftp/bookmarks.bak") + 1;
+    if ((bookmark_file_bak=(char*)malloc(n))==NULL) {
+        fprintf(stderr,"error allocating memory\n");
+        exit( -1);
+    }
+    
+    sprintf(bookmark_file_bak, "%s/.pftp/bookmarks.bak", home_directory);
 
     getcwd(tempcwd, SERVER_WORKINGDIR_SIZE);
     chdir(startcwd);
 
     // backup old bookmark-file
-    rename(BOOKMARK_RC, BOOKMARK_RC_BAK);
+    rename(bookmark_file, bookmark_file_bak);
+    free(bookmark_file_bak);
 
     pass_pos = 0;
-    if ((file_out = fopen(BOOKMARK_RC, "w"))) {
+    if ((file_out = fopen(bookmark_file, "w"))) {
         // put magic and version number
         strcpy(line, PASS_MAGIC);
         Encrypt(line, enc);
@@ -297,6 +320,7 @@
     delete[](line);
     delete[](enc);
     chdir(tempcwd);
+    free(bookmark_file);
 }
 
 void CDisplayHandler::Decrypt(char *in, char *out) {
@@ -383,12 +407,25 @@
     char *line = new(char[4096]), *out = new(char[2048]);
     BOOKMARK *bm_new, *bm_temp = NULL;
     char tempcwd[SERVER_WORKINGDIR_SIZE];
+    char *home_directory;
+    char *bookmark_file;
+    int n;
 
+    pass_pos = 0;
+    home_directory = getenv("HOME");
+    n = strlen(home_directory) + sizeof("/.pftp/bookmarks") + 1;
+    
+     if ((bookmark_file=(char*)malloc(n))==NULL) {
+        fprintf(stderr,"error allocating memory\n");
+        exit( -1);
+    }
+    sprintf(bookmark_file, "%s/.pftp/bookmarks", home_directory);
+    
     getcwd(tempcwd, SERVER_WORKINGDIR_SIZE);
     chdir(startcwd);
-
-    pass_pos = 0;
-    if ((file_in = fopen(BOOKMARK_RC, "r"))) {
+    
+    if ((file_in = fopen(bookmark_file, "r"))) {
+	free(bookmark_file);
         // check bookmark-id
         fgets(line, 4095, file_in);
 
@@ -2303,6 +2340,7 @@
         chdir(tempcwd);
         return (TRUE);
     }
+    free(bookmark_file);
     delete[](line);
     delete[](out);
     chdir(tempcwd);
@@ -2313,11 +2351,24 @@
     FILE *file_probe;
     char tempcwd[SERVER_WORKINGDIR_SIZE];
     char *line;
+    char *home_directory;
+    char *bookmark_file;
+    int n;
+    
+    home_directory = getenv("HOME");
+    n = strlen(home_directory) + sizeof("/.pftp/bookmarks") + 1;
+    
+     if ((bookmark_file=(char*)malloc(n))==NULL) {
+        fprintf(stderr,"error allocating memory\n");
+        exit( -1);
+    }
+    sprintf(bookmark_file, "%s/.pftp/bookmarks", home_directory);
 
     getcwd(tempcwd, SERVER_WORKINGDIR_SIZE);
     chdir(startcwd);
 
-    if ((file_probe = fopen(BOOKMARK_RC, "r"))) {
+    if ((file_probe = fopen(bookmark_file, "r"))) {
+	free(bookmark_file);
         // check bookmark-id
         line = new(char[4096]);
         fgets(line, 4095, file_probe);
@@ -2358,6 +2409,7 @@
         delete[](line);
         return (1);
     } else {
+	free(bookmark_file);
         chdir(tempcwd);
         return (2);
     }
