commit 94f8d0ae95ed773cb9e31a71e4046d3b97e11d70
Author: Aman Gupta <aman@tmm1.net>
Date:   Sat Mar 30 19:52:19 2013 -0700

    remove last of TBR code (fixes #46)

diff --git a/ext/mri/bcrypt_ext.c b/ext/mri/bcrypt_ext.c
index cce35df..13f5e4e 100644
--- a/ext/mri/bcrypt_ext.c
+++ b/ext/mri/bcrypt_ext.c
@@ -4,31 +4,6 @@
 static VALUE mBCrypt;
 static VALUE cBCryptEngine;
 
-#ifdef RUBY_VM
-#  define RUBY_1_9
-#endif
-
-#ifdef RUBY_1_9
-
-/* When on Ruby 1.9+, we will want to unlock the GIL while performing
- * expensive calculations, for greater concurrency. Do not do this for
- * cheap calculations because locking/unlocking the GIL incurs some overhead as well.
- */
-#define GIL_UNLOCK_COST_THRESHOLD 9
-
-typedef struct {
-    char       *output;
-    const char *key;
-    const char *salt;
-} BCryptArguments;
-
-static VALUE bcrypt_wrapper(void *_args) {
-    BCryptArguments *args = (BCryptArguments *)_args;
-    return (VALUE)ruby_bcrypt(args->output, args->key, args->salt);
-}
-
-#endif /* RUBY_1_9 */
-
 /* Given a logarithmic cost parameter, generates a salt for use with +bc_crypt+.
 */
 static VALUE bc_salt(VALUE self, VALUE prefix, VALUE count, VALUE input) {
