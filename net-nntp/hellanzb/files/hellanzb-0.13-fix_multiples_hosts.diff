diff -r bdbcba80e0fa Hellanzb/NZBLeecher/Protocol.py
--- a/Hellanzb/NZBLeecher/Protocol.py	Wed Nov 14 10:00:29 2007 +0100
+++ b/Hellanzb/NZBLeecher/Protocol.py	Wed Nov 14 10:01:07 2007 +0100
@@ -27,18 +27,14 @@ PHI = 1.6180339887498948 # (1 + math.sqr
 PHI = 1.6180339887498948 # (1 + math.sqrt(5)) / 2
 class NZBLeecherFactory(ReconnectingClientFactory):
 
-    def __init__(self, username, password, activeTimeout, antiIdleTimeout, hostname,
+    def __init__(self, username, password, activeTimeout, antiIdleTimeout,
                  serverPoolName, skipGroupCmd, fillServerPriority = 0, color = None):
         self.username = username
         self.password = password
         self.antiIdleTimeout = antiIdleTimeout
         self.activeTimeout = activeTimeout
-        self.hostname = hostname
         self.serverPoolName = serverPoolName
         self.fillServerPriority = fillServerPriority
-
-        self.host = None
-        self.port = None
 
         # statistics for the current session (sessions end when downloading stops on all
         # clients). sessionReadBytes and sessionStartime are used to calculate the average
diff -r bdbcba80e0fa Hellanzb/NZBLeecher/__init__.py
--- a/Hellanzb/NZBLeecher/__init__.py	Wed Nov 14 10:00:29 2007 +0100
+++ b/Hellanzb/NZBLeecher/__init__.py	Wed Nov 14 10:01:07 2007 +0100
@@ -122,30 +122,28 @@ def connectServer(serverName, serverDict
     connectionCount = 0
     hosts = serverDict['hosts']
     connections = int(serverDict['connections'])
+    antiIdle = int(setWithDefault(serverDict, 'antiIdle', defaultAntiIdle))
+    idleTimeout = int(setWithDefault(serverDict, 'idleTimeout', defaultIdleTimeout))
+    skipGroupCmd = setWithDefault(serverDict, 'skipGroupCmd', False)
+    fillServer = setWithDefault(serverDict, 'fillserver', 0)
+    useSSL = setWithDefault(serverDict, 'ssl', False)
+
+    nsf = NZBLeecherFactory(serverDict['username'], serverDict['password'],
+                            idleTimeout, antiIdle, serverName, skipGroupCmd,
+                            fillServer)
+    color = nsf.color
+    Hellanzb.nsfs.append(nsf)
+
+    preWrappedNsf = nsf
+    nsf = HellaThrottlingFactory(nsf)
 
     for host in hosts:
-        antiIdle = int(setWithDefault(serverDict, 'antiIdle', defaultAntiIdle))
-        idleTimeout = int(setWithDefault(serverDict, 'idleTimeout', defaultIdleTimeout))
-        skipGroupCmd = setWithDefault(serverDict, 'skipGroupCmd', False)
-        fillServer = setWithDefault(serverDict, 'fillserver', 0)
-        useSSL = setWithDefault(serverDict, 'ssl', False)
-
-        nsf = NZBLeecherFactory(serverDict['username'], serverDict['password'],
-                                idleTimeout, antiIdle, host, serverName, skipGroupCmd,
-                                fillServer)
-        color = nsf.color
-        Hellanzb.nsfs.append(nsf)
-
         split = host.split(':')
         host = split[0]
         if len(split) == 2:
             port = int(split[1])
         else:
             port = 119
-        nsf.host, nsf.port = host, port
-
-        preWrappedNsf = nsf
-        nsf = HellaThrottlingFactory(nsf)
 
         ctxf = None
         if useSSL:
@@ -195,7 +193,8 @@ def connectServer(serverName, serverDict
             if antiIdle == 0:
                 preWrappedNsf.leecherConnectors.append(connector)
             connectionCount += 1
-        preWrappedNsf.setConnectionCount(connectionCount)
+
+    preWrappedNsf.setConnectionCount(connectionCount)
 
     if antiIdle == 0:
         action = ''
