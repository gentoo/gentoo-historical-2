diff -ur work.old/com/aelitis/azureus/core/clientmessageservice/secure/impl/SecureMessageServiceClientHelper.java work/com/aelitis/azureus/core/clientmessageservice/secure/impl/SecureMessageServiceClientHelper.java
--- work.old/com/aelitis/azureus/core/clientmessageservice/secure/impl/SecureMessageServiceClientHelper.java	2008-04-20 15:29:59.000000000 +0300
+++ work/com/aelitis/azureus/core/clientmessageservice/secure/impl/SecureMessageServiceClientHelper.java	2008-04-20 15:35:56.000000000 +0300
@@ -36,7 +36,7 @@
 import org.bouncycastle.crypto.encodings.PKCS1Encoding;
 import org.bouncycastle.crypto.engines.RSAEngine;
 import org.bouncycastle.crypto.params.ParametersWithRandom;
-import org.bouncycastle.jce.provider.RSAUtil;
+//import org.bouncycastle.jce.provider.RSAUtil;
 import org.gudy.azureus2.core3.util.Debug;
 import org.gudy.azureus2.plugins.utils.StaticUtilities;
 
@@ -82,13 +82,15 @@
 				
 			byte[] secret_bytes = session_key.getEncoded();
 			
-			try{
+			//try{
 				Cipher	rsa_cipher = Cipher.getInstance( "RSA" );
 		    
 				rsa_cipher.init( Cipher.ENCRYPT_MODE, public_key );
 		    
 				encryped_session_key = rsa_cipher.doFinal( secret_bytes );
-				
+			
+			/* Gentoo: Depend on JDK >=1.5 so we don't need this code. This does not work
+			 * with our packaged bcprov
 			}catch( Throwable e ){
 				
 					// fallback to the BC implementation for jdk1.4.2 as JCE RSA not available
@@ -105,6 +107,7 @@
 				
 				encryped_session_key = padded_eng.processBlock(secret_bytes, 0, secret_bytes.length);
 			}
+			*/
 
 		}catch( Throwable e ){
 			
Only in work.old/org: bouncycastle
Only in work.old/org/gudy/azureus2/platform: macosx
Only in work.old/org/gudy/azureus2/ui/swt: osx
Only in work.old/org/gudy/azureus2/ui/swt: test
Only in work.old/org/gudy/azureus2/ui/swt/win32: Win32UIEnhancer.java
