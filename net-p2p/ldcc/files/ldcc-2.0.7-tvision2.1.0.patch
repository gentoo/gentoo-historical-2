--- ldcc-2.0.7/src/d_error.cc
+++ ldcc-2.0.7/src/d_error.cc
@@ -577,7 +577,7 @@
   insert(new TLabel(TRect(29, 2, 39, 3), "~F~iletype:", V));
 
   IL[4] = new TInputLine(TRect(50, 3, 72, 4), 21);
-  IL[4]->SetValidator(new TNumberValidator());
+  IL[4]->setValidator(new TNumberValidator());
   insert(IL[4]);
   insert(new TLabel(TRect(51, 2, 61, 3), "File si~z~e:", IL[4]));
 
--- ldcc-2.0.7/src/options.cc
+++ ldcc-2.0.7/src/options.cc
@@ -37,6 +37,7 @@
 #define Uses_TDeskTop
 #define Uses_TView
 #define Uses_TValidator
+#define Uses_TRangeValidator
 #include <tv.h>
 
 #include "liczby.h"
@@ -140,7 +141,7 @@
  D->insert(new TLabel(TRect(2,3,19,4), "~U~ser info:", IL));
  
  IL = new TInputLine(TRect(20,4,24,5), 2);
- IL->SetValidator(new TNumberValidator());
+ IL->setValidator(new TNumberValidator());
  D->insert(IL);
  D->insert(new TLabel(TRect(2,4,19,5), "~F~ree slots:", IL));
 
@@ -154,12 +155,12 @@
  
  IL = new TInputLine(TRect(20,8,27,9), 6);
  VL = new TRangeValidator(1L,65535L);
- IL->SetValidator(VL);
+ IL->setValidator(VL);
  D->insert(IL);
  D->insert(new TLabel(TRect(2,8,19,9), "Ho~s~t Port:", IL));
 
  IL = new TInputLine(TRect(20,9,31,10), 10);
- IL->SetValidator(new TEmptyValidator());
+ IL->setValidator(new TEmptyValidator());
  H = new THistory(TRect(32,9,35,10), IL, 1);
  D->insert(H);
  historyAdd(1, "56Kbps");
@@ -175,13 +176,13 @@
  D->insert(new TLabel(TRect(2,9,20,10), "Connection ~t~ype:", IL));
 
  IL = new TInputLine(TRect(20,10,41,11), 20);
- IL->SetValidator(new TNumberValidator());
+ IL->setValidator(new TNumberValidator());
  D->insert(IL);
  D->insert(new TLabel(TRect(2,10,19,11), "Offs~e~t:", IL));
  D->insert(new TStaticText(TRect(42,10,50,11), "bytes"));
 
  IL = new TInputLine(TRect(20,11,24,12), 3);
- IL->SetValidator(new TNumberValidator());
+ IL->setValidator(new TNumberValidator());
  D->insert(IL);
  D->insert(new TLabel(TRect(2,11,20,12), "Connction ti~m~eout:", IL));
  D->insert(new TStaticText(TRect(25,11,30,12), "sec."));
@@ -198,13 +199,13 @@
  D->insert(new TCheckBoxes(TRect(31,16,57,17), new TSItem("Log errors/debug",NULL)));
 
  IL = new TInputLine(TRect(28,19,34,20), 5);
- IL->SetValidator(new TNumberValidator());
+ IL->setValidator(new TNumberValidator());
  D->insert(IL);
  D->insert(new TLabel(TRect(2,19,27,20), "U~p~load bandwidth limit:", IL));
  D->insert(new TStaticText(TRect(35,19,45,20), "x 0,5 kB/s"));
 
  IL = new TInputLine(TRect(28,20,34,21), 5);
- IL->SetValidator(new TNumberValidator());
+ IL->setValidator(new TNumberValidator());
  D->insert(IL);
  D->insert(new TLabel(TRect(2,20,27,21), "Do~w~nload bandwidth limit:", IL));
  D->insert(new TStaticText(TRect(35,20,45,21), "x 1 kB/s"));
@@ -333,20 +334,20 @@
 
  for (c=0; c<10; c++) {
    IL = new TInputLine(TRect(2,4+c,7,5+c), 4);
-   IL->SetValidator(new TRangeValidator(0L, 255L));
+   IL->setValidator(new TRangeValidator(0L, 255L));
    D->insert(IL);
    D->insert(new TStaticText(TRect(8,4+c,10,5+c), "->"));
    IL = new TInputLine(TRect(11,4+c,16,5+c), 4);
-   IL->SetValidator(new TRangeValidator(0L, 255L));
+   IL->setValidator(new TRangeValidator(0L, 255L));
    D->insert(IL);
  }
  for (c=0; c<10; c++) {
    IL = new TInputLine(TRect(22,4+c,27,5+c), 4);
-   IL->SetValidator(new TRangeValidator(0L, 255L));
+   IL->setValidator(new TRangeValidator(0L, 255L));
    D->insert(IL);
    D->insert(new TStaticText(TRect(28,4+c,30,5+c), "->"));
    IL = new TInputLine(TRect(31,4+c,36,5+c), 4);
-   IL->SetValidator(new TRangeValidator(0L, 255L));
+   IL->setValidator(new TRangeValidator(0L, 255L));
    D->insert(IL);
  }
 
