--- kmatplot/dialogs/ksattrpanel.cpp.orig	2002-02-07 11:34:06.000000000 +0100
+++ kmatplot/dialogs/ksattrpanel.cpp	2002-10-29 01:11:12.000000000 +0100
@@ -18,6 +18,7 @@
 #include "ksattrpanel.h"
 #include "../widgets/qsdrvqt.h"
 
+#include <iostream.h>
 #include <qcolordialog.h>
 #include <qfontdialog.h>
 #include <qlayout.h>
--- kmatplot/dialogs/kschannellist.cpp.orig	2002-01-25 00:38:20.000000000 +0100
+++ kmatplot/dialogs/kschannellist.cpp	2002-10-29 01:12:51.000000000 +0100
@@ -22,7 +22,7 @@
 
 //-------------------------------------------------------------//
 
-KSChannelList::KSChannelList( QWidget *parent, const char *name = 0 )
+KSChannelList::KSChannelList( QWidget *parent, const char *name )
 : QListView( parent, name )
   {
    m_show_all_channels = true;
--- kmatplot/dialogs/kspanel.cpp.orig	2002-02-15 21:15:33.000000000 +0100
+++ kmatplot/dialogs/kspanel.cpp	2002-10-29 01:07:47.000000000 +0100
@@ -40,7 +40,7 @@
 
 //-----------------------------------------------------//
 
-KSPanelButton::KSPanelButton( QWidget *parent, KSWorkbook *workbook, ButtonCategory category, const QPixmap& icon, const QString& toolTip, QSData *dataObject = NULL )
+KSPanelButton::KSPanelButton( QWidget *parent, KSWorkbook *workbook, ButtonCategory category, const QPixmap& icon, const QString& toolTip, QSData *dataObject )
 :QPushButton( parent )
  {
   m_category = category;
--- kmatplot/ksglobalmatrixlist.h.orig	2002-01-24 00:20:31.000000000 +0100
+++ kmatplot/ksglobalmatrixlist.h	2002-10-29 01:14:24.000000000 +0100
@@ -40,7 +40,7 @@
 class KSSheet : public QSData
   {
    Q_OBJECT
-	friend KSMatrixWorksheetCellRange;
+	friend class KSMatrixWorksheetCellRange;
   public:
    /**
      * Column Type
@@ -162,7 +162,7 @@
 class KSSheetList : public QSData
  {
   Q_OBJECT
-  friend KSSheet;
+  friend class KSSheet;
   public:
       /**
         * Constructor
--- kmatplot/ksmatrixascii.cpp.orig	2002-01-24 03:32:58.000000000 +0100
+++ kmatplot/ksmatrixascii.cpp	2002-10-29 03:07:01.000000000 +0100
@@ -64,12 +64,12 @@
 
 KSMatrix* KSMatrixASCII::load( QDataStream& is, const QString& matrixname )
  {
-  auto_ptr<KSMatrix> m;
+  std::auto_ptr<KSMatrix> m;
 
   int untitled_nr = 0;
   while ( !is.atEnd() ) {
         int dataPos;
-        auto_ptr<KSMatrix> h(read_header(is,&dataPos));
+        std::auto_ptr<KSMatrix> h(read_header(is,&dataPos));
 	QCString name = h->name();
         if ( name.isEmpty() ) h->setName( name.sprintf("untitled_%d",untitled_nr++) );
         if ( QString(name) == matrixname ) { is.device()->at(dataPos); m = h; break; }
--- kmatplot/ksmatrixiohandler.h.orig	2001-12-28 22:32:26.000000000 +0100
+++ kmatplot/ksmatrixiohandler.h	2002-10-29 01:24:45.000000000 +0100
@@ -26,7 +26,7 @@
 #include<qstring.h>
 #include<qdatastream.h>
 #include<qobject.h>
-#include<list>
+#include<list.h>
 
 /**
   * List of matrix headers.
--- kmatplot/ksmatrixmat.cpp.orig	2002-01-24 03:18:44.000000000 +0100
+++ kmatplot/ksmatrixmat.cpp	2002-10-29 03:05:05.000000000 +0100
@@ -15,7 +15,6 @@
  *                                                                         *
  ***************************************************************************/
 
-
 #include"ksmatrixmat.h"
 #include<memory>
 
@@ -69,14 +68,14 @@
 
 KSMatrix *KSMatrixMAT::load( QDataStream& is, const QString& matrixname )
  {
-  auto_ptr<KSMatrix> m;
+  std::auto_ptr<KSMatrix> m;
   bool swap;
   int  esize;
   int  dsize;
 
   while ( !is.atEnd() ) {
         // read header
-        auto_ptr<KSMatrix> h(read_header( is, &swap, &esize, &dsize ));
+        std::auto_ptr<KSMatrix> h(read_header( is, &swap, &esize, &dsize ));
         // Check whether we found matrix, we have been looking for.
         if ( h->name() == matrixname ) { m = h; break; }
         // skip bytes to the next header
@@ -180,7 +179,7 @@
      		 default:        return NULL;
 		}
 
-  auto_ptr<KSMatrix> result( KSMatrix::create(etype) );
+  std::auto_ptr<KSMatrix> result( KSMatrix::create(etype) );
   QCString name( header.namlen );
   is.readRawBytes( name.data(), header.namlen );
   result->setName( name );
--- kmatplot/ksworkspace.cpp.orig	2002-02-20 20:54:23.000000000 +0100
+++ kmatplot/ksworkspace.cpp	2002-10-29 03:10:44.000000000 +0100
@@ -158,7 +158,7 @@
 
 
 
-KSWorkspaceWindow::KSWorkspaceWindow( KSWorkspace *workspace, const QString& caption, const QPixmap& icon, WFlags f=0 )
+KSWorkspaceWindow::KSWorkspaceWindow( KSWorkspace *workspace, const QString& caption, const QPixmap& icon, WFlags f )
 :QWidget( workspace->workspace(), "workspace_window", f | WDestructiveClose )
  {
   m_contents = NULL;
--- kmatplot/ksworkspace.h.orig	2002-02-20 20:23:51.000000000 +0100
+++ kmatplot/ksworkspace.h	2002-10-29 03:09:07.000000000 +0100
@@ -36,7 +36,7 @@
   *@author kamil
   */
 class KSWorkspace : public QWidget  {
-	friend KSWorkspaceWindow;
+	friend struct KSWorkspaceWindow;
 	Q_OBJECT
  public:
 	/**
@@ -88,7 +88,7 @@
   * MDI child window of KSWorkspace..
   */
 class KSWorkspaceWindow : public QWidget {
-	friend KSWorkspace;
+	friend class KSWorkspace;
   public:
 	/**
 	  * Constructor.
--- kmatplot/widgets/qsaxes.h.orig	2002-03-11 21:26:27.000000000 +0100
+++ kmatplot/widgets/qsaxes.h	2002-10-29 00:51:36.000000000 +0100
@@ -49,7 +49,7 @@
   * first and use QSAxes::shadowObject() to get a pointer to this object.
   */
 class QSCAxesShadow : public QSCGroup {
-	friend QSAxes;
+	friend struct QSAxes;
 	Q_OBJECT
   public:
 	/**
@@ -110,7 +110,7 @@
 class QSAxes : public QSGraphicalData
    {
     Q_OBJECT
-    friend QSPlot;
+    friend struct QSPlot;
 	Q_PROPERTY( double xPosMM READ xPosMM WRITE setXPosMM )
 	Q_PROPERTY( double yPosMM READ yPosMM WRITE setYPosMM )
 	Q_PROPERTY( double widthMM READ widthMM WRITE setWidthMM )
--- kmatplot/widgets/qsaxis.h.orig	2002-03-13 22:00:27.000000000 +0100
+++ kmatplot/widgets/qsaxis.h	2002-10-29 00:51:54.000000000 +0100
@@ -84,7 +84,7 @@
 class QSAxis : public QSAxesChild
  {
   Q_OBJECT
-  friend QSAxes;
+  friend class QSAxes;
 	Q_PROPERTY( bool visible READ visible WRITE setVisible )
 	Q_PROPERTY( bool oppositePosition READ oppositePosition WRITE setOppositePosition )
 	Q_PROPERTY( bool defaultPosition READ defaultPosition WRITE setDefaultPosition )
--- kmatplot/widgets/qscobject.h.orig	2002-03-11 18:20:42.000000000 +0100
+++ kmatplot/widgets/qscobject.h	2002-10-29 00:50:55.000000000 +0100
@@ -249,8 +249,8 @@
   * @author Kamil Dobkowski
   */
 class QSCObject : public QObject, public QSSerializable {
-	friend QSCObjectCollection;
-	friend QSCGroup;
+	friend class QSCObjectCollection;
+	friend struct QSCGroup;
 	Q_OBJECT
 	Q_PROPERTY( int defaultXAxis READ defaultXAxis WRITE setDefaultXAxis )
 	Q_PROPERTY( int defaultYAxis READ defaultYAxis WRITE setDefaultYAxis )
--- kmatplot/widgets/qsplot.h.orig	2002-03-12 00:32:28.000000000 +0100
+++ kmatplot/widgets/qsplot.h	2002-10-29 00:52:08.000000000 +0100
@@ -46,7 +46,7 @@
 class QSPlot : public QSAxesChild
    {
     Q_OBJECT
-    friend QSAxes;
+    friend class QSAxes;
 	Q_PROPERTY( int defaultXAxis READ defaultXAxis WRITE setDefaultXAxis )
 	Q_PROPERTY( int defaultYAxis READ defaultYAxis WRITE setDefaultYAxis )
 	Q_PROPERTY( int defaultZAxis READ defaultZAxis WRITE setDefaultZAxis )
--- kmatplot/widgets/qsplotview.h.orig	2002-03-11 21:30:45.000000000 +0100
+++ kmatplot/widgets/qsplotview.h	2002-10-29 01:02:46.000000000 +0100
@@ -54,7 +54,7 @@
   */
 class QSSelection : public QSCObjectCollection
  {
-	friend QSPlotView;
+	friend struct QSPlotView;
 	Q_OBJECT
   public:
 	/**
--- kmatplot/widgets/qsprojection.cpp.orig	2002-02-22 02:17:16.000000000 +0100
+++ kmatplot/widgets/qsprojection.cpp	2002-10-29 00:58:41.000000000 +0100
@@ -606,7 +606,7 @@
 
 //-------------------------------------------------------------//
 
-QSProjection::ClipResult QSProjection::clipPoly2( const QSPt2f in[], int inpoints, QSPt2f out[], int *outpoints, int maxpoints, bool outedges[] = NULL, const bool inedges[] = NULL ) const
+QSProjection::ClipResult QSProjection::clipPoly2( const QSPt2f in[], int inpoints, QSPt2f out[], int *outpoints, int maxpoints, bool outedges[], const bool inedges[] ) const
  {
   static const double cmin_x = 0.0;
   static const double cmax_x = 1.0;
@@ -826,7 +826,7 @@
 
 //-------------------------------------------------------------//
 
-QSProjection::ClipResult QSProjection::clipPoly3( const QSPt3f in[], int inpoints, QSPt3f out[], int *outpoints, int maxpoints, const QSPt3f c[2], bool outedges[] = NULL, const bool inedges[] = NULL ) const
+QSProjection::ClipResult QSProjection::clipPoly3( const QSPt3f in[], int inpoints, QSPt3f out[], int *outpoints, int maxpoints, const QSPt3f c[2], bool outedges[], const bool inedges[] ) const
  {
   static const double cmin_x = 0.0;
   static const double cmax_x = 1.0;
@@ -1022,4 +1022,4 @@
  {
   return (1.0-p.z);
  }
-*/
\ No newline at end of file
+*/
--- kmatplot/widgets/qssurface.cpp.orig	2002-03-11 23:46:23.000000000 +0100
+++ kmatplot/widgets/qssurface.cpp	2002-10-29 01:01:34.000000000 +0100
@@ -693,7 +693,7 @@
 
 //-------------------------------------------------------------//
 
-void QSSurface::draw_polygon( const QSPt3f pts[4], QSPt3f *norms, const double *values=NULL, const bool *edges=NULL )
+void QSSurface::draw_polygon( const QSPt3f pts[4], QSPt3f *norms, const double *values, const bool *edges )
  {
   for( int i=0; i<4; i++ ) d->canvas_pts[i] = m_proj->world3DToCanvas3( pts[i] );
   if ( !QSProjection::isCorrect(pts) ||
@@ -831,4 +831,4 @@
 				d->mesh_edges[1] = ((d->quarter.ci-1)%m_x_grid_step) == 0;
 				d->mesh_edges[2] = ((d->quarter.cj)%m_y_grid_step) == 0;
 				}
-	*/
\ No newline at end of file
+	*/
