Index: c_icap-0.2.4/aserver.c
===================================================================
--- c_icap-0.2.4.orig/aserver.c
+++ c_icap-0.2.4/aserver.c
@@ -41,6 +41,7 @@ extern int MAX_SECS_TO_LINGER;
 char MY_HOSTNAME[CI_MAXHOSTNAMELEN + 1];
 
 void init_conf_tables();
+int init_body_system();
 int config(int, char **);
 int init_server(char *address, int port, int *family);
 int start_server();
Index: c_icap-0.2.4/include/mem.h
===================================================================
--- c_icap-0.2.4.orig/include/mem.h
+++ c_icap-0.2.4/include/mem.h
@@ -66,6 +66,7 @@ CI_DECLARE_FUNC(void) ci_buffers_destroy
 CI_DECLARE_FUNC(void *)  ci_buffer_alloc(int block_size);
 CI_DECLARE_FUNC(void *)  ci_buffer_realloc(void *data, int block_size);
 CI_DECLARE_FUNC(void)    ci_buffer_free(void *data);
+CI_DECLARE_FUNC(size_t)  ci_buffer_blocksize(void *data);
 
 CI_DECLARE_FUNC(int)     ci_object_pool_register(const char *name, int size);
 CI_DECLARE_FUNC(void)    ci_object_pool_unregister(int id);
Index: c_icap-0.2.4/tests/test_cache.c
===================================================================
--- c_icap-0.2.4.orig/tests/test_cache.c
+++ c_icap-0.2.4/tests/test_cache.c
@@ -27,6 +27,7 @@ void *copy_from_str(void *val, int val_s
     return (void *)ci_str_ops.dup((char *)val, allocator);
 }
 
+int mem_init();
 int main(int argc,char *argv[]) {
     int i;
     struct ci_cache *cache;
Index: c_icap-0.2.4/util.c
===================================================================
--- c_icap-0.2.4.orig/util.c
+++ c_icap-0.2.4/util.c
@@ -20,7 +20,7 @@
 #include "common.h"
 #include "c-icap.h"
 #include "util.h"
-
+#include <ctype.h>
 
 #ifndef HAVE_STRNSTR
 const char *strnstr(const char *s, const char *find, size_t slen)
