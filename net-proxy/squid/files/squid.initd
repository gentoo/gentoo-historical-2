#!/sbin/runscript
# Copyright 1999-2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/net-proxy/squid/files/squid.initd,v 1.7 2007/03/10 09:39:42 mrness Exp $

opts="${opts} reload rotate"

depend() {
	need net
}

# Try to increase the # of filedescriptors we can open.
maxfds() {
	[ -n "$SQUID_MAXFD" ] || return
	[ -f /proc/sys/fs/file-max ] || return 0
	[ $SQUID_MAXFD -le 8192 ] || SQUID_MAXFD=8192
	local global_file_max=`cat /proc/sys/fs/file-max`
	local minimal_file_max=$(($SQUID_MAXFD + 4096))
	if [ "$global_file_max" -lt $minimal_file_max ]; then
		echo $minimal_file_max > /proc/sys/fs/file-max
	fi
	ulimit -n $SQUID_MAXFD
}

checkconfig() {
	maxfds
	local CACHE_SWAP=$(awk '/^[ \t]*cache_dir[ \t]+/ { printf "%s ", $3 ; }' < /etc/squid/squid.conf)
	[ -z "$CACHE_SWAP" ] && CACHE_SWAP=/var/cache/squid
	umask 027
	for x in $CACHE_SWAP ; do
		if [ ! -d $x/00 ] ; then
			ebegin "Initializing cache directories"
			local INIT_CACHE_RESPONSE="$(/usr/sbin/squid -z -N -D 2>&1)"
			if [ $? != 0 ] || echo "$INIT_CACHE_RESPONSE" | grep -q "erminated abnormally" ; then
				eend 1
				echo "$INIT_CACHE_RESPONSE"
				return 1
			fi
			eend 0
			break
		fi
	done
	return 0
}

start() {
	checkconfig || return 1
	ebegin "Starting squid"
	/usr/sbin/squid ${SQUID_OPTS}
	eend $? && sleep 1
}

stop() {
	ebegin "Stopping squid"
	/usr/sbin/squid -k shutdown
	# Now we have to wait until squid has _really_ stopped.
	sleep 1
	if [ -f /var/run/squid.pid ] ; then
		einfon "Waiting for squid to shutdown ."
		cnt=0
		while [ -f /var/run/squid.pid ] ; do
			cnt=$(expr $cnt + 1)
			if [ $cnt -gt 60 ] ; then
				# Waited 120 seconds now. Fail.
				echo
				eend 1 "Failed."
				break
			fi
			sleep 2
			echo -n "."
		done
		echo
	fi
	eend 0
}

reload() {
	checkconfig || return 1
	ebegin "Reloading squid"
	/usr/sbin/squid -k reconfigure
	eend $?
}

rotate() {
	service_started squid || return 1
	ebegin "Rotating logs"
	/usr/sbin/squid -k rotate
	eend $?
}
