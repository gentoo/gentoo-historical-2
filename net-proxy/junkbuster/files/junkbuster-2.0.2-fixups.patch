--- ijb20/filters.c
+++ ijb20/filters.c
@@ -652,7 +652,7 @@
 ij_untrusted_url(struct http_request *http, struct client_state *csp)
 {
 	int n;
-	char *hostport, *path, *p, *v[9];
+	char *hostport, *path, *referrer, *p, *v[9];
 	char buf[BUFSIZ];
 	struct url_spec **tl, *t;
 
@@ -700,9 +700,9 @@
 	freez(hostport);
 	freez(path    );
 
-	strsav(p, "The referrer in this request was <strong>");
-	strsav(p, referrer);
-	strsav(p, "</strong><br>\n");
+	p = strsav(p, "The referrer in this request was <strong>");
+	p = strsav(p, referrer);
+	p = strsav(p, "</strong><br>\n");
 
 	p = strsav(p, "<h3>The following referrers are trusted</h3>\n");
 
@@ -773,7 +773,7 @@
 
 			sprintf(out_str,
 				"%d requests received, %d filtered "
-				"(%6.2f \%).\0",
+				"(%6.2f %%).",
 				urls_read, urls_rejected+1, perc_rej);
 
 			s = strsav(s,out_str);
--- ijb20/socks4.c
+++ ijb20/socks4.c
@@ -9,6 +9,7 @@
 #include <stdio.h>
 #include <sys/types.h>
 #include <errno.h>
+#include <string.h>
 
 #ifdef _WIN32
 #include <io.h>
@@ -56,7 +57,7 @@
 	unsigned char sbuf[BUFSIZ];
 	struct socks_op    *c = (struct socks_op    *)cbuf;
 	struct socks_reply *s = (struct socks_reply *)sbuf;
-	int web_server_addr;
+	int web_server_addr = 0;
 	int n, csiz, sfd, target_port;
 	int err = 0;
 	char *errstr, *target_host;
--- ijb20/ssplit.c
+++ ijb20/ssplit.c
@@ -19,6 +19,9 @@
  */
 
 #include <string.h>
+#include <stdlib.h>
+
+extern void *zalloc(int);
 
 int ssplit(char *s, char *c, char *v[], int n, int m, int l)
 {
--- ijb20/Makefile
+++ ijb20/Makefile
@@ -8,8 +8,8 @@
 PROG   = junkbuster
 O      = o
 RM     = rm -f
-CC     = gcc
-MORE_CFLAGS = -O3 -D_DISTNAME="$(DISTNAME)" -D_DISTURL="$(DISTURL)"
+CC     ?= gcc
+MORE_CFLAGS = -D_DISTNAME="$(DISTNAME)" -D_DISTURL="$(DISTURL)"
 
 # use this for Solaris 2.x
 #LDFLAGS = -lnsl -lsocket 
@@ -67,7 +67,7 @@
 #MORE_CFLAGS = -relax_pointers
 #LDFLAGS = -map junkbuster.xMAP
 
-CFLAGS  = $(DEFAULT_CFLAGS) $(MORE_CFLAGS)
+CFLAGS  += $(DEFAULT_CFLAGS) $(MORE_CFLAGS)
 
 OBJS =	jcc.$(O) parsers.$(O) filters.$(O) loaders.$(O) bind.$(O) conn.$(O) \
 	encode.$(O) ssplit.$(O) socks4.$(O) acl.$(O) gnu_regex.$(O) win32.$(O)
