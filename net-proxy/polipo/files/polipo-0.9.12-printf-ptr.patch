diff -Nru polipo-0.9.12.orig/atom.c polipo-0.9.12/atom.c
--- polipo-0.9.12.orig/atom.c	2007-02-06 23:17:39.000000000 +0200
+++ polipo-0.9.12/atom.c	2007-04-11 15:42:05.000000000 +0300
@@ -72,7 +72,7 @@
         atomHashTable[h] = atom;
         used_atoms++;
     }
-    do_log(D_ATOM_REFCOUNT, "A 0x%x %d++\n", (unsigned)atom, atom->refcount);
+    do_log(D_ATOM_REFCOUNT, "A %p %d++\n", atom, atom->refcount);
     atom->refcount++;
     return atom;
 }
@@ -132,7 +132,7 @@
     if(atom == NULL)
         return NULL;
 
-    do_log(D_ATOM_REFCOUNT, "A 0x%x %d++\n", (unsigned)atom, atom->refcount);
+    do_log(D_ATOM_REFCOUNT, "A %p %d++\n", atom, atom->refcount);
     assert(atom->refcount >= 1 && atom->refcount < 50000);
     atom->refcount++;
     return atom;
@@ -144,7 +144,7 @@
     if(atom == NULL)
         return;
 
-    do_log(D_ATOM_REFCOUNT, "A 0x%x %d--\n", (unsigned)atom, atom->refcount);
+    do_log(D_ATOM_REFCOUNT, "A %p %d--\n", atom, atom->refcount);
     assert(atom->refcount >= 1 && atom->refcount < 50000);
 
     atom->refcount--;
diff -Nru polipo-0.9.12.orig/client.c polipo-0.9.12/client.c
--- polipo-0.9.12.orig/client.c	2007-02-06 23:17:39.000000000 +0200
+++ polipo-0.9.12/client.c	2007-04-11 15:46:42.000000000 +0300
@@ -105,8 +105,8 @@
     connection->fd = fd;
     connection->timeout = timeout;
 
-    do_log(D_CLIENT_CONN, "Accepted client connection 0x%x\n",
-           (unsigned)connection);
+    do_log(D_CLIENT_CONN, "Accepted client connection %p\n",
+           connection);
 
     connection->flags = CONN_READER;
 
@@ -236,8 +236,8 @@
         return;
     }
     
-    do_log(D_CLIENT_CONN, "Closing client connection 0x%x\n",
-           (unsigned)connection);
+    do_log(D_CLIENT_CONN, "Closing client connection %p\n",
+           connection);
 
     if(connection->flags & CONN_READER) {
         httpSetTimeout(connection, 10);
@@ -1714,8 +1714,8 @@
 
     connection->offset = request->from;
     httpSetTimeout(connection, 120);
-    do_log(D_CLIENT_DATA, "Serving on 0x%x for 0x%x: offset %d len %d\n",
-           (unsigned)connection, (unsigned)object,
+    do_log(D_CLIENT_DATA, "Serving on %p for %p: offset %d len %d\n",
+           connection, object,
            connection->offset, len);
     do_stream_h(IO_WRITE |
                 (connection->te == TE_CHUNKED && len > 0 ? IO_CHUNKED : 0),
@@ -1894,8 +1894,8 @@
         if(len2 == 0) {
             httpSetTimeout(connection, 120);
             do_log(D_CLIENT_DATA, 
-                   "Serving on 0x%x for 0x%x: offset %d len %d\n",
-                   (unsigned)connection, (unsigned)object,
+                   "Serving on %p for %p: offset %d len %d\n",
+                   connection, object,
                    connection->offset, len);
             /* IO_NOTNOW in order to give other clients a chance to run. */
             do_stream(IO_WRITE | IO_NOTNOW |
@@ -1907,8 +1907,8 @@
         } else {
             httpSetTimeout(connection, 120);
             do_log(D_CLIENT_DATA, 
-                   "Serving on 0x%x for 0x%x: offset %d len %d + %d\n",
-                   (unsigned)connection, (unsigned)object,
+                   "Serving on %p for %p: offset %d len %d + %d\n",
+                   connection, object,
                    connection->offset, len, len2);
             do_stream_2(IO_WRITE | IO_NOTNOW |
                         (connection->te == TE_CHUNKED ? IO_CHUNKED : 0) |
diff -Nru polipo-0.9.12.orig/http.c polipo-0.9.12/http.c
--- polipo-0.9.12.orig/http.c	2007-02-06 23:17:39.000000000 +0200
+++ polipo-0.9.12/http.c	2007-04-11 15:44:58.000000000 +0300
@@ -199,8 +199,8 @@
         new = scheduleTimeEvent(secs, httpTimeoutHandler,
                                 sizeof(connection), &connection);
         if(!new) {
-            do_log(L_ERROR, "Couldn't schedule timeout for connection 0x%x\n",
-                   (unsigned)connection);
+            do_log(L_ERROR, "Couldn't schedule timeout for connection %p\n",
+                   connection);
             return -1;
         }
     } else {
diff -Nru polipo-0.9.12.orig/object.c polipo-0.9.12/object.c
--- polipo-0.9.12.orig/object.c	2007-02-06 23:17:39.000000000 +0200
+++ polipo-0.9.12/object.c	2007-04-11 15:44:18.000000000 +0300
@@ -268,7 +268,7 @@
 ObjectPtr
 retainObject(ObjectPtr object)
 {
-    do_log(D_REFCOUNT, "O 0x%x %d++\n", (unsigned)object, object->refcount);
+    do_log(D_REFCOUNT, "O %p %d++\n", object, object->refcount);
     object->refcount++;
     return object;
 }
@@ -276,7 +276,7 @@
 void
 releaseObject(ObjectPtr object)
 {
-    do_log(D_REFCOUNT, "O 0x%x %d--\n", (unsigned)object, object->refcount);
+    do_log(D_REFCOUNT, "O %p %d--\n", object, object->refcount);
     object->refcount--;
     if(object->refcount == 0) {
         assert(!object->handlers && !(object->flags & OBJECT_INPROGRESS));
@@ -288,7 +288,7 @@
 void
 releaseNotifyObject(ObjectPtr object)
 {
-    do_log(D_REFCOUNT, "O 0x%x %d--\n", (unsigned)object, object->refcount);
+    do_log(D_REFCOUNT, "O %p %d--\n", object, object->refcount);
     object->refcount--;
     if(object->refcount > 0) {
         notifyObject(object);
@@ -302,7 +302,7 @@
 void 
 lockChunk(ObjectPtr object, int i)
 {
-    do_log(D_LOCK, "Lock 0x%x[%d]: ", (unsigned)object, i);
+    do_log(D_LOCK, "Lock %p[%d]: ", object, i);
     assert(i >= 0);
     if(i >= object->numchunks)
         objectSetChunks(object, i + 1);
@@ -313,7 +313,7 @@
 void 
 unlockChunk(ObjectPtr object, int i)
 {
-    do_log(D_LOCK, "Unlock 0x%x[%d]: ", (unsigned)object, i);
+    do_log(D_LOCK, "Unlock %p[%d]: ", object, i);
     assert(i >= 0 && i < object->numchunks);
     assert(object->chunks[i].locked > 0);
     object->chunks[i].locked--;
@@ -467,8 +467,8 @@
 {
     int rc;
 
-    do_log(D_OBJECT_DATA, "Adding data to 0x%x (%d) at %d: %d bytes\n",
-           (unsigned)object, object->length, offset, len);
+    do_log(D_OBJECT_DATA, "Adding data to %p (%d) at %d: %d bytes\n",
+           object, object->length, offset, len);
 
     if(len == 0)
         return 1;
