diff -Nru squidGuard-1.3.orig/configure.in squidGuard-1.3/configure.in
--- squidGuard-1.3.orig/configure.in	2007-05-10 18:39:44.000000000 +0300
+++ squidGuard-1.3/configure.in	2008-02-17 09:52:03.000000000 +0200
@@ -85,7 +85,7 @@
 AC_HEADER_STDC
 AC_CHECK_HEADERS(db.h regex.h unistd.h)
 
-+AC_CHECK_HEADER(db.h,,[
+AC_CHECK_HEADER(db.h,,[
 	echo
 	echo "** No db.h found"
 	echo "   The Berkley DB library is required for squidGuard"
@@ -110,13 +110,24 @@
 dnl
 
 dnl Check ldap
-AC_CHECK_LIB(ldap,ldap_init,,[
-               echo
-               echo "LDAP library not found"
-               echo
-               exit 1
-       ])
-AC_RUN_IFELSE([
+AC_ARG_WITH(ldap,
+  AC_HELP_STRING([--with-ldap], [use ldap (default=yes)]))
+if test "$with_ldap" = "no" -o "$with_ldap" = "false"
+then
+  with_ldap=no
+else
+  AC_CHECK_LIB( ldap, ldap_init,
+	[
+	with_ldap=yes
+	LIBS="$LIBS -lldap"
+	],[
+	AC_MSG_WARN([Cannot find LDAP libraries. LDAP support disabled])
+	with_ldap=no
+	])
+fi
+if test "$with_ldap" = "yes"; then
+	AC_DEFINE(HAVE_LIBLDAP)
+	AC_RUN_IFELSE([
        #include <ldap.h>
        int main()
        {
@@ -130,6 +141,7 @@
                echo
                exit 1
        ],)
+fi
 
 dnl Check threads... ok if it fails
 AC_CHECK_LIB(pthread,pthread_create,,[
@@ -141,15 +153,7 @@
        ])
 
 dnl Check DB
-AC_CHECK_LIB(db,db_version,,[
-       echo
-       echo "** The Berkley DB library is required for squidGuard"
-       echo "   to compile. Get it from http://www.sleepycat.com"
-       echo "   use --with-db=DIR or --with-db-lib=DIR to specify"
-       echo "   its location. (default is $dbprefix/BerkeleyDB)"
-       echo
-       exit 1
-       ])
+LIBS="$LIBS -ldb"
 AC_RUN_IFELSE([
 	#include <db.h>
 	int main() 
diff -Nru squidGuard-1.3.orig/Makefile.in squidGuard-1.3/Makefile.in
--- squidGuard-1.3.orig/Makefile.in	2007-07-01 18:37:14.000000000 +0300
+++ squidGuard-1.3/Makefile.in	2008-02-17 09:52:03.000000000 +0200
@@ -43,7 +43,7 @@
 # Dependencies for installing
 #	
 
-install:	install-build install-conf
+install:	install-build
 
 install-conf:
 	@echo Installing configuration file  ;
@@ -80,10 +80,10 @@
 
 install-build:
 	@echo Installing squidGuard 
-	@if [ ! -d $(bindir) ]; then \
-		$(MKINSTALLDIRS) $(bindir) ; \
+	@if [ ! -d "$(INSTDIR)"/$(bindir) ]; then \
+		$(MKINSTALLDIRS) "$(INSTDIR)"/$(bindir) ; \
 	fi ; \
-	cp src/squidGuard $(bindir) || exit 1 ;  \
+	cp src/squidGuard "$(INSTDIR)"/$(bindir) || exit 1 ;  \
 	echo Done. ;
 
 clean::
diff -Nru squidGuard-1.3.orig/src/Makefile.in squidGuard-1.3/src/Makefile.in
--- squidGuard-1.3.orig/src/Makefile.in	2007-05-10 18:39:44.000000000 +0300
+++ squidGuard-1.3/src/Makefile.in	2008-02-17 09:52:19.000000000 +0200
@@ -91,6 +91,8 @@
 	mv -f y.tab.c y.tab.c.bison
 	mv -f y.tab.h y.tab.h.bison
 
+sg.y sg.l:
+
 #
 # Dependencies for installing
 #
@@ -103,8 +105,8 @@
 
 install.bin:: squidGuard
 	@echo making $@ in `basename \`pwd\``
-	@$(MKDIR) $(bindir) $(logdir) $(cfgdir)
-	$(INSTALL_PROGRAM) squidGuard $(bindir)/squidGuard
+	@$(MKDIR) "$(INSTDIR)"/$(bindir) "$(INSTDIR)"/$(logdir) "$(INSTDIR)"/$(cfgdir)
+	$(INSTALL_PROGRAM) squidGuard "$(INSTDIR)"/$(bindir)/squidGuard
 
 uninstall.bin::
 	@echo making $@ in `basename \`pwd\``
diff -Nru squidGuard-1.3.orig/src/sgDb.c squidGuard-1.3/src/sgDb.c
--- squidGuard-1.3.orig/src/sgDb.c	2007-11-03 15:59:49.000000000 +0200
+++ squidGuard-1.3/src/sgDb.c	2008-02-17 09:52:03.000000000 +0200
@@ -100,13 +100,21 @@
     if(createdb)
       flag = flag | DB_TRUNCATE;
     if ((ret = 
+#if DB_VERSION_MAJOR > 4 || (DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 1)
+	 Db->dbp->open(Db->dbp, NULL, dbfile, NULL, DB_BTREE, flag, 0664)) != 0) {
+#else
 	 Db->dbp->open(Db->dbp, dbfile, NULL, DB_BTREE, flag, 0664)) != 0) {
+#endif
       (void) Db->dbp->close(Db->dbp, 0);
       sgLogFatalError("Error db_open: %s", strerror(ret));
     }
   } else {
     if ((ret = 
+#if DB_VERSION_MAJOR > 4 || (DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 1)
+	 Db->dbp->open(Db->dbp, NULL, dbfile, NULL, DB_BTREE, DB_CREATE, 0664)) != 0) {
+#else
 	 Db->dbp->open(Db->dbp, dbfile, NULL, DB_BTREE, DB_CREATE, 0664)) != 0) {
+#endif
       sgLogFatalError("Error db_open: %s", strerror(ret));
     }
   }
