diff -urN xfce-utils-4.4.1.orig/scripts/Makefile.am xfce-utils-4.4.1/scripts/Makefile.am
--- xfce-utils-4.4.1.orig/scripts/Makefile.am	2007-01-25 22:50:52.000000000 +0200
+++ xfce-utils-4.4.1/scripts/Makefile.am	2007-05-23 17:43:56.000000000 +0300
@@ -32,17 +32,24 @@
 	$(edit) $(srcdir)/xfhelp4.in >xfhelp4.tmp
 	mv xfhelp4.tmp xfhelp4
 
+xinitrc: Makefile $(srcdir)/xinitrc.in
+	rm -f xinitrc xinitrc.tmp
+	$(edit) $(srcdir)/xinitrc.in >xinitrc.tmp
+	mv xinitrc.tmp xinitrc
+
 conffilesdir=@sysconfdir@/xdg/xfce4
 conffiles_DATA=\
-	xinitrc
+	xinitrc \
+	Xft.xrdb
 
 EXTRA_DIST = \
 	$(scripts) \
 	$(conffiles_DATA) \
 	xfbrowser4.in \
 	startxfce4.in \
-	xfhelp4.in
+	xfhelp4.in \
+	xinitrc.in
 
 distclean-local:
-	rm -f xfhelp4 startxfce4 xfbrowser4
+	rm -f xfhelp4 startxfce4 xfbrowser4 xinitrc
 
diff -urN xfce-utils-4.4.1.orig/scripts/Xft.xrdb xfce-utils-4.4.1/scripts/Xft.xrdb
--- xfce-utils-4.4.1.orig/scripts/Xft.xrdb	1970-01-01 02:00:00.000000000 +0200
+++ xfce-utils-4.4.1/scripts/Xft.xrdb	2007-05-23 17:43:15.000000000 +0300
@@ -0,0 +1,9 @@
+# Those are fallback settings, use the ui plugin to change it
+# or add your overrides to ~/.Xresources
+# Xft DPI: 96
+# Xft.hintstyle: hintnone/hintslight/hintmedium/hintfull
+# Xft hinting: 1/0
+
+Xft.dpi: 96
+Xft.hinting: 1
+Xft.hintstyle: hintmedium
diff -urN xfce-utils-4.4.1.orig/scripts/xinitrc xfce-utils-4.4.1/scripts/xinitrc
--- xfce-utils-4.4.1.orig/scripts/xinitrc	2007-02-01 22:30:11.000000000 +0200
+++ xfce-utils-4.4.1/scripts/xinitrc	1970-01-01 02:00:00.000000000 +0200
@@ -1,176 +0,0 @@
-#!/bin/sh
-
-# fix broken $UID on some system...
-if test "x$UID" = "x"; then
-	if test -x /usr/xpg4/bin/id; then
-		UID=`/usr/xpg4/bin/id -u`;
-	else
-		UID=`id -u`;
-	fi
-fi
-
-# $XDG_CONFIG_HOME defines the base directory relative to which user specific 
-# configuration files should be stored. If $XDG_CONFIG_HOME is either not set 
-# or empty, a default equal to $HOME/.config should be used.
-if test "x$XDG_CONFIG_HOME" = "x" ; then
-  XDG_CONFIG_HOME=$HOME/.config
-fi
-[ -d "$XDG_CONFIG_HOME" ] || mkdir "$XDG_CONFIG_HOME"
-
-# $XDG_CACHE_HOME defines the base directory relative to which user specific 
-# non-essential data files should be stored. If $XDG_CACHE_HOME is either not 
-# set or empty, a default equal to $HOME/.cache should be used.
-if test "x$XDG_CACHE_HOME" = "x" ; then
-  XDG_CACHE_HOME=$HOME/.cache
-fi
-[ -d "$XDG_CACHE_HOME" ] || mkdir "$XDG_CACHE_HOME"
-
-# For now, start with an empty list
-XRESOURCES=""
-
-# Has to go prior to merging Xft.xrdb, as its the "Defaults" file
-test -r $HOME/.Xdefaults && XRESOURCES=$HOME/.Xdefaults
-
-BASEDIR=$XDG_CONFIG_HOME/xfce4
-if test -r "$BASEDIR/Xft.xrdb"; then
-  XRESOURCES="$XRESOURCES $BASEDIR/Xft.xrdb"
-elif test -r "$XFCE4HOME/Xft.xrdb"; then
-  mkdir -p "$BASEDIR"
-  cp "$XFCE4HOME/Xft.xrdb" "$BASEDIR"/
-  XRESOURCES="$XRESOURCES $BASEDIR/Xft.xrdb"
-fi
-
-# merge in X cursor settings
-test -r "$BASEDIR/Xcursor.xrdb" && XRESOURCES="$XRESOURCES $BASEDIR/Xcursor.xrdb"
-
-# ~/.Xresources contains overrides to the above
-test -r "$HOME/.Xresources" && XRESOURCES="$XRESOURCES $HOME/.Xresources"
-
-# load all X resources (adds /dev/null to avoid an empty list that would hang the process)
-cat /dev/null $XRESOURCES | xrdb -nocpp -merge -
-
-# load local modmap
-test -r $HOME/.Xmodmap && xmodmap $HOME/.Xmodmap
-
-# Launch xscreensaver (if available), but only as non-root user
-test $UID -gt 0 -a -z "$VNCSESSION" && xscreensaver -no-splash &
-
-# Use ssh-agent if installed and not already running.  Run it separately
-# so it populates the environment here, so we can clean it up later.
-sshagent=`which ssh-agent`
-kill_sshagent=0
-if test -z "$SSH_AGENT_PID" -a "$sshagent" -a "x$sshagent" != "xno"; then
-	eval `$sshagent -s`
-	kill_sshagent=1
-fi
-
-# Use dbus-launch if installed.
-if test x"$DBUS_SESSION_BUS_ADDRESS" = x""; then
-	dbuslaunch=`which dbus-launch`
-	if test x"$dbuslaunch" != x"" -a x"$dbuslaunch" != x"no"; then
-		eval `$dbuslaunch --sh-syntax --exit-with-session`
-	fi
-fi
-
-# Run xfce4-session if installed
-xfcesm=`which xfce4-session`
-case "x$xfcesm" in
-	x|xno*)
-		;;
-	*)
-		$xfcesm
-
-		if test $kill_sshagent -eq 1; then
-			eval `$sshagent -k`
-		fi
-		exit 0
-		;;
-esac
-
-
-##################
-# IMPORTANT NOTE #
-##################
-
-# Everything below here ONLY gets executed if you are NOT using xfce4-session
-# (Xfce's session manager).  If you are using the session manager, everything
-# below is handled by it, and the code below is not executed at all.  If you're
-# not sure if you're using the session manager, type 'ps -e|grep xfce4-session'
-# in a terminal while Xfce is running.
-
-##################
-
-
-# this is only necessary when running w/o xfce4-session
-xsetroot -solid black -cursor_name watch
-
-# or use old-fashioned startup script otherwise
-
-xfce-mcs-manager
-xfwm4 --daemon
-
-# start up stuff in $XDG_CONFIG_HOME/autostart/, as that looks to be
-# the new standard.  if that directory doesn't exist, try the old
-# ~/Desktop/Autostart method.  we're not going to do any migration here.
-if test -d "$XDG_CONFIG_HOME/autostart"; then
-  for i in ${XDG_CONFIG_HOME}/autostart/*.desktop; do
-    grep -q -E "^Hidden=true" "$i" && continue
-    if grep -q -E "^OnlyShowIn=" "$i"; then
-      # need to test twice, as lack of the line entirely means we still run it
-      grep -E "^OnlyShowIn=" "$i" | grep -q 'XFCE;' || continue
-    fi
-    grep -E "^NotShowIn=" "$i" | grep -q 'XFCE;' && continue
-    
-    # check for TryExec
-    trycmd=`grep -E "^TryExec=" "$i" | cut -d'=' -f2`
-    if test "$trycmd"; then
-      type "$trycmd" >/dev/null 2>&1 || continue
-    fi
-    
-    cmd=`grep -E "^Exec=" "$i" | cut -d'=' -f2`
-    if test "$cmd" && type "$cmd" >/dev/null 2>&1; then
-      $cmd &
-    fi
-  done
-elif test -d "$HOME/Desktop/Autostart"; then
-  for i in `ls -1 -L ${HOME}/Desktop/Autostart/ 2>/dev/null`; do
-    if test -x $HOME/Desktop/Autostart/$i; then
-      $HOME/Desktop/Autostart/$i &
-    fi
-  done
-fi
-
-xfdesktop&
-orage &
-
-panel=`which xfce4-panel`
-case "x$panel" in
-	x|xno*)
-		;;
-	*)
-		$panel
-		ret=$?
-		while test $ret -ne 0; do
-			xmessage -center -file - -timeout 20 -title Error <<EOF
-A crash occured in the panel
-Please report this to the xfce4-dev@xfce.org list
-or on http://bugs.xfce.org
-Meanwhile the panel will be restarted
-EOF
-			cat >&2 <<EOF
-A crash occured in the panel
-Please report this to the xfce4-dev@xfce.org list
-or on http://bugs.xfce.org
-Meanwhile the panel will be restarted
-EOF
-			$panel
-			ret=$?
-		done
-		;;
-esac
-
-if test $kill_sshagent -eq 1; then
-	eval `$sshagent -k`
-fi
-
-xsetroot -bg white -fg red  -solid black -cursor_name watch
diff -urN xfce-utils-4.4.1.orig/scripts/xinitrc.in xfce-utils-4.4.1/scripts/xinitrc.in
--- xfce-utils-4.4.1.orig/scripts/xinitrc.in	1970-01-01 02:00:00.000000000 +0200
+++ xfce-utils-4.4.1/scripts/xinitrc.in	2007-05-23 17:43:33.000000000 +0300
@@ -0,0 +1,183 @@
+#!/bin/sh
+
+# fix broken $UID on some system...
+if test "x$UID" = "x"; then
+	if test -x /usr/xpg4/bin/id; then
+		UID=`/usr/xpg4/bin/id -u`;
+	else
+		UID=`id -u`;
+	fi
+fi
+
+# $XDG_CONFIG_HOME defines the base directory relative to which user specific 
+# configuration files should be stored. If $XDG_CONFIG_HOME is either not set 
+# or empty, a default equal to $HOME/.config should be used.
+if test "x$XDG_CONFIG_HOME" = "x" ; then
+  XDG_CONFIG_HOME=$HOME/.config
+fi
+[ -d "$XDG_CONFIG_HOME" ] || mkdir "$XDG_CONFIG_HOME"
+
+# $XDG_CACHE_HOME defines the base directory relative to which user specific 
+# non-essential data files should be stored. If $XDG_CACHE_HOME is either not 
+# set or empty, a default equal to $HOME/.cache should be used.
+if test "x$XDG_CACHE_HOME" = "x" ; then
+  XDG_CACHE_HOME=$HOME/.cache
+fi
+[ -d "$XDG_CACHE_HOME" ] || mkdir "$XDG_CACHE_HOME"
+
+# For now, start with an empty list
+XRESOURCES=""
+
+# Has to go prior to merging Xft.xrdb, as its the "Defaults" file
+test -r "@sysconfdir@/xdg/xfce4/Xft.xrdb" && XRESOURCES="$XRESOURCES @sysconfdir@/xdg/xfce4/Xft.xrdb"
+test -r $HOME/.Xdefaults && XRESOURCES="$XRESOURCES $HOME/.Xdefaults"
+
+BASEDIR=$XDG_CONFIG_HOME/xfce4
+if test -r "$BASEDIR/Xft.xrdb"; then
+  XRESOURCES="$XRESOURCES $BASEDIR/Xft.xrdb"
+elif test -r "$XFCE4HOME/Xft.xrdb"; then
+  mkdir -p "$BASEDIR"
+  cp "$XFCE4HOME/Xft.xrdb" "$BASEDIR"/
+  XRESOURCES="$XRESOURCES $BASEDIR/Xft.xrdb"
+fi
+
+# merge in X cursor settings
+test -r "$BASEDIR/Xcursor.xrdb" && XRESOURCES="$XRESOURCES $BASEDIR/Xcursor.xrdb"
+
+# ~/.Xresources contains overrides to the above
+test -r "$HOME/.Xresources" && XRESOURCES="$XRESOURCES $HOME/.Xresources"
+
+# load all X resources (adds /dev/null to avoid an empty list that would hang the process)
+cat /dev/null $XRESOURCES | xrdb -nocpp -merge -
+
+# load local modmap
+test -r $HOME/.Xmodmap && xmodmap $HOME/.Xmodmap
+
+# Launch xscreensaver (if available), but only as non-root user
+if test $UID -gt 0 -a -z "$VNCSESSION"; then 
+    if test x"`which xscreensaver 2>/dev/null`" != x""; then
+        xscreensaver -no-splash &
+    elif test x"`which gnome-screensaver 2>/dev/null`" != x""; then
+        gnome-screensaver &
+    fi
+fi 
+
+# Use ssh-agent if installed and not already running.  Run it separately
+# so it populates the environment here, so we can clean it up later.
+sshagent=`which ssh-agent`
+kill_sshagent=0
+if test -z "$SSH_AGENT_PID" -a "$sshagent" -a "x$sshagent" != "xno"; then
+	eval `$sshagent -s`
+	kill_sshagent=1
+fi
+
+# Use dbus-launch if installed.
+if test x"$DBUS_SESSION_BUS_ADDRESS" = x""; then
+	dbuslaunch=`which dbus-launch`
+	if test x"$dbuslaunch" != x"" -a x"$dbuslaunch" != x"no"; then
+		eval `$dbuslaunch --sh-syntax --exit-with-session`
+	fi
+fi
+
+# Run xfce4-session if installed
+xfcesm=`which xfce4-session`
+case "x$xfcesm" in
+	x|xno*)
+		;;
+	*)
+		$xfcesm
+
+		if test $kill_sshagent -eq 1; then
+			eval `$sshagent -k`
+		fi
+		exit 0
+		;;
+esac
+
+
+##################
+# IMPORTANT NOTE #
+##################
+
+# Everything below here ONLY gets executed if you are NOT using xfce4-session
+# (Xfce's session manager).  If you are using the session manager, everything
+# below is handled by it, and the code below is not executed at all.  If you're
+# not sure if you're using the session manager, type 'ps -e|grep xfce4-session'
+# in a terminal while Xfce is running.
+
+##################
+
+
+# this is only necessary when running w/o xfce4-session
+xsetroot -solid black -cursor_name watch
+
+# or use old-fashioned startup script otherwise
+
+xfce-mcs-manager
+xfwm4 --daemon
+
+# start up stuff in $XDG_CONFIG_HOME/autostart/, as that looks to be
+# the new standard.  if that directory doesn't exist, try the old
+# ~/Desktop/Autostart method.  we're not going to do any migration here.
+if test -d "$XDG_CONFIG_HOME/autostart"; then
+  for i in ${XDG_CONFIG_HOME}/autostart/*.desktop; do
+    grep -q -E "^Hidden=true" "$i" && continue
+    if grep -q -E "^OnlyShowIn=" "$i"; then
+      # need to test twice, as lack of the line entirely means we still run it
+      grep -E "^OnlyShowIn=" "$i" | grep -q 'XFCE;' || continue
+    fi
+    grep -E "^NotShowIn=" "$i" | grep -q 'XFCE;' && continue
+    
+    # check for TryExec
+    trycmd=`grep -E "^TryExec=" "$i" | cut -d'=' -f2`
+    if test "$trycmd"; then
+      type "$trycmd" >/dev/null 2>&1 || continue
+    fi
+    
+    cmd=`grep -E "^Exec=" "$i" | cut -d'=' -f2`
+    if test "$cmd" && type "$cmd" >/dev/null 2>&1; then
+      $cmd &
+    fi
+  done
+elif test -d "$HOME/Desktop/Autostart"; then
+  for i in `ls -1 -L ${HOME}/Desktop/Autostart/ 2>/dev/null`; do
+    if test -x $HOME/Desktop/Autostart/$i; then
+      $HOME/Desktop/Autostart/$i &
+    fi
+  done
+fi
+
+xfdesktop&
+orage &
+
+panel=`which xfce4-panel`
+case "x$panel" in
+	x|xno*)
+		;;
+	*)
+		$panel
+		ret=$?
+		while test $ret -ne 0; do
+			xmessage -center -file - -timeout 20 -title Error <<EOF
+A crash occured in the panel
+Please report this to the xfce4-dev@xfce.org list
+or on http://bugs.xfce.org
+Meanwhile the panel will be restarted
+EOF
+			cat >&2 <<EOF
+A crash occured in the panel
+Please report this to the xfce4-dev@xfce.org list
+or on http://bugs.xfce.org
+Meanwhile the panel will be restarted
+EOF
+			$panel
+			ret=$?
+		done
+		;;
+esac
+
+if test $kill_sshagent -eq 1; then
+	eval `$sshagent -k`
+fi
+
+xsetroot -bg white -fg red  -solid black -cursor_name watch
