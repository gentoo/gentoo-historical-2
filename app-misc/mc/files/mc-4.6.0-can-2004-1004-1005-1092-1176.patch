--- mc-4.5.55.orig/vfs/fish.c	2004-10-31 08:09:30.000000000 +0100
+++ mc-4.5.55/vfs/fish.c	2004-10-31 08:30:02.000000000 +0100
@@ -222,7 +222,7 @@ open_archive_int (vfs *me, vfs_s_super *
 	print_vfs_message( _("fish: Waiting for initial line...") );
         if (!vfs_s_get_line(me, SUP.sockr, answer, sizeof(answer), ':'))
 	    ERRNOR (E_PROTO, -1);
-	print_vfs_message( answer );
+	print_vfs_message( "%s", answer );
 	if (strstr(answer, "assword")) {
 
     /* Currently, this does not work. ssh reads passwords from
--- mc-4.5.55.orig/src/utilunix.c	2004-12-01 12:26:20.000000000 +0100
+++ mc-4.5.55/src/utilunix.c	2004-12-01 12:26:27.000000000 +0100
@@ -396,7 +396,7 @@ close_error_pipe (int error, char *text)
 	close (2);
 	dup (old_error);
 	close (old_error);
-	len = read (error_pipe[0], msg, MAX_PIPE_SIZE);
+	len = read (error_pipe[0], msg, MAX_PIPE_SIZE - 1);
 
 	if (len >= 0)
 	    msg[len] = 0;
@@ -424,7 +424,7 @@ void check_error_pipe (void)
     char error[MAX_PIPE_SIZE];
     int len = 0;
     if (old_error >= 0){
-	while (len < MAX_PIPE_SIZE)
+	while (len < MAX_PIPE_SIZE - 1)
 	{
             fd_set select_set;
             struct timeval timeout;
--- mc-4.5.55.orig/vfs/sfs.c	2001-08-11 06:57:17.000000000 +0200
+++ mc-4.5.55/vfs/sfs.c	2004-12-08 19:01:06.000000000 +0100
@@ -341,6 +342,8 @@ static int sfs_init (vfs *me)
 	    }	    
 	    c++;
 	}
+	if (!*c)
+		goto invalid_line;
 	c++;
 	*(semi+1) = 0;
 	if ((semi = strchr (c, '\n')))
--- mc-4.5.55.orig/vfs/cpio.c	2004-10-31 08:09:30.000000000 +0100
+++ mc-4.5.55/vfs/cpio.c	2004-12-08 19:07:21.000000000 +0100
@@ -454,7 +454,8 @@ static int cpio_create_entry(vfs *me, vf
 	}
     }
 
-    while(name[strlen(name)-1] == PATH_SEP) name[strlen(name)-1] = 0;
+    for (tn = name + strlen (name) - 1; tn >= name && *tn == PATH_SEP; tn--)
+        *tn = 0;
     if((tn = strrchr(name, PATH_SEP))) {
 	*tn = 0;
 	root = vfs_s_find_inode(me, root, name, LINK_FOLLOW, FL_MKDIR); /* CHECKME! What function here? */
--- mc-4.5.55.orig/vfs/extfs.c	2004-10-31 08:09:30.000000000 +0100
+++ mc-4.5.55/vfs/extfs.c	2004-12-05 21:05:21.000000000 +0100
@@ -1362,14 +1362,13 @@ static int extfs_init (vfs *me)
 	    g_free (mc_extfsini);
 	    return 0;
 	}
-	if (*key == '#')
+	if (*key == '#' || *key == '\n')
 	    continue;
 
 	if ((c = strchr (key, '\n'))){
-	    *c = 0;
+	    *c-- = 0;
+	} else {	/* Last line without newline or strlen (key) > 255 */
 	    c = &key [strlen (key) - 1];
-	} else {
-	    c = key;
 	}
 	extfs_need_archive [extfs_no] = !(*c == ':');
 	if (*c == ':')
--- mc-4.5.55.orig/vfs/sfs.c.org	2005-02-12 13:15:15.000000000 +0100
+++ mc-4.5.55.orig/vfs/sfs.c	2005-02-12 13:15:58.000000000 +0100
@@ -332,13 +332,14 @@
 	    }
 
 	if (!semi){
+	    invalid_line:
 	    fprintf (stderr, _("Warning: Invalid line in %s:\n%s\n"),
 		     "sfs.ini", key);
 	    continue;
 	}
 
 	c = semi + 1;
-	while ((*c != ' ') && (*c != '\t')) {
+	while (*c && (*c != ' ') && (*c != '\t')) {
 	    switch (*c) {
 	    case '1': flags |= F_1; break;
 	    case '2': flags |= F_2; break;
--- mc-4.5.55.orig/edit/editcmd.c.org	2005-02-12 13:17:33.000000000 +0100
+++ mc-4.5.55.orig/edit/editcmd.c	2005-02-12 13:17:48.000000000 +0100
@@ -232,7 +232,7 @@
 	g_free (savedir);
 	fd = mc_mkstemps (&savename, saveprefix, NULL);
 	g_free (saveprefix);
-	if (!savename)
+	if (fd == -1)
 	    return 0;
 	/* FIXME:
 	 * Close for now because mc_mkstemps use pure open system call 
