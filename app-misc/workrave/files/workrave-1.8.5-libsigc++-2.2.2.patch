diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/Dispatcher.cc workrave-1.8.5/frontend/gtkmm/src/Dispatcher.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/Dispatcher.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/Dispatcher.cc	2008-05-06 20:30:52.000000000 +0200
@@ -22,13 +22,11 @@
 #include "config.h"
 #endif
 
 #include "preinclude.h"
 
-#ifdef HAVE_GTKMM24
-#include <sigc++/compatibility.h>
-#endif
+#include <sigc++/trackable.h>
 
 #include "Dispatcher.hh"
 
 #include "nls.h"
 #include "debug.hh"
@@ -169,11 +167,11 @@
     send_fd  = filedes[1];
 
     fd_set_close_on_exec(receive_fd);
     fd_set_close_on_exec(send_fd);
 
-    io_connection = Glib::signal_io().connect(SigC::slot_class(*this, &Dispatcher::io_handler),
+    io_connection = Glib::signal_io().connect(sigc::mem_fun(*this, &Dispatcher::io_handler),
                                               (int)receive_fd,
                                               Glib::IO_IN);
 
     ret = true;
   }
@@ -240,11 +238,11 @@
 }
 
 #endif
 
 
-SigC::Connection
-Dispatcher::connect(const SigC::Slot0<void>& slot)
+sigc::connection
+Dispatcher::connect(const sigc::slot0<void>& slot)
 {
   return signal.connect(slot);
 }
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/Dispatcher.hh workrave-1.8.5/frontend/gtkmm/src/Dispatcher.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/Dispatcher.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/Dispatcher.hh	2008-05-06 20:33:30.000000000 +0200
@@ -17,13 +17,11 @@
 //
 
 #ifndef DISPATCHER_HH
 #define DISPATCHER_HH
 
-#ifdef HAVE_GTKMM24
-#include <sigc++/compatibility.h>
-#endif
+#include <sigc++/trackable.h>
 
 #include <sigc++/object.h>
 #include <sigc++/slot.h>
 #include <sigc++/class_slot.h>
 #include <glibmm.h>
@@ -50,19 +48,19 @@
   int receive_fd;
 
 #endif
 
   //! I/O Connection
-  SigC::Connection io_connection;
+  sigc::connection io_connection;
 
   //!
-  SigC::Signal0<void> signal;
+  sigc::signal0<void> signal;
 
 public:
   Dispatcher();
   ~Dispatcher();
-  SigC::Connection connect(const SigC::Slot0<void>& slot);
+  sigc::connection connect(const sigc::slot0<void>& slot);
   void send_notification();
 
 private:
 
 #ifndef WIN32
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/EventImage.cc workrave-1.8.5/frontend/gtkmm/src/EventImage.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/EventImage.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/EventImage.cc	2008-05-06 20:23:20.000000000 +0200
@@ -96,11 +96,10 @@
     }
 
   return Gtk::Image::on_unmap_event(event);
 }
 
-#ifdef HAVE_GTKMM24
 void
 EventImage::on_size_allocate(Gtk::Allocation &allocation)
 {
   Gtk::Image::on_size_allocate(allocation);
 
@@ -114,23 +113,5 @@
                              allocation.get_width(),
                              allocation.get_height());
     }
 }
 
-#else
-void
-EventImage::on_size_allocate(GtkAllocation *allocation)
-{
-  Gtk::Image::on_size_allocate(allocation);
-
-  GtkWidget *widget = GTK_WIDGET(gobj());
-
-  if (GTK_WIDGET_REALIZED(widget))
-    {
-      gdk_window_move_resize(event_window,
-                             allocation->x ,
-                             allocation->y ,
-                             allocation->width,
-                             allocation->height);
-    }
-}
-#endif
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/EventImage.hh workrave-1.8.5/frontend/gtkmm/src/EventImage.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/EventImage.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/EventImage.hh	2008-05-06 20:23:20.000000000 +0200
@@ -37,15 +37,11 @@
 private:
   void on_realize();
   void on_unrealize();
   bool on_map_event(GdkEventAny *event);
   bool on_unmap_event(GdkEventAny *event);
-#ifdef HAVE_GTKMM24
   void on_size_allocate(Gtk::Allocation &allocation);
-#else
-  void on_size_allocate(GtkAllocation *allocation);
-#endif
 
   GdkWindow *event_window;
 };
 
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/EventLabel.cc workrave-1.8.5/frontend/gtkmm/src/EventLabel.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/EventLabel.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/EventLabel.cc	2008-05-06 20:23:20.000000000 +0200
@@ -96,11 +96,10 @@
     }
 
   return Gtk::Label::on_unmap_event(event);
 }
 
-#ifdef HAVE_GTKMM24
 void
 EventLabel::on_size_allocate(Gtk::Allocation &allocation)
 {
   Gtk::Label::on_size_allocate(allocation);
 
@@ -114,23 +113,5 @@
                              allocation.get_width(),
                              allocation.get_height());
     }
 }
 
-#else
-void
-EventLabel::on_size_allocate(GtkAllocation *allocation)
-{
-  Gtk::Label::on_size_allocate(allocation);
-
-  GtkWidget *widget = GTK_WIDGET(gobj());
-
-  if (GTK_WIDGET_REALIZED(widget))
-    {
-      gdk_window_move_resize(event_window,
-                             allocation->x ,
-                             allocation->y ,
-                             allocation->width,
-                             allocation->height);
-    }
-}
-#endif
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/EventLabel.hh workrave-1.8.5/frontend/gtkmm/src/EventLabel.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/EventLabel.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/EventLabel.hh	2008-05-06 20:23:20.000000000 +0200
@@ -36,15 +36,11 @@
 private:
   void on_realize();
   void on_unrealize();
   bool on_map_event(GdkEventAny *event);
   bool on_unmap_event(GdkEventAny *event);
-#ifdef HAVE_GTKMM24
   void on_size_allocate(Gtk::Allocation &allocation);
-#else
-  void on_size_allocate(GtkAllocation *allocation);
-#endif
 
   GdkWindow *event_window;
 };
 
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/Frame.cc workrave-1.8.5/frontend/gtkmm/src/Frame.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/Frame.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/Frame.cc	2008-05-06 20:23:20.000000000 +0200
@@ -135,33 +135,20 @@
   color_map->alloc_color(color_black);
 #endif
   set_frame_color(frame_color);
 }
 
-#ifdef HAVE_GTKMM24
 void
 Frame::on_size_request(Gtk::Requisition *requisition)
 {
   Gtk::Widget *widget = get_child();
   widget->size_request(*requisition);
   guint d = 2*(get_border_width()+frame_width);
   requisition->width += d;
   requisition->height += d;
 }
-#else
-void
-Frame::on_size_request(GtkRequisition *requisition)
-{
-  Gtk::Widget *widget = get_child();
-  widget->size_request(requisition);
-  guint d = 2*(get_border_width()+frame_width);
-  requisition->width += d;
-  requisition->height += d;
-}
-#endif
 
-#ifdef HAVE_GTKMM24
 void
 Frame::on_size_allocate(Gtk::Allocation &allocation)
 {
   Gtk::Bin::on_size_allocate(allocation);
 
@@ -173,47 +160,26 @@
   alloc.set_y(allocation.get_y() + b);
   alloc.set_width(allocation.get_width() - 2*b);
   alloc.set_height(allocation.get_height() - 2*b);
   widget->size_allocate(alloc);
 }
-#else
-void
-Frame::on_size_allocate(GtkAllocation* allocation)
-{
-  Gtk::Bin::on_size_allocate(allocation);
-
-  Gtk::Widget *widget = get_child();
-  guint b = get_border_width() + frame_width;
-
-  GtkAllocation alloc;
-  alloc.x = allocation->x + b;
-  alloc.y = allocation->y + b;
-  alloc.width = allocation->width - 2*b;
-  alloc.height = allocation->height - 2*b;
-  widget->size_allocate(&alloc);
-}
-#endif
 
 bool
 Frame::on_expose_event(GdkEventExpose* e)
 {
   Glib::RefPtr<Gdk::Window> window = get_window();
   Glib::RefPtr<Gtk::Style> style = get_style();
 
   Gdk::Color bgCol = style->get_background(Gtk::STATE_NORMAL);
 
   // FIXME:
-#ifdef HAVE_GTKMM24
   Gtk::Allocation gtkmmalloc = get_allocation();
   GtkAllocation alloc;
   alloc.x = gtkmmalloc.get_x();
   alloc.y = gtkmmalloc.get_y();
   alloc.width = gtkmmalloc.get_width();
   alloc.height = gtkmmalloc.get_height();
-#else
-  GtkAllocation alloc = get_allocation();
-#endif
 
   switch (frame_style)
     {
     case STYLE_SOLID:
       gc->set_foreground(frame_visible ? frame_color : bgCol);
@@ -256,11 +222,11 @@
   bool rc = Gtk::Bin::on_expose_event(e);
 
   return rc;
 }
 
-SigC::Signal1<void,bool> &
+sigc::signal1<void,bool> &
 Frame::signal_flash()
 {
   return flash_signal_src;
 }
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/Frame.hh workrave-1.8.5/frontend/gtkmm/src/Frame.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/Frame.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/Frame.hh	2008-05-06 20:23:20.000000000 +0200
@@ -35,11 +35,11 @@
   void set_frame_width(guint width);
   void set_frame_style(Style style);
   void set_frame_color(const Gdk::Color &color);
   void set_frame_flashing(int delay);
   void set_frame_visible(bool visible);
-  SigC::Signal1<void,bool> &signal_flash();
+  sigc::signal1<void,bool> &signal_flash();
 
 protected:
   bool on_timer();
 #ifdef HAVE_GTKMM24
   void on_size_request(Gtk::Requisition *requisition);
@@ -76,11 +76,11 @@
 
   //! Flash delay;
   int flash_delay;
 
   //! Flash timeout signal
-  SigC::Connection flash_signal;
+  sigc::connection flash_signal;
 
   //! Flash signal source
-  SigC::Signal1<void,bool> flash_signal_src;
+  sigc::signal1<void,bool> flash_signal_src;
 };
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/GnomeAppletWindow.hh workrave-1.8.5/frontend/gtkmm/src/GnomeAppletWindow.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/GnomeAppletWindow.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/GnomeAppletWindow.hh	2008-05-06 20:23:20.000000000 +0200
@@ -22,13 +22,11 @@
 #include "preinclude.h"
 #include <stdio.h>
 
 #include "AppletWindow.hh"
 
-#ifdef HAVE_GTKMM24
-#include <sigc++/compatibility.h>
-#endif
+#include <sigc++/trackable.h>
 
 #include <gnome.h>
 #include <bonobo.h>
 #include <bonobo/bonobo-xobject.h>
 #include <string>
@@ -43,11 +41,11 @@
 
 class TimerBoxGtkView;
 class AppletControl;
 
 class GnomeAppletWindow :
-  public SigC::Object,
+  public sigc::trackable,
   public AppletWindow
 {
 public:
   GnomeAppletWindow(AppletControl *control);
   virtual ~GnomeAppletWindow();
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/GtkUtil.cc workrave-1.8.5/frontend/gtkmm/src/GtkUtil.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/GtkUtil.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/GtkUtil.cc	2008-05-06 20:23:20.000000000 +0200
@@ -341,17 +341,12 @@
 {
   TRACE_ENTER("GtkUtil::center_window");
 
   if (head.valid)
     {
-#ifdef HAVE_GTKMM24
       Gtk::Requisition size;
       window.size_request(size);
-#else
-      GtkRequisition size;
-      window.size_request(&size);
-#endif
 
 #ifdef WIN32
       TRACE_MSG(
                 head.geometry.get_width() << "x" << head.geometry.get_height() << " +" <<
                 head.geometry.get_x() << "+" << head.geometry.get_y() << " " <<
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/GUI.cc workrave-1.8.5/frontend/gtkmm/src/GUI.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/GUI.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/GUI.cc	2008-05-06 20:23:20.000000000 +0200
@@ -673,29 +673,21 @@
   if (num_screens >= 1)
     {
       for (int i = 0; i < num_screens; i++)
         {
           Glib::RefPtr<Gdk::Screen> screen = display->get_screen(i);
-#ifdef HAVE_GTKMM24
           if (screen)
-#else
-            if (!screen.is_null())
-#endif
               {
                 new_num_heads += screen->get_n_monitors();
                 TRACE_MSG("num monitors on screen " << i << " = " << screen->get_n_monitors());
               }
         }
 
       for (int i = 0; i < num_screens; i++)
         {
           Glib::RefPtr<Gdk::Screen> screen = display->get_screen(i);
-#ifdef HAVE_GTKMM24
           if (screen)
-#else
-          if (!screen.is_null())
-#endif
               {
                 TRACE_MSG("num monitors on screen " << i << " = " << screen->get_n_monitors());
               }
         }
 
@@ -703,15 +695,11 @@
 
       int count = 0;
       for (int i = 0; i < num_screens; i++)
         {
           Glib::RefPtr<Gdk::Screen> screen = display->get_screen(i);
-#ifdef HAVE_GTKMM24
           if (screen)
-#else
-          if (!screen.is_null())
-#endif
               {
                 int num_monitors = screen->get_n_monitors();
                 TRACE_MSG("monitors = " << num_monitors);
                 for (int j = 0; j < num_monitors && count < new_num_heads; j++)
                   {
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/GUI.hh workrave-1.8.5/frontend/gtkmm/src/GUI.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/GUI.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/GUI.hh	2008-05-06 20:23:20.000000000 +0200
@@ -19,11 +19,11 @@
 #ifndef GUI_HH
 #define GUI_HH
 
 #include "preinclude.h"
 
-#include <sigc++/object.h>
+#include <sigc++/trackable.h>
 #include <glibmm.h>
 
 #include <gdk/gdkevents.h>
 #include <gtkmm/tooltips.h>
 #include <gdkmm/types.h>
@@ -63,11 +63,11 @@
 class IConfigurator;
 
 class GUI :
   public IApp,
   public CoreEventListener,
-  public SigC::Object
+  public sigc::trackable
 {
 public:
   GUI(int argc, char **argv);
   virtual ~GUI();
 
@@ -102,11 +102,11 @@
   enum BlockMode { BLOCK_MODE_NONE = 0, BLOCK_MODE_INPUT, BLOCK_MODE_ALL };
   BlockMode get_block_mode();
   void set_block_mode(BlockMode mode);
 
   // Misc
-  SigC::Signal0<void> &signal_heartbeat();
+  sigc::signal0<void> &signal_heartbeat();
   HeadInfo &get_head(int head);
   int get_number_of_heads() const;
   int map_to_head(int &x, int &y);
   void map_from_head(int &x, int &y, int head);
   bool bound_head(int &x, int &y, int width, int height, int head);
@@ -212,11 +212,11 @@
 
   //! Tooptip manager.
   Gtk::Tooltips *tooltips;
 
   //! Heartbeat signal
-  SigC::Signal0<void> heartbeat_signal;
+  sigc::signal0<void> heartbeat_signal;
 
   //! Destroy break window on next heartbeat?
   bool break_window_destroy;
 
   //! Destroy prelude window on next heartbeat?
@@ -241,11 +241,11 @@
 #ifdef HAVE_X
   //! Do we want a keyboard/pointer grab
   bool grab_wanted;
 
   //! Connection to the grab retry timeout timer.
-  SigC::Connection grab_retry_connection;
+  sigc::connection grab_retry_connection;
 #endif
 
   //! Grab
   WindowHints::Grab *grab_handle;
 
@@ -293,11 +293,11 @@
 {
   return sound_player;
 }
 
 //! Returns the GUI Heartbeat signal.
-inline SigC::Signal0<void> &
+inline sigc::signal0<void> &
 GUI::signal_heartbeat()
 {
   return heartbeat_signal;
 }
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/IconListCellRenderer.cc workrave-1.8.5/frontend/gtkmm/src/IconListCellRenderer.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/IconListCellRenderer.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/IconListCellRenderer.cc	2008-05-06 20:23:20.000000000 +0200
@@ -107,15 +107,11 @@
 }
 
 
 void
 IconListCellRenderer::render_vfunc(
-#ifdef HAVE_GTKMM24
                                    const Glib::RefPtr<Gdk::Drawable>& window,
-#else
-                                   const Glib::RefPtr<Gdk::Window>& window,
-#endif
                                    Gtk::Widget& widget,
                                    const Gdk::Rectangle& bg_area,
                                    const Gdk::Rectangle& cell_area,
                                    const Gdk::Rectangle& expose_area,
                                    Gtk::CellRendererState flags)
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/IconListCellRenderer.hh workrave-1.8.5/frontend/gtkmm/src/IconListCellRenderer.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/IconListCellRenderer.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/IconListCellRenderer.hh	2008-05-06 20:23:20.000000000 +0200
@@ -45,25 +45,16 @@
   virtual void get_size_vfunc(Gtk::Widget& widget,
                               const Gdk::Rectangle *cell_area,
                               int* x_offset, int* y_offset,
                               int* width,    int* height);
 
-#ifdef HAVE_GTKMM24
   virtual void render_vfunc(const Glib::RefPtr<Gdk::Drawable>& window,
                             Gtk::Widget& widget,
                             const Gdk::Rectangle& background_area,
                             const Gdk::Rectangle& cell_area,
                             const Gdk::Rectangle& expose_area,
                             Gtk::CellRendererState flags);
-#else
-  virtual void render_vfunc(const Glib::RefPtr<Gdk::Window>& window,
-                            Gtk::Widget& widget,
-                            const Gdk::Rectangle& background_area,
-                            const Gdk::Rectangle& cell_area,
-                            const Gdk::Rectangle& expose_area,
-                            Gtk::CellRendererState flags);
-#endif
 
 private:
   void update_properties();
 
   Gtk::CellRendererPixbuf pixbuf_renderer;
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/KdeAppletWindow.cc workrave-1.8.5/frontend/gtkmm/src/KdeAppletWindow.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/KdeAppletWindow.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/KdeAppletWindow.cc	2008-05-06 20:23:20.000000000 +0200
@@ -210,17 +210,12 @@
   TRACE_ENTER("KdeAppletWindow::update");
   if (applet_active)
     {
       timer_box_control->update();
 
-#ifdef HAVE_GTKMM24
       Gtk::Requisition req;
       container->size_request(req);
-#else
-      GtkRequisition req;
-      container->size_request(&req);
-#endif
 
       TRACE_MSG("Size = " << req.width << " " << req.height << " " << applet_orientation);
       if (req.width != last_size.width || req.height != last_size.height)
         {
           last_size = req;
@@ -288,15 +283,11 @@
 {
   TRACE_ENTER("KdeAppletWindow::on_embedded");
   if (applet_active)
     {
       container->set_size_request(-1,-1);
-#ifdef HAVE_GTKMM24
       container->size_request(last_size);
-#else
-      container->size_request(&last_size);
-#endif
 
       TRACE_MSG("Size = " << last_size.width << " " << last_size.height << " " << applet_orientation);
       view->set_geometry(applet_orientation, applet_size);
 
       TRACE_MSG(applet_size);
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/KdeAppletWindow.hh workrave-1.8.5/frontend/gtkmm/src/KdeAppletWindow.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/KdeAppletWindow.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/KdeAppletWindow.hh	2008-05-06 20:23:20.000000000 +0200
@@ -22,13 +22,11 @@
 #include "preinclude.h"
 #include <stdio.h>
 
 #include "AppletWindow.hh"
 
-#ifdef HAVE_GTKMM24
-#include <sigc++/compatibility.h>
-#endif
+#include <sigc++/trackable.h>
 
 #include <gtkmm/bin.h>
 #include <gtkmm/menu.h>
 #include <gtkmm/plug.h>
 #include <gtkmm/eventbox.h>
@@ -36,11 +34,11 @@
 class TimerBoxControl;
 class TimerBoxGtkView;
 class AppletControl;
 
 class KdeAppletWindow :
-  public SigC::Object,
+  public sigc::trackable,
   public AppletWindow
 {
 public:
   KdeAppletWindow(AppletControl *control);
   virtual ~KdeAppletWindow();
@@ -65,15 +63,11 @@
   Orientation applet_orientation;
 
   //! Size of the applet
   int applet_size;
 
-#ifdef HAVE_GTKMM24
   Gtk::Requisition last_size;
-#else
-  GtkRequisition last_size;
-#endif
 
   //!
   AppletControl *control;
 
   bool applet_active;
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/KdeWorkraveControl.cc workrave-1.8.5/frontend/gtkmm/src/KdeWorkraveControl.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/KdeWorkraveControl.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/KdeWorkraveControl.cc	2008-05-06 20:23:20.000000000 +0200
@@ -22,11 +22,11 @@
 
 #include "preinclude.h"
 
 #include <stdio.h>
 
-#include <sigc++/object.h>
+#include <sigc++/trackable.h>
 
 #include "GUI.hh"
 #include "KdeAppletWindow.hh"
 #include "AppletControl.hh"
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/KdeWorkraveControl.hh workrave-1.8.5/frontend/gtkmm/src/KdeWorkraveControl.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/KdeWorkraveControl.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/KdeWorkraveControl.hh	2008-05-06 20:23:20.000000000 +0200
@@ -21,17 +21,17 @@
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <sigc++/object.h>
+#include <sigc++/trackable.h>
 #include <glibmm.h>
 #include "kde_applet/kworkravecontroliface.h"
 
 class KWinModule;
 
-class KdeWorkraveControl : public KWorkraveControlIface, public SigC::Object
+class KdeWorkraveControl : public KWorkraveControlIface, public sigc::trackable
 {
 public:
   void fire();
   static void init();
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/MainWindow.hh workrave-1.8.5/frontend/gtkmm/src/MainWindow.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/MainWindow.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/MainWindow.hh	2008-05-06 20:23:20.000000000 +0200
@@ -146,11 +146,11 @@
                                             WPARAM wParam, LPARAM lParam);
 
   HWND win32_main_hwnd;
   HINSTANCE win32_hinstance;
 
-  SigC::Connection timeout_connection;
+  sigc::connection timeout_connection;
 #endif
 };
 
 
 // inline bool
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/Menus.cc workrave-1.8.5/frontend/gtkmm/src/Menus.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/Menus.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/Menus.cc	2008-05-06 20:23:20.000000000 +0200
@@ -302,15 +302,11 @@
   // Rest break
   string rb_icon = Util::complete_directory("timer-rest-break.png", Util::SEARCH_PATH_IMAGES);
   Gtk::Image *img = manage(new Gtk::Image(rb_icon));
   menulist.push_back(Gtk::Menu_Helpers::ImageMenuElem
                      (_("_Rest break"),
-#ifdef HAVE_GTKMM24
                       Gtk::AccelKey("<control>r"),
-#else
-                      Gtk::Menu::AccelKey("<control>r"),
-#endif
                       *img,
                       MEMBER_SLOT(*this, &Menus::on_menu_restbreak_now)));
 
 #ifdef HAVE_EXERCISES
   // Exercises
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/Menus.hh workrave-1.8.5/frontend/gtkmm/src/Menus.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/Menus.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/Menus.hh	2008-05-06 20:23:20.000000000 +0200
@@ -19,13 +19,11 @@
 #ifndef MENUS_HH
 #define MENUS_HH
 
 #include "config.h"
 
-#ifdef HAVE_GTKMM24
-#include <sigc++/compatibility.h>
-#endif
+#include <sigc++/trackable.h>
 
 #ifdef HAVE_GNOME
 #include <gnome.h>
 #endif
 
@@ -43,11 +41,11 @@
 class TimerBoxAppletView;
 
 #include <gtkmm/checkmenuitem.h>
 
 class Menus :
-  public SigC::Object
+  public sigc::trackable
 {
 public:
   Menus();
   ~Menus();
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/preinclude.h workrave-1.8.5/frontend/gtkmm/src/preinclude.h
--- workrave-1.8.5.orig/frontend/gtkmm/src/preinclude.h	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/preinclude.h	2008-05-06 20:23:20.000000000 +0200
@@ -23,15 +23,11 @@
 
 #ifndef NOMINMAX
 #define NOMINMAX
 #endif
 
-#ifdef HAVE_GTKMM24
 #define MEMBER_SLOT sigc::mem_fun
-#else
-#define MEMBER_SLOT SigC::slot
-#endif
 
 
 #undef THREAD_PRIORITY_NORMAL
 #undef THREAD_PRIORITY_LOW
 #undef THREAD_PRIORITY_HIGH
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/PreludeWindow.hh workrave-1.8.5/frontend/gtkmm/src/PreludeWindow.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/PreludeWindow.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/PreludeWindow.hh	2008-05-06 20:23:20.000000000 +0200
@@ -62,11 +62,11 @@
   void avoid_pointer(int x, int y);
 
 private:
 #ifdef WIN32
   //! Avoid time signal
-  SigC::Connection avoid_signal;
+  sigc::connection avoid_signal;
 #endif
 
   //! Avoid margin.
   const int SCREEN_MARGIN;
 
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/TimeEntry.hh workrave-1.8.5/frontend/gtkmm/src/TimeEntry.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/TimeEntry.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/TimeEntry.hh	2008-05-06 20:23:20.000000000 +0200
@@ -36,11 +36,11 @@
   ~TimeEntry();
 
   time_t get_value();
   void set_value(time_t time);
 
-  typedef SigC::Signal0<void> signal_value_changed_t;
+  typedef sigc::signal0<void> signal_value_changed_t;
   signal_value_changed_t &signal_value_changed();
 
 protected:
   virtual void on_changed();
   virtual void on_value_changed();
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/TimerBoxGtkView.cc workrave-1.8.5/frontend/gtkmm/src/TimerBoxGtkView.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/TimerBoxGtkView.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/TimerBoxGtkView.cc	2008-05-06 20:23:20.000000000 +0200
@@ -234,21 +234,14 @@
     {
       // Show sheep.
       rows = 1;
     }
 
-#ifdef HAVE_GTKMM24
   Gtk::Requisition label_size;
   Gtk::Requisition bar_size;
 
   labels[0]->size_request(label_size);
-#else
-  GtkRequisition label_size;
-  GtkRequisition bar_size;
-
-  labels[0]->size_request(&label_size);
-#endif
 
   Gtk::Requisition my_size;
   size_request(my_size);
 
   for (int i = 0; i < BREAK_ID_SIZEOF; i++)
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/X11SystrayAppletWindow.cc workrave-1.8.5/frontend/gtkmm/src/X11SystrayAppletWindow.cc
--- workrave-1.8.5.orig/frontend/gtkmm/src/X11SystrayAppletWindow.cc	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/X11SystrayAppletWindow.cc	2008-05-06 20:23:20.000000000 +0200
@@ -157,19 +157,13 @@
       menus->create_menu(Menus::MENU_APPLET);
 
       ret = AppletWindow::APPLET_STATE_VISIBLE;
       applet_orientation = ORIENTATION_UP;
 
-#ifdef HAVE_GTKMM24
       Gtk::Requisition req;
       plug->size_request(req);
       applet_size = req.height;
-#else
-      GtkRequisition req;
-      plug->size_request(&req);
-      applet_size = req.height;
-#endif
       view->set_geometry(applet_orientation, 24);
 
       applet_active = true;
       ret = APPLET_STATE_VISIBLE;
     }
@@ -235,17 +229,12 @@
 {
   TRACE_ENTER("X11SystrayAppletWindow::on_embedded");
 
   if (applet_active)
     {
-#ifdef HAVE_GTKMM24
       Gtk::Requisition req;
       plug->size_request(req);
-#else
-      GtkRequisition req;
-      plug->size_request(&req);
-#endif
 
       GtkOrientation o = egg_tray_icon_get_orientation(tray_icon);
       Orientation orientation;
 
       if (o == GTK_ORIENTATION_VERTICAL)
diff -NrU5 workrave-1.8.5.orig/frontend/gtkmm/src/X11SystrayAppletWindow.hh workrave-1.8.5/frontend/gtkmm/src/X11SystrayAppletWindow.hh
--- workrave-1.8.5.orig/frontend/gtkmm/src/X11SystrayAppletWindow.hh	2007-09-14 20:50:25.000000000 +0200
+++ workrave-1.8.5/frontend/gtkmm/src/X11SystrayAppletWindow.hh	2008-05-06 20:23:20.000000000 +0200
@@ -22,13 +22,11 @@
 #include "preinclude.h"
 #include <stdio.h>
 
 #include "AppletWindow.hh"
 
-#ifdef HAVE_GTKMM24
-#include <sigc++/compatibility.h>
-#endif
+#include <sigc++/trackable.h>
 
 #include <gtkmm/bin.h>
 #include <gtkmm/menu.h>
 #include <gtkmm/plug.h>
 #include <gtkmm/eventbox.h>
@@ -38,11 +36,11 @@
 class AppletControl;
 
 #include "eggtrayicon.h"
 
 class X11SystrayAppletWindow :
-  public SigC::Object,
+  public sigc::trackable,
   public AppletWindow
 {
 public:
   X11SystrayAppletWindow(AppletControl *control);
   virtual ~X11SystrayAppletWindow();
diff -NrU5 workrave-1.8.5.orig/frontend/plugin/distribution/gtkmm/src/NetworkPreferencePage.cc workrave-1.8.5/frontend/plugin/distribution/gtkmm/src/NetworkPreferencePage.cc
--- workrave-1.8.5.orig/frontend/plugin/distribution/gtkmm/src/NetworkPreferencePage.cc	2007-09-14 20:50:32.000000000 +0200
+++ workrave-1.8.5/frontend/plugin/distribution/gtkmm/src/NetworkPreferencePage.cc	2008-05-06 20:23:20.000000000 +0200
@@ -351,18 +351,14 @@
 NetworkPreferencePage::on_peer_remove()
 {
   TRACE_ENTER("NetworkPreferencePage::on_peer_remove");
   Glib::RefPtr<Gtk::TreeSelection> selection = peers_list->get_selection();
 
-#ifdef HAVE_GTKMM24
   const Gtk::TreeSelection::SlotForeachIter& slot =
     sigc::mem_fun(*this, &NetworkPreferencePage::remove_peer);
 
   selection->selected_foreach_iter(slot);
-#else
-  selection->selected_foreach(SigC::slot(*this, &NetworkPreferencePage::remove_peer));
-#endif
 
   Glib::RefPtr<Gtk::ListStore> new_store = Gtk::ListStore::create(peers_columns);
 
   typedef Gtk::TreeModel::Children type_children;
   type_children children = peers_store->children();
diff -NrU5 workrave-1.8.5.orig/frontend/plugin/exercises/gtkmm/src/ExercisesPanel.hh workrave-1.8.5/frontend/plugin/exercises/gtkmm/src/ExercisesPanel.hh
--- workrave-1.8.5.orig/frontend/plugin/exercises/gtkmm/src/ExercisesPanel.hh	2007-09-14 20:50:32.000000000 +0200
+++ workrave-1.8.5/frontend/plugin/exercises/gtkmm/src/ExercisesPanel.hh	2008-05-06 20:23:20.000000000 +0200
@@ -44,11 +44,11 @@
 public:
   ExercisesPanel(Gtk::HButtonBox *dialog_action_area);
   ~ExercisesPanel();
 
   void set_exercise_count(int num);
-  SigC::Signal0<void> &signal_stop() { return stop_signal; }
+  sigc::signal0<void> &signal_stop() { return stop_signal; }
 
 protected:
   void on_realize();
 
 private:
@@ -86,16 +86,16 @@
   Gtk::Tooltips *tooltips;
   Glib::RefPtr<Gtk::SizeGroup> size_group;
   const std::list<Exercise> exercises;
   std::list<Exercise>::const_iterator exercise_iterator;
   std::list<Exercise::Image>::const_iterator image_iterator;
-  SigC::Connection heartbeat_signal;
+  sigc::connection heartbeat_signal;
   int exercise_time;
   int seq_time;
   bool paused;
   bool stopped;
-  SigC::Signal0<void> stop_signal;
+  sigc::signal0<void> stop_signal;
   bool standalone;
   int exercise_num;
   int exercise_count;
   static int exercises_pointer;
 };
