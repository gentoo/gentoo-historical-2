diff -ru devtodo-0.1.17.old/src/support.cc devtodo-0.1.17.new/src/support.cc
--- devtodo-0.1.17.old/src/support.cc	2002-12-26 05:32:18.000000000 +0100
+++ devtodo-0.1.17.new/src/support.cc	2003-07-01 00:36:30.000000000 +0200
@@ -2,7 +2,7 @@
 #include <cstdlib>
 #include <cstring>
 #include <cstdio>
-#include <strstream>
+#include <sstream>
 #include <stdexcept>
 #include "support.h"
 #include "TodoDB.h"
@@ -814,7 +814,7 @@
 
 		while (in.getline(line, 1024)) {
 		string str;
-		istrstream is(line);
+		istringstream is(line);
 
 			if (is >> str) {
 				if (str[0] == '#') continue;
@@ -837,7 +837,7 @@
 					// multi-line event ?
 					if (str == "{") {
 						while (in.getline(line, 1024)) {
-						istrstream is(line);
+						istringstream is(line);
 
 							if (is >> str) {
 								if (str[0] == '#') continue;
diff -ru devtodo-0.1.17.old/util/CommandArgs.h devtodo-0.1.17.new/util/CommandArgs.h
--- devtodo-0.1.17.old/util/CommandArgs.h	2001-07-10 19:11:47.000000000 +0200
+++ devtodo-0.1.17.new/util/CommandArgs.h	2003-07-01 00:36:30.000000000 +0200
@@ -5,6 +5,7 @@
 #include <string>
 #include <vector>
 #include <iostream>
+#include <cassert>
 #include "Strings.h"
 
 using namespace std;
diff -ru devtodo-0.1.17.old/util/Regex.h devtodo-0.1.17.new/util/Regex.h
--- devtodo-0.1.17.old/util/Regex.h	2002-12-21 16:10:43.000000000 +0100
+++ devtodo-0.1.17.new/util/Regex.h	2003-07-01 00:36:30.000000000 +0200
@@ -6,6 +6,7 @@
 #include <map>
 #include <utility>
 #include <stdexcept>
+#include <cassert>
 #include <sys/types.h>
 #include "c_regex.h"
 
diff -ru devtodo-0.1.17.old/util/Strings.h devtodo-0.1.17.new/util/Strings.h
--- devtodo-0.1.17.old/util/Strings.h	2002-07-23 07:25:45.000000000 +0200
+++ devtodo-0.1.17.new/util/Strings.h	2003-07-01 00:36:30.000000000 +0200
@@ -7,7 +7,7 @@
 #include <cerrno>
 #include <iostream>
 #include <vector>
-#include <strstream>
+#include <sstream>
 #include <stdexcept>
 
 using namespace std;
@@ -118,8 +118,8 @@
 	@parameter var Variable to convert.
 */
 template <typename T> string stringify(T const &t) {
-ostrstream os;
-	os << t << '\0';
+ostringstream os;
+	os << t;
 	return os.str();
 }
 
@@ -135,7 +135,7 @@
 	@parameter str Strings to convert to type T.
 */
 template <typename T> T destringify(string const &str) {
-istrstream os(str.c_str());
+istringstream os(str);
 T t;
 
 	os >> t;
