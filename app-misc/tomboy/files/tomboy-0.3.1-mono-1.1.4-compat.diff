diff -aur tomboy-0.3.1-orig/Tomboy/Applet.cs tomboy-0.3.1/Tomboy/Applet.cs
--- tomboy-0.3.1-orig/Tomboy/Applet.cs	2005-01-18 06:32:37.000000000 -0500
+++ tomboy-0.3.1/Tomboy/Applet.cs	2005-02-18 09:15:39.636662296 -0500
@@ -7,7 +7,7 @@
 
 namespace Tomboy
 {
-	public class TomboyApplet : PanelApplet
+	public class TomboyApplet : PanelApplet.PanelApplet
 	{
 		NoteManager manager;
 		TomboyTray tray;
@@ -65,6 +65,10 @@
 
 			// FIXME: Connecting to this crashes in the C# bindings.
 			//ChangeBackground += OnChangeBackgroundEvent;
+			
+			// This is needed as on mono-1.1.4, the whole
+			// applet gets reaped, including needed menu_verbs
+			GLib.Timeout.Add(1000, new GLib.TimeoutHandler(ImALIVE));
 		}
 
 		void ShowPreferencesVerb ()
@@ -82,6 +86,11 @@
 			tray.ShowAbout ();
 		}
 
+		bool ImALIVE()
+		{
+			return true;
+		}
+
 		void OnChangeBackgroundEvent (object sender, ChangeBackgroundArgs args)
 		{
 			// This is needed to support transparent panel
diff -aur tomboy-0.3.1-orig/Tomboy/panelapplet/generated/ChangeBackgroundHandler.cs tomboy-0.3.1/Tomboy/panelapplet/generated/ChangeBackgroundHandler.cs
--- tomboy-0.3.1-orig/Tomboy/panelapplet/generated/ChangeBackgroundHandler.cs	2004-10-23 14:21:58.000000000 -0400
+++ tomboy-0.3.1/Tomboy/panelapplet/generated/ChangeBackgroundHandler.cs	2005-02-18 07:51:37.000000000 -0500
@@ -8,9 +8,9 @@
 	public delegate void ChangeBackgroundHandler(object o, ChangeBackgroundArgs args);
 
 	public class ChangeBackgroundArgs : GLib.SignalArgs {
-		public PanelApplet.BackgroundType Type{
+		public BackgroundType Type{
 			get {
-				return (PanelApplet.BackgroundType) Args[0];
+				return (BackgroundType) Args[0];
 			}
 		}
 
diff -aur tomboy-0.3.1-orig/Tomboy/panelapplet/generated/FactoryCallback.cs tomboy-0.3.1/Tomboy/panelapplet/generated/FactoryCallback.cs
--- tomboy-0.3.1-orig/Tomboy/panelapplet/generated/FactoryCallback.cs	2004-10-23 14:21:58.000000000 -0400
+++ tomboy-0.3.1/Tomboy/panelapplet/generated/FactoryCallback.cs	2005-02-18 07:51:38.000000000 -0500
@@ -5,6 +5,6 @@
 
 	using System;
 
-	public delegate bool FactoryCallback(PanelApplet.PanelApplet applet, string iid);
+	public delegate bool FactoryCallback(PanelApplet applet, string iid);
 
 }
diff -aur tomboy-0.3.1-orig/Tomboy/panelapplet/generated/PanelApplet.cs tomboy-0.3.1/Tomboy/panelapplet/generated/PanelApplet.cs
--- tomboy-0.3.1-orig/Tomboy/panelapplet/generated/PanelApplet.cs	2004-10-31 21:55:25.000000000 -0500
+++ tomboy-0.3.1/Tomboy/panelapplet/generated/PanelApplet.cs	2005-02-18 07:51:38.000000000 -0500
@@ -37,7 +37,7 @@
 		static void changebackground_cb (IntPtr applet, int type, ref Gdk.Color color, IntPtr pixmap)
 		{
 			PanelApplet obj = GLib.Object.GetObject (applet, false) as PanelApplet;
-			obj.OnChangeBackground ((PanelApplet.BackgroundType)type, color, (Gdk.Pixmap) GLib.Object.GetObject(pixmap));
+			obj.OnChangeBackground ((BackgroundType)type, color, (Gdk.Pixmap) GLib.Object.GetObject(pixmap));
 		}
 
 		private static void OverrideChangeBackground (GLib.GType gtype)
@@ -47,8 +47,8 @@
 			OverrideVirtualMethod (gtype, "change_background", ChangeBackgroundCallback);
 		}
 
-		[GLib.DefaultSignalHandler(Type=typeof(PanelApplet.PanelApplet), ConnectionMethod="OverrideChangeBackground")]
-		protected virtual void OnChangeBackground (PanelApplet.BackgroundType type, Gdk.Color color, Gdk.Pixmap pixmap)
+		[GLib.DefaultSignalHandler(Type=typeof(PanelApplet), ConnectionMethod="OverrideChangeBackground")]
+		protected virtual void OnChangeBackground (BackgroundType type, Gdk.Color color, Gdk.Pixmap pixmap)
 		{
 			GLib.Value ret = GLib.Value.Empty;
 			GLib.ValueArray inst_and_params = new GLib.ValueArray (4);
@@ -65,7 +65,7 @@
 		}
 
 		[GLib.Signal("change_background")]
-		public event PanelApplet.ChangeBackgroundHandler ChangeBackground {
+		public event ChangeBackgroundHandler ChangeBackground {
 			add {
 				if (value.Method.GetCustomAttributes(typeof(GLib.ConnectBeforeAttribute), false).Length > 0) {
 					if (BeforeHandlers["change_background"] == null)
@@ -119,7 +119,7 @@
 			OverrideVirtualMethod (gtype, "move_focus_out_of_applet", MoveFocusOutOfAppletCallback);
 		}
 
-		[GLib.DefaultSignalHandler(Type=typeof(PanelApplet.PanelApplet), ConnectionMethod="OverrideMoveFocusOutOfApplet")]
+		[GLib.DefaultSignalHandler(Type=typeof(PanelApplet), ConnectionMethod="OverrideMoveFocusOutOfApplet")]
 		protected virtual void OnMoveFocusOutOfApplet (Gtk.DirectionType direction)
 		{
 			GLib.Value ret = GLib.Value.Empty;
@@ -133,7 +133,7 @@
 		}
 
 		[GLib.Signal("move_focus_out_of_applet")]
-		public event PanelApplet.MoveFocusOutOfAppletHandler MoveFocusOutOfApplet {
+		public event MoveFocusOutOfAppletHandler MoveFocusOutOfApplet {
 			add {
 				if (value.Method.GetCustomAttributes(typeof(GLib.ConnectBeforeAttribute), false).Length > 0) {
 					if (BeforeHandlers["move_focus_out_of_applet"] == null)
@@ -187,7 +187,7 @@
 			OverrideVirtualMethod (gtype, "change_size", ChangeSizeCallback);
 		}
 
-		[GLib.DefaultSignalHandler(Type=typeof(PanelApplet.PanelApplet), ConnectionMethod="OverrideChangeSize")]
+		[GLib.DefaultSignalHandler(Type=typeof(PanelApplet), ConnectionMethod="OverrideChangeSize")]
 		protected virtual void OnChangeSize (uint size)
 		{
 			GLib.Value ret = GLib.Value.Empty;
@@ -201,7 +201,7 @@
 		}
 
 		[GLib.Signal("change_size")]
-		public event PanelApplet.ChangeSizeHandler ChangeSize {
+		public event ChangeSizeHandler ChangeSize {
 			add {
 				if (value.Method.GetCustomAttributes(typeof(GLib.ConnectBeforeAttribute), false).Length > 0) {
 					if (BeforeHandlers["change_size"] == null)
@@ -303,9 +303,9 @@
 		[DllImport("panel-applet-2")]
 		static extern int panel_applet_get_background(IntPtr raw, ref Gdk.Color color, IntPtr pixmap);
 
-		public PanelApplet.BackgroundType GetBackground(Gdk.Color color, Gdk.Pixmap pixmap) {
+		public BackgroundType GetBackground(Gdk.Color color, Gdk.Pixmap pixmap) {
 			int raw_ret = panel_applet_get_background(Handle, ref color, pixmap.Handle);
-			PanelApplet.BackgroundType ret = (PanelApplet.BackgroundType)raw_ret;
+			BackgroundType ret = (BackgroundType)raw_ret;
 			return ret;
 		}
 
@@ -373,10 +373,10 @@
 		[DllImport("panel-applet-2")]
 		static extern void panel_applet_set_flags(IntPtr raw, int flags);
 
-		public PanelApplet.Flags AppletFlags { 
+		public Flags AppletFlags { 
 			get {
 				int raw_ret = panel_applet_get_flags(Handle);
-				PanelApplet.Flags ret = (PanelApplet.Flags)raw_ret;
+				Flags ret = (Flags)raw_ret;
 				return ret;
 			}
 			set {
