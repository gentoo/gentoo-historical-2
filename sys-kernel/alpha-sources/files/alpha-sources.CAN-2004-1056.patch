diff -ur linux-2.4.22/drivers/char/drm/i810.h linux-2.4.22.plasmaroo/drivers/char/drm/i810.h
--- linux-2.4.22/drivers/char/drm/i810.h	2001-08-08 17:42:14.000000000 +0100
+++ linux-2.4.22.plasmaroo/drivers/char/drm/i810.h	2004-12-24 14:56:13.644644456 +0000
@@ -113,4 +113,14 @@
 #define DRIVER_AGP_BUFFERS_MAP( dev )					\
 	((drm_i810_private_t *)((dev)->dev_private))->buffer_map
 
+#define LOCK_TEST_WITH_RETURN( dev )                                    \
+do {                                                                    \
+        if ( !_DRM_LOCK_IS_HELD( dev->lock.hw_lock->lock ) ||           \
+             dev->lock.pid != current->pid ) {                          \
+                DRM_ERROR( "%s called without lock held\n",             \
+                           __FUNCTION__ );                              \
+                return -EINVAL;                                         \
+        }                                                               \
+} while (0)
+
 #endif
diff -ur linux-2.4.22/drivers/char/drm/i810_dma.c linux-2.4.22.plasmaroo/drivers/char/drm/i810_dma.c
--- linux-2.4.22/drivers/char/drm/i810_dma.c	2002-11-28 23:53:12.000000000 +0000
+++ linux-2.4.22.plasmaroo/drivers/char/drm/i810_dma.c	2004-12-24 14:57:28.626245520 +0000
@@ -1071,10 +1071,7 @@
    	drm_device_t	  *dev	  = priv->dev;
 
    	DRM_DEBUG("i810_flush_ioctl\n");
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_flush_ioctl called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
    	i810_flush_queue(dev);
    	return 0;
@@ -1096,10 +1093,7 @@
 	if (copy_from_user(&vertex, (drm_i810_vertex_t *)arg, sizeof(vertex)))
 		return -EFAULT;
 
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_dma_vertex called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
 	DRM_DEBUG("i810 dma vertex, idx %d used %d discard %d\n",
 		  vertex.idx, vertex.used, vertex.discard);
@@ -1130,10 +1124,7 @@
    	if (copy_from_user(&clear, (drm_i810_clear_t *)arg, sizeof(clear)))
 		return -EFAULT;
 
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_clear_bufs called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
  	/* GH: Someone's doing nasty things... */
  	if (!dev->dev_private) {
@@ -1154,10 +1145,7 @@
 
 	DRM_DEBUG("i810_swap_bufs\n");
 
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_swap_buf called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 
 	i810_dma_dispatch_swap( dev );
    	return 0;
@@ -1193,10 +1181,7 @@
    	if (copy_from_user(&d, (drm_i810_dma_t *)arg, sizeof(d)))
 		return -EFAULT;
 
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_dma called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 
 	d.granted = 0;
 
@@ -1226,10 +1211,7 @@
 	drm_i810_buf_priv_t *buf_priv;
 	drm_device_dma_t *dma = dev->dma;
 
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_dma called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
    	if (copy_from_user(&d, (drm_i810_copy_t *)arg, sizeof(d)))
 		return -EFAULT;
@@ -1334,11 +1316,7 @@
 	if (copy_from_user(&mc, (drm_i810_mc_t *)arg, sizeof(mc)))
 		return -EFAULT;
 
-
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_dma_mc called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 
 	i810_dma_dispatch_mc(dev, dma->buflist[mc.idx], mc.used,
 		mc.last_render );
@@ -1382,10 +1360,7 @@
 	drm_device_t *dev = priv->dev;
 	drm_i810_private_t *dev_priv = (drm_i810_private_t *)dev->dev_private;
 
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_fstatus called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 	return I810_READ(0x30008);
 }
 
@@ -1396,10 +1371,7 @@
 	drm_device_t *dev = priv->dev;
 	drm_i810_private_t *dev_priv = (drm_i810_private_t *)dev->dev_private;
 
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_ov0_flip called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 
 	//Tell the overlay to update
 	I810_WRITE(0x30000,dev_priv->overlay_physical | 0x80000000);
diff -ur linux-2.4.22/drivers/char/drm/i830.h linux-2.4.22.plasmaroo/drivers/char/drm/i830.h
--- linux-2.4.22/drivers/char/drm/i830.h	2002-11-28 23:53:12.000000000 +0000
+++ linux-2.4.22.plasmaroo/drivers/char/drm/i830.h	2004-12-24 14:56:13.658642328 +0000
@@ -113,4 +113,14 @@
 #define DRIVER_AGP_BUFFERS_MAP( dev )					\
 	((drm_i830_private_t *)((dev)->dev_private))->buffer_map
 
+#define LOCK_TEST_WITH_RETURN( dev )                                    \
+do {                                                                    \
+        if ( !_DRM_LOCK_IS_HELD( dev->lock.hw_lock->lock ) ||           \
+             dev->lock.pid != current->pid ) {                          \
+                DRM_ERROR( "%s called without lock held\n",             \
+                           __FUNCTION__ );                              \
+                return -EINVAL;                                         \
+        }                                                               \
+} while (0)
+
 #endif
diff -ur linux-2.4.22/drivers/char/drm/i830_dma.c linux-2.4.22.plasmaroo/drivers/char/drm/i830_dma.c
--- linux-2.4.22/drivers/char/drm/i830_dma.c	2002-11-28 23:53:12.000000000 +0000
+++ linux-2.4.22.plasmaroo/drivers/char/drm/i830_dma.c	2004-12-24 14:57:55.225201864 +0000
@@ -1187,10 +1187,8 @@
    	drm_device_t	  *dev	  = priv->dev;
    
    	DRM_DEBUG("i830_flush_ioctl\n");
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i830_flush_ioctl called without lock held\n");
-		return -EINVAL;
-	}
+
+	LOCK_TEST_WITH_RETURN(dev);
 
    	i830_flush_queue(dev);
    	return 0;
@@ -1211,10 +1209,7 @@
 	if (copy_from_user(&vertex, (drm_i830_vertex_t *)arg, sizeof(vertex)))
 		return -EFAULT;
 
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i830_dma_vertex called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 
 	DRM_DEBUG("i830 dma vertex, idx %d used %d discard %d\n",
 		  vertex.idx, vertex.used, vertex.discard);
@@ -1241,10 +1236,7 @@
    	if (copy_from_user(&clear, (drm_i830_clear_t *)arg, sizeof(clear)))
 		return -EFAULT;
    
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i830_clear_bufs called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 
 	/* GH: Someone's doing nasty things... */
 	if (!dev->dev_private) {
@@ -1266,10 +1258,7 @@
    
 	DRM_DEBUG("i830_swap_bufs\n");
 
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i830_swap_buf called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 
 	i830_dma_dispatch_swap( dev );
    	return 0;
@@ -1305,10 +1294,7 @@
    	if (copy_from_user(&d, (drm_i830_dma_t *)arg, sizeof(d)))
 		return -EFAULT;
    
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i830_dma called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev); 
 	
 	d.granted = 0;
 
@@ -1338,10 +1324,7 @@
 	drm_i830_buf_priv_t *buf_priv;
 	drm_device_dma_t *dma = dev->dma;
 
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i830_dma called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
    
    	if (copy_from_user(&d, (drm_i830_copy_t *)arg, sizeof(d)))
 		return -EFAULT;
diff -ur linux-2.4.22/drivers/char/drm-4.0/drmP.h linux-2.4.22.plasmaroo/drivers/char/drm-4.0/drmP.h
--- linux-2.4.22/drivers/char/drm-4.0/drmP.h	2002-02-25 19:37:57.000000000 +0000
+++ linux-2.4.22.plasmaroo/drivers/char/drm-4.0/drmP.h	2004-12-24 14:56:16.389227216 +0000
@@ -294,6 +294,16 @@
 #define DRM_BUFCOUNT(x) ((x)->count - DRM_LEFTCOUNT(x))
 #define DRM_WAITCOUNT(dev,idx) DRM_BUFCOUNT(&dev->queuelist[idx]->waitlist)
 
+#define LOCK_TEST_WITH_RETURN( dev )                                    \
+do {                                                                    \
+        if ( !_DRM_LOCK_IS_HELD( dev->lock.hw_lock->lock ) ||           \
+             dev->lock.pid != current->pid ) {                          \
+                DRM_ERROR( "%s called without lock held\n",             \
+                           __FUNCTION__ );                              \
+                return -EINVAL;                                         \
+        }                                                               \
+} while (0)
+
 typedef int drm_ioctl_t(struct inode *inode, struct file *filp,
 			unsigned int cmd, unsigned long arg);
 
diff -ur linux-2.4.22/drivers/char/drm-4.0/i810_dma.c linux-2.4.22.plasmaroo/drivers/char/drm-4.0/i810_dma.c
--- linux-2.4.22/drivers/char/drm-4.0/i810_dma.c	2003-06-13 15:51:32.000000000 +0100
+++ linux-2.4.22.plasmaroo/drivers/char/drm-4.0/i810_dma.c	2004-12-24 14:56:16.401225392 +0000
@@ -1249,10 +1249,7 @@
    	drm_device_t	  *dev	  = priv->dev;
    
    	DRM_DEBUG("i810_flush_ioctl\n");
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_flush_ioctl called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
    	i810_flush_queue(dev);
    	return 0;
@@ -1274,10 +1271,7 @@
 	if (copy_from_user(&vertex, (drm_i810_vertex_t *)arg, sizeof(vertex)))
 		return -EFAULT;
 
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_dma_vertex called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
 	DRM_DEBUG("i810 dma vertex, idx %d used %d discard %d\n",
 		  vertex.idx, vertex.used, vertex.discard);
@@ -1308,10 +1302,7 @@
    	if (copy_from_user(&clear, (drm_i810_clear_t *)arg, sizeof(clear)))
 		return -EFAULT;
    
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_clear_bufs called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
 	i810_dma_dispatch_clear( dev, clear.flags, 
 				 clear.clear_color, 
@@ -1327,10 +1318,7 @@
    
 	DRM_DEBUG("i810_swap_bufs\n");
 
-   	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_swap_buf called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 
 	i810_dma_dispatch_swap( dev );
    	return 0;
@@ -1366,10 +1354,7 @@
    	if (copy_from_user(&d, (drm_i810_dma_t *)arg, sizeof(d)))
 		return -EFAULT;
    
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_dma called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
 	
 	d.granted = 0;
 
@@ -1399,10 +1384,7 @@
 	drm_i810_buf_priv_t *buf_priv;
 	drm_device_dma_t *dma = dev->dma;
 
-	if(!_DRM_LOCK_IS_HELD(dev->lock.hw_lock->lock)) {
-		DRM_ERROR("i810_dma called without lock held\n");
-		return -EINVAL;
-	}
+	LOCK_TEST_WITH_RETURN(dev);
    
    	if (copy_from_user(&d, (drm_i810_copy_t *)arg, sizeof(d)))
 		return -EFAULT;
