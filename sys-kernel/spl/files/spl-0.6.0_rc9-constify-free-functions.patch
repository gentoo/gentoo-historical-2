From 9517a46638c8b2c22a69903e24081de4f608fde7 Mon Sep 17 00:00:00 2001
From: Richard Yao <ryao@cs.stonybrook.edu>
Date: Mon, 25 Jun 2012 13:22:21 -0400
Subject: [PATCH] Constify memory management functions

This avoids build failures on Linux 3.3.y and later.

Signed-off-by: Richard Yao <ryao@cs.stonybrook.edu>
---
 include/sys/kmem.h    |    8 ++++----
 module/spl/spl-kmem.c |   10 +++++-----
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/include/sys/kmem.h b/include/sys/kmem.h
index eda4eee..796af44 100644
--- a/include/sys/kmem.h
+++ b/include/sys/kmem.h
@@ -214,9 +214,9 @@
 #  define vmem_free(ptr, sz)            vmem_free_track((ptr), (sz))
 
 extern void *kmem_alloc_track(size_t, int, const char *, int, int, int);
-extern void kmem_free_track(void *, size_t);
+extern void kmem_free_track(const void *, size_t);
 extern void *vmem_alloc_track(size_t, int, const char *, int);
-extern void vmem_free_track(void *, size_t);
+extern void vmem_free_track(const void *, size_t);
 
 # else /* DEBUG_KMEM_TRACKING */
 /*
@@ -243,9 +243,9 @@
 #  define vmem_free(ptr, sz)            vmem_free_debug((ptr), (sz))
 
 extern void *kmem_alloc_debug(size_t, int, const char *, int, int, int);
-extern void kmem_free_debug(void *, size_t);
+extern void kmem_free_debug(const void *, size_t);
 extern void *vmem_alloc_debug(size_t, int, const char *, int);
-extern void vmem_free_debug(void *, size_t);
+extern void vmem_free_debug(const void *, size_t);
 
 # endif /* DEBUG_KMEM_TRACKING */
 #else /* DEBUG_KMEM */
diff --git a/module/spl/spl-kmem.c b/module/spl/spl-kmem.c
index a50927c..448297a 100644
--- a/module/spl/spl-kmem.c
+++ b/module/spl/spl-kmem.c
@@ -385,7 +385,7 @@ char *kvasprintf(gfp_t gfp, const char *fmt, va_list ap)
 EXPORT_SYMBOL(vmem_list);
 
 static kmem_debug_t *
-kmem_del_init(spinlock_t *lock, struct hlist_head *table, int bits, void *addr)
+kmem_del_init(spinlock_t *lock, struct hlist_head *table, int bits, const void *addr)
 {
 	struct hlist_head *head;
 	struct hlist_node *node;
@@ -504,7 +504,7 @@ char *kvasprintf(gfp_t gfp, const char *fmt, va_list ap)
 EXPORT_SYMBOL(kmem_alloc_track);
 
 void
-kmem_free_track(void *ptr, size_t size)
+kmem_free_track(const void *ptr, size_t size)
 {
 	kmem_debug_t *dptr;
 	SENTRY;
@@ -619,7 +619,7 @@ char *kvasprintf(gfp_t gfp, const char *fmt, va_list ap)
 EXPORT_SYMBOL(vmem_alloc_track);
 
 void
-vmem_free_track(void *ptr, size_t size)
+vmem_free_track(const void *ptr, size_t size)
 {
 	kmem_debug_t *dptr;
 	SENTRY;
@@ -706,7 +706,7 @@ char *kvasprintf(gfp_t gfp, const char *fmt, va_list ap)
 EXPORT_SYMBOL(kmem_alloc_debug);
 
 void
-kmem_free_debug(void *ptr, size_t size)
+kmem_free_debug(const void *ptr, size_t size)
 {
 	SENTRY;
 
@@ -758,7 +758,7 @@ char *kvasprintf(gfp_t gfp, const char *fmt, va_list ap)
 EXPORT_SYMBOL(vmem_alloc_debug);
 
 void
-vmem_free_debug(void *ptr, size_t size)
+vmem_free_debug(const void *ptr, size_t size)
 {
 	SENTRY;
 
-- 
1.7.10

