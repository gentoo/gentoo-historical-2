From: Konstantin Khlebnikov <khlebnikov@openvz.org>
Date: Mon, 5 Apr 2010 11:38:29 +0000 (+0400)
Subject: CPT: check signal curr_target at restore
X-Git-Url: http://git.openvz.org/?p=linux-2.6.27-openvz;a=commitdiff_plain;h=0eac9fd14f22c8f217de47db339ca82a574c075b;hp=9248c37200a97a9ab41019692aaf7fb70f0ba34b

CPT: check signal curr_target at restore

set signal curr_target to current if right task was not found.
fix oops after broken restore.

"curr_target" controls round robin signal target balance over process
threads, there no reasons to care about migration accuracy.

http://bugzilla.openvz.org/show_bug.cgi?id=1467

Signed-off-by: Konstantin Khlebnikov <khlebnikov@openvz.org>
Signed-off-by: Pavel Emelyanov <xemul@openvz.org>
---

diff --git a/kernel/cpt/rst_process.c b/kernel/cpt/rst_process.c
index 873aec6..50b1d8a 100644
--- a/kernel/cpt/rst_process.c
+++ b/kernel/cpt/rst_process.c
@@ -421,8 +421,13 @@ restore_one_signal_struct(struct cpt_task_image *ti, int *exiting, cpt_context_t
 		}
 	}
 
-	if (si->cpt_curr_target)
+	if (si->cpt_curr_target) {
 		current->signal->curr_target = find_task_by_vpid(si->cpt_curr_target);
+		if (current->signal->curr_target == NULL) {
+			wprintk_ctx("oops, curr_target=NULL, pid=%u\n", si->cpt_curr_target);
+			current->signal->curr_target = current;
+		}
+	}
 	current->signal->flags = 0;
 	*exiting = si->cpt_group_exit;
 	current->signal->group_exit_code = si->cpt_group_exit_code;
