http://bugzilla.openvz.org/show_bug.cgi?id=1586
http://bugs.gentoo.org/show_bug.cgi?id=329083

 - Add tricks for hrtimer C/R code
 - More vDSO32 conditional compilation on dump/restore
 kernel/cpt/cpt_dump.c   |    4 ++--
 kernel/cpt/cpt_mm.h     |    2 +-
 kernel/cpt/rst_mm.c     |    2 ++
 kernel/cpt/rst_undump.c |    6 +++---
 4 files changed, 8 insertions(+), 6 deletions(-)
--- linux-2.6-openvz/kernel/cpt/cpt_dump.c	
+++ linux-2.6-openvz/kernel/cpt/cpt_dump.c	
@@ -843,7 +843,7 @@ static int cpt_dump_utsname(cpt_context_
 	return 0;
 }
 
-#ifndef CONFIG_IA64
+#if defined(CONFIG_X86_32) || defined(CONFIG_COMPAT)
 static int cpt_dump_vsyscall(cpt_context_t *ctx)
 {
 	struct cpt_page_block *pgb = cpt_get_buf(ctx);
@@ -947,7 +947,7 @@ int cpt_dump(struct cpt_context *ctx)
 	if (!err)
 		err = cpt_dump_utsname(ctx);
 
-#ifndef CONFIG_IA64
+#if defined(CONFIG_X86_32) || defined(CONFIG_COMPAT)
 	if (!err)
 		err = cpt_dump_vsyscall(ctx);
 #endif
--- linux-2.6-openvz/kernel/cpt/cpt_mm.h	
+++ linux-2.6-openvz/kernel/cpt/cpt_mm.h	
@@ -27,7 +27,7 @@ extern int arch_setup_additional_pages(s
 				       unsigned long map_address);
 #endif
 
-#ifdef CONFIG_X86
+#if defined(CONFIG_X86_32) || defined(CONFIG_COMPAT)
 extern struct page *vdso32_pages[1];
 #define vsyscall_addr page_address(vdso32_pages[0])
 #endif
--- linux-2.6-openvz/kernel/cpt/rst_mm.c	
+++ linux-2.6-openvz/kernel/cpt/rst_mm.c	
@@ -982,8 +982,10 @@ static int do_rst_mm(struct cpt_mm_image
 #ifndef CONFIG_IA64
 	if (ctx->image_version >= CPT_VERSION_9) {
 		mm->context.vdso = cpt_ptr_import(vmi->cpt_vdso);
+#if defined(CONFIG_X86_32) || defined(CONFIG_COMPAT)
 		current_thread_info()->sysenter_return = 
 			VDSO32_SYMBOL(mm->context.vdso, SYSENTER_RETURN);
+#endif
 	}
 #endif
 
--- linux-2.6-openvz/kernel/cpt/rst_undump.c	
+++ linux-2.6-openvz/kernel/cpt/rst_undump.c	
@@ -397,7 +397,7 @@ static int hook(void *arg)
 
 			rb = &task_thread_info(current)->restart_block;
 			rb->fn = hrtimer_nanosleep_restart;
-#ifdef CONFIG_COMPAT
+#if defined(CONFIG_X86_64) && defined(CONFIG_COMPAT)
 			if (ti->cpt_restart.fn == CPT_RBL_COMPAT_NANOSLEEP)
 				rb->fn = compat_nanosleep_restart;
 #endif
@@ -797,7 +797,7 @@ static int vps_rst_restore_tree(struct c
 	return err;
 }
 
-#ifndef CONFIG_IA64
+#if defined(CONFIG_X86_32) || defined(CONFIG_COMPAT)
 int rst_read_vdso(struct cpt_context *ctx)
 {
 	int err;
@@ -871,7 +871,7 @@ int vps_rst_undump(struct cpt_context *c
 #ifdef CONFIG_VZ_CHECKPOINT_LAZY
 	err = rst_setup_pagein(ctx);
 #endif
-#ifndef CONFIG_IA64
+#if defined(CONFIG_X86_32) || defined(CONFIG_COMPAT)
 	if (err == 0)
 		err = rst_read_vdso(ctx);
 #endif
