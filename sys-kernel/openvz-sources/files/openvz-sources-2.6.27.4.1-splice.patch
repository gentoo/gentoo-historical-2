From: Pavel Emelyanov <xemul@openvzorg>
Date: Mon, 5 Apr 2010 11:35:58 +0000 (+0400)
Subject: cpt: Don't mind the tsk->splice_pipe cache at cpt time
X-Git-Url: http://git.openvz.org/?p=linux-2.6.27-openvz;a=commitdiff_plain;h=9248c37200a97a9ab41019692aaf7fb70f0ba34b;hp=193ba36c82f6097e910a47f12cce85833fae9d57

cpt: Don't mind the tsk->splice_pipe cache at cpt time

This field is just a cache for sendfile systemcall. It can be dropped
safely during migration - the first sendfile after restore will create
it back.

http://bugzilla.openvz.org/show_bug.cgi?id=881

Signed-off-by: Pavel Emelyanov <xemul@openvz.org>
---

diff --git a/kernel/cpt/cpt_process.c b/kernel/cpt/cpt_process.c
index 57bdcb2..dd44694 100644
--- a/kernel/cpt/cpt_process.c
+++ b/kernel/cpt/cpt_process.c
@@ -712,10 +712,6 @@ static int dump_one_signal_struct(cpt_object_t *obj, struct cpt_context *ctx)
 
 int cpt_check_unsupported(struct task_struct *tsk, cpt_context_t *ctx)
 {
-	if (tsk->splice_pipe) {
-		eprintk_ctx("splice is used by " CPT_FID "\n", CPT_TID(tsk));
-		return -EBUSY;
-	}
 #ifdef CONFIG_KEYS
 	if (tsk->request_key_auth || tsk->thread_keyring) {
 		eprintk_ctx("keys are used by " CPT_FID "\n", CPT_TID(tsk));
