diff -ruNp 9200-test-filewriter.patch-old/kernel/power/suspend_file.c 9200-test-filewriter.patch-new/kernel/power/suspend_file.c
--- 9200-test-filewriter.patch-old/kernel/power/suspend_file.c	2005-12-06 13:36:12.000000000 +1000
+++ 9200-test-filewriter.patch-new/kernel/power/suspend_file.c	2005-12-06 10:46:59.000000000 +1000
@@ -305,14 +305,30 @@ static void filewriter_get_target_info(c
 			return;
 		}
 
+		target_file = NULL;
 		resume_dev_t = name_to_dev_t(target);
 		if (!resume_dev_t) {
 			printk("Open file %s returned %p and name_to_devt failed.\n", target, target_file);
+			if (!resume_dev_t) {
+				struct kstat stat;
+				int error = vfs_stat(target, &stat);
+				if (error) {
+					printk("Stating the file also failed. Nothing more we can do.\n");
+					return;
+				}
+				resume_dev_t = stat.rdev;
+			}
 			return;
 		}
 	     	target_bdev = open_by_devnum(resume_dev_t, FMODE_READ);
+		if (IS_ERR(target_bdev)) {
+			printk("Got a dev_num (%lx) but failed to open it.\n",
+					(unsigned long) resume_dev_t);
+			return;
+		}
 		printk("Set bdev in get target info.\n");
 		used_devt = 1;
+		target_inode = target_bdev->bd_inode;
 	} else
 		target_inode = target_file->f_mapping->host;
 
@@ -344,8 +360,10 @@ static void filewriter_get_target_info(c
 	return;
 cleanup:
 	target_inode = NULL;
-	filp_close(target_file, NULL);
-	target_file = NULL;
+	if (target_file) {
+		filp_close(target_file, NULL);
+		target_file = NULL;
+	}
 	get_target_info(0);
 }
 
@@ -948,6 +966,65 @@ static void filewriter_mark_resume_attem
 	filewriter_signature_op(MARK_RESUME_ATTEMPTED);
 }
 
+static void filewriter_set_resume2(void)
+{
+	char *buffer = (char *) get_zeroed_page(GFP_ATOMIC);
+	char *buffer2 = (char *) get_zeroed_page(GFP_ATOMIC);
+	unsigned long sector = bmap(target_inode, 0);
+	int offset = 0;
+
+	if (target_bdev) {
+		set_devinfo(target_bdev, target_inode->i_blkbits);
+
+		bdevname(target_bdev, buffer2);
+		offset += snprintf(buffer + offset, PAGE_SIZE - offset, 
+				"/dev/%s", buffer2);
+		
+		if (sector)
+			offset += snprintf(buffer + offset, PAGE_SIZE - offset,
+				":0x%lx", sector << devinfo.bmap_shift);
+	} else
+		offset += snprintf(buffer + offset, PAGE_SIZE - offset,
+				"%s is not a valid target.", filewriter_target);
+			
+	sprintf(resume2_file, "file:%s", buffer);
+
+	free_page((unsigned long) buffer);
+	free_page((unsigned long) buffer2);
+
+	attempt_to_parse_resume_device();
+}
+
+static int __test_filewriter_target(char *target, int resume_time)
+{
+	filewriter_get_target_info(filewriter_target, 0, 0);
+	if (filewriter_signature_op(GET_IMAGE_EXISTS) > -1) {
+		printk(name_suspend "Filewriter: File signature found.\n");
+		if (!resume_time)
+			filewriter_set_resume2();
+		
+		suspend_bio_ops.set_posn(&filewriter_posn);
+		suspend_bio_ops.set_devinfo(&devinfo);
+
+		return 0;
+	}
+
+	if (*filewriter_target)
+		printk(KERN_ERR name_suspend
+			"Filewriter: Sorry. No signature found at %s.\n",
+			filewriter_target);
+	else
+		printk(KERN_ERR name_suspend
+			"Filewriter: Sorry. No signature found.\n");
+
+	return 1;
+}
+
+static void test_filewriter_target(void)
+{
+	__test_filewriter_target(filewriter_target, 0);
+}
+
 /*
  * Parse Image Location
  *
@@ -969,7 +1046,7 @@ static void filewriter_mark_resume_attem
 static int filewriter_parse_sig_location(char *commandline, int only_writer)
 {
 	char *thischar, *devstart = NULL, *colon = NULL, *at_symbol = NULL;
-	int signature_found, result = -EINVAL, target_blocksize = 0;
+	int result = -EINVAL, target_blocksize = 0;
 
 	if (strncmp(commandline, "file:", 5)) {
 		if (!only_writer)
@@ -1020,11 +1097,6 @@ static int filewriter_parse_sig_location
 	
 	filewriter_get_target_info(commandline, 0, 1);
 
-	if (colon)
-		*colon = ':';
-	if (at_symbol)
-		*at_symbol = '@';
-
 	if (!target_bdev || IS_ERR(target_bdev)) {
 		target_bdev = NULL;
 		result = -1;
@@ -1034,52 +1106,15 @@ static int filewriter_parse_sig_location
 	if (target_blocksize)
 		set_devinfo(target_bdev, generic_ffs(target_blocksize));
 
-	signature_found = filewriter_signature_op(GET_IMAGE_EXISTS);
-	
-	if (signature_found > -1) {
-		printk(name_suspend "Filewriter: File signature found.\n");
-		result = 0;
-	} else {
-		if (*filewriter_target)
-			printk(KERN_ERR name_suspend
-				"Filewriter: Sorry. No signature found at %s\n",
-				filewriter_target);
-		else
-			printk(KERN_ERR name_suspend
-				"Filewriter: Sorry. No signature found.\n");
-	}
+	result = __test_filewriter_target(commandline, 1);
 
 out:
-	return result;
-}
-
-static void filewriter_set_resume2(void)
-{
-	char *buffer = (char *) get_zeroed_page(GFP_ATOMIC);
-	char *buffer2 = (char *) get_zeroed_page(GFP_ATOMIC);
-	unsigned long sector = bmap(target_inode, 0);
-	int offset = 0;
-
-	if (target_bdev) {
-		set_devinfo(target_bdev, target_inode->i_blkbits);
-
-		bdevname(target_bdev, buffer2);
-		offset += snprintf(buffer + offset, PAGE_SIZE - offset, 
-				"/dev/%s", buffer2);
-		
-		if (sector)
-			offset += snprintf(buffer + offset, PAGE_SIZE - offset,
-				":0x%lx", sector << devinfo.bmap_shift);
-	} else
-		offset += snprintf(buffer + offset, PAGE_SIZE - offset,
-				"%s is not a valid target.", filewriter_target);
-			
-	sprintf(resume2_file, "file:%s", buffer);
-
-	free_page((unsigned long) buffer);
-	free_page((unsigned long) buffer2);
+	if (colon)
+		*colon = ':';
+	if (at_symbol)
+		*at_symbol = '@';
 
-	attempt_to_parse_resume_device();
+	return result;
 }
 
 /* filewriter_save_config_info
@@ -1107,26 +1142,6 @@ static void filewriter_load_config_info(
 	strcpy(filewriter_target, buffer);
 }
 
-static void test_filewriter_target(void)
-{
-	filewriter_get_target_info(filewriter_target, 0, 0);
-	if (filewriter_signature_op(GET_IMAGE_EXISTS) > -1) {
-		printk(name_suspend "Filewriter: File signature found.\n");
-		filewriter_set_resume2();
-		
-		suspend_bio_ops.set_posn(&filewriter_posn);
-		suspend_bio_ops.set_devinfo(&devinfo);
-	} else {
-		if (*filewriter_target)
-			printk(KERN_ERR name_suspend
-				"Filewriter: Sorry. No signature found at %s.\n",
-				filewriter_target);
-		else
-			printk(KERN_ERR name_suspend
-				"Filewriter: Sorry. No signature found.\n");
-	}
-}
-
 static int filewriter_initialise(int starting_cycle)
 {
 	int result = 0;
