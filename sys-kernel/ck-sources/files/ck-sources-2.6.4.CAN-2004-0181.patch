--- linux-2.6.3/fs/jfs/jfs_logmgr.c.zy62.orig	2004-02-17 20:57:59.000000000 -0700
+++ linux-2.6.3/fs/jfs/jfs_logmgr.c	2004-04-02 16:57:38.000000000 -0700
@@ -1702,7 +1702,7 @@
 		lbuf = kmalloc(sizeof(struct lbuf), GFP_KERNEL);
 		if (lbuf == 0)
 			goto error;
-		lbuf->l_ldata = (char *) __get_free_page(GFP_KERNEL);
+		lbuf->l_ldata = (char *) get_zeroed_page(GFP_KERNEL);
 		if (lbuf->l_ldata == 0) {
 			kfree(lbuf);
 			goto error;
--- linux-2.6.3/fs/jfs/jfs_metapage.c.zy62.orig	2004-02-17 20:57:20.000000000 -0700
+++ linux-2.6.3/fs/jfs/jfs_metapage.c	2004-04-02 16:29:03.000000000 -0700
@@ -341,6 +341,10 @@
 		}
 		mp->data = kmap(mp->page) + page_offset;
 	}
+
+	if (new)
+		memset(mp->data, 0, PSIZE);
+
 	jfs_info("__get_metapage: returning = 0x%p", mp);
 	return mp;
 
--- linux-2.6.3/fs/jfs/super.c.zy62.orig	2004-02-17 20:57:48.000000000 -0700
+++ linux-2.6.3/fs/jfs/super.c	2004-04-02 17:57:02.903281078 -0700
@@ -549,11 +549,11 @@
 
 	if ((flags & (SLAB_CTOR_VERIFY | SLAB_CTOR_CONSTRUCTOR)) ==
 	    SLAB_CTOR_CONSTRUCTOR) {
+		memset(jfs_ip, 0, sizeof(struct jfs_inode_info));
 		INIT_LIST_HEAD(&jfs_ip->anon_inode_list);
 		init_rwsem(&jfs_ip->rdwrlock);
 		init_MUTEX(&jfs_ip->commit_sem);
 		init_rwsem(&jfs_ip->xattr_sem);
-		jfs_ip->atlhead = 0;
 		jfs_ip->active_ag = -1;
 #ifdef CONFIG_JFS_POSIX_ACL
 		jfs_ip->i_acl = JFS_ACL_NOT_CACHED;
