commit 422e0901ddd760b230dc378e3b9359bd6d36200a
Author: hasufell <hasufell@gentoo.org>
Date:   Sun Jul 21 18:59:14 2013 +0200

    BUILD: fix FindMiniZip.cmake module to use pkg-config
	https://github.com/gwaldron/osgearth/pull/340

diff --git a/CMakeModules/FindMiniZip.cmake b/CMakeModules/FindMiniZip.cmake
index c80ebbf..c8cae16 100644
--- a/CMakeModules/FindMiniZip.cmake
+++ b/CMakeModules/FindMiniZip.cmake
@@ -5,50 +5,65 @@
 # MINIZIP_INCLUDE_DIR, where to find the headers
 #
 
-FIND_PATH(MINIZIP_INCLUDE_DIR zip.h
-    ${CMAKE_SOURCE_DIR}/src/3rdparty/minizip
-    $ENV{MINIZIP_DIR}/include
-    $ENV{MINIZIP_DIR}
-    $ENV{OSGDIR}/include
-    $ENV{OSGDIR}
-    $ENV{OSG_ROOT}/include
-    ~/Library/Frameworks
-    /Library/Frameworks
-    /usr/local/include
-    /usr/include
-    /sw/include # Fink
-    /opt/local/include # DarwinPorts
-    /opt/csw/include # Blastwave
-    /opt/include
-    [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session\ Manager\\Environment;OSG_ROOT]/include
-    /usr/freeware/include
-)
+# prefer pkg-config
+IF(UNIX)
+	INCLUDE(FindPkgConfig)
+	IF(PKG_CONFIG_FOUND)
+		pkg_check_modules(MINIZIP QUIET minizip)
+		IF(MINIZIP_FOUND)
+			# pkgconfig does not define the singular names
+			SET(MINIZIP_LIBRARY ${MINIZIP_LIBRARIES})
+			SET(MINIZIP_INCLUDE_DIR ${MINIZIP_INCLUDE_DIRS})
+			ADD_DEFINITIONS(-DOSGEARTH_HAVE_MINIZIP)
+		ENDIF(MINIZIP_FOUND)
+	ENDIF(PKG_CONFIG_FOUND)
+ENDIF(UNIX)
 
-FIND_LIBRARY(MINIZIP_LIBRARY 
-    NAMES minizip
-    PATHS
-    ${CMAKE_SOURCE_DIR}/src/3rdparty/minizip
-    $ENV{MINIZIP_DIR}/lib
-    $ENV{MINIZIP_DIR}
-    $ENV{OSGDIR}/lib
-    $ENV{OSGDIR}
-    $ENV{OSG_ROOT}/lib
-    ~/Library/Frameworks
-    /Library/Frameworks
-    /usr/local/lib
-    /usr/lib
-    /sw/lib
-    /opt/local/lib
-    /opt/csw/lib
-    /opt/lib
-    [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session\ Manager\\Environment;OSG_ROOT]/lib
-    /usr/freeware/lib64
-)
-
-SET(MINIZIP_FOUND "NO")
-IF(MINIZIP_LIBRARY AND MINIZIP_INCLUDE_DIR)
-    SET(MINIZIP_FOUND "YES")
-    ADD_DEFINITIONS(-DOSGEARTH_HAVE_MINIZIP)
-ENDIF(MINIZIP_LIBRARY AND MINIZIP_INCLUDE_DIR)
+# fallback logic
+IF(NOT MINIZIP_FOUND)
+	FIND_PATH(MINIZIP_INCLUDE_DIR zip.h
+		${CMAKE_SOURCE_DIR}/src/3rdparty/minizip
+		$ENV{MINIZIP_DIR}/include
+		$ENV{MINIZIP_DIR}
+		$ENV{OSGDIR}/include
+		$ENV{OSGDIR}
+		$ENV{OSG_ROOT}/include
+		~/Library/Frameworks
+		/Library/Frameworks
+		/usr/local/include
+		/usr/include
+		/sw/include # Fink
+		/opt/local/include # DarwinPorts
+		/opt/csw/include # Blastwave
+		/opt/include
+		[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session\ Manager\\Environment;OSG_ROOT]/include
+		/usr/freeware/include
+	)
 
+	FIND_LIBRARY(MINIZIP_LIBRARY 
+		NAMES minizip
+		PATHS
+		${CMAKE_SOURCE_DIR}/src/3rdparty/minizip
+		$ENV{MINIZIP_DIR}/lib
+		$ENV{MINIZIP_DIR}
+		$ENV{OSGDIR}/lib
+		$ENV{OSGDIR}
+		$ENV{OSG_ROOT}/lib
+		~/Library/Frameworks
+		/Library/Frameworks
+		/usr/local/lib
+		/usr/lib
+		/sw/lib
+		/opt/local/lib
+		/opt/csw/lib
+		/opt/lib
+		[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session\ Manager\\Environment;OSG_ROOT]/lib
+		/usr/freeware/lib64
+	)
 
+	SET(MINIZIP_FOUND "NO")
+	IF(MINIZIP_LIBRARY AND MINIZIP_INCLUDE_DIR)
+		SET(MINIZIP_FOUND "YES")
+		ADD_DEFINITIONS(-DOSGEARTH_HAVE_MINIZIP)
+	ENDIF(MINIZIP_LIBRARY AND MINIZIP_INCLUDE_DIR)
+ENDIF(NOT MINIZIP_FOUND)
