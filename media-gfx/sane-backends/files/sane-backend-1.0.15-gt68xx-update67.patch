diff -uNr sane-backends-1.0.15.org/backend/gt68xx.c sane-backends-1.0.15/backend/gt68xx.c
--- sane-backends-1.0.15.org/backend/gt68xx.c	2004-10-31 18:47:40.000000000 +0100
+++ sane-backends-1.0.15/backend/gt68xx.c	2004-11-14 14:20:30.000000000 +0100
@@ -48,7 +48,7 @@
 
 #include "../include/sane/config.h"
 
-#define BUILD 66
+#define BUILD 67
 #define MAX_DEBUG
 #define WARMUP_TIME 60
 #define CALIBRATION_HEIGHT 2.5
@@ -1342,7 +1342,7 @@
 
   RIE (gt68xx_device_get_id (dev));
 
-  if (!(dev->model->flags | GT68XX_FLAG_NO_STOP))
+  if (!(dev->model->flags & GT68XX_FLAG_NO_STOP))
     RIE (gt68xx_device_stop_scan (dev));
 
   RIE (gt68xx_device_get_power_status (dev, &power_ok));
@@ -1736,7 +1736,7 @@
     }
 
   s->calib = s->val[OPT_QUALITY_CAL].w;
-  if (!(s->dev->model->flags | GT68XX_FLAG_NO_STOP))
+  if (!(s->dev->model->flags & GT68XX_FLAG_NO_STOP))
     RIE (gt68xx_device_stop_scan (s->dev));
 
   RIE (gt68xx_device_carriage_home (s->dev));
diff -uNr sane-backends-1.0.15.org/backend/gt68xx_devices.c sane-backends-1.0.15/backend/gt68xx_devices.c
--- sane-backends-1.0.15.org/backend/gt68xx_devices.c	2004-10-05 19:22:53.000000000 +0200
+++ sane-backends-1.0.15/backend/gt68xx_devices.c	2004-11-14 14:16:28.000000000 +0100
@@ -1074,8 +1074,7 @@
   SANE_FALSE,			/* Is this a CIS scanner? */
   GT68XX_FLAG_OFFSET_INV | GT68XX_FLAG_NO_POWER_STATUS| GT68XX_FLAG_NO_LINEMODE 
   /* Which flags are needed for this scanner? */
-  /* Untested but as this scanner seems to be very similar to Plustelk U16B it
-     should work. */
+  /* This scanner seems to be very similar to Plustelk U16B and is reported to work. */
 };
 
 
@@ -1126,7 +1125,7 @@
 
   SANE_FALSE,			/* Is this a CIS scanner? */
   GT68XX_FLAG_OFFSET_INV 	/* Which flags are needed for this scanner? */
-  /* Tested zo some degree, based on the Plustek OpticPro 1248U*/
+  /* Tested to some degree, based on the Plustek OpticPro 1248U*/
 };
 
 static GT68xx_Model genius_vivid4x_model  = {
diff -uNr sane-backends-1.0.15.org/backend/gt68xx_gt6801.c sane-backends-1.0.15/backend/gt68xx_gt6801.c
--- sane-backends-1.0.15.org/backend/gt68xx_gt6801.c	2004-06-17 19:30:02.000000000 +0200
+++ sane-backends-1.0.15/backend/gt68xx_gt6801.c	2004-11-14 13:53:22.000000000 +0100
@@ -553,7 +553,7 @@
       GT68xx_Packet req;
       SANE_Byte motor_mode_1, motor_mode_2;
 
-      if ((dev->model->flags & GT68XX_FLAG_NO_LINEMODE) && line_mode)
+      if ((dev->model->flags & GT68XX_FLAG_NO_LINEMODE) && line_mode && color)
 	{
 	  DBG (0, "gt6801_setup_scan: the scanner's memory is too small for "
 	       "that combination of resolution, dpi and width\n");
diff -uNr sane-backends-1.0.15.org/backend/gt68xx_gt6816.c sane-backends-1.0.15/backend/gt68xx_gt6816.c
--- sane-backends-1.0.15.org/backend/gt68xx_gt6816.c	2004-06-17 20:29:40.000000000 +0200
+++ sane-backends-1.0.15/backend/gt68xx_gt6816.c	2004-11-14 13:52:55.000000000 +0100
@@ -534,7 +534,7 @@
 	  return SANE_STATUS_NO_MEM;
 	}
 
-      if ((dev->model->flags & GT68XX_FLAG_NO_LINEMODE) && line_mode)
+      if ((dev->model->flags & GT68XX_FLAG_NO_LINEMODE) && line_mode && color)
 	{
 	  DBG (0, "gt6816_setup_scan: the scanner's memory is too small for "
 	       "that combination of resolution, dpi and width\n");
diff -uNr sane-backends-1.0.15.org/backend/gt68xx-s.c sane-backends-1.0.15/backend/gt68xx-s.c
--- sane-backends-1.0.15.org/backend/gt68xx-s.c	1970-01-01 01:00:00.000000000 +0100
+++ sane-backends-1.0.15/backend/gt68xx-s.c	2000-08-12 17:09:44.000000000 +0200
@@ -0,0 +1,83 @@
+#include "sane/sanei_backend.h"
+
+/* Now define the wrappers (we could use aliases here, but go for
+   robustness for now...: */
+
+SANE_Status
+sane_init (SANE_Int *vc, SANE_Auth_Callback cb)
+{
+  return ENTRY(init) (vc, cb);
+}
+
+SANE_Status
+sane_get_devices (const SANE_Device ***dl, SANE_Bool local)
+{
+  return ENTRY(get_devices) (dl, local);
+}
+
+SANE_Status
+sane_open (SANE_String_Const name, SANE_Handle *h)
+{
+  return ENTRY(open) (name, h);
+}
+
+const SANE_Option_Descriptor *
+sane_get_option_descriptor (SANE_Handle h, SANE_Int opt)
+{
+  return ENTRY(get_option_descriptor) (h, opt);
+}
+
+SANE_Status
+sane_control_option (SANE_Handle h, SANE_Int opt, SANE_Action act,
+		     void *val, SANE_Word *info)
+{
+  return ENTRY(control_option) (h, opt, act, val, info);
+}
+
+SANE_Status
+sane_get_parameters (SANE_Handle h, SANE_Parameters *parms)
+{
+  return ENTRY(get_parameters) (h, parms);
+}
+
+SANE_Status
+sane_start (SANE_Handle h)
+{
+  return ENTRY(start) (h);
+}
+
+SANE_Status
+sane_read (SANE_Handle h, SANE_Byte *buf, SANE_Int maxlen, SANE_Int *lenp)
+{
+  return ENTRY(read) (h, buf, maxlen, lenp);
+}
+
+SANE_Status
+sane_set_io_mode (SANE_Handle h, SANE_Bool non_blocking)
+{
+  return ENTRY(set_io_mode) (h, non_blocking);
+}
+
+SANE_Status
+sane_get_select_fd (SANE_Handle h, SANE_Int *fdp)
+{
+  return ENTRY(get_select_fd) (h, fdp);
+}
+
+void
+sane_cancel (SANE_Handle h)
+{
+  ENTRY(cancel) (h);
+}
+
+void
+sane_close (SANE_Handle h)
+{
+  ENTRY(close) (h);
+}
+
+void
+sane_exit (void)
+{
+  ENTRY(exit) ();
+}
diff -uNr sane-backends-1.0.15.org/doc/gt68xx/gt68xx.CHANGES sane-backends-1.0.15/doc/gt68xx/gt68xx.CHANGES
--- sane-backends-1.0.15.org/doc/gt68xx/gt68xx.CHANGES	2004-10-31 18:59:18.000000000 +0100
+++ sane-backends-1.0.15/doc/gt68xx/gt68xx.CHANGES	2004-11-14 13:56:39.000000000 +0100
@@ -1,5 +1,11 @@
 gt68xx.CHANGES -*-text-*-
 
+V 1.0.67 (2004-11-14)
+
+* Fixed test to move home sensor at the start of scan.
+* Fixed gray mode linemode test. That stopped e.g. the Plustek OpticPro U 16 B
+  from working in gray mode.
+
 V 1.0.66 (2004-10-31)
 
 * Removed unused gain and offset options.
