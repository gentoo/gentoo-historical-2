--- luminance-hdr-2.2.0/CMakeLists.txt.orig
+++ luminance-hdr-2.2.0/CMakeLists.txt
@@ -2,6 +2,7 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)
 
 OPTION(UPDATE_TRANSLATIONS "Update source translation translations/*.ts files (WARNING: make clean will delete the source .ts files! Danger!)")
+OPTION(USE_OPENMP "Use openmp threading support." ON)
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
 
@@ -141,24 +142,26 @@
 SET(LIBS ${LIBS} ${EXIV2_LIBRARIES})
 
 #OpenMP Support under Linux, Windows with MSVC & MacOS X with GCC >= 4.3
-IF(MSVC)
+IF(USE_OPENMP)
+	IF(MSVC)
 
-	FIND_PACKAGE(OpenMP REQUIRED)
-	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
-	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
-
-ELSEIF(CMAKE_COMPILER_IS_GNUCC AND UNIX)
-
-	execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion
-					OUTPUT_VARIABLE GCC_VERSION)
-	#MESSAGE(STATUS ${GCC_VERSION})
-	IF(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
-		message(STATUS "GCC >= 4.3")
 		FIND_PACKAGE(OpenMP REQUIRED)
 		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
 		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
-	endif()
 
+	ELSEIF(CMAKE_COMPILER_IS_GNUCC AND UNIX)
+
+		execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion
+						OUTPUT_VARIABLE GCC_VERSION)
+		#MESSAGE(STATUS ${GCC_VERSION})
+		IF(GCC_VERSION VERSION_GREATER 4.3 OR GCC_VERSION VERSION_EQUAL 4.3)
+			message(STATUS "GCC >= 4.3")
+			FIND_PACKAGE(OpenMP REQUIRED)
+			SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
+			SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
+		endif()
+
+	ENDIF()
 ENDIF()
 # END OpenMP Support
 
