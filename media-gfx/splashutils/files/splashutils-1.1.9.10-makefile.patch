diff -Naurp splashutils-1.1.9.10-orig/Makefile splashutils-1.1.9.10/Makefile
--- splashutils-1.1.9.10-orig/Makefile	2006-04-16 21:50:51.000000000 +0200
+++ splashutils-1.1.9.10/Makefile	2006-04-16 21:51:01.000000000 +0200
@@ -101,8 +101,8 @@ endif
 
 KOUT	= kernel
 dotg    = \e[32;01m*\e[0m
-info	= if [ "${QUIET}" == "true" ] ; then printf "  %-7s %s\n" $(1) $(2); fi
-install_script = $(call info,INSTALL,$(1)) ; $(INSTALL_PROG) -D scripts/$(1) $(DESTDIR)$(usrbindir)/$(1) ; \
+infmsg	= if [ "${QUIET}" == "true" ] ; then printf "  %-7s %s\n" $(1) $(2) ; fi
+install_script = $(call infmsg,INSTALL,$(1)) ; $(INSTALL_PROG) -D scripts/$(1) $(DESTDIR)$(usrbindir)/$(1) ; \
 		 sed -e 's/%PKG_VERSION%/$(PKG_VERSION)/g' -i $(DESTDIR)$(usrbindir)/$(1)
 
 SP_HELPER = splash_helper
@@ -119,7 +119,7 @@ all:	splash_kern splash_user
 splash_user: $(SP_UTIL)
 
 $(SP_UTIL): $(OBJS)
-	@$(call info,LD,$@)
+	@$(call infmsg,LD,$@)
 	$(Q)$(CC) $+ $(LDLIBS) -o $@
 	$(Q)$(CC) $+ $(LDLIBS) -static -o $@.static
 
@@ -136,69 +136,69 @@ kdir:
 zlib:	config.h
 	@cd $(ZLIBSRC) ; \
 	if [ ! -e ./Makefile ]; then \
-		$(call info,CONF,zlib) ; \
+		$(call infmsg,CONF,zlib) ; \
 		CC=$(KLCC) CFLAGS="$(K_CFLAGS)" \
 		./configure > $(OUTPUT); \
 		sed -i 's#^CFLAGS=\(.*\)#CFLAGS=\1 $(K_CFLAGS)#' Makefile ; \
 	fi ; \
-	if ! make -q CC=$(KLCC) libz.a; then $(call info,MAKE,zlib) ; fi ; \
+	if ! make -q CC=$(KLCC) libz.a; then $(call infmsg,MAKE,zlib) ; fi ; \
 	make CC=$(KLCC) libz.a > $(OUTPUT)
 
 libpng:	zlib config.h
 	@cd $(LPNGSRC) ; \
 	if [ ! -e ./Makefile ]; then \
-		$(call info,CONF,libpng) ; \
+		$(call infmsg,CONF,libpng) ; \
 		cp scripts/makefile.linux Makefile > $(OUTPUT); \
 		sed -i -e '/^CFLAGS/ { N ; s#^CFLAGS=.*#CFLAGS=$(K_CFLAGS) $(PNGDEFS)# ; P ; D }' \
 		       -e 's#^ZLIBINC=.*#ZLIBINC=$(ZLIBSRC)#' \
 		       -e 's#^ZLIBLIB=.*#ZLIBLIB=$(ZLIBSRC)#' Makefile ; \
 	fi ; \
-	if ! make -q CC=$(KLCC) libpng.a; then $(call info,MAKE,libpng) ; fi ; \
+	if ! make -q CC=$(KLCC) libpng.a; then $(call infmsg,MAKE,libpng) ; fi ; \
 	make CC=$(KLCC) libpng.a > $(OUTPUT) 
 
 jpeglib:
 	@cd $(JPEGSRC) ; \
 	if [ ! -e ./Makefile ]; then \
-		$(call info,CONF,libjpeg) ; \
+		$(call infmsg,CONF,libjpeg) ; \
 		CC=$(KLCC) CFLAGS="$(K_CFLAGS)" \
 		./configure > $(OUTPUT) ; \
 		echo "#define NO_GETENV 1" >> jconfig.h ; \
 		sed -i "s#CFLAGS=.*#CFLAGS=$(K_CFLAGS)#" Makefile ; \
 		sed -i "s:#define JMESSAGE.*::" jerror.c ; \
 	fi ; \
-	if ! make -q CC=$(KLCC) libjpeg.a; then $(call info,MAKE,libjpeg) ; fi ; \
+	if ! make -q CC=$(KLCC) libjpeg.a; then $(call infmsg,MAKE,libjpeg) ; fi ; \
 	make CC=$(KLCC) libjpeg.a > $(OUTPUT)
 
 ft2:	config.h
 	@cd $(FT2SRC) ; \
 	if [ ! -e ./config.mk ]; then \
-		$(call info,CONF,freetype2) ; \
+		$(call infmsg,CONF,freetype2) ; \
 		CC=$(KLCC) CPPFLAGS="-I$(ROOT)/$(ZLIBSRC)" \
 		CFLAGS="$(K_CFLAGS) -include $(ROOT)/klibc_compat.h" \
 		./configure --disable-shared > $(OUTPUT) ; \
 	fi ; \
-	if ! make -q CFLAGS="$(K_CFLAGS)" library; then $(call info,MAKE,freetype2) ; fi ; \
+	if ! make -q CFLAGS="$(K_CFLAGS)" library; then $(call infmsg,MAKE,freetype2) ; fi ; \
 	make CFLAGS="-c $(K_CFLAGS)" library > $(OUTPUT)
 	
 splash_kern: linux jpeglib kdir $(K_DEPS) $(SP_HELPER) config.h $(K_LDLIBS)
 
 $(SP_HELPER): $(K_OBJS)
-	@$(call info,LD,$@)
+	@$(call infmsg,LD,$@)
 	$(Q)$(KLCC) $(K_LDFLAGS) -o $@ $+ $(K_LDLIBS)
 	$(Q)$(STRIP) $@
 
 $(KOUT)/%.o: %.c config.h splash.h
-	@$(call info,CC,$@)
+	@$(call infmsg,CC,$@)
 	$(Q)$(KLCC) $(K_CFLAGS) -I/usr/include -c -o $@ $<
 
 %.o: %.c config.h splash.h
-	@$(call info,CC,$@)
+	@$(call infmsg,CC,$@)
 	$(Q)$(CC) $(CFLAGS) $(INCLUDES) -DPKG_VERSION=\"$(PKG_VERSION)\" -c -o $@ $<
 
 clean:	clean_jpg clean_png clean_zlib clean_ft2 clean_splash
 
 clean_splash:
-	@$(call info,CLEAN,splash)
+	@$(call infmsg,CLEAN,splash)
 	$(Q)rm -f *.o
 	$(Q)rm -f kernel/*.o
 	$(Q)rm -f splash_helper splash_util splash_util.static
@@ -207,7 +207,7 @@ clean_splash:
 clean_jpg:
 	@cd $(JPEGSRC) ; \
 	if [ -e Makefile ]; then \
-		$(call info,CLEAN,libjpeg) ; \
+		$(call infmsg,CLEAN,libjpeg) ; \
 		make clean > $(OUTPUT) ; \
 		rm -f Makefile ; \
 	fi
@@ -215,7 +215,7 @@ clean_jpg:
 clean_png:
 	@cd $(LPNGSRC) ; \
 	if [ -e Makefile ]; then \
-		$(call info,CLEAN,libpng) ; \
+		$(call infmsg,CLEAN,libpng) ; \
 		make clean > $(OUTPUT) ; \
 		rm -f Makefile ; \
 	fi
@@ -223,7 +223,7 @@ clean_png:
 clean_zlib:
 	@cd $(ZLIBSRC) ; \
 	if [ -e Makefile ]; then \
-		$(call info,CLEAN,zlib) ; \
+		$(call infmsg,CLEAN,zlib) ; \
 		make clean > $(OUTPUT) ; \
 		rm -f Makefile ; \
 	fi
@@ -231,17 +231,17 @@ clean_zlib:
 clean_ft2:
 	@cd $(FT2SRC) ; \
 	if [ -e ./config.mk ]; then \
-		$(call info,CLEAN,freetype2) ; \
+		$(call infmsg,CLEAN,freetype2) ; \
 		make clean > $(OUTPUT) ; \
 		rm -f config.mk ; \
 	fi
 
 install: all
-	@$(call info,INSTALL,$(SP_HELPER))
+	@$(call infmsg,INSTALL,$(SP_HELPER))
 	$(Q)$(INSTALL_PROG) -D $(SP_HELPER) $(DESTDIR)$(sbindir)/$(SP_HELPER)
-	@$(call info,INSTALL,$(SP_UTIL))
+	@$(call infmsg,INSTALL,$(SP_UTIL))
 	$(Q)$(INSTALL_PROG) -D $(SP_UTIL) $(DESTDIR)$(sbindir)/$(SP_UTIL)
-	@$(call info,INSTALL,$(SP_UTIL).static)
+	@$(call infmsg,INSTALL,$(SP_UTIL).static)
 	$(Q)$(INSTALL_PROG) -D $(SP_UTIL).static $(DESTDIR)$(sbindir)/$(SP_UTIL).static
 	@$(call install_script,$(SP_GIRAM))
 	@$(call install_script,$(SP_CONV))
@@ -249,18 +249,18 @@ install: all
 	@$(call install_script,$(SP_MNGR))
 
 uninstall:
-	@$(call info,UNINSTALL,$(SP_HELPER))
+	@$(call infmsg,UNINSTALL,$(SP_HELPER))
 	$(Q)rm -f $(sbindir)/$(SP_HELPER)
-	@$(call info,UNINSTALL,$(SP_UTIL))
+	@$(call infmsg,UNINSTALL,$(SP_UTIL))
 	$(Q)rm -f $(sbindir)/$(SP_UTIL)
-	@$(call info,UNINSTALL,$(SP_UTIL).static)
+	@$(call infmsg,UNINSTALL,$(SP_UTIL).static)
 	$(Q)rm -f $(sbindir)/$(SP_UTIL).static
-	@$(call info,UNINSTALL,$(SP_GIRAM))
+	@$(call infmsg,UNINSTALL,$(SP_GIRAM))
 	$(Q)rm -f $(usrbindir)/$(SP_GIRAM)
-	@$(call info,UNINSTALL,$(SP_CONV))
+	@$(call infmsg,UNINSTALL,$(SP_CONV))
 	$(Q)rm -f $(usrbindir)/$(SP_CONV)
-	@$(call info,UNINSTALL,$(SP_RESIZE))
+	@$(call infmsg,UNINSTALL,$(SP_RESIZE))
 	$(Q)rm -f $(usrbindir)/$(SP_RESIZE)
-	@$(call info,UNINSTALL,$(SP_MNGR))
+	@$(call infmsg,UNINSTALL,$(SP_MNGR))
 	$(Q)rm -f $(usrbindir)/$(SP_MNGR)
 	
