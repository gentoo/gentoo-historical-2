--- a/src/basicio.cpp
+++ b/src/basicio.cpp
@@ -428,7 +428,7 @@
             // Minimum size for 1st block is 32kB
             long size  = std::max(32768 * (1 + need / 32768), size_);
             byte* data = (byte*)std::malloc(size);
-            std::memcpy(data, data_, size_);
+            memcpy(data, data_, size_);
             data_ = data;
             sizeAlloced_ = size;
             isMalloced_ = true;
--- a/xmpsdk/src/XMPCore_Impl.hpp
+++ b/xmpsdk/src/XMPCore_Impl.hpp
@@ -24,6 +24,7 @@
 #include <map>
 
 #include <cassert>
+#include <cstring>
 
 #if XMP_MacBuild
 	#include <Multiprocessing.h>
@@ -89,7 +90,7 @@
 #define kHexDigits "0123456789ABCDEF"
 
 #define XMP_LitMatch(s,l)		(std::strcmp((s),(l)) == 0)
-#define XMP_LitNMatch(s,l,n)	(std::strncmp((s),(l),(n)) == 0)
+#define XMP_LitNMatch(s,l,n)	(strncmp((s),(l),(n)) == 0)
 	// *** Use the above macros!
 
 #define kTab ((char)0x09)
@@ -369,7 +370,7 @@
 IsPathPrefix ( XMP_StringPtr fullPath, XMP_StringPtr prefix )
 {
 	bool isPrefix = false;
-	XMP_StringLen prefixLen = std::strlen(prefix);
+	XMP_StringLen prefixLen = strlen(prefix);
 	if ( XMP_LitNMatch ( prefix, fullPath, prefixLen ) ) {
 		char separator = fullPath[prefixLen];
 		if ( (separator == 0) || (separator == '/') ||
--- a/xmpsdk/src/XMPMeta.cpp
+++ b/xmpsdk/src/XMPMeta.cpp
@@ -20,6 +20,8 @@
 #include "UnicodeInlines.incl_cpp"
 #include "UnicodeConversions.hpp"
 
+#include <cstring>
+
 #if XMP_DebugBuild
 	#include <iostream>
 #endif
