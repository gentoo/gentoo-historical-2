--- configure.ac	2009-10-28 20:01:05.000000000 -0400
+++ configure.ac	2010-02-04 14:05:19.000000000 -0500
@@ -126,7 +126,7 @@
                 ZLIB_LIBS="-L$withval/lib $ZLIB_LIBS"])
 
   # save global cflags/libs
-  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS
+  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS;oCPPFLAGS=$CPPFLAGS
   # set cflags/libs for this case
   CPPFLAGS="$CPPFLAGS $ZLIB_CFLAGS"
   LDFLAGS="$LDFLAGS $ZLIB_LIBS"
@@ -137,7 +137,7 @@
    [AC_MSG_ERROR([Can't find zlib library. Please install zlib.])])
 
   # restore global cflags/libs
-  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS
+  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS;CFLAGS=$oCFLAGS
 
 AC_SUBST(ZLIB_CFLAGS)
 AC_SUBST(ZLIB_LIBS)
@@ -218,7 +218,7 @@
                 EXPAT_LIBS="-L$withval/lib $EXPAT_LIBS"])
 
   # save global cflags/libs
-  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS
+  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS;oCPPFLAGS=$CPPFLAGS
   # set cflags/libs for this case
   CPPFLAGS="$CPPFLAGS $EXPAT_CFLAGS"
   LDFLAGS="$LDFLAGS $EXPAT_LIBS"
@@ -229,8 +229,7 @@
    [AC_MSG_ERROR([Can't find expat library. Please install expat.])])
 
   # restore global cflags/libs
-  CPPFLAGS=$oCPPFLAGS
-  LDFLAGS=$oLDFLAGS
+  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS;CFLAGS=$oCFLAGS
 
 AC_SUBST(EXPAT_CFLAGS)
 AC_SUBST(EXPAT_LIBS)
@@ -363,7 +362,7 @@
      *)  # Search for GLEW
 
   # save global cflags/libs
-  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS
+  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS;oCPPFLAGS=$CPPFLAGS
   # set cflags/libs for this case
   CPPFLAGS="$CPPFLAGS $GLEW_CFLAGS $GL_CFLAGS"
   LDFLAGS="$LDFLAGS $GLEW_LIBS $GL_LIBS"
@@ -378,7 +377,7 @@
 esac
 
   # restore global cflags/libs
-  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS
+  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS;CFLAGS=$oCFLAGS
 
 AC_SUBST(GLEW_CFLAGS)
 AC_SUBST(GLEW_LIBS)
@@ -393,7 +392,7 @@
                 JPEG_LIBS="-L$withval/lib -ljpeg"])
 
   # save global cflags/libs
-  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS
+  oCFLAGS=$CFLAGS;oLDFLAGS=$LDFLAGS;oCPPFLAGS=$CPPFLAGS
   # set cflags/libs for this case
   CPPFLAGS="$CPPFLAGS $JPEG_CFLAGS"
   LDFLAGS="$LDFLAGS $JPEG_LIBS"
@@ -421,7 +420,7 @@
      )
 
   # restore global cflags/libs
-  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS
+  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS;CFLAGS=$oCFLAGS
 
 AC_SUBST(JPEG_CFLAGS)
 AC_SUBST(JPEG_LIBS)
@@ -523,6 +522,17 @@
 AC_SUBST(PLUGIN_CFLAGS)
 AC_SUBST(PLUGIN_LIBS)
 
+#
+# Check if 'int32' type is defined (would be included in plugin's includes)
+
+  # save global cflags/libs
+  oCPPFLAGS=$CPPFLAGS;oLDFLAGS=$LDFLAGS;oCFLAGS=$CFLAGS
+  CFLAGS="$CFLAGS $PLUGIN_CFLAGS"
+AC_CHECK_TYPES([int32, uint32, int16, uint16], [], [], [[#include <npapi.h>]])
+  # restore global cflags/libs
+  CPPFLAGS=$oCPPFLAGS;LDFLAGS=$oLDFLAGS;CFLAGS=$oCFLAGS
+
+
 # ======================================
 # FreeWRL helpers programs
 # ======================================
--- src/plugin/system.h	2009-10-12 08:58:19.000000000 -0400
+++ src/plugin/system.h	2010-02-04 14:19:35.000000000 -0500
@@ -108,5 +108,17 @@
 # include <sys/socket.h>
 #endif
 
+#ifndef HAVE_INT32
+# define int32 int32_t
+#endif
+#ifndef HAVE_UINT32
+# define uint32 uint32_t
+#endif
+#ifndef HAVE_INT16
+# define int16 int16_t
+#endif
+#ifndef HAVE_UINT16
+# define uint16 uint16_t
+#endif
 
 #endif /* __FREEWRL_PLUGIN_SYSTEM_H__ */
--- src/plugin/npunix.c	2009-10-05 11:07:24.000000000 -0400
+++ src/plugin/npunix.c	2010-02-04 15:52:52.000000000 -0500
@@ -65,6 +65,9 @@
 # define PLUGINDEBUGSTR(msg)
 #endif
 
+/* fix for int32,uint32,int16,uint16 undefined errors with newer xulrunners */
+#include <config.h>
+#include <system.h>
 
 /***********************************************************************
  *
@@ -256,7 +259,7 @@
 #endif
 }
 
-
 #ifdef MY_JAVA
+/*
 JRIEnv* NPN_GetJavaEnv()
 {
@@ -266,6 +269,7 @@
 	return (*gNetscapeFuncs.getJavaEnv);
 # endif
 }
+*/
 
 jref NPN_GetJavaPeer(NPP instance)
 {
@@ -377,10 +381,10 @@
        NPP_URLNotify(instance, url, reason, notifyData);
 }
 
+/*JAS 
 JRIGlobalRef
 Private_GetJavaClass(void)
 {
-/*JAS 
 #ifdef MY_JAVA
     jref clazz = NPP_GetJavaClass();
 #else 
@@ -390,9 +394,9 @@
 	JRIEnv* env = NPN_GetJavaEnv();
 	return JRI_NewGlobalRef(env, clazz);
     }
-*/
     return NULL;
 }
+*/
 
 /*********************************************************************** 
  *
@@ -533,7 +537,8 @@
                 pluginFuncs->urlnotify  = (NPP_URLNotifyProcPtr)(Private_URLNotify);
 #endif
 		pluginFuncs->event      = NULL;
-		pluginFuncs->javaClass	= Private_GetJavaClass();
+/*		pluginFuncs->javaClass	= Private_GetJavaClass(); */
+		pluginFuncs->javaClass	= NULL; 
 
 		err = NPP_Initialize();
 	}
--- src/lib/world_script/jsVRMLBrowser.c	2010-02-03 17:28:38.000000000 -0500
+++ src/lib/world_script/jsVRMLBrowser.c	2010-02-03 17:28:02.000000000 -0500
@@ -107,7 +107,7 @@
 
 /* for setting field values to the output of a CreateVrml style of call */
 /* it is kept at zero, unless it has been used. Then it is reset to zero */
-jsval JSCreate_global_return_val = INT_TO_JSVAL(0);
+jsval JSCreate_global_return_val;
 
 /* we add/remove routes with this call */
 void jsRegisterRoute(
@@ -211,6 +211,8 @@
 {
 	JSObject *obj;
 
+JSCreate_global_return_val = INT_TO_JSVAL(0);
+
 	#ifdef JSVERBOSE
 		printf("VrmlBrowserInit\n");
 	#endif
--- src/lib/Makefile.am	2009-10-28 20:16:50.000000000 -0400
+++ src/lib/Makefile.am	2010-02-04 11:06:58.000000000 -0500
@@ -17,14 +17,14 @@
 				$(ZLIB_CFLAGS) \
 				$(PTHREAD_CFLAGS) \
 				$(FREETYPE_CFLAGS) \
-				$(JAVASCRIPT_ENGINE_CFLAGS) \
 				$(EXPAT_CFLAGS) \
 				$(XML_CFLAGS) \
 				$(GL_CFLAGS) \
 				$(JPEG_CFLAGS) \
 				$(PNG_CFLAGS) \
 				$(LIBCURL_CFLAGS) \
-				$(IMLIB2_CFLAGS)
+				$(IMLIB2_CFLAGS) \
+				$(JAVASCRIPT_ENGINE_CFLAGS)
 
 EXTERNAL_LIBS = \
 				$(ZLIB_LIBS) \
