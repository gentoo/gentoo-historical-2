--- blender/source/gameengine/Expressions/KX_HashedPtr.cpp.x86_64	2004-03-22 17:01:28.000000000 -0500
+++ blender/source/gameengine/Expressions/KX_HashedPtr.cpp	2005-06-05 10:09:48.000000000 -0400
@@ -57,5 +57,5 @@
 
 unsigned int CHashedPtr::hash() const
 {
-	return KX_Hash((unsigned int) m_valptr);
+	return KX_Hash((unsigned int)((unsigned long) m_valptr & 0x00000000FFFFFFFF));
 }
--- blender/source/gameengine/Ketsji/KX_WorldIpoController.cpp.x86_64	2005-03-09 14:45:59.000000000 -0500
+++ blender/source/gameengine/Ketsji/KX_WorldIpoController.cpp	2005-06-05 10:09:48.000000000 -0400
@@ -92,10 +92,10 @@
 		iporeplica->AddInterpolator(copyipo);
 
 		MT_Scalar* scaal = ((KX_ScalarInterpolator*)*i)->GetTarget();
-		int orgbase = (int)this;
-		int orgloc = (int)scaal;
-		int offset = orgloc-orgbase;
-		int newaddrbase = (int)iporeplica + offset;
+		long orgbase = (long)this;
+		long orgloc = (long)scaal;
+		long offset = orgloc-orgbase;
+		long newaddrbase = (long)iporeplica + offset;
 		MT_Scalar* blaptr = (MT_Scalar*) newaddrbase;
 		copyipo->SetNewTarget((MT_Scalar*)blaptr);
 	}
--- blender/source/gameengine/Ketsji/KX_ObColorIpoSGController.cpp.x86_64	2004-03-22 17:01:52.000000000 -0500
+++ blender/source/gameengine/Ketsji/KX_ObColorIpoSGController.cpp	2005-06-05 10:09:48.000000000 -0400
@@ -87,10 +87,10 @@
 		iporeplica->AddInterpolator(copyipo);
 
 		MT_Scalar* scaal = ((KX_ScalarInterpolator*)*i)->GetTarget();
-		int orgbase = (int)this;
-		int orgloc = (int)scaal;
-		int offset = orgloc-orgbase;
-		int newaddrbase = (int)iporeplica + offset;
+		long orgbase = (long)this;
+		long orgloc = (long)scaal;
+		long offset = orgloc-orgbase;
+		long newaddrbase = (long)iporeplica + offset;
 		MT_Scalar* blaptr = (MT_Scalar*) newaddrbase;
 		copyipo->SetNewTarget((MT_Scalar*)blaptr);
 	}
--- blender/source/gameengine/Ketsji/KX_LightIpoSGController.cpp.x86_64	2004-03-22 17:01:52.000000000 -0500
+++ blender/source/gameengine/Ketsji/KX_LightIpoSGController.cpp	2005-06-05 10:09:48.000000000 -0400
@@ -97,10 +97,10 @@
 		iporeplica->AddInterpolator(copyipo);
 
 		MT_Scalar* scaal = ((KX_ScalarInterpolator*)*i)->GetTarget();
-		int orgbase = (int)this;
-		int orgloc = (int)scaal;
-		int offset = orgloc-orgbase;
-		int newaddrbase = (int)iporeplica + offset;
+		long orgbase = (long)this;
+		long orgloc = (long)scaal;
+		long offset = orgloc-orgbase;
+		long newaddrbase = (long)iporeplica + offset;
 		MT_Scalar* blaptr = (MT_Scalar*) newaddrbase;
 		copyipo->SetNewTarget((MT_Scalar*)blaptr);
 	}
--- blender/source/gameengine/Ketsji/KX_IPO_SGController.cpp.x86_64	2005-03-25 05:33:37.000000000 -0500
+++ blender/source/gameengine/Ketsji/KX_IPO_SGController.cpp	2005-06-05 10:09:48.000000000 -0400
@@ -168,10 +168,10 @@
 		iporeplica->AddInterpolator(copyipo);
 
 		MT_Scalar* scaal = ((KX_ScalarInterpolator*)*i)->GetTarget();
-		int orgbase = (int)&m_ipo_xform;
-		int orgloc = (int)scaal;
-		int offset = orgloc-orgbase;
-		int newaddrbase = (int)&iporeplica->m_ipo_xform;
+		long orgbase = (long)&m_ipo_xform;
+		long orgloc = (long)scaal;
+		long offset = orgloc-orgbase;
+		long newaddrbase = (long)&iporeplica->m_ipo_xform;
 		newaddrbase += offset;
 		MT_Scalar* blaptr = (MT_Scalar*) newaddrbase;
 		copyipo->SetNewTarget((MT_Scalar*)blaptr);
--- blender/source/gameengine/Ketsji/KX_GameObject.cpp.x86_64	2005-04-18 07:44:21.000000000 -0400
+++ blender/source/gameengine/Ketsji/KX_GameObject.cpp	2005-06-05 10:09:48.000000000 -0400
@@ -1069,10 +1069,10 @@
 											   PyObject* kwds)
 {
 	KX_IPhysicsController* ctrl = GetPhysicsController();
-	int physid=0;
+	long physid=0;
 	if (ctrl)
 	{
-		physid= (int)ctrl->GetUserData();
+		physid= (long)ctrl->GetUserData();
 	}
 	return PyInt_FromLong(physid);
 }
--- blender/source/gameengine/Ketsji/KX_CameraIpoSGController.cpp.x86_64	2004-07-21 20:26:34.000000000 -0400
+++ blender/source/gameengine/Ketsji/KX_CameraIpoSGController.cpp	2005-06-05 10:09:48.000000000 -0400
@@ -92,10 +92,10 @@
 		iporeplica->AddInterpolator(copyipo);
 
 		MT_Scalar* scaal = ((KX_ScalarInterpolator*)*i)->GetTarget();
-		int orgbase = (int)this;
-		int orgloc = (int)scaal;
-		int offset = orgloc-orgbase;
-		int newaddrbase = (int)iporeplica + offset;
+		long orgbase = (long)this;
+		long orgloc = (long)scaal;
+		long offset = orgloc-orgbase;
+		long newaddrbase = (long)iporeplica + offset;
 		MT_Scalar* blaptr = (MT_Scalar*) newaddrbase;
 		copyipo->SetNewTarget((MT_Scalar*)blaptr);
 	}
--- blender/source/kernel/gen_system/GEN_HashedPtr.h.x86_64	2002-12-27 08:11:00.000000000 -0500
+++ blender/source/kernel/gen_system/GEN_HashedPtr.h	2005-06-05 10:09:48.000000000 -0400
@@ -40,7 +40,7 @@
 	void* m_valptr;
 public:
 	GEN_HashedPtr(void* val) : m_valptr(val) {};
-	unsigned int hash() const { return GEN_Hash((unsigned int) m_valptr);};
+	unsigned int hash() const { return GEN_Hash((unsigned int)((unsigned long) m_valptr & 0x00000000FFFFFFFF));};
 	inline friend bool operator ==(const GEN_HashedPtr & rhs, const GEN_HashedPtr & lhs) { return rhs.m_valptr == lhs.m_valptr;};
 };
 
