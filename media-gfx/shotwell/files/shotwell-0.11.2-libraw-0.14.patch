From 06ce5a48a3dcc6416ac81995bc9d2f7001d624f9 Mon Sep 17 00:00:00 2001
From: Alexandre Rostovtsev <tetromino@gmail.com>
Date: Sun, 2 Oct 2011 05:22:07 -0400
Subject: [PATCH] Do not use libraw API that was dropped in libraw-0.14

add_masked_borders_to_bitmap() and rotate_fuji_raw() were removed from
0.14 API. We can safely drop their vala wrappers since they weren't
being used anywhere. And drop CANNOT_ADDMASK error code, since it was
dropped from the libraw API, and could only result from the removed
add_masked_borders_to_bitmap().

The LIBRAW_FILTERING_* constans were removed from the public API.
Fortunately, the only one of them that shotwell code was using was
LIBRAW_FILTERING_AUTOMATIC - which is now the default libraw behavior.
Therefore, we can safely drop the LibRaw.Filtering enum.
---
 src/photos/GRaw.vala |   12 ------------
 vapi/libraw.vapi     |   14 --------------
 2 files changed, 0 insertions(+), 26 deletions(-)

--- a/src/photos/GRaw.vala
+++ b/src/photos/GRaw.vala
@@ -163,10 +163,6 @@ public class Processor {
         proc = new LibRaw.Processor(options);
     }
     
-    public void add_masked_borders_to_bitmap() {
-        proc.add_masked_borders_to_bitmap();
-    }
-    
     public void adjust_sizes_info_only() throws Exception {
         throw_exception("adjust_sizes_info_only", proc.adjust_sizes_info_only());
     }
@@ -215,10 +211,6 @@ public class Processor {
         throw_exception("ppm_tiff_writer", proc.ppm_tiff_writer(filename));
     }
     
-    public void rotate_fuji_raw() throws Exception {
-        throw_exception("rotate_fuji_raw", proc.rotate_fuji_raw());
-    }
-    
     public void thumb_writer(string filename) throws Exception {
         throw_exception("thumb_writer", proc.thumb_writer(filename));
     }
@@ -262,7 +254,6 @@ public class Processor {
         // camera_profile
         // bad_pixels
         // dark_frame
-        output_params->filtering_mode = LibRaw.Filtering.AUTOMATIC;
         output_params->output_bps = 8;
         // output_tiff
         output_params->user_flip = GRaw.Flip.FROM_SOURCE;
@@ -303,9 +294,6 @@ private void throw_exception(string caller, LibRaw.Result result) throws Excepti
         case LibRaw.Result.UNSUPPORTED_THUMBNAIL:
             throw new Exception.UNSUPPORTED_THUMBNAIL(msg);
         
-        case LibRaw.Result.CANNOT_ADDMASK:
-            throw new Exception.CANNOT_ADDMASK(msg);
-        
         case LibRaw.Result.UNSUFFICIENT_MEMORY:
             throw new Exception.OUT_OF_MEMORY(msg);
         
--- a/vapi/libraw.vapi
+++ b/vapi/libraw.vapi
@@ -14,17 +14,6 @@ public unowned string version();
 
 public unowned string versionNumber();
 
-[CCode (cname="enum libraw_Filtering", cprefix="LIBRAW_FILTERING_")]
-public enum Filtering {
-    DEFAULT,
-    NOZEROES,
-    NOBLACK,
-    NORAWCURVE,
-    NONE,
-    LIBRAWOWN,
-    AUTOMATIC
-}
-
 [SimpleType]
 [CCode (cname="libraw_imgother_t")]
 public struct ImageOther {
@@ -121,7 +110,6 @@ public struct OutputParams {
     public bool use_camera_wb;
     public bool use_camera_matrix;
     public int output_color;
-    public Filtering filtering_mode;
     public int output_bps;
     public bool output_tiff;
     public int user_flip;
@@ -171,7 +159,6 @@ public class Processor {
     [CCode (cname="libraw_init")]
     public Processor(Options flags = Options.NONE);
     
-    public void add_masked_borders_to_bitmap();
     public Result adjust_sizes_info_only();
     [CCode (cname="libraw_dcraw_document_mode_processing")]
     public Result document_mode_processing();
@@ -192,7 +179,6 @@ public class Processor {
     [CCode (cname="libraw_dcraw_ppm_tiff_writer")]
     public Result ppm_tiff_writer(string outfile);
     public void recycle();
-    public Result rotate_fuji_raw();
     [CCode (cname="libraw_dcraw_thumb_writer")]
     public Result thumb_writer(string outfile);
     public Result unpack();
-- 
1.7.7

