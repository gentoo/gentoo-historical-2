
Created an attachment (id=566)
povray-3.1g-r4 icc pgo data I collected.

This is the PGO profiles I collected to benchmark povray. I have a Pentium II
cpu and made these with CFLAGS optimal for my box but I'm pretty sure I read
that these files will work with most any CFLAGS variation. I haven't tested
these on other CPUs. If it breaks, sorry, you'll have to generate the profile
data yourself.

To use these download the tarball. 
First make sure you have the povray-3.1g-r4 ebuild an related files from above.

Then cd into /var/tmp/portage/povray-3.1g-r4
(You will need to mkdir this if you haven't merged this povray pacakge version
before.)
Then run `tar xpzf /path/to/povray-3.1g-r4-icc-pgo.tar.gz`
(make sure you use the p with tar, the icc-pgo directory needs to be world
writeable if you want non-root users to be able to generate profile data.)
then run `USE="icc icc-pgo" emerge povray` to get a brand spanking new povray
tweaked to the teeth. (You can put that USE stuff in your /etc/make.conf too
but I wouldn't until it is agreed on how icc will be used in ebuilds.)

If the resulting povray doesn't work and you want to take the time to generate
profile data, then delete the icc-pgo dir and use the same emerge line, run
povray some, and then use the same emerge line again.) I used the following
script-on-the-command-line to generate some profiles.

for x in /usr/lib/povray31/scenes/advanced/*.pov ; do nice povray +W160 +H120
-I
 $x +A0.2 +AM2 +J0.1 +R3 +V -O `basename $x`.png ; done

 To get an accurate profile you'll want to run that a few times with different
 parameters (between the "$x" and "-O") else your profiles won't be very
 complete.


 # tar tzf povray-3.1g-r4-icc-pgo.tar.gz
 icc-pgo/
 icc-pgo/3cba06a9.dyn
 icc-pgo/3cba06b8.dyn
 icc-pgo/3cba06cc.dyn
 ..... etc (32 files) ....

