--- configure.in	2005-10-27 00:25:05.000000000 -0300
+++ configure.in	2005-10-27 00:22:25.000000000 -0300
@@ -156,7 +156,7 @@
     AC_HELP_STRING([--with-cdf=DIR],[where the root of CDF is installed ]),
     [  ac_cdf_includes="-I$withval/include"
        ac_cdf_libraries="-L$withval/lib"
-    ])
+     ])
 
 all_includes_save="$all_includes"
 all_includes="$all_includes $ac_cdf_includes"
@@ -182,32 +182,43 @@
 # netCDF Test
 ac_netcdf_includes=""
 ac_netcdf_libraries=""
-AC_ARG_WITH(netcdf,
-    AC_HELP_STRING([--with-netcdf=DIR],[where the root of NetCDF is installed ]),
-    [  ac_netcdf_includes="-I$withval/include"
-       ac_netcdf_libraries="-L$withval/lib"
-    ])
-
-all_includes_save="$all_includes"
-all_includes="$all_includes $ac_netcdf_includes"
-KDE_CHECK_HEADER(netcdfcpp.h, AC_DEFINE(HAVE_NETCDFCPP_H, 1, [If we have NetCDF CPP headers]) have_netcdfcpp_h=yes NETCDFINCLUDES="$ac_netcdf_includes", , )
-all_includes="$all_includes_save"
+NETCDFLIBS=""
 
-ldflags_save="$LDFLAGS"
-LDFLAGS="$LDFLAGS $ac_netcdf_libraries"
-KDE_CHECK_LIB(netcdf, nc_open, NETCDFLIBS="$ac_netcdf_libraries -lnetcdf_c++ -lnetcdf $NETCDFLIBS", , )
-LDFLAGS="$ldflags_save"
-
-if test $ac_cv_lib_netcdf_nc_open = yes; then
-  if test $have_netcdfcpp_h = yes; then
-    AC_SUBST(NETCDFLIBS)
-    AC_SUBST(NETCDFINCLUDES)
-    AC_DEFINE(KST_HAVE_NETCDF, 1, [If we have the NetCDF libraries.])
-  fi
+AC_MSG_CHECKING([--enable-netcdf argument])
+AC_ARG_ENABLE(netcdf,
+    [  --enable-netcdf         enable netcdf support.],
+    [ enable_netcdf=$enableval ],
+    [ enable_netcdf="no" ])
+
+if test "$enable_netcdf" = "yes"; then
+    AC_ARG_WITH(netcdf,
+        AC_HELP_STRING([--with-netcdf=DIR],[where the root of NetCDF is installed ]),
+    	[  ac_netcdf_includes="-I$withval/include"
+       	   ac_netcdf_libraries="-L$withval/lib"
+    	])
+
+    all_includes_save="$all_includes"
+    all_includes="$all_includes $ac_netcdf_includes"
+    KDE_CHECK_HEADER(netcdfcpp.h, AC_DEFINE(HAVE_NETCDFCPP_H, 1, [If we have NetCDF CPP headers]) have_netcdfcpp_h=yes NETCDFINCLUDES="$ac_netcdf_includes", , )
+    all_includes="$all_includes_save"
+
+    ldflags_save="$LDFLAGS"
+    LDFLAGS="$LDFLAGS $ac_netcdf_libraries"
+    KDE_CHECK_LIB(netcdf, nc_open, NETCDFLIBS="$ac_netcdf_libraries -lnetcdf_c++ -lnetcdf $NETCDFLIBS", , )
+    LDFLAGS="$ldflags_save"
+
+    if test $ac_cv_lib_netcdf_nc_open = yes; then
+      if test $have_netcdfcpp_h = yes; then
+          AC_SUBST(NETCDFLIBS)
+          AC_SUBST(NETCDFINCLUDES)
+          AC_DEFINE(KST_HAVE_NETCDF, 1, [If we have the NetCDF libraries.])
+      fi
+    fi
 fi
 
 AM_CONDITIONAL(include_netcdf, test -n "$NETCDFLIBS")
 
+
 # Readline and ncurses check
 KDE_CHECK_HEADER(readline/readline.h, AC_DEFINE(HAVE_READLINE_H, 1, [If we have libreadline headers]) have_readline_h=yes, , )
 KDE_CHECK_LIB(readline, rl_cleanup_after_signal, LIBREADLINE="-lreadline -lncurses", , -lncurses)
