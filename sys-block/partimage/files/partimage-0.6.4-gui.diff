diff -uNr partimage-0.6.4.orig/src/server/partimaged-gui_newt.cpp partimage-0.6.4/src/server/partimaged-gui_newt.cpp
--- partimage-0.6.4.orig/src/server/partimaged-gui_newt.cpp	2004-02-04 01:57:36.000000000 +0100
+++ partimage-0.6.4/src/server/partimaged-gui_newt.cpp	2006-10-14 19:59:17.000000000 +0200
@@ -188,9 +188,10 @@
 // =============================================================================
 void CPartimagedInterfaceNewt::Status(char * msg)
 {
-/*
+  char szBuf[1024];
   newtPopHelpLine();
-  newtPushHelpLine(msg);
+  snprintf(szBuf, sizeof(szBuf),
+    "%s [Press * to exit]", msg);
+  newtPushHelpLine(szBuf);
   newtRefresh();
-*/
 }
diff -uNr partimage-0.6.4.orig/src/server/partimaged-main.cpp partimage-0.6.4/src/server/partimaged-main.cpp
--- partimage-0.6.4.orig/src/server/partimaged-main.cpp	2006-10-14 19:55:07.000000000 +0200
+++ partimage-0.6.4/src/server/partimaged-main.cpp	2006-10-14 20:02:25.000000000 +0200
@@ -98,6 +98,11 @@
   else if (signo == SIGINT)
     {
       g_bSigInt = true;
+      delete g_Server;
+      delete g_Window;
+      g_Server = NULL;
+      g_Window = NULL;
+      exit(0);
     }
   else if (signo == SIGSEGV)
     {
@@ -235,7 +240,7 @@
 	  case 'd':
 	    if (chdir(optarg) != 0)
 	    {
-		    printf("%s: %s\n", optarg, strerror(errno));
+		    printf("Directory %s: %s\n", optarg, strerror(errno));
 		    exit(-1);
 	    }
 	    break;
@@ -313,9 +318,9 @@
 #endif    
 
   // register signals
-//  signal(SIGTERM, catch_sigint);
-//  signal(SIGINT, catch_sigint);
-//  signal(SIGSEGV, catch_sigint); // segmentation fault
+  signal(SIGTERM, catch_sigint);
+  signal(SIGINT, catch_sigint);
+  signal(SIGSEGV, catch_sigint); // segmentation fault
 //  signal(SIGHUP, catch_sigint);
 //  signal(SIGQUIT, catch_sigint);
 //  signal(SIGCHLD, catch_sigint);
diff -uNr partimage-0.6.4.orig/src/server/partimaged.cpp partimage-0.6.4/src/server/partimaged.cpp
--- partimage-0.6.4.orig/src/server/partimaged.cpp	2004-02-04 01:57:36.000000000 +0100
+++ partimage-0.6.4/src/server/partimaged.cpp	2006-10-14 19:59:17.000000000 +0200
@@ -74,7 +74,7 @@
 
   while (!bQuit)
     {
-      g_Window->Status(i18n("Waitting ..."));
+      g_Window->Status(i18n("waiting ..."));
 
       n = Server->RecvMsg(nClient, mess);
       if (n != MESSAGE_LEN)
@@ -115,7 +115,7 @@
           break;
 
         case MSG_WRITE:
-          g_Window->Status(i18n("writting ..."));
+          g_Window->Status(i18n("writing ..."));
           if (m_size > BUFFER_LEN)
             {
               delete g_Window;
