--- yodl-1.31.18.orig/scripts/yodl2texinfo-post.py	1999-11-18 10:01:45.000000000 +0100
+++ yodl-1.31.18/scripts/yodl2texinfo-post.py	2007-04-04 20:01:50.000000000 +0200
@@ -3,6 +3,7 @@
 # yodl2texinfo-post.py
 # 
 # (c) 1998,1999 Jan Nieuwenhuizen
+# 2007 convert regex/regsub to re  Helmut Jarausch
 
 program_name = 'yodl2texinfo-post'
 version = '@TOPLEVEL_VERSION@'
@@ -20,18 +21,19 @@
 ##    out/topinfo.texinfo:906: Node `@value{nodename}' previously defined at line 48.
 ##
 urg_value = 1
-not_in_node_set = '[,:\.?!\\\'`{}]'
-not_in_node = '.*[,:\.?!\\\'`{}].*'
+
 
 import os
 import sys
 
 import getopt
-from string import *
-import regex
-import regsub
+import re
 import time
 
+not_in_node_set= re.compile(r'[,:.?!\'`{}]')
+not_in_node = re.compile(r'.*[,:.?!\'`{}].*')
+re_dnewl = re.compile('^\n\n')
+
 def program_id ():
 	return program_name + ' version ' + version;
 
@@ -98,6 +100,8 @@
 
 TAB_POS = 34
 
+
+
 class Pre_texinfo_file (Menu):
 	def __init__ (this, filename):
 		Menu.__init__ (this, 0, 'Top')
@@ -141,16 +145,16 @@
 		return n
 
 	def eat_tag (this):
-		i = regex.search ('@TAGSTART@', this.s)
+                i = this.s.find('@TAGSTART@')
 		j = 0
-		if i < 0:
+		if i < 0 :
 			return 0
-		j = regex.search ('@TAGEND@', this.s[i:])
-		if j < 0:
+                j= this.s.find('@TAGEND@',i)
+		if j < 0 :
 			raise 'huh?'
-		j = i + j + len ('@TAGEND@')
+		j = j + len ('@TAGEND@')
 		tag = this.s[i + len ('@TAGSTART@'):j - len ('@TAGEND@')]
-		k = regex.search (' ', tag[1:]) + 1
+                k= tag.find(' ',1)
 		tag_name = tag[1:k]
 		tag_string = tag[k:len (tag) - 1]
 		while tag_string[:1] == ' ':
@@ -161,13 +165,13 @@
 		# various other characters in node names too
 		# 
 		if urg_value:
-			tag_string = regsub.gsub (not_in_node_set, '-', tag_string)
-			tag_string = regsub.gsub ('--', '-', tag_string)
+			tag_string = not_in_node_set.sub('-', tag_string)
+			tag_string = tag_string.replace('--','-')
 			# brr
-			tag_string = regsub.gsub ('--', '-', tag_string)
-			tag_string = regsub.gsub ('@code', '', tag_string)
-			tag_string = regsub.gsub ('@emph', '', tag_string)
-			tag_string = regsub.gsub ('@strong', '', tag_string)
+			tag_string = tag_string.replace('--','-')
+			tag_string = tag_string.replace('@code','')
+			tag_string = tag_string.replace('@emph','')
+			tag_string = tag_string.replace('@strong','')
 		if tag_name == 'menu':
 			this.default.top = 'Top'
 			n = this.new_node (i, tag_string)
@@ -214,23 +218,23 @@
 	def create_node (this, n):
 		node = '@node '
 		set = ''
-		if not urg_value and  regex.match (not_in_node, n.name) != -1:
+		if not urg_value and  not_in_node.match(n.name) :
 			set = set + "@set nodename " + n.name + "\n"
 			node = node + "@value{nodename}"
 		else:
 			node = node + n.name
 		if not simple_nodes:
-			if  not urg_value and regex.match (not_in_node, n.next) != -1:
+			if  not urg_value and not_in_node.match(n.next) :
 				set = set + "@set nextname " + n.next + "\n"
 				node = node + ", @value{nextname}"
 			else:
 				node = node + ", " + n.next
-			if  not urg_value and regex.match (not_in_node, n.prev) != -1:
+			if  not urg_value and not_in_node.match(n.prev) :
 				set = set + "@set prevname " + n.prev + "\n"
 				node = node + ", @value{prevname}"
 			else:
 				node = node + ", " + n.prev
-			if  not urg_value and regex.match (not_in_node, n.top) != -1:
+			if  not urg_value and not_in_node.match(n.top) :
 				set = set + "@set topname " + n.top + "\n"
 				node = node + ", @value{topname}"
 			else:
@@ -249,12 +253,12 @@
 			d = n.description
 			if not d:
 				d = n.name
-			if not urg_value and regex.match (not_in_node, n.name) != -1:
+			if not urg_value and not_in_node.match(n.name) :
 				menu = menu + "@set nodename " + n.name + "\n"
 				menu = menu + "* @value{nodename}::"
 				menu = menu + ' ' * (TAB_POS - len (n.name)) + d + "\n"
 			else:
-				menu = menu + ljust ('* ' + n.name + '::', TAB_POS) + d + "\n"
+				menu = menu + ('* ' + n.name + '::').ljust(TAB_POS) + d + "\n"
 		menu = menu + "@end menu\n"
 		this.s = this.s[:m.pos + this.offset] + menu + this.s[m.pos + this.offset:]
 		m.node_list[0].pos = m.node_list[0].pos - len (menu)
@@ -309,7 +313,7 @@
 		this.parse ()
 		this.xrefs ()
 		this.nodes_and_menus ()
-		this.s = regsub.gsub ('^\n\n', '\n', this.s)
+		this.s = re_dnewl.sub ('\n', this.s)
 		this.s = '\n' + this.s 
 		infotitle = ''
 		basename = os.path.basename (os.path.splitext (this.filename)[0])
