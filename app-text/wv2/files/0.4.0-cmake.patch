diff -urN wv2-0.4.0.old/CMakeLists.txt wv2-0.4.0/CMakeLists.txt
--- wv2-0.4.0.old/CMakeLists.txt	2009-08-26 23:46:40.000000000 +0200
+++ wv2-0.4.0/CMakeLists.txt	2009-09-29 11:21:50.000000000 +0200
@@ -29,10 +29,10 @@
   SET( ICONV_REQUIRES_CONST ${ICONV_SECOND_ARGUMENT_IS_CONST} )
 ENDIF( ICONV_FOUND )
 
-OPTION( WITHOUT_ZLIB "Build wv2 without zlib (without compression features)" OFF )
-IF( NOT WITHOUT_ZLIB )
+OPTION( WITH_ZLIB "Build wv2 with zlib (with compression features)" ON )
+IF( WITH_ZLIB )
   FIND_PACKAGE( ZLIB REQUIRED )
-ENDIF( NOT WITHOUT_ZLIB )
+ENDIF( WITH_ZLIB )
 
 INCLUDE_DIRECTORIES( ${GLIB2_INCLUDE_DIR} ${LIBGSF_INCLUDE_DIR} ${ICONV_INCLUDE_DIR} ${ZLIB_INCLUDE_DIR} )
 
@@ -129,9 +129,9 @@
   TRY_RUN( MODERN_ZLIB_RUN MODERN_ZLIB_COMPILE ${wvWare_BINARY_DIR}/CMakeTmp ${wvWare_SOURCE_DIR}/cmake/TestModernZlib.c )
 ENDIF( ZLIB_HAS_INFLATE )
 
-IF( MODERN_ZLIB_RUN GREATER 0 AND NOT WITHOUT_ZLIB )
+IF( MODERN_ZLIB_RUN GREATER 0 AND WITH_ZLIB )
   MESSAGE( FATAL_ERROR "Your version of zlib is too old for wv2" )
-ENDIF( MODERN_ZLIB_RUN GREATER 0 AND NOT WITHOUT_ZLIB )
+ENDIF( MODERN_ZLIB_RUN GREATER 0 AND WITH_ZLIB )
 
 #
 # Set cflags and ldflags
diff -urN wv2-0.4.0.old/src/CMakeLists.txt wv2-0.4.0/src/CMakeLists.txt
--- wv2-0.4.0.old/src/CMakeLists.txt	2009-08-26 23:46:40.000000000 +0200
+++ wv2-0.4.0/src/CMakeLists.txt	2009-09-29 11:20:05.000000000 +0200
@@ -90,11 +90,11 @@
 INSTALL( TARGETS wv2
     EXPORT wvWare
     RUNTIME DESTINATION bin
-    LIBRARY DESTINATION lib
-    ARCHIVE DESTINATION lib/static
+    LIBRARY DESTINATION lib${LIB_SUFFIX}
+    ARCHIVE DESTINATION lib${LIB_SUFFIX}/static
 )
 
-INSTALL( EXPORT wvWare DESTINATION lib/wvWare FILE wv2.cmake )
+INSTALL( EXPORT wvWare DESTINATION lib${LIB_SUFFIX}/wvWare FILE wv2.cmake )
 
 INSTALL( FILES ${wv2_HEADERS}
   DESTINATION include/wv2
@@ -103,5 +103,5 @@
 # libtool files are useless for Visual C++ and Borland C++
 IF( NOT MSVC AND NOT BORLAND )
   INCLUDE( ${wvWare_SOURCE_DIR}/cmake/MacroCreateLibtoolFile.cmake )
-  CREATE_LIBTOOL_FILE( wv2 /lib )
+  CREATE_LIBTOOL_FILE( wv2 /lib${LIB_SUFFIX} )
 ENDIF( NOT MSVC AND NOT BORLAND )
