--- src/registry.cpp	Wed Aug 14 17:24:43 2002
+++ src/registry.cpp	Wed Sep 11 20:22:43 2002
@@ -79,7 +79,7 @@
 //=== Get String =========================================================
 // Return the value of key, if missed return default value
 //========================================================================
-char *Registry::getString(const char *property, const char *defaultValue = "") {
+char *Registry::getString(const char *property, const char *defaultValue) {
 	bool found = false;
 	char *ret = NULL;
 	FILE *f;
@@ -113,7 +113,7 @@
 //=== Get Int ============================================================
 // Return the value of key, if missed return default value
 //========================================================================
-int Registry::getInt(const char *property, const int defaultValue = 0) {
+int Registry::getInt(const char *property, const int defaultValue) {
 	int ret = defaultValue;
 	char *p;
 	p = getString(property);
@@ -141,7 +141,7 @@
 //=== Get Bool ===========================================================
 // Return the value of key, if missed return default value
 //========================================================================
-bool Registry::getBool(const char *property, const bool defaultValue = false) {
+bool Registry::getBool(const char *property, const bool defaultValue) {
 	bool ret = defaultValue;
 	char *p;
 	p = getString(property);
--- src/database.cpp	Wed Aug 14 17:24:43 2002
+++ src/database.cpp	Wed Sep 11 20:30:55 2002
109c109
< bool Database::createDictionary(const char *fileName, const long fixedLastWordPointer = 0) {
---
> bool Database::createDictionary(const char *fileName, const long fixedLastWordPointer) {
--- src/translator.cpp	Wed Aug 14 17:24:43 2002
+++ src/translator.cpp	Wed Sep 11 20:30:55 2002
@@ -119,7 +119,7 @@
 // Real construcor
 // Call the same method of Database, and return same result
 //========================================================================
-bool Translator::createDictionary(const char *fileName, const int dictionary, const long fixedLastWordPointer = 0) {
+bool Translator::createDictionary(const char *fileName, const int dictionary, const long fixedLastWordPointer) {
 	bool ret = false;
 	switch (dictionary) {
 		case ENG_BUL:
@@ -275,7 +275,7 @@
 // Return true if passed word is legal bulgarian word as LATIN_INPUT
 // Return pointer to new word that is legal dictionary word
 //========================================================================
-bool Translator::isLatinInput(const char *word, char *buf, const bool ignoreSpace = false) {
+bool Translator::isLatinInput(const char *word, char *buf, const bool ignoreSpace) {
 	int i = 0;
 	char *p;
 	while (word[i] != '\0') {
@@ -304,7 +304,7 @@
 // to a normal latin output
 // Change buffer and return pointer to new word
 //========================================================================
-char *Translator::toLatin(const char *word, char *buf, const bool legalLatinInput = true) {
+char *Translator::toLatin(const char *word, char *buf, const bool legalLatinInput) {
 	int i = 0;
 	int j = 0;
 	char *p;
@@ -348,7 +348,7 @@
 // Call the same method of Database, and return same result
 // But perform some operations
 //========================================================================
-char *Translator::getWord(const bool lowerCase = true, const bool legalLatinInput = true) {
+char *Translator::getWord(const bool lowerCase, const bool legalLatinInput) {
 	char *ret = NULL;
 	switch (currentDictionary) {
 		case ENG_BUL:
--- src/win.cpp	Wed Aug 14 17:24:43 2002
+++ src/win.cpp	Wed Sep 11 21:27:21 2002
@@ -214,7 +214,7 @@
 // Create GUI
 // Init objects and set default variables
 //========================================================================
-Win::Win(QWidget *parent = 0, const char *name = 0):QMainWindow(parent, name) {
+Win::Win(QWidget *parent, const char *name):QMainWindow(parent, name) {
 
 	// Init some variables
 	fromSystemHighlighted = false;
