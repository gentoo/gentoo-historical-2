diff -ruN xpdf.orig/CharCodeToUnicode.h xpdf/CharCodeToUnicode.h
--- xpdf.orig/CharCodeToUnicode.h	2004-01-21 17:26:45.000000000 -0800
+++ xpdf/CharCodeToUnicode.h	2004-02-12 14:05:30.591633392 -0800
@@ -67,6 +67,10 @@
   // Map a CharCode to Unicode.
   int mapToUnicode(CharCode c, Unicode *u, int size);
 
+  // Return the mapping's length, i.e., one more than the max char
+  // code supported by the mapping.
+  CharCode getLength() { return mapLen; }
+
 private:
 
   void parseCMap1(int (*getCharFunc)(void *), void *data, int nBits);
diff -ruN xpdf.orig/SplashOutputDev.cc xpdf/SplashOutputDev.cc
--- xpdf.orig/SplashOutputDev.cc	2004-01-21 17:26:45.000000000 -0800
+++ xpdf/SplashOutputDev.cc	2004-02-12 14:05:30.602631720 -0800
@@ -497,15 +497,18 @@
   FILE *tmpFile;
   Gushort *codeToGID;
   DisplayFontParam *dfp;
+  CharCodeToUnicode *ctu;
   double m11, m12, m21, m22, w1, w2;
   SplashCoord mat[4];
   char *name;
-  int c, substIdx, n, code;
+  Unicode uBuf[8];
+  int c, substIdx, n, code, cmap;
 
   needFontUpdate = gFalse;
   font = NULL;
   tmpFileName = NULL;
   substIdx = -1;
+  dfp = NULL;
 
   if (!(gfxFont = state->getFont())) {
     goto err1;
@@ -544,7 +547,6 @@
     } else if (!(fileName = gfxFont->getExtFontFile())) {
 
       // look for a display font mapping or a substitute font
-      dfp = NULL;
       if (gfxFont->isCIDFont()) {
 	if (((GfxCIDFont *)gfxFont)->getCollection()) {
 	  dfp = globalParams->
@@ -650,10 +652,48 @@
       }
       break;
     case fontCIDType2:
-      n = ((GfxCIDFont *)gfxFont)->getCIDToGIDLen();
-      codeToGID = (Gushort *)gmalloc(n * sizeof(Gushort));
-      memcpy(codeToGID, ((GfxCIDFont *)gfxFont)->getCIDToGID(),
-	     n * sizeof(Gushort));
+      codeToGID = NULL;
+      n = 0;
+      if (dfp) {
+	// create a CID-to-GID mapping, via Unicode
+	if ((ctu = ((GfxCIDFont *)gfxFont)->getToUnicode())) {
+	  if ((ff = FoFiTrueType::load(fileName->getCString()))) {
+	    // look for a Unicode cmap
+	    for (cmap = 0; cmap < ff->getNumCmaps(); ++cmap) {
+	      if ((ff->getCmapPlatform(cmap) == 3 &&
+		   ff->getCmapEncoding(cmap) == 1) ||
+		  ff->getCmapPlatform(cmap) == 0) {
+		break;
+	      }
+	    }
+	    if (cmap < ff->getNumCmaps()) {
+	      // map CID -> Unicode -> GID
+	      n = ctu->getLength();
+	      codeToGID = (Gushort *)gmalloc(n * sizeof(Gushort));
+	      for (code = 0; code < n; ++code) {
+		if (ctu->mapToUnicode(code, uBuf, 8) > 0) {
+		  codeToGID[code] = ff->mapCodeToGID(cmap, uBuf[0]);
+		} else {
+		  codeToGID[code] = 0;
+		}
+	      }
+	    }
+	    delete ff;
+	  }
+	  ctu->decRefCnt();
+	} else {
+	  error(-1, "Couldn't find a mapping to Unicode for font '%s'",
+		gfxFont->getName() ? gfxFont->getName()->getCString()
+		                   : "(unnamed)");
+	}
+      } else {
+	if (((GfxCIDFont *)gfxFont)->getCIDToGID()) {
+	  n = ((GfxCIDFont *)gfxFont)->getCIDToGIDLen();
+	  codeToGID = (Gushort *)gmalloc(n * sizeof(Gushort));
+	  memcpy(codeToGID, ((GfxCIDFont *)gfxFont)->getCIDToGID(),
+		 n * sizeof(Gushort));
+	}
+      }
       if (!(fontFile = fontEngine->loadTrueTypeFont(
 			   id,
 			   fileName->getCString(),
