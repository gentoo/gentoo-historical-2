diff -ur xpdf-3.00.org/xpdf/GlobalParams.cc xpdf-3.00/xpdf/GlobalParams.cc
--- xpdf-3.00.org/xpdf/GlobalParams.cc	2004-01-21 20:26:45.000000000 -0500
+++ xpdf-3.00/xpdf/GlobalParams.cc	2004-12-01 06:33:25.998677321 -0500
@@ -234,6 +234,8 @@
   enableT1lib = gTrue;
   enableFreeType = gTrue;
   antialias = gTrue;
+  scrollLines = 1;
+  scrollCols = 1;
   urlCommand = NULL;
   movieCommand = NULL;
   mapNumericCharNames = gTrue;
@@ -445,6 +447,10 @@
 	parseYesNo("antialias", &antialias, tokens, fileName, line);
       } else if (!cmd->cmp("urlCommand")) {
 	parseCommand("urlCommand", &urlCommand, tokens, fileName, line);
+      } else if (!cmd->cmp("scrollLines")) {
+        parseInteger("scrollLines", &scrollLines, tokens, fileName, line);
+      } else if (!cmd->cmp("scrollCols")) {
+        parseInteger("scrollCols", &scrollCols, tokens, fileName, line);
       } else if (!cmd->cmp("movieCommand")) {
 	parseCommand("movieCommand", &movieCommand, tokens, fileName, line);
       } else if (!cmd->cmp("mapNumericCharNames")) {
@@ -809,6 +815,38 @@
   *val = ((GString *)tokens->get(1))->copy();
 }
 
+void GlobalParams::parseInteger(char *cmdName, int *val,
+                                GList *tokens, GString *fileName, int line) {
+  char *tok;
+  int value;
+  GBool invalid = gFalse;
+
+  if (tokens->getLength() != 2) {
+    error(-1, "Bad '%s' config file command (%s:%d)",
+              cmdName, fileName->getCString(), line);
+    return;
+  }
+  tok = ((GString*) tokens->get(1))->getCString();
+  value = atoi(tok);
+  if (value == 0) {
+     // Verify it's a valid 0 (ie, a string of only '0's)
+     if (*tok != '0')
+        invalid = gTrue;
+     while (!invalid && *tok != '\0')
+     {
+       if (*tok != '0')
+          invalid = gTrue;
+       tok++;
+     }
+     if (invalid) {
+       error(-1, "Bad '%s' config file command (%s:%d)",
+                 cmdName, fileName->getCString(), line);
+       return;
+     }
+  }
+  *val = value;
+}
+
 void GlobalParams::parseYesNo(char *cmdName, GBool *flag,
 			      GList *tokens, GString *fileName, int line) {
   GString *tok;
diff -ur xpdf-3.00.org/xpdf/GlobalParams.h xpdf-3.00/xpdf/GlobalParams.h
--- xpdf-3.00.org/xpdf/GlobalParams.h	2004-01-21 20:26:45.000000000 -0500
+++ xpdf-3.00/xpdf/GlobalParams.h	2004-12-01 06:38:10.489040100 -0500
@@ -156,6 +156,8 @@
   GBool getEnableFreeType();
   GBool getAntialias();
   GString *getURLCommand() { return urlCommand; }
+  int getScrollLines() { return scrollLines; }
+  int getScrollCols() { return scrollCols; }
   GString *getMovieCommand() { return movieCommand; }
   GBool getMapNumericCharNames();
   GBool getPrintCommands();
@@ -224,6 +226,8 @@
   void parseInitialZoom(GList *tokens, GString *fileName, int line);
   void parseCommand(char *cmdName, GString **val,
 		    GList *tokens, GString *fileName, int line);
+  void parseInteger(char *cmdName, int *val,
+		    GList *tokens, GString *fileName, int line);
   void parseYesNo(char *cmdName, GBool *flag,
 		  GList *tokens, GString *fileName, int line);
   GBool parseYesNo2(char *token, GBool *flag);
@@ -290,6 +294,8 @@
   GBool enableT1lib;		// t1lib enable flag
   GBool enableFreeType;		// FreeType enable flag
   GBool antialias;		// anti-aliasing enable flag
+  int scrollLines;		// How many lines to scroll
+  int scrollCols;		// How many columns to scroll
   GString *urlCommand;		// command executed for URL links
   GString *movieCommand;	// command executed for movie annotations
   GBool mapNumericCharNames;	// map numeric char names (from font subsets)?
diff -ur xpdf-3.00.org/xpdf/XPDFCore.cc xpdf-3.00/xpdf/XPDFCore.cc
--- xpdf-3.00.org/xpdf/XPDFCore.cc	2004-01-21 20:26:45.000000000 -0500
+++ xpdf-3.00/xpdf/XPDFCore.cc	2004-12-01 06:38:54.614635025 -0500
@@ -686,19 +686,35 @@
   displayPage(history[historyCur].page, zoom, rotate, gFalse, gFalse);
 }
 
-void XPDFCore::scrollLeft(int nCols) {
+void XPDFCore::scrollLeft() {
+  scrollLeft_(globalParams->getScrollCols());
+}
+
+void XPDFCore::scrollLeft_(int nCols) {
   scrollTo(scrollX - nCols * 16, scrollY);
 }
 
-void XPDFCore::scrollRight(int nCols) {
+void XPDFCore::scrollRight() {
+  scrollRight_(globalParams->getScrollCols());
+}
+
+void XPDFCore::scrollRight_(int nCols) {
   scrollTo(scrollX + nCols * 16, scrollY);
 }
 
-void XPDFCore::scrollUp(int nLines) {
+void XPDFCore::scrollUp() {
+  scrollUp_(globalParams->getScrollLines());
+}
+
+void XPDFCore::scrollUp_(int nLines) {
   scrollTo(scrollX, scrollY - nLines * 16);
 }
 
-void XPDFCore::scrollDown(int nLines) {
+void XPDFCore::scrollDown() {
+  scrollDown_(globalParams->getScrollLines());
+}
+
+void XPDFCore::scrollDown_(int nLines) {
   scrollTo(scrollX, scrollY + nLines * 16);
 }
 
@@ -1613,7 +1629,7 @@
       } else if (core->scrollY == 0) {
 	core->gotoPrevPage(1, gFalse, gTrue);
       } else {
-	core->scrollUp(1);
+	core->scrollUp();
       }
     } else if (data->event->xbutton.button == 5) { // mouse wheel down
       if (core->fullScreen ||
@@ -1621,15 +1637,15 @@
 	    core->out->getBitmapHeight() - core->drawAreaHeight) {
 	core->gotoNextPage(1, gTrue);
       } else {
-	core->scrollDown(1);
+	core->scrollDown();
       }
     } else if (data->event->xbutton.button == 6) { // second mouse wheel left
       if (!core->fullScreen) {
-	core->scrollLeft(1);
+	core->scrollLeft();
       }
     } else if (data->event->xbutton.button == 7) { // second mouse wheel right
       if (!core->fullScreen) {
-	core->scrollRight(1);
+	core->scrollRight();
       }
     } else {
       if (*core->mouseCbk) {
diff -ur xpdf-3.00.org/xpdf/XPDFCore.h xpdf-3.00/xpdf/XPDFCore.h
--- xpdf-3.00.org/xpdf/XPDFCore.h	2004-01-21 20:26:45.000000000 -0500
+++ xpdf-3.00/xpdf/XPDFCore.h	2004-12-01 06:19:08.566433277 -0500
@@ -126,10 +126,14 @@
   void gotoPrevPage(int dec, GBool top, GBool bottom);
   void goForward();
   void goBackward();
-  void scrollLeft(int nCols = 1);
-  void scrollRight(int nCols = 1);
-  void scrollUp(int nLines = 1);
-  void scrollDown(int nLines = 1);
+  void scrollLeft();
+  void scrollRight();
+  void scrollUp();
+  void scrollDown();
+  void scrollLeft_(int nCols = 1);
+  void scrollRight_(int nCols = 1);
+  void scrollUp_(int nLines = 1);
+  void scrollDown_(int nLines = 1);
   void scrollPageUp();
   void scrollPageDown();
   void scrollTo(int x, int y);
