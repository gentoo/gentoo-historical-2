--- xpdf-3.00/splash/Splash.cc.orig	2004-10-19 11:50:09.000000000 +0200
+++ xpdf-3.00/splash/Splash.cc	2004-10-19 11:50:46.000000000 +0200
@@ -631,6 +631,9 @@
   if (path->length == 0) {
     return splashErrEmptyPath;
   }
+  if (path->length == 1)
+    return splashErrBogusPath;
+
   xPath = new SplashXPath(path, state->flatness, gTrue);
   xPath->sort();
   scanner = new SplashXPathScanner(xPath, eo);
--- xpdf-3.00/splash/SplashXPathScanner.cc.orig	2004-10-21 16:36:41.170525604 +0200
+++ xpdf-3.00/splash/SplashXPathScanner.cc	2004-10-21 17:34:05.320376896 +0200
@@ -39,54 +39,60 @@
   xPath = xPathA;
   eo = eoA;
 
+  xMin = 0;
+  xMax = 0;
+  yMin = 0;
+  yMax = 0;
+  interY = 0;
+  xPathIdx = 0;
+  inter = NULL;
+  interLen = interSize = 0;
+
   // compute the bbox
   seg = &xPath->segs[0];
-  if (seg->x0 <= seg->x1) {
-    xMinFP = seg->x0;
-    xMaxFP = seg->x1;
-  } else {
-    xMinFP = seg->x1;
-    xMaxFP = seg->x0;
-  }
-  if (seg->flags & splashXPathFlip) {
-    yMinFP = seg->y1;
-    yMaxFP = seg->y0;
-  } else {
-    yMinFP = seg->y0;
-    yMaxFP = seg->y1;
-  }
-  for (i = 1; i < xPath->length; ++i) {
-    seg = &xPath->segs[i];
-    if (seg->x0 < xMinFP) {
+  if (seg) {
+    if (seg->x0 <= seg->x1) {
       xMinFP = seg->x0;
-    } else if (seg->x0 > xMaxFP) {
-      xMaxFP = seg->x0;
-    }
-    if (seg->x1 < xMinFP) {
-      xMinFP = seg->x1;
-    } else if (seg->x1 > xMaxFP) {
       xMaxFP = seg->x1;
+    } else {
+      xMinFP = seg->x1;
+      xMaxFP = seg->x0;
     }
     if (seg->flags & splashXPathFlip) {
-      if (seg->y0 > yMaxFP) {
-	yMaxFP = seg->y0;
-      }
+      yMinFP = seg->y1;
+      yMaxFP = seg->y0;
     } else {
-      if (seg->y1 > yMaxFP) {
-	yMaxFP = seg->y1;
+      yMinFP = seg->y0;
+      yMaxFP = seg->y1;
+    }
+    for (i = 1; i < xPath->length; ++i) {
+      seg = &xPath->segs[i];
+      if (seg->x0 < xMinFP) {
+        xMinFP = seg->x0;
+      } else if (seg->x0 > xMaxFP) {
+        xMaxFP = seg->x0;
+      }
+      if (seg->x1 < xMinFP) {
+        xMinFP = seg->x1;
+      } else if (seg->x1 > xMaxFP) {
+        xMaxFP = seg->x1;
+      }
+      if (seg->flags & splashXPathFlip) {
+        if (seg->y0 > yMaxFP) {
+          yMaxFP = seg->y0;
+        }
+      } else {
+        if (seg->y1 > yMaxFP) {
+          yMaxFP = seg->y1;
+        }
       }
     }
+    xMin = splashFloor(xMinFP);
+    xMax = splashFloor(xMaxFP);
+    yMin = splashFloor(yMinFP);
+    yMax = splashFloor(yMaxFP);
+    computeIntersections(yMin);
   }
-  xMin = splashFloor(xMinFP);
-  xMax = splashFloor(xMaxFP);
-  yMin = splashFloor(yMinFP);
-  yMax = splashFloor(yMaxFP);
-
-  interY = 0;
-  xPathIdx = 0;
-  inter = NULL;
-  interLen = interSize = 0;
-  computeIntersections(yMin);
 }
 
 SplashXPathScanner::~SplashXPathScanner() {
--- xpdf-3.00/splash/SplashFTFont.cc.orig	2004-10-19 11:50:55.000000000 +0200
+++ xpdf-3.00/splash/SplashFTFont.cc	2004-10-19 11:51:12.000000000 +0200
@@ -225,6 +225,9 @@
   if (FT_Get_Glyph(slot, &glyph)) {
     return NULL;
   }
+  if (glyph->format != FT_GLYPH_FORMAT_OUTLINE) {
+    return NULL;
+  }
   path = new SplashPath();
   FT_Outline_Decompose(&((FT_OutlineGlyph)glyph)->outline,
 		       &outlineFuncs, path);
