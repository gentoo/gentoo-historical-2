--- pdfFile.hpp.orig	2006-06-12 00:01:12.000000000 +0200
+++ pdfFile.hpp	2006-06-12 00:09:46.000000000 +0200
@@ -158,7 +158,7 @@
 
       //int findInheritRes(C_pdfFile *org, char *fBuf, int lg, char **pcRes);
       int makeRes(C_pdfFile *org, char *fBuf, int lg, char **pcRes);
-      int makeAttrib(C_pdfFile *org, char *fBuf, int lgOrgBuf, char **pcRes, char *add, int lgAdd);
+      int makeAttrib(C_pdfFile *org, char *fBuf, int lgOrgBuf, char **pcRes, int add, int lgAdd);
 
       bool fast; // version rapide, on ne gère pas les options
       bool closed; //protection plus rien n'est possible aprés l'appel à la fonction close
--- pdfFile.cpp.orig	2006-06-12 00:01:23.000000000 +0200
+++ pdfFile.cpp	2006-06-12 00:11:49.000000000 +0200
@@ -906,7 +906,7 @@
 /* ********************************************** */
 #pragma warning(disable : 4100)
 
-int C_pdfFile::makeAttrib(C_pdfFile *org, char *buf, int lgOrgBuf, char **pcRes, char *add, int lgAdd) {
+int C_pdfFile::makeAttrib(C_pdfFile *org, char *buf, int lgOrgBuf, char **pcRes, int add, int lgAdd) {
 char *pc;
 int lgRes, lgBuf, j, nObj, r;
 
@@ -945,12 +945,12 @@
    }
 
    if ( (lgAdd != 0) && (add != 0) ) {
-      switch ( (int)add ) {
+      switch ( add ) {
       case _Resources:
 
          break;
       default:
-         memcpy(pc + lgRes, add + sizeof(int), lgAdd);
+         memcpy(pc + lgRes, (char *)add + sizeof(int), lgAdd);
          lgRes += lgAdd;
       }
    }
@@ -2663,4 +2663,4 @@
             delete p;
 
     return destBuf;
-}
\ Kein Zeilenumbruch am Dateiende.
+}
