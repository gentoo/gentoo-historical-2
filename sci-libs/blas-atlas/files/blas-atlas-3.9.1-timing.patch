diff -Naur ATLAS/makes/Make.l1tune ATLAS.new/makes/Make.l1tune
--- ATLAS/makes/Make.l1tune	2008-07-22 10:32:34.000000000 -0400
+++ ATLAS.new/makes/Make.l1tune	2008-08-02 07:17:40.000000000 -0400
@@ -46,7 +46,7 @@
 
 force_build :
 auxlib :
-	cd $(AUXdir) ; make lib
+#	cd $(AUXdir) ; make lib
 $(BINdir)/xsubstr:
 	cd $(BINdir) ; $(MAKE) xsubstr
 cdotc.dsc : $(mySRCdir)/DOT/ccasesc.dsc $(BINdir)/xsubstr
diff -Naur ATLAS/tune/blas/level1/dottime.c ATLAS.new/tune/blas/level1/dottime.c
--- ATLAS/tune/blas/level1/dottime.c	2008-07-22 10:33:17.000000000 -0400
+++ ATLAS.new/tune/blas/level1/dottime.c	2008-08-02 07:20:23.000000000 -0400
@@ -198,6 +198,7 @@
    #define TEST_DOT ATL_DOT
 #endif
 
+#if 0
 double DoOneTiming(int N, int nkflop, int cachesize, int incX, int incY)
 /*
  * This method of timing can be used when we have a cycle-accurate timer
@@ -253,6 +254,8 @@
    FA_free(Y, FAy, MAy);
    return(t1-t0);
 }
+#endif
+
 double DoTiming(int N, int nkflop, int cachesize, int incX, int incY)
 {
    #ifdef TREAL
@@ -322,9 +325,9 @@
    int i;
    for (i=0; i < nrep; i++)
    {
-      if (nkflop <= 0)
-         tims[i] = DoOneTiming(N, nkflop, cachesize, incX, incY);
-      else
+   //   if (nkflop <= 0)
+   //      tims[i] = DoOneTiming(N, nkflop, cachesize, incX, incY);
+   //   else
       tims[i] = DoTiming(N, nkflop, cachesize, incX, incY);
       fprintf(stdout, "      N=%d, tim=%e\n", N, tims[i]);
    }
