diff -Nur ARPACK.orig/SRC/cgetv0.f ARPACK/SRC/cgetv0.f
--- ARPACK.orig/SRC/cgetv0.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/cgetv0.f	2007-12-04 12:40:24.000000000 +0000
@@ -89,7 +89,7 @@
 c     pp 357-385.
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     cvout   ARPACK utility routine that prints vectors.
 c     clarnv  LAPACK routine for generating a random vector. 
 c     cgemv   Level 2 BLAS routine for matrix vector multiplication.
@@ -168,7 +168,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   ccopy, cgemv, clarnv, cvout, second
+      external   ccopy, cgemv, clarnv, cvout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -211,7 +211,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mgetv0
 c 
          ierr   = 0
@@ -238,7 +238,7 @@
 c        | the generalized problem when B is possibly (singular).   |
 c        %----------------------------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nopx = nopx + 1
             ipntr(1) = 1
@@ -261,7 +261,7 @@
 c
       if (orth)  go to 40
 c 
-      call second (t3)
+      call arscnd (t3)
       tmvopx = tmvopx + (t3 - t2)
 c 
 c     %------------------------------------------------------%
@@ -269,7 +269,7 @@
 c     | Compute B-norm of starting vector.                   |
 c     %------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       first = .TRUE.
       if (bmat .eq. 'G') then
          nbx = nbx + 1
@@ -285,7 +285,7 @@
    20 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -328,7 +328,7 @@
 c     | Compute the B-norm of the orthogonalized starting vector |
 c     %----------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       if (bmat .eq. 'G') then
          nbx = nbx + 1
          call ccopy (n, resid, 1, workd(n+1), 1)
@@ -343,7 +343,7 @@
    40 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -401,7 +401,7 @@
       end if
       ido = 99
 c 
-      call second (t1)
+      call arscnd (t1)
       tgetv0 = tgetv0 + (t1 - t0)
 c 
  9000 continue
diff -Nur ARPACK.orig/SRC/cnaitr.f ARPACK/SRC/cnaitr.f
--- ARPACK.orig/SRC/cnaitr.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/cnaitr.f	2007-12-04 12:40:24.000000000 +0000
@@ -131,7 +131,7 @@
 c\Routines called:
 c     cgetv0  ARPACK routine to generate the initial vector.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     cmout   ARPACK utility routine that prints matrices
 c     cvout   ARPACK utility routine that prints vectors.
 c     clanhs  LAPACK routine that computes various norms of a matrix.
@@ -273,7 +273,7 @@
 c     %----------------------%
 c
       external   caxpy, ccopy, cscal, csscal, cgemv, cgetv0, 
-     &           slabad, cvout, cmout, ivout, second
+     &           slabad, cvout, cmout, ivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -326,7 +326,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mcaitr
 c 
 c        %------------------------------%
@@ -437,7 +437,7 @@
 c              %------------------------------------------------%
 c
                info = j - 1
-               call second (t1)
+               call arscnd (t1)
                tcaitr = tcaitr + (t1 - t0)
                ido = 99
                go to 9000
@@ -477,7 +477,7 @@
 c
          step3 = .true.
          nopx  = nopx + 1
-         call second (t2)
+         call arscnd (t2)
          call ccopy (n, v(1,j), 1, workd(ivj), 1)
          ipntr(1) = ivj
          ipntr(2) = irj
@@ -497,7 +497,7 @@
 c        | if step3 = .true.                |
 c        %----------------------------------%
 c
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
  
          step3 = .false.
@@ -513,7 +513,7 @@
 c        |          factorization to length j.   |
 c        %---------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             step4 = .true.
@@ -538,7 +538,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -583,11 +583,11 @@
 c
          if (j .gt. 1) h(j,j-1) = cmplx(betaj, rzero)
 c
-         call second (t4)
+         call arscnd (t4)
 c 
          orth1 = .true.
 c 
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call ccopy (n, resid, 1, workd(irj), 1)
@@ -611,7 +611,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -689,7 +689,7 @@
          call caxpy (j, one, workd(irj), 1, h(1,j), 1)
 c 
          orth2 = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call ccopy (n, resid, 1, workd(irj), 1)
@@ -713,7 +713,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if 
 c
@@ -791,7 +791,7 @@
          rstart = .false.
          orth2  = .false.
 c 
-         call second (t5)
+         call arscnd (t5)
          titref = titref + (t5 - t4)
 c 
 c        %------------------------------------%
@@ -800,7 +800,7 @@
 c
          j = j + 1
          if (j .gt. k+np) then
-            call second (t1)
+            call arscnd (t1)
             tcaitr = tcaitr + (t1 - t0)
             ido = 99
             do 110 i = max(1,k), k+np-1
diff -Nur ARPACK.orig/SRC/cnapps.f ARPACK/SRC/cnapps.f
--- ARPACK.orig/SRC/cnapps.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/cnapps.f	2007-12-04 12:40:24.000000000 +0000
@@ -92,7 +92,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     cmout   ARPACK utility routine that prints matrices
 c     cvout   ARPACK utility routine that prints vectors.
 c     clacpy  LAPACK matrix copy routine.
@@ -184,7 +184,7 @@
 c     %----------------------%
 c
       external   caxpy, ccopy, cgemv, cscal, clacpy, clartg, 
-     &           cvout, claset, slabad, cmout, second, ivout
+     &           cvout, claset, slabad, cmout, arscnd, ivout
 c
 c     %--------------------%
 c     | External Functions |
@@ -240,7 +240,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mcapps
 c 
       kplusp = kev + np 
@@ -495,7 +495,7 @@
       end if
 c
  9000 continue
-      call second (t1)
+      call arscnd (t1)
       tcapps = tcapps + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/cnaup2.f ARPACK/SRC/cnaup2.f
--- ARPACK.orig/SRC/cnaup2.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/cnaup2.f	2007-12-04 12:40:24.000000000 +0000
@@ -135,7 +135,7 @@
 c     cngets  ARPACK reorder Ritz values and error bounds routine.
 c     csortc  ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     cmout   ARPACK utility routine that prints matrices
 c     cvout   ARPACK utility routine that prints vectors.
 c     svout   ARPACK utility routine that prints vectors.
@@ -240,7 +240,7 @@
 c     %----------------------%
 c
       external   ccopy, cgetv0, cnaitr, cneigh, cngets, cnapps,
-     &           csortc, cswap, cmout, cvout, ivout, second
+     &           csortc, cswap, cmout, cvout, ivout, arscnd
 c
 c     %--------------------%
 c     | External functions |
@@ -264,7 +264,7 @@
 c
       if (ido .eq. 0) then
 c 
-         call second (t0)
+         call arscnd (t0)
 c 
          msglvl = mcaup2
 c 
@@ -724,7 +724,7 @@
 c        %---------------------------------------------%
 c
          cnorm = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call ccopy (n, resid, 1, workd(n+1), 1)
@@ -749,7 +749,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -788,7 +788,7 @@
 c     | Error Exit |
 c     %------------%
 c
-      call second (t1)
+      call arscnd (t1)
       tcaup2 = t1 - t0
 c     
  9000 continue
diff -Nur ARPACK.orig/SRC/cnaupd.f ARPACK/SRC/cnaupd.f
--- ARPACK.orig/SRC/cnaupd.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/cnaupd.f	2007-12-04 12:40:24.000000000 +0000
@@ -356,7 +356,7 @@
 c     cstatn  ARPACK routine that initializes the timing variables.
 c     ivout   ARPACK utility routine that prints integers.
 c     cvout   ARPACK utility routine that prints vectors.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     slamch  LAPACK routine that determines machine constants.
 c
 c\Author
@@ -429,7 +429,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   cnaup2, cvout, ivout, second, cstatn
+      external   cnaup2, cvout, ivout, arscnd, cstatn
 c
 c     %--------------------%
 c     | External Functions |
@@ -451,7 +451,7 @@
 c        %-------------------------------%
 c
          call cstatn
-         call second (t0)
+         call arscnd (t0)
          msglvl = mcaupd
 c
 c        %----------------%
@@ -611,7 +611,7 @@
      &               '_naupd: Associated Ritz estimates')
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tcaupd = t1 - t0
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/cneigh.f ARPACK/SRC/cneigh.f
--- ARPACK.orig/SRC/cneigh.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/cneigh.f	2007-12-04 12:40:24.000000000 +0000
@@ -64,7 +64,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     cmout   ARPACK utility routine that prints matrices
 c     cvout   ARPACK utility routine that prints vectors.
 c     svout   ARPACK utility routine that prints vectors.
@@ -152,7 +152,7 @@
 c     %----------------------%
 c
       external   clacpy, clahqr, ctrevc, ccopy, 
-     &           csscal, cmout, cvout, second
+     &           csscal, cmout, cvout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -171,7 +171,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mceigh
 c 
       if (msglvl .gt. 2) then
@@ -244,7 +244,7 @@
      &              '_neigh: Ritz estimates for the eigenvalues of H')
       end if
 c
-      call second(t1)
+      call arscnd(t1)
       tceigh = tceigh + (t1 - t0)
 c
  9000 continue
diff -Nur ARPACK.orig/SRC/cngets.f ARPACK/SRC/cngets.f
--- ARPACK.orig/SRC/cngets.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/cngets.f	2007-12-04 12:40:24.000000000 +0000
@@ -63,7 +63,7 @@
 c\Routines called:
 c     csortc  ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     cvout   ARPACK utility routine that prints vectors.
 c
 c\Author
@@ -126,7 +126,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   cvout,  csortc, second
+      external   cvout,  csortc, arscnd
 c
 c     %-----------------------%
 c     | Executable Statements |
@@ -137,7 +137,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c 
-      call second (t0)
+      call arscnd (t0)
       msglvl = mcgets
 c 
       call csortc (which, .true., kev+np, ritz, bounds)
@@ -157,7 +157,7 @@
 c
       end if
 c     
-      call second (t1)
+      call arscnd (t1)
       tcgets = tcgets + (t1 - t0)
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/dgetv0.f ARPACK/SRC/dgetv0.f
--- ARPACK.orig/SRC/dgetv0.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dgetv0.f	2007-12-04 12:40:24.000000000 +0000
@@ -93,7 +93,7 @@
 c     TR95-13, Department of Computational and Applied Mathematics.
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dvout   ARPACK utility routine for vector output.
 c     dlarnv  LAPACK routine for generating a random vector.
 c     dgemv   Level 2 BLAS routine for matrix vector multiplication.
@@ -167,7 +167,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   dlarnv, dvout, dcopy, dgemv, second
+      external   dlarnv, dvout, dcopy, dgemv, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -214,7 +214,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mgetv0
 c 
          ierr   = 0
@@ -241,7 +241,7 @@
 c        | the generalized problem when B is possibly (singular).   |
 c        %----------------------------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nopx = nopx + 1
             ipntr(1) = 1
@@ -265,7 +265,7 @@
       if (orth)  go to 40
 c 
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
       end if
 c 
@@ -274,7 +274,7 @@
 c     | Compute B-norm of starting vector.                   |
 c     %------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       first = .TRUE.
       if (bmat .eq. 'G') then
          nbx = nbx + 1
@@ -290,7 +290,7 @@
    20 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -333,7 +333,7 @@
 c     | Compute the B-norm of the orthogonalized starting vector |
 c     %----------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       if (bmat .eq. 'G') then
          nbx = nbx + 1
          call dcopy (n, resid, 1, workd(n+1), 1)
@@ -348,7 +348,7 @@
    40 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -406,7 +406,7 @@
       end if
       ido = 99
 c 
-      call second (t1)
+      call arscnd (t1)
       tgetv0 = tgetv0 + (t1 - t0)
 c 
  9000 continue
diff -Nur ARPACK.orig/SRC/dnaitr.f ARPACK/SRC/dnaitr.f
--- ARPACK.orig/SRC/dnaitr.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dnaitr.f	2007-12-04 12:40:24.000000000 +0000
@@ -132,7 +132,7 @@
 c\Routines called:
 c     dgetv0  ARPACK routine to generate the initial vector.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dmout   ARPACK utility routine that prints matrices
 c     dvout   ARPACK utility routine that prints vectors.
 c     dlabad  LAPACK routine that computes machine constants.
@@ -268,7 +268,7 @@
 c     %----------------------%
 c
       external   daxpy, dcopy, dscal, dgemv, dgetv0, dlabad, 
-     &           dvout, dmout, ivout, second
+     &           dvout, dmout, ivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -319,7 +319,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mnaitr
 c 
 c        %------------------------------%
@@ -430,7 +430,7 @@
 c              %------------------------------------------------%
 c
                info = j - 1
-               call second (t1)
+               call arscnd (t1)
                tnaitr = tnaitr + (t1 - t0)
                ido = 99
                go to 9000
@@ -470,7 +470,7 @@
 c
          step3 = .true.
          nopx  = nopx + 1
-         call second (t2)
+         call arscnd (t2)
          call dcopy (n, v(1,j), 1, workd(ivj), 1)
          ipntr(1) = ivj
          ipntr(2) = irj
@@ -490,7 +490,7 @@
 c        | if step3 = .true.                |
 c        %----------------------------------%
 c
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
  
          step3 = .false.
@@ -506,7 +506,7 @@
 c        |          factorization to length j.   |
 c        %---------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             step4 = .true.
@@ -531,7 +531,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -576,11 +576,11 @@
 c
          if (j .gt. 1) h(j,j-1) = betaj
 c
-         call second (t4)
+         call arscnd (t4)
 c 
          orth1 = .true.
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call dcopy (n, resid, 1, workd(irj), 1)
@@ -604,7 +604,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -681,7 +681,7 @@
          call daxpy (j, one, workd(irj), 1, h(1,j), 1)
 c 
          orth2 = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call dcopy (n, resid, 1, workd(irj), 1)
@@ -705,7 +705,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c
@@ -783,7 +783,7 @@
          rstart = .false.
          orth2  = .false.
 c 
-         call second (t5)
+         call arscnd (t5)
          titref = titref + (t5 - t4)
 c 
 c        %------------------------------------%
@@ -792,7 +792,7 @@
 c
          j = j + 1
          if (j .gt. k+np) then
-            call second (t1)
+            call arscnd (t1)
             tnaitr = tnaitr + (t1 - t0)
             ido = 99
             do 110 i = max(1,k), k+np-1
diff -Nur ARPACK.orig/SRC/dnapps.f ARPACK/SRC/dnapps.f
--- ARPACK.orig/SRC/dnapps.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dnapps.f	2007-12-04 12:40:24.000000000 +0000
@@ -97,7 +97,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dmout   ARPACK utility routine that prints matrices.
 c     dvout   ARPACK utility routine that prints vectors.
 c     dlabad  LAPACK routine that computes machine constants.
@@ -189,7 +189,7 @@
 c     %----------------------%
 c
       external   daxpy, dcopy, dscal, dlacpy, dlarfg, dlarf,
-     &           dlaset, dlabad, second, dlartg
+     &           dlaset, dlabad, arscnd, dlartg
 c
 c     %--------------------%
 c     | External Functions |
@@ -237,7 +237,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mnapps
       kplusp = kev + np 
 c 
@@ -635,7 +635,7 @@
       end if
 c 
  9000 continue
-      call second (t1)
+      call arscnd (t1)
       tnapps = tnapps + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/dnaup2.f ARPACK/SRC/dnaup2.f
--- ARPACK.orig/SRC/dnaup2.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dnaup2.f	2007-12-04 12:40:24.000000000 +0000
@@ -143,7 +143,7 @@
 c     dngets  ARPACK reorder Ritz values and error bounds routine.
 c     dsortc  ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dmout   ARPACK utility routine that prints matrices
 c     dvout   ARPACK utility routine that prints vectors.
 c     dlamch  LAPACK routine that determines machine constants.
@@ -236,7 +236,7 @@
 c     %----------------------%
 c
       external   dcopy , dgetv0, dnaitr, dnconv, dneigh, 
-     &           dngets, dnapps, dvout , ivout , second
+     &           dngets, dnapps, dvout , ivout , arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -258,7 +258,7 @@
 c
       if (ido .eq. 0) then
 c 
-         call second (t0)
+         call arscnd (t0)
 c 
          msglvl = mnaup2
 c 
@@ -758,7 +758,7 @@
 c        %---------------------------------------------%
 c
          cnorm = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call dcopy (n, resid, 1, workd(n+1), 1)
@@ -783,7 +783,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -822,7 +822,7 @@
 c     | Error Exit |
 c     %------------%
 c
-      call second (t1)
+      call arscnd (t1)
       tnaup2 = t1 - t0
 c     
  9000 continue
diff -Nur ARPACK.orig/SRC/dnaupd.f ARPACK/SRC/dnaupd.f
--- ARPACK.orig/SRC/dnaupd.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dnaupd.f	2007-12-04 12:40:24.000000000 +0000
@@ -379,7 +379,7 @@
 c     dnaup2  ARPACK routine that implements the Implicitly Restarted
 c             Arnoldi Iteration.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dvout   ARPACK utility routine that prints vectors.
 c     dlamch  LAPACK routine that determines machine constants.
 c
@@ -454,7 +454,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   dnaup2, dvout, ivout, second, dstatn
+      external   dnaup2, dvout, ivout, arscnd, dstatn
 c
 c     %--------------------%
 c     | External Functions |
@@ -476,7 +476,7 @@
 c        %-------------------------------%
 c
          call dstatn
-         call second (t0)
+         call arscnd (t0)
          msglvl = mnaupd
 c
 c        %----------------%
@@ -640,7 +640,7 @@
      &               '_naupd: Associated Ritz estimates')
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tnaupd = t1 - t0
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/dnconv.f ARPACK/SRC/dnconv.f
--- ARPACK.orig/SRC/dnconv.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dnconv.f	2007-12-04 12:40:24.000000000 +0000
@@ -38,7 +38,7 @@
 c     xxxxxx  real
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dlamch  LAPACK routine that determines machine constants.
 c     dlapy2  LAPACK routine to compute sqrt(x**2+y**2) carefully.
 c
@@ -119,7 +119,7 @@
 c     | for some appropriate choice of norm.                        |
 c     %-------------------------------------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
 c
 c     %---------------------------------%
 c     | Get machine dependent constant. |
@@ -134,7 +134,7 @@
          if (bounds(i) .le. tol*temp)   nconv = nconv + 1
    20 continue
 c 
-      call second (t1)
+      call arscnd (t1)
       tnconv = tnconv + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/dneigh.f ARPACK/SRC/dneigh.f
--- ARPACK.orig/SRC/dneigh.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dneigh.f	2007-12-04 12:40:24.000000000 +0000
@@ -63,7 +63,7 @@
 c\Routines called:
 c     dlaqrb  ARPACK routine to compute the real Schur form of an
 c             upper Hessenberg matrix and last row of the Schur vectors.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dmout   ARPACK utility routine that prints matrices
 c     dvout   ARPACK utility routine that prints vectors.
 c     dlacpy  LAPACK matrix copy routine.
@@ -144,7 +144,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   dcopy, dlacpy, dlaqrb, dtrevc, dvout, second
+      external   dcopy, dlacpy, dlaqrb, dtrevc, dvout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -170,7 +170,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mneigh
 c 
       if (msglvl .gt. 2) then
@@ -301,7 +301,7 @@
      &              '_neigh: Ritz estimates for the eigenvalues of H')
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tneigh = tneigh + (t1 - t0)
 c
  9000 continue
diff -Nur ARPACK.orig/SRC/dngets.f ARPACK/SRC/dngets.f
--- ARPACK.orig/SRC/dngets.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dngets.f	2007-12-04 12:40:24.000000000 +0000
@@ -135,7 +135,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   dcopy, dsortc, second
+      external   dcopy, dsortc, arscnd
 c
 c     %----------------------%
 c     | Intrinsics Functions |
@@ -152,7 +152,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c 
-      call second (t0)
+      call arscnd (t0)
       msglvl = mngets
 c 
 c     %----------------------------------------------------%
@@ -208,7 +208,7 @@
          call dsortc ( 'SR', .true., np, bounds, ritzr, ritzi )
       end if
 c     
-      call second (t1)
+      call arscnd (t1)
       tngets = tngets + (t1 - t0)
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/dsaitr.f ARPACK/SRC/dsaitr.f
--- ARPACK.orig/SRC/dsaitr.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dsaitr.f	2007-12-04 12:40:24.000000000 +0000
@@ -262,7 +262,7 @@
 c     %----------------------%
 c
       external   daxpy, dcopy, dscal, dgemv, dgetv0, dvout, dmout,
-     &           dlascl, ivout, second
+     &           dlascl, ivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -300,7 +300,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = msaitr
 c 
 c        %------------------------------%
@@ -420,7 +420,7 @@
 c              %------------------------------------------------%
 c
                info = j - 1
-               call second (t1)
+               call arscnd (t1)
                tsaitr = tsaitr + (t1 - t0)
                ido = 99
                go to 9000
@@ -460,7 +460,7 @@
 c
          step3 = .true.
          nopx  = nopx + 1
-         call second (t2)
+         call arscnd (t2)
          call dcopy (n, v(1,j), 1, workd(ivj), 1)
          ipntr(1) = ivj
          ipntr(2) = irj
@@ -479,7 +479,7 @@
 c        | WORKD(IRJ:IRJ+N-1) := OP*v_{j}.   |
 c        %-----------------------------------%
 c
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
 c 
          step3 = .false.
@@ -500,7 +500,7 @@
 c        %-------------------------------------------%
 c
          if (mode .eq. 2) go to 65
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             step4 = .true.
@@ -524,7 +524,7 @@
 c        %-----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if 
 c
@@ -592,12 +592,12 @@
          else
             h(j,1) = rnorm
          end if
-         call second (t4)
+         call arscnd (t4)
 c 
          orth1 = .true.
          iter  = 0
 c 
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call dcopy (n, resid, 1, workd(irj), 1)
@@ -621,7 +621,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -695,7 +695,7 @@
          h(j,2) = h(j,2) + workd(irj + j - 1)
 c 
          orth2 = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call dcopy (n, resid, 1, workd(irj), 1)
@@ -719,7 +719,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c
@@ -791,7 +791,7 @@
          rstart = .false.
          orth2  = .false.
 c 
-         call second (t5)
+         call arscnd (t5)
          titref = titref + (t5 - t4)
 c 
 c        %----------------------------------------------------------%
@@ -815,7 +815,7 @@
 c
          j = j + 1
          if (j .gt. k+np) then
-            call second (t1)
+            call arscnd (t1)
             tsaitr = tsaitr + (t1 - t0)
             ido = 99
 c
diff -Nur ARPACK.orig/SRC/dsapps.f ARPACK/SRC/dsapps.f
--- ARPACK.orig/SRC/dsapps.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dsapps.f	2007-12-04 12:40:24.000000000 +0000
@@ -91,7 +91,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers. 
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dvout   ARPACK utility routine that prints vectors.
 c     dlamch  LAPACK routine that determines machine constants.
 c     dlartg  LAPACK Givens rotation construction routine.
@@ -176,7 +176,7 @@
 c     %----------------------%
 c
       external   daxpy, dcopy, dscal, dlacpy, dlartg, dlaset, dvout, 
-     &           ivout, second, dgemv
+     &           ivout, arscnd, dgemv
 c
 c     %--------------------%
 c     | External Functions |
@@ -213,7 +213,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = msapps
 c 
       kplusp = kev + np 
@@ -503,7 +503,7 @@
          end if
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tsapps = tsapps + (t1 - t0)
 c 
  9000 continue 
diff -Nur ARPACK.orig/SRC/dsaup2.f ARPACK/SRC/dsaup2.f
--- ARPACK.orig/SRC/dsaup2.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dsaup2.f	2007-12-04 12:40:24.000000000 +0000
@@ -148,7 +148,7 @@
 c     dsgets  ARPACK reorder Ritz values and error bounds routine.
 c     dsortr  ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dvout   ARPACK utility routine that prints vectors.
 c     dlamch  LAPACK routine that determines machine constants.
 c     dcopy   Level 1 BLAS that copies one vector to another.
@@ -235,7 +235,7 @@
 c     %----------------------%
 c
       external   dcopy, dgetv0, dsaitr, dscal, dsconv, dseigt, dsgets, 
-     &           dsapps, dsortr, dvout, ivout, second, dswap
+     &           dsapps, dsortr, dvout, ivout, arscnd, dswap
 c
 c     %--------------------%
 c     | External Functions |
@@ -262,7 +262,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = msaup2
 c
 c        %---------------------------------%
@@ -770,7 +770,7 @@
 c        %---------------------------------------------%
 c
          cnorm = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call dcopy (n, resid, 1, workd(n+1), 1)
@@ -795,7 +795,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -837,7 +837,7 @@
 c     | Error exit |
 c     %------------%
 c
-      call second (t1)
+      call arscnd (t1)
       tsaup2 = t1 - t0
 c 
  9000 continue
diff -Nur ARPACK.orig/SRC/dsaupd.f ARPACK/SRC/dsaupd.f
--- ARPACK.orig/SRC/dsaupd.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dsaupd.f	2007-12-04 12:40:24.000000000 +0000
@@ -380,7 +380,7 @@
 c     dstats   ARPACK routine that initialize timing and other statistics
 c             variables.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dvout    ARPACK utility routine that prints vectors.
 c     dlamch   LAPACK routine that determines machine constants.
 c
@@ -456,7 +456,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   dsaup2 ,  dvout , ivout, second, dstats 
+      external   dsaup2 ,  dvout , ivout, arscnd, dstats 
 c
 c     %--------------------%
 c     | External Functions |
@@ -478,7 +478,7 @@
 c        %-------------------------------%
 c
          call dstats 
-         call second (t0)
+         call arscnd (t0)
          msglvl = msaupd
 c
          ierr   = 0
@@ -638,7 +638,7 @@
      &               '_saupd: corresponding error bounds')
       end if 
 c
-      call second (t1)
+      call arscnd (t1)
       tsaupd = t1 - t0
 c 
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/dsconv.f ARPACK/SRC/dsconv.f
--- ARPACK.orig/SRC/dsconv.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dsconv.f	2007-12-04 12:40:24.000000000 +0000
@@ -34,7 +34,7 @@
 c\BeginLib
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dlamch  LAPACK routine that determines machine constants. 
 c
 c\Author
@@ -106,7 +106,7 @@
 c     | Executable Statements |
 c     %-----------------------%
 c
-      call second (t0)
+      call arscnd (t0)
 c
       eps23 = dlamch('Epsilon-Machine') 
       eps23 = eps23**(2.0D+0 / 3.0D+0)
@@ -126,7 +126,7 @@
 c
    10 continue
 c 
-      call second (t1)
+      call arscnd (t1)
       tsconv = tsconv + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/dseigt.f ARPACK/SRC/dseigt.f
--- ARPACK.orig/SRC/dseigt.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dseigt.f	2007-12-04 12:40:24.000000000 +0000
@@ -59,7 +59,7 @@
 c     dstqrb  ARPACK routine that computes the eigenvalues and the
 c             last components of the eigenvectors of a symmetric
 c             and tridiagonal matrix.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dvout   ARPACK utility routine that prints vectors.
 c     dcopy   Level 1 BLAS that copies one vector to another.
 c
@@ -127,7 +127,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   dcopy, dstqrb, dvout, second
+      external   dcopy, dstqrb, dvout, arscnd
 c
 c     %-----------------------%
 c     | Executable Statements |
@@ -138,7 +138,7 @@
 c     | & message level for debugging |
 c     %-------------------------------% 
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mseigt
 c
       if (msglvl .gt. 0) then
@@ -168,7 +168,7 @@
          bounds(k) = rnorm*abs(bounds(k))
    30 continue
 c 
-      call second (t1)
+      call arscnd (t1)
       tseigt = tseigt + (t1 - t0)
 c
  9000 continue
diff -Nur ARPACK.orig/SRC/dsgets.f ARPACK/SRC/dsgets.f
--- ARPACK.orig/SRC/dsgets.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/dsgets.f	2007-12-04 12:40:24.000000000 +0000
@@ -65,7 +65,7 @@
 c\Routines called:
 c     dsortr  ARPACK utility sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dvout   ARPACK utility routine that prints vectors.
 c     dcopy   Level 1 BLAS that copies one vector to another.
 c     dswap   Level 1 BLAS that swaps the contents of two vectors.
@@ -131,7 +131,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   dswap, dcopy, dsortr, second
+      external   dswap, dcopy, dsortr, arscnd
 c
 c     %---------------------%
 c     | Intrinsic Functions |
@@ -148,7 +148,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = msgets
 c 
       if (which .eq. 'BE') then
@@ -198,7 +198,7 @@
          call dcopy (np, ritz, 1, shifts, 1)
       end if
 c 
-      call second (t1)
+      call arscnd (t1)
       tsgets = tsgets + (t1 - t0)
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/sgetv0.f ARPACK/SRC/sgetv0.f
--- ARPACK.orig/SRC/sgetv0.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/sgetv0.f	2007-12-04 12:40:24.000000000 +0000
@@ -93,7 +93,7 @@
 c     TR95-13, Department of Computational and Applied Mathematics.
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     svout   ARPACK utility routine for vector output.
 c     slarnv  LAPACK routine for generating a random vector.
 c     sgemv   Level 2 BLAS routine for matrix vector multiplication.
@@ -167,7 +167,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   slarnv, svout, scopy, sgemv, second
+      external   slarnv, svout, scopy, sgemv, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -214,7 +214,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mgetv0
 c 
          ierr   = 0
@@ -241,7 +241,7 @@
 c        | the generalized problem when B is possibly (singular).   |
 c        %----------------------------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nopx = nopx + 1
             ipntr(1) = 1
@@ -265,7 +265,7 @@
       if (orth)  go to 40
 c 
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
       end if
 c 
@@ -274,7 +274,7 @@
 c     | Compute B-norm of starting vector.                   |
 c     %------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       first = .TRUE.
       if (bmat .eq. 'G') then
          nbx = nbx + 1
@@ -290,7 +290,7 @@
    20 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -333,7 +333,7 @@
 c     | Compute the B-norm of the orthogonalized starting vector |
 c     %----------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       if (bmat .eq. 'G') then
          nbx = nbx + 1
          call scopy (n, resid, 1, workd(n+1), 1)
@@ -348,7 +348,7 @@
    40 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -406,7 +406,7 @@
       end if
       ido = 99
 c 
-      call second (t1)
+      call arscnd (t1)
       tgetv0 = tgetv0 + (t1 - t0)
 c 
  9000 continue
diff -Nur ARPACK.orig/SRC/snaitr.f ARPACK/SRC/snaitr.f
--- ARPACK.orig/SRC/snaitr.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/snaitr.f	2007-12-04 12:40:24.000000000 +0000
@@ -132,7 +132,7 @@
 c\Routines called:
 c     sgetv0  ARPACK routine to generate the initial vector.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     smout   ARPACK utility routine that prints matrices
 c     svout   ARPACK utility routine that prints vectors.
 c     slabad  LAPACK routine that computes machine constants.
@@ -268,7 +268,7 @@
 c     %----------------------%
 c
       external   saxpy, scopy, sscal, sgemv, sgetv0, slabad, 
-     &           svout, smout, ivout, second
+     &           svout, smout, ivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -319,7 +319,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mnaitr
 c 
 c        %------------------------------%
@@ -430,7 +430,7 @@
 c              %------------------------------------------------%
 c
                info = j - 1
-               call second (t1)
+               call arscnd (t1)
                tnaitr = tnaitr + (t1 - t0)
                ido = 99
                go to 9000
@@ -470,7 +470,7 @@
 c
          step3 = .true.
          nopx  = nopx + 1
-         call second (t2)
+         call arscnd (t2)
          call scopy (n, v(1,j), 1, workd(ivj), 1)
          ipntr(1) = ivj
          ipntr(2) = irj
@@ -490,7 +490,7 @@
 c        | if step3 = .true.                |
 c        %----------------------------------%
 c
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
  
          step3 = .false.
@@ -506,7 +506,7 @@
 c        |          factorization to length j.   |
 c        %---------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             step4 = .true.
@@ -531,7 +531,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -576,11 +576,11 @@
 c
          if (j .gt. 1) h(j,j-1) = betaj
 c
-         call second (t4)
+         call arscnd (t4)
 c 
          orth1 = .true.
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call scopy (n, resid, 1, workd(irj), 1)
@@ -604,7 +604,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -681,7 +681,7 @@
          call saxpy (j, one, workd(irj), 1, h(1,j), 1)
 c 
          orth2 = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call scopy (n, resid, 1, workd(irj), 1)
@@ -705,7 +705,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c
@@ -783,7 +783,7 @@
          rstart = .false.
          orth2  = .false.
 c 
-         call second (t5)
+         call arscnd (t5)
          titref = titref + (t5 - t4)
 c 
 c        %------------------------------------%
@@ -792,7 +792,7 @@
 c
          j = j + 1
          if (j .gt. k+np) then
-            call second (t1)
+            call arscnd (t1)
             tnaitr = tnaitr + (t1 - t0)
             ido = 99
             do 110 i = max(1,k), k+np-1
diff -Nur ARPACK.orig/SRC/snapps.f ARPACK/SRC/snapps.f
--- ARPACK.orig/SRC/snapps.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/snapps.f	2007-12-04 12:40:24.000000000 +0000
@@ -97,7 +97,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     smout   ARPACK utility routine that prints matrices.
 c     svout   ARPACK utility routine that prints vectors.
 c     slabad  LAPACK routine that computes machine constants.
@@ -189,7 +189,7 @@
 c     %----------------------%
 c
       external   saxpy, scopy, sscal, slacpy, slarfg, slarf,
-     &           slaset, slabad, second, slartg
+     &           slaset, slabad, arscnd, slartg
 c
 c     %--------------------%
 c     | External Functions |
@@ -237,7 +237,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mnapps
       kplusp = kev + np 
 c 
@@ -635,7 +635,7 @@
       end if
 c 
  9000 continue
-      call second (t1)
+      call arscnd (t1)
       tnapps = tnapps + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/snaup2.f ARPACK/SRC/snaup2.f
--- ARPACK.orig/SRC/snaup2.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/snaup2.f	2007-12-04 12:40:24.000000000 +0000
@@ -143,7 +143,7 @@
 c     sngets  ARPACK reorder Ritz values and error bounds routine.
 c     ssortc  ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     smout   ARPACK utility routine that prints matrices
 c     svout   ARPACK utility routine that prints vectors.
 c     slamch  LAPACK routine that determines machine constants.
@@ -236,7 +236,7 @@
 c     %----------------------%
 c
       external   scopy , sgetv0, snaitr, snconv, sneigh, 
-     &           sngets, snapps, svout , ivout , second
+     &           sngets, snapps, svout , ivout , arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -258,7 +258,7 @@
 c
       if (ido .eq. 0) then
 c 
-         call second (t0)
+         call arscnd (t0)
 c 
          msglvl = mnaup2
 c 
@@ -758,7 +758,7 @@
 c        %---------------------------------------------%
 c
          cnorm = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call scopy (n, resid, 1, workd(n+1), 1)
@@ -783,7 +783,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -822,7 +822,7 @@
 c     | Error Exit |
 c     %------------%
 c
-      call second (t1)
+      call arscnd (t1)
       tnaup2 = t1 - t0
 c     
  9000 continue
diff -Nur ARPACK.orig/SRC/snaupd.f ARPACK/SRC/snaupd.f
--- ARPACK.orig/SRC/snaupd.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/snaupd.f	2007-12-04 12:40:24.000000000 +0000
@@ -379,7 +379,7 @@
 c     snaup2  ARPACK routine that implements the Implicitly Restarted
 c             Arnoldi Iteration.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     svout   ARPACK utility routine that prints vectors.
 c     slamch  LAPACK routine that determines machine constants.
 c
@@ -454,7 +454,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   snaup2, svout, ivout, second, sstatn
+      external   snaup2, svout, ivout, arscnd, sstatn
 c
 c     %--------------------%
 c     | External Functions |
@@ -476,7 +476,7 @@
 c        %-------------------------------%
 c
          call sstatn
-         call second (t0)
+         call arscnd (t0)
          msglvl = mnaupd
 c
 c        %----------------%
@@ -640,7 +640,7 @@
      &               '_naupd: Associated Ritz estimates')
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tnaupd = t1 - t0
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/snconv.f ARPACK/SRC/snconv.f
--- ARPACK.orig/SRC/snconv.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/snconv.f	2007-12-04 12:40:24.000000000 +0000
@@ -38,7 +38,7 @@
 c     xxxxxx  real
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     slamch  LAPACK routine that determines machine constants.
 c     slapy2  LAPACK routine to compute sqrt(x**2+y**2) carefully.
 c
@@ -119,7 +119,7 @@
 c     | for some appropriate choice of norm.                        |
 c     %-------------------------------------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
 c
 c     %---------------------------------%
 c     | Get machine dependent constant. |
@@ -134,7 +134,7 @@
          if (bounds(i) .le. tol*temp)   nconv = nconv + 1
    20 continue
 c 
-      call second (t1)
+      call arscnd (t1)
       tnconv = tnconv + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/sneigh.f ARPACK/SRC/sneigh.f
--- ARPACK.orig/SRC/sneigh.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/sneigh.f	2007-12-04 12:40:24.000000000 +0000
@@ -63,7 +63,7 @@
 c\Routines called:
 c     slaqrb  ARPACK routine to compute the real Schur form of an
 c             upper Hessenberg matrix and last row of the Schur vectors.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     smout   ARPACK utility routine that prints matrices
 c     svout   ARPACK utility routine that prints vectors.
 c     slacpy  LAPACK matrix copy routine.
@@ -144,7 +144,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   scopy, slacpy, slaqrb, strevc, svout, second
+      external   scopy, slacpy, slaqrb, strevc, svout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -170,7 +170,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mneigh
 c 
       if (msglvl .gt. 2) then
@@ -301,7 +301,7 @@
      &              '_neigh: Ritz estimates for the eigenvalues of H')
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tneigh = tneigh + (t1 - t0)
 c
  9000 continue
diff -Nur ARPACK.orig/SRC/sngets.f ARPACK/SRC/sngets.f
--- ARPACK.orig/SRC/sngets.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/sngets.f	2007-12-04 12:40:24.000000000 +0000
@@ -135,7 +135,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   scopy, ssortc, second
+      external   scopy, ssortc, arscnd
 c
 c     %----------------------%
 c     | Intrinsics Functions |
@@ -152,7 +152,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c 
-      call second (t0)
+      call arscnd (t0)
       msglvl = mngets
 c 
 c     %----------------------------------------------------%
@@ -208,7 +208,7 @@
          call ssortc ( 'SR', .true., np, bounds, ritzr, ritzi )
       end if
 c     
-      call second (t1)
+      call arscnd (t1)
       tngets = tngets + (t1 - t0)
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/ssaitr.f ARPACK/SRC/ssaitr.f
--- ARPACK.orig/SRC/ssaitr.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/ssaitr.f	2007-12-04 12:40:24.000000000 +0000
@@ -262,7 +262,7 @@
 c     %----------------------%
 c
       external   saxpy, scopy, sscal, sgemv, sgetv0, svout, smout,
-     &           slascl, ivout, second
+     &           slascl, ivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -300,7 +300,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = msaitr
 c 
 c        %------------------------------%
@@ -420,7 +420,7 @@
 c              %------------------------------------------------%
 c
                info = j - 1
-               call second (t1)
+               call arscnd (t1)
                tsaitr = tsaitr + (t1 - t0)
                ido = 99
                go to 9000
@@ -460,7 +460,7 @@
 c
          step3 = .true.
          nopx  = nopx + 1
-         call second (t2)
+         call arscnd (t2)
          call scopy (n, v(1,j), 1, workd(ivj), 1)
          ipntr(1) = ivj
          ipntr(2) = irj
@@ -479,7 +479,7 @@
 c        | WORKD(IRJ:IRJ+N-1) := OP*v_{j}.   |
 c        %-----------------------------------%
 c
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
 c 
          step3 = .false.
@@ -500,7 +500,7 @@
 c        %-------------------------------------------%
 c
          if (mode .eq. 2) go to 65
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             step4 = .true.
@@ -524,7 +524,7 @@
 c        %-----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if 
 c
@@ -592,12 +592,12 @@
          else
             h(j,1) = rnorm
          end if
-         call second (t4)
+         call arscnd (t4)
 c 
          orth1 = .true.
          iter  = 0
 c 
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call scopy (n, resid, 1, workd(irj), 1)
@@ -621,7 +621,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -695,7 +695,7 @@
          h(j,2) = h(j,2) + workd(irj + j - 1)
 c 
          orth2 = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call scopy (n, resid, 1, workd(irj), 1)
@@ -719,7 +719,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c
@@ -791,7 +791,7 @@
          rstart = .false.
          orth2  = .false.
 c 
-         call second (t5)
+         call arscnd (t5)
          titref = titref + (t5 - t4)
 c 
 c        %----------------------------------------------------------%
@@ -815,7 +815,7 @@
 c
          j = j + 1
          if (j .gt. k+np) then
-            call second (t1)
+            call arscnd (t1)
             tsaitr = tsaitr + (t1 - t0)
             ido = 99
 c
diff -Nur ARPACK.orig/SRC/ssapps.f ARPACK/SRC/ssapps.f
--- ARPACK.orig/SRC/ssapps.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/ssapps.f	2007-12-04 12:40:25.000000000 +0000
@@ -91,7 +91,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers. 
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     svout   ARPACK utility routine that prints vectors.
 c     slamch  LAPACK routine that determines machine constants.
 c     slartg  LAPACK Givens rotation construction routine.
@@ -176,7 +176,7 @@
 c     %----------------------%
 c
       external   saxpy, scopy, sscal, slacpy, slartg, slaset, svout, 
-     &           ivout, second, sgemv
+     &           ivout, arscnd, sgemv
 c
 c     %--------------------%
 c     | External Functions |
@@ -213,7 +213,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = msapps
 c 
       kplusp = kev + np 
@@ -503,7 +503,7 @@
          end if
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tsapps = tsapps + (t1 - t0)
 c 
  9000 continue 
diff -Nur ARPACK.orig/SRC/ssaup2.f ARPACK/SRC/ssaup2.f
--- ARPACK.orig/SRC/ssaup2.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/ssaup2.f	2007-12-04 12:40:25.000000000 +0000
@@ -148,7 +148,7 @@
 c     ssgets  ARPACK reorder Ritz values and error bounds routine.
 c     ssortr  ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     svout   ARPACK utility routine that prints vectors.
 c     slamch  LAPACK routine that determines machine constants.
 c     scopy   Level 1 BLAS that copies one vector to another.
@@ -235,7 +235,7 @@
 c     %----------------------%
 c
       external   scopy, sgetv0, ssaitr, sscal, ssconv, sseigt, ssgets, 
-     &           ssapps, ssortr, svout, ivout, second, sswap
+     &           ssapps, ssortr, svout, ivout, arscnd, sswap
 c
 c     %--------------------%
 c     | External Functions |
@@ -262,7 +262,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = msaup2
 c
 c        %---------------------------------%
@@ -770,7 +770,7 @@
 c        %---------------------------------------------%
 c
          cnorm = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call scopy (n, resid, 1, workd(n+1), 1)
@@ -795,7 +795,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -837,7 +837,7 @@
 c     | Error exit |
 c     %------------%
 c
-      call second (t1)
+      call arscnd (t1)
       tsaup2 = t1 - t0
 c 
  9000 continue
diff -Nur ARPACK.orig/SRC/ssaupd.f ARPACK/SRC/ssaupd.f
--- ARPACK.orig/SRC/ssaupd.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/ssaupd.f	2007-12-04 12:40:25.000000000 +0000
@@ -380,7 +380,7 @@
 c     sstats  ARPACK routine that initialize timing and other statistics
 c             variables.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     svout   ARPACK utility routine that prints vectors.
 c     slamch  LAPACK routine that determines machine constants.
 c
@@ -456,7 +456,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   ssaup2,  svout, ivout, second, sstats
+      external   ssaup2,  svout, ivout, arscnd, sstats
 c
 c     %--------------------%
 c     | External Functions |
@@ -478,7 +478,7 @@
 c        %-------------------------------%
 c
          call sstats
-         call second (t0)
+         call arscnd (t0)
          msglvl = msaupd
 c
          ierr   = 0
@@ -638,7 +638,7 @@
      &               '_saupd: corresponding error bounds')
       end if 
 c
-      call second (t1)
+      call arscnd (t1)
       tsaupd = t1 - t0
 c 
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/ssconv.f ARPACK/SRC/ssconv.f
--- ARPACK.orig/SRC/ssconv.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/ssconv.f	2007-12-04 12:40:25.000000000 +0000
@@ -34,7 +34,7 @@
 c\BeginLib
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     slamch  LAPACK routine that determines machine constants. 
 c
 c\Author
@@ -106,7 +106,7 @@
 c     | Executable Statements |
 c     %-----------------------%
 c
-      call second (t0)
+      call arscnd (t0)
 c
       eps23 = slamch('Epsilon-Machine') 
       eps23 = eps23**(2.0E+0 / 3.0E+0)
@@ -126,7 +126,7 @@
 c
    10 continue
 c 
-      call second (t1)
+      call arscnd (t1)
       tsconv = tsconv + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/sseigt.f ARPACK/SRC/sseigt.f
--- ARPACK.orig/SRC/sseigt.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/sseigt.f	2007-12-04 12:40:25.000000000 +0000
@@ -59,7 +59,7 @@
 c     sstqrb  ARPACK routine that computes the eigenvalues and the
 c             last components of the eigenvectors of a symmetric
 c             and tridiagonal matrix.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     svout   ARPACK utility routine that prints vectors.
 c     scopy   Level 1 BLAS that copies one vector to another.
 c
@@ -127,7 +127,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   scopy, sstqrb, svout, second
+      external   scopy, sstqrb, svout, arscnd
 c
 c     %-----------------------%
 c     | Executable Statements |
@@ -138,7 +138,7 @@
 c     | & message level for debugging |
 c     %-------------------------------% 
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mseigt
 c
       if (msglvl .gt. 0) then
@@ -168,7 +168,7 @@
          bounds(k) = rnorm*abs(bounds(k))
    30 continue
 c 
-      call second (t1)
+      call arscnd (t1)
       tseigt = tseigt + (t1 - t0)
 c
  9000 continue
diff -Nur ARPACK.orig/SRC/ssgets.f ARPACK/SRC/ssgets.f
--- ARPACK.orig/SRC/ssgets.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/ssgets.f	2007-12-04 12:40:25.000000000 +0000
@@ -65,7 +65,7 @@
 c\Routines called:
 c     ssortr  ARPACK utility sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     svout   ARPACK utility routine that prints vectors.
 c     scopy   Level 1 BLAS that copies one vector to another.
 c     sswap   Level 1 BLAS that swaps the contents of two vectors.
@@ -131,7 +131,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   sswap, scopy, ssortr, second
+      external   sswap, scopy, ssortr, arscnd
 c
 c     %---------------------%
 c     | Intrinsic Functions |
@@ -148,7 +148,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = msgets
 c 
       if (which .eq. 'BE') then
@@ -198,7 +198,7 @@
          call scopy (np, ritz, 1, shifts, 1)
       end if
 c 
-      call second (t1)
+      call arscnd (t1)
       tsgets = tsgets + (t1 - t0)
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/zgetv0.f ARPACK/SRC/zgetv0.f
--- ARPACK.orig/SRC/zgetv0.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/zgetv0.f	2007-12-04 12:40:25.000000000 +0000
@@ -89,7 +89,7 @@
 c     pp 357-385.
 c
 c\Routines called:
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     zvout   ARPACK utility routine that prints vectors.
 c     zlarnv  LAPACK routine for generating a random vector. 
 c     zgemv   Level 2 BLAS routine for matrix vector multiplication.
@@ -168,7 +168,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zcopy, zgemv, zlarnv, zvout, second
+      external   zcopy, zgemv, zlarnv, zvout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -211,7 +211,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mgetv0
 c 
          ierr   = 0
@@ -238,7 +238,7 @@
 c        | the generalized problem when B is possibly (singular).   |
 c        %----------------------------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nopx = nopx + 1
             ipntr(1) = 1
@@ -261,7 +261,7 @@
 c
       if (orth)  go to 40
 c 
-      call second (t3)
+      call arscnd (t3)
       tmvopx = tmvopx + (t3 - t2)
 c 
 c     %------------------------------------------------------%
@@ -269,7 +269,7 @@
 c     | Compute B-norm of starting vector.                   |
 c     %------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       first = .TRUE.
       if (bmat .eq. 'G') then
          nbx = nbx + 1
@@ -285,7 +285,7 @@
    20 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -328,7 +328,7 @@
 c     | Compute the B-norm of the orthogonalized starting vector |
 c     %----------------------------------------------------------%
 c
-      call second (t2)
+      call arscnd (t2)
       if (bmat .eq. 'G') then
          nbx = nbx + 1
          call zcopy (n, resid, 1, workd(n+1), 1)
@@ -343,7 +343,7 @@
    40 continue
 c
       if (bmat .eq. 'G') then
-         call second (t3)
+         call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
@@ -401,7 +401,7 @@
       end if
       ido = 99
 c 
-      call second (t1)
+      call arscnd (t1)
       tgetv0 = tgetv0 + (t1 - t0)
 c 
  9000 continue
diff -Nur ARPACK.orig/SRC/znaitr.f ARPACK/SRC/znaitr.f
--- ARPACK.orig/SRC/znaitr.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/znaitr.f	2007-12-04 12:40:25.000000000 +0000
@@ -131,7 +131,7 @@
 c\Routines called:
 c     zgetv0  ARPACK routine to generate the initial vector.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     zmout   ARPACK utility routine that prints matrices
 c     zvout   ARPACK utility routine that prints vectors.
 c     zlanhs  LAPACK routine that computes various norms of a matrix.
@@ -273,7 +273,7 @@
 c     %----------------------%
 c
       external   zaxpy, zcopy, zscal, zdscal, zgemv, zgetv0, 
-     &           dlabad, zvout, zmout, ivout, second
+     &           dlabad, zvout, zmout, ivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -326,7 +326,7 @@
 c        | & message level for debugging |
 c        %-------------------------------%
 c
-         call second (t0)
+         call arscnd (t0)
          msglvl = mcaitr
 c 
 c        %------------------------------%
@@ -437,7 +437,7 @@
 c              %------------------------------------------------%
 c
                info = j - 1
-               call second (t1)
+               call arscnd (t1)
                tcaitr = tcaitr + (t1 - t0)
                ido = 99
                go to 9000
@@ -477,7 +477,7 @@
 c
          step3 = .true.
          nopx  = nopx + 1
-         call second (t2)
+         call arscnd (t2)
          call zcopy (n, v(1,j), 1, workd(ivj), 1)
          ipntr(1) = ivj
          ipntr(2) = irj
@@ -497,7 +497,7 @@
 c        | if step3 = .true.                |
 c        %----------------------------------%
 c
-         call second (t3)
+         call arscnd (t3)
          tmvopx = tmvopx + (t3 - t2)
  
          step3 = .false.
@@ -513,7 +513,7 @@
 c        |          factorization to length j.   |
 c        %---------------------------------------%
 c
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             step4 = .true.
@@ -538,7 +538,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -583,11 +583,11 @@
 c
          if (j .gt. 1) h(j,j-1) = dcmplx(betaj, rzero)
 c
-         call second (t4)
+         call arscnd (t4)
 c 
          orth1 = .true.
 c 
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call zcopy (n, resid, 1, workd(irj), 1)
@@ -611,7 +611,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -689,7 +689,7 @@
          call zaxpy (j, one, workd(irj), 1, h(1,j), 1)
 c 
          orth2 = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call zcopy (n, resid, 1, workd(irj), 1)
@@ -713,7 +713,7 @@
 c        %---------------------------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if 
 c
@@ -791,7 +791,7 @@
          rstart = .false.
          orth2  = .false.
 c 
-         call second (t5)
+         call arscnd (t5)
          titref = titref + (t5 - t4)
 c 
 c        %------------------------------------%
@@ -800,7 +800,7 @@
 c
          j = j + 1
          if (j .gt. k+np) then
-            call second (t1)
+            call arscnd (t1)
             tcaitr = tcaitr + (t1 - t0)
             ido = 99
             do 110 i = max(1,k), k+np-1
diff -Nur ARPACK.orig/SRC/znapps.f ARPACK/SRC/znapps.f
--- ARPACK.orig/SRC/znapps.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/znapps.f	2007-12-04 12:40:25.000000000 +0000
@@ -92,7 +92,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     zmout   ARPACK utility routine that prints matrices
 c     zvout   ARPACK utility routine that prints vectors.
 c     zlacpy  LAPACK matrix copy routine.
@@ -184,7 +184,7 @@
 c     %----------------------%
 c
       external   zaxpy, zcopy, zgemv, zscal, zlacpy, zlartg, 
-     &           zvout, zlaset, dlabad, zmout, second, ivout
+     &           zvout, zlaset, dlabad, zmout, arscnd, ivout
 c
 c     %--------------------%
 c     | External Functions |
@@ -240,7 +240,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mcapps
 c 
       kplusp = kev + np 
@@ -495,7 +495,7 @@
       end if
 c
  9000 continue
-      call second (t1)
+      call arscnd (t1)
       tcapps = tcapps + (t1 - t0)
 c 
       return
diff -Nur ARPACK.orig/SRC/znaup2.f ARPACK/SRC/znaup2.f
--- ARPACK.orig/SRC/znaup2.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/znaup2.f	2007-12-04 12:40:25.000000000 +0000
@@ -135,7 +135,7 @@
 c     zngets   ARPACK reorder Ritz values and error bounds routine.
 c     zsortc   ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     zmout    ARPACK utility routine that prints matrices
 c     zvout    ARPACK utility routine that prints vectors.
 c     dvout    ARPACK utility routine that prints vectors.
@@ -240,7 +240,7 @@
 c     %----------------------%
 c
       external   zcopy , zgetv0 , znaitr , zneigh , zngets , znapps ,
-     &           zsortc , zswap , zmout , zvout , ivout, second
+     &           zsortc , zswap , zmout , zvout , ivout, arscnd
 c
 c     %--------------------%
 c     | External functions |
@@ -264,7 +264,7 @@
 c
       if (ido .eq. 0) then
 c 
-         call second (t0)
+         call arscnd (t0)
 c 
          msglvl = mcaup2
 c 
@@ -724,7 +724,7 @@
 c        %---------------------------------------------%
 c
          cnorm = .true.
-         call second (t2)
+         call arscnd (t2)
          if (bmat .eq. 'G') then
             nbx = nbx + 1
             call zcopy  (n, resid, 1, workd(n+1), 1)
@@ -749,7 +749,7 @@
 c        %----------------------------------%
 c
          if (bmat .eq. 'G') then
-            call second (t3)
+            call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
@@ -788,7 +788,7 @@
 c     | Error Exit |
 c     %------------%
 c
-      call second (t1)
+      call arscnd (t1)
       tcaup2 = t1 - t0
 c     
  9000 continue
diff -Nur ARPACK.orig/SRC/znaupd.f ARPACK/SRC/znaupd.f
--- ARPACK.orig/SRC/znaupd.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/znaupd.f	2007-12-04 12:40:25.000000000 +0000
@@ -356,7 +356,7 @@
 c     zstatn  ARPACK routine that initializes the timing variables.
 c     ivout   ARPACK utility routine that prints integers.
 c     zvout   ARPACK utility routine that prints vectors.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     dlamch  LAPACK routine that determines machine constants.
 c
 c\Author
@@ -429,7 +429,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   znaup2, zvout, ivout, second, zstatn
+      external   znaup2, zvout, ivout, arscnd, zstatn
 c
 c     %--------------------%
 c     | External Functions |
@@ -451,7 +451,7 @@
 c        %-------------------------------%
 c
          call zstatn
-         call second (t0)
+         call arscnd (t0)
          msglvl = mcaupd
 c
 c        %----------------%
@@ -611,7 +611,7 @@
      &               '_naupd: Associated Ritz estimates')
       end if
 c
-      call second (t1)
+      call arscnd (t1)
       tcaupd = t1 - t0
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/SRC/zneigh.f ARPACK/SRC/zneigh.f
--- ARPACK.orig/SRC/zneigh.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/zneigh.f	2007-12-04 12:40:25.000000000 +0000
@@ -64,7 +64,7 @@
 c
 c\Routines called:
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     zmout   ARPACK utility routine that prints matrices
 c     zvout   ARPACK utility routine that prints vectors.
 c     dvout   ARPACK utility routine that prints vectors.
@@ -152,7 +152,7 @@
 c     %----------------------%
 c
       external   zlacpy, zlahqr, ztrevc, zcopy, 
-     &           zdscal, zmout, zvout, second
+     &           zdscal, zmout, zvout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
@@ -171,7 +171,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c
-      call second (t0)
+      call arscnd (t0)
       msglvl = mceigh
 c 
       if (msglvl .gt. 2) then
@@ -244,7 +244,7 @@
      &              '_neigh: Ritz estimates for the eigenvalues of H')
       end if
 c
-      call second(t1)
+      call arscnd(t1)
       tceigh = tceigh + (t1 - t0)
 c
  9000 continue
diff -Nur ARPACK.orig/SRC/zngets.f ARPACK/SRC/zngets.f
--- ARPACK.orig/SRC/zngets.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/SRC/zngets.f	2007-12-04 12:40:25.000000000 +0000
@@ -63,7 +63,7 @@
 c\Routines called:
 c     zsortc  ARPACK sorting routine.
 c     ivout   ARPACK utility routine that prints integers.
-c     second  ARPACK utility routine for timing.
+c     arscnd  ARPACK utility routine for timing.
 c     zvout   ARPACK utility routine that prints vectors.
 c
 c\Author
@@ -126,7 +126,7 @@
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zvout,  zsortc, second
+      external   zvout,  zsortc, arscnd
 c
 c     %-----------------------%
 c     | Executable Statements |
@@ -137,7 +137,7 @@
 c     | & message level for debugging |
 c     %-------------------------------%
 c 
-      call second (t0)
+      call arscnd (t0)
       msglvl = mcgets
 c 
       call zsortc (which, .true., kev+np, ritz, bounds)
@@ -157,7 +157,7 @@
 c
       end if
 c     
-      call second (t1)
+      call arscnd (t1)
       tcgets = tcgets + (t1 - t0)
 c
       if (msglvl .gt. 0) then
diff -Nur ARPACK.orig/UTIL/second.f ARPACK/UTIL/second.f
--- ARPACK.orig/UTIL/second.f	2007-12-04 12:40:20.000000000 +0000
+++ ARPACK/UTIL/second.f	2007-12-04 12:42:15.000000000 +0000
@@ -1,4 +1,4 @@
-      SUBROUTINE SECOND( T )
+      SUBROUTINE ARSCND( T )
 *
       REAL       T
 *
@@ -10,7 +10,7 @@
 *  Purpose
 *  =======
 *
-*  SECOND returns the user time for a process in seconds.
+*  ARSCND returns the user time for a process in seconds.
 *  This version gets the time from the system function ETIME.
 *
 *     .. Local Scalars ..
@@ -21,7 +21,6 @@
 *     ..
 *     .. External Functions ..
       REAL               ETIME
-      EXTERNAL           ETIME
 *     ..
 *     .. Executable Statements ..
 *
@@ -31,6 +30,6 @@
 
       RETURN
 *
-*     End of SECOND
+*     End of ARSCND
 *
       END
