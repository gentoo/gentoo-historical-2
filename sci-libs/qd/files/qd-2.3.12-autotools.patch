diff -Nur qd-2.3.12.orig/configure.ac qd-2.3.12/configure.ac
--- qd-2.3.12.orig/configure.ac	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/configure.ac	2012-01-13 04:15:47.000000000 +0000
@@ -308,12 +308,11 @@
 AC_SUBST(FFLAGS, $FCFLAGS)
 
 # Add libraries
-LIBS="$LIBS -lm"
+AC_CHECK_LIB(m,sqrt)
 
 # libtool stuff
-# AC_DISABLE_SHARED
-# AC_PROG_LIBTOOL
-AC_PROG_RANLIB
+AC_DISABLE_SHARED
+AC_PROG_LIBTOOL
 
 # Output
 AC_CONFIG_FILES([Makefile config/Makefile src/Makefile include/Makefile 
diff -Nur qd-2.3.12.orig/fortran/Makefile.am qd-2.3.12/fortran/Makefile.am
--- qd-2.3.12.orig/fortran/Makefile.am	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/fortran/Makefile.am	2012-01-13 04:15:47.000000000 +0000
@@ -1,6 +1,6 @@
 if HAVE_FORTRAN
 AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
-LDADD=libqdmod.a libqd_f_main.a $(top_builddir)/src/libqd.a $(FCLIBS)
+LDADD=libqdmod.la libqd_f_main.la $(top_builddir)/src/libqd.la $(FCLIBS)
 
 if UPCASE_MODULE
 DDEXT=DDEXT.$(module_ext)
@@ -14,17 +14,19 @@ QDMOD=qdmodule.$(module_ext)
 DDMOD=ddmodule.$(module_ext)
 endif
 
-lib_LIBRARIES = libqdmod.a libqd_f_main.a
-libqdmod_a_SOURCES = ddext.f ddmod.f qdext.f qdmod.f f_dd.cpp f_qd.cpp
-libqd_f_main_a_SOURCES = main.cpp
-ddmod.o: ddext.o
-qdmod.o: ddmod.o qdext.o
-$(QDMOD): qdmod.o
-$(DDMOD): ddmod.o
-$(DDEXT): ddext.o
-$(QDEXT): qdext.o
+lib_LTLIBRARIES = libqdmod.la libqd_f_main.la
+libqdmod_la_SOURCES = ddext.f ddmod.f qdext.f qdmod.f f_dd.cpp f_qd.cpp
+libqdmod_la_LIBADD = $(FCLIBS)
+libqd_f_main_la_SOURCES = main.cpp
+ddmod.lo: $(DDEXT) ddext.lo
+qdmod.lo: ddmod.lo $(DDMOD) qdext.lo
+$(QDMOD): qdmod.lo $(DDMOD)
+$(DDMOD): ddmod.lo
+$(DDEXT): ddext.lo
+$(QDEXT): qdext.lo $(DDEXT) 
 
-pkglib_DATA = $(QDMOD) $(QDEXT) $(DDMOD) $(DDEXT)
+qdmoddir = $(includedir)/$(PACKAGE)
+qdmod_HEADERS = $(QDMOD) $(QDEXT) $(DDMOD) $(DDEXT)
 
 DEMO=quaderq$(EXEEXT) quadgsq2d$(EXEEXT) quadgsq$(EXEEXT) \
      quadtsq$(EXEEXT) quadtsq2d$(EXEEXT)
diff -Nur qd-2.3.12.orig/m4/ax_cxx_clock_gettime.m4 qd-2.3.12/m4/ax_cxx_clock_gettime.m4
--- qd-2.3.12.orig/m4/ax_cxx_clock_gettime.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_cxx_clock_gettime.m4	2012-01-13 04:15:47.000000000 +0000
@@ -3,13 +3,13 @@
 AC_DEFUN([AX_CXX_CLOCK_GETTIME], [
 AC_MSG_CHECKING([for clock_gettime useability])
 AC_LANG_PUSH(C++)
-AC_COMPILE_IFELSE([
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([
 #include <time.h>
 int main() {
   struct timespec tv;
   return clock_gettime(CLOCK_REALTIME, &tv);
 }
-], [ax_cxx_clock_gettime="yes"], [ax_cxx_clock_gettime="no"])
+])], [ax_cxx_clock_gettime="yes"], [ax_cxx_clock_gettime="no"])
 AC_LANG_POP(C++)
 AC_MSG_RESULT([$ax_cxx_clock_gettime])
 ])
diff -Nur qd-2.3.12.orig/m4/ax_cxx_copysign.m4 qd-2.3.12/m4/ax_cxx_copysign.m4
--- qd-2.3.12.orig/m4/ax_cxx_copysign.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_cxx_copysign.m4	2012-01-13 04:15:47.000000000 +0000
@@ -6,19 +6,19 @@
 AC_MSG_CHECKING([for copysign])
 AC_LANG_PUSH(C++)
 ax_cxx_copysign=
-AC_COMPILE_IFELSE([#include <cmath>
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                    int main() {
                      std::copysign(1.0, 1.0);
                      return 0;
-                   }], 
+                   }])], 
                    [AC_MSG_RESULT(std::copysign)
                     ax_cxx_copysign="std::copysign(x, y)"])
 if test "x$ax_cxx_copysign" = "x"; then
-  AC_COMPILE_IFELSE([#include <cmath>
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                      int main() {
                        ::copysign(1.0, 1.0);
                        return 0;
-                     }], 
+                     }])], 
                      [AC_MSG_RESULT(::copysign)
                       ax_cxx_copysign="::copysign(x, y)"], 
                      [AC_MSG_RESULT(none)
diff -Nur qd-2.3.12.orig/m4/ax_cxx_fma.m4 qd-2.3.12/m4/ax_cxx_fma.m4
--- qd-2.3.12.orig/m4/ax_cxx_fma.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_cxx_fma.m4	2012-01-13 04:15:47.000000000 +0000
@@ -19,14 +19,14 @@
     case $name in
       ibm)
         # IBM VisualAge C++ __fmadd / __fmsub.
-        AC_RUN_IFELSE([#include <cmath>
+        AC_RUN_IFELSE([AC_LANG_SOURCE([#include <cmath>
                        #include <builtins.h>
                        int main() {
                          double d = std::ldexp(1.0, -52);
                          double x = __fmadd(1.0 + d, 1.0 - d, -1.0);
                          double y = __fmsub(1.0 + d, 1.0 - d, 1.0);
                          return (x == -d*d && y == -d*d) ? 0 : 1;
-                       }], 
+                       }])], 
                       [ax_cxx_fma="__fmadd(x,y,z)"
                        ax_cxx_fms="__fmsub(x,y,z)"
                        AC_DEFINE([QD_VACPP_BUILTINS_H], [1], 
@@ -34,11 +34,11 @@
       ;;
       gnu)
         # Later gcc (3.4 and later) have __builtin_fma that seems to work.
-        AC_RUN_IFELSE([#include <cmath>
+        AC_RUN_IFELSE([AC_LANG_SOURCE([#include <cmath>
                        int main() {
                          double d = std::ldexp(1.0, -52);
                          return (__builtin_fma(1.0 + d, 1.0 - d, -1.0) == -d*d ? 0 : 1);
-                       }], 
+                       }])], 
                       [ax_cxx_fma="__builtin_fma(x,y,z)"
                        ax_cxx_fms="__builtin_fma(x,y,-z)"])
       ;;
@@ -46,22 +46,22 @@
         # Intel and HP compilers for IA 64 architecture seems to have 
         # _Asm_fma/fms macros.  Not much documentation is available for 
         # these...
-        AC_RUN_IFELSE([#include <cmath>
+        AC_RUN_IFELSE([AC_LANG_SOURCE([#include <cmath>
                        int main() {
                          double d = std::ldexp(1.0, -52);
                          return (_Asm_fma(2, 1.0 + d, 1.0 - d, -1.0) == -d*d ? 0 : 1);
-                       }], 
+                       }])], 
                       [ax_cxx_fma="_Asm_fma(2, x,y,z)"
                        ax_cxx_fms="_Asm_fms(2, x,y,z)"])
       ;;
       c99)
         # Try C99 fma() function.  Some platforms doesn't seem to implement this
         # correctly (Apple gcc-3.3 for example).
-        AC_RUN_IFELSE([#include <cmath>
+        AC_RUN_IFELSE([AC_LANG_SOURCE([#include <cmath>
                        int main() {
                          double d = std::ldexp(1.0, -52);
                          return (fma(1.0 + d, 1.0 - d, -1.0) == -d*d ? 0 : 1);
-                       }], 
+                       }])], 
                       [ax_cxx_fma="fma(x,y,z)"
                        ax_cxx_fms="fma(x,y,-z)"])
       ;;
@@ -69,11 +69,11 @@
         # Try relying on the compiler to optimize x * y + z into an fma.
         # This method is not recommended since if it is inlined it does not
         # always produce the same correct code.
-        AC_RUN_IFELSE([#include <cmath>
+        AC_RUN_IFELSE([AC_LANG_SOURCE([#include <cmath>
                        int main() {
                          double d = std::ldexp(1.0, -52);
                          return ( (1.0 + d) * (1.0 - d) - 1.0 == -d*d ? 0 : 1);
-                       }],
+                       }])],
                        [ax_cxx_fma="((x)*(y) + (z))"
                         ax_cxx_fms="((x)*(y) - (z))"])
       ;;
diff -Nur qd-2.3.12.orig/m4/ax_cxx_isfinite.m4 qd-2.3.12/m4/ax_cxx_isfinite.m4
--- qd-2.3.12.orig/m4/ax_cxx_isfinite.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_cxx_isfinite.m4	2012-01-13 04:15:47.000000000 +0000
@@ -6,19 +6,19 @@
 AC_MSG_CHECKING([for isfinite])
 AC_LANG_PUSH(C++)
 ax_cxx_isfinite=
-AC_COMPILE_IFELSE([#include <cmath>
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                    int main() {
                      std::isfinite(1.0);
                      return 0;
-                   }], 
+                   }])], 
                    [AC_MSG_RESULT(std::isfinite)
                     ax_cxx_isfinite="std::isfinite(x)"])
 if test "x$ax_cxx_isfinite" = "x"; then
-  AC_COMPILE_IFELSE([#include <cmath>
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                      int main() {
                        ::isfinite(1.0);
                        return 0;
-                     }], 
+                     }])], 
                      [AC_MSG_RESULT(::isfinite)
                       ax_cxx_isfinite="::isfinite(x)"], 
                      [AC_MSG_RESULT(none)
diff -Nur qd-2.3.12.orig/m4/ax_cxx_isinf.m4 qd-2.3.12/m4/ax_cxx_isinf.m4
--- qd-2.3.12.orig/m4/ax_cxx_isinf.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_cxx_isinf.m4	2012-01-13 04:15:47.000000000 +0000
@@ -6,19 +6,19 @@
 AC_MSG_CHECKING([for isinf])
 AC_LANG_PUSH(C++)
 ax_cxx_isinf=
-AC_COMPILE_IFELSE([#include <cmath>
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                    int main() {
                      std::isinf(1.0);
                      return 0;
-                   }], 
+                   }])], 
                    [AC_MSG_RESULT(std::isinf)
                     ax_cxx_isinf="std::isinf(x)"])
 if test "x$ax_cxx_isinf" = "x"; then
-  AC_COMPILE_IFELSE([#include <cmath>
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                      int main() {
                        ::isinf(1.0);
                        return 0;
-                     }], 
+                     }])], 
                      [AC_MSG_RESULT(::isinf)
                       ax_cxx_isinf="::isinf(x)"], 
                      [AC_MSG_RESULT(none)
diff -Nur qd-2.3.12.orig/m4/ax_cxx_isnan.m4 qd-2.3.12/m4/ax_cxx_isnan.m4
--- qd-2.3.12.orig/m4/ax_cxx_isnan.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_cxx_isnan.m4	2012-01-13 04:15:47.000000000 +0000
@@ -6,19 +6,19 @@
 AC_MSG_CHECKING([for isnan])
 AC_LANG_PUSH(C++)
 ax_cxx_isnan=
-AC_COMPILE_IFELSE([#include <cmath>
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                    int main() {
                      std::isnan(1.0);
                      return 0;
-                   }], 
+                   }])], 
                    [AC_MSG_RESULT(std::isnan)
                     ax_cxx_isnan="std::isnan(x)"])
 if test "x$ax_cxx_isnan" = "x"; then
-  AC_COMPILE_IFELSE([#include <cmath>
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([#include <cmath>
                      int main() {
                        ::isnan(1.0);
                        return 0;
-                     }], 
+                     }])], 
                      [AC_MSG_RESULT(::isnan)
                       ax_cxx_isnan="::isnan(x)"], 
                      [AC_MSG_RESULT(none)
diff -Nur qd-2.3.12.orig/m4/ax_f90_module_flag.m4 qd-2.3.12/m4/ax_f90_module_flag.m4
--- qd-2.3.12.orig/m4/ax_f90_module_flag.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_f90_module_flag.m4	2012-01-13 04:15:47.000000000 +0000
@@ -16,7 +16,7 @@
 
 AC_DEFUN([AX_F90_MODULE_FLAG],[
 AC_CACHE_CHECK([fortran 90 modules inclusion flag],
-ax_f90_modflag,
+ax_cv_f90_modflag,
 [AC_LANG_PUSH(Fortran)
 i=0
 while test \( -f tmpdir_$i \) -o \( -d tmpdir_$i \) ; do
@@ -24,24 +24,24 @@
 done
 mkdir tmpdir_$i
 cd tmpdir_$i
-AC_COMPILE_IFELSE([module conftest_module
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([module conftest_module
    contains
    subroutine conftest_routine
    write(*,'(a)') 'gotcha!'
    end subroutine conftest_routine
    end module conftest_module
-  ],[],[])
+  ])],[],[])
 cd ..
 ax_f90_modflag="not found"
 for ax_flag in "-I " "-M" "-p"; do
   if test "$ax_f90_modflag" = "not found" ; then
     ax_save_FCFLAGS="$FCFLAGS"
     FCFLAGS="$ax_save_FCFLAGS ${ax_flag}tmpdir_$i"
-    AC_COMPILE_IFELSE([program conftest_program
+    AC_COMPILE_IFELSE([AC_LANG_SOURCE([program conftest_program
        use conftest_module
        call conftest_routine
        end program conftest_program
-      ],[ax_f90_modflag="$ax_flag"],[])
+      ])],[ax_f90_modflag="$ax_flag"],[])
     FCFLAGS="$ax_save_FCFLAGS"
   fi
 done
diff -Nur qd-2.3.12.orig/m4/ax_f90_module_style.m4 qd-2.3.12/m4/ax_f90_module_style.m4
--- qd-2.3.12.orig/m4/ax_f90_module_style.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_f90_module_style.m4	2012-01-13 04:15:47.000000000 +0000
@@ -21,7 +21,7 @@
 
 AC_DEFUN([AX_F90_MODULE_STYLE],[
 AC_CACHE_CHECK([fortran 90 modules naming style],
-ax_f90_module_style, 
+ax_cv_f90_module_style, 
 [AC_LANG_PUSH(Fortran)
 i=0
 while test \( -f tmpdir_$i \) -o \( -d tmpdir_$i \) ; do
@@ -29,13 +29,13 @@
 done
 mkdir tmpdir_$i
 cd tmpdir_$i
-AC_COMPILE_IFELSE([module conftest_module
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([module conftest_module
    contains
    subroutine conftest_routine
    write(*,'(a)') 'gotcha!'
    end subroutine conftest_routine
    end module conftest_module
-  ],
+  ])],
   [ax_f90_modext=`ls | sed -n 's,conftest_module\.,,p'`
    if test x$ax_f90_modext = x ; then
 dnl Some F90 compilers put module filename in uppercase letters
diff -Nur qd-2.3.12.orig/m4/ax_fc_etime.m4 qd-2.3.12/m4/ax_fc_etime.m4
--- qd-2.3.12.orig/m4/ax_fc_etime.m4	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/m4/ax_fc_etime.m4	2012-01-13 04:15:47.000000000 +0000
@@ -4,9 +4,9 @@
 ax_fc_etime=
 ax_fc_etime_names="etime etime_"
 for name in $ax_fc_etime_names; do
-  AC_LINK_IFELSE([AC_LANG_PROGRAM(, [[
+  AC_LINK_IFELSE([AC_LANG_PROGRAM(, [AC_LANG_SOURCE([
       real*4 t(2), tot
-      tot = $name(t)]])], 
+      tot = $name(t)])])],
     [ax_fc_etime=$name], [])
   if test "x$ax_fc_etime" != "x"; then
     break;
diff -Nur qd-2.3.12.orig/Makefile.am qd-2.3.12/Makefile.am
--- qd-2.3.12.orig/Makefile.am	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/Makefile.am	2012-01-13 04:15:47.000000000 +0000
@@ -1,7 +1,6 @@
 ACLOCAL_AMFLAGS = -I m4
 SUBDIRS = config src include tests fortran
 
-docdir=${datadir}/doc/${PACKAGE}
 BUILT_SOURCES = docs/qd.pdf
 dist_doc_DATA = README docs/qd.pdf
 dist_noinst_DATA = docs/Makefile \
@@ -24,7 +23,7 @@
 doc: docs/qd.pdf
 
 docs/qd.pdf:
-	cd docs && $(MAKE) qd.pdf
+	$(MAKE) -C docsqd.pdf
 
 changelog:
 	git log >ChangeLog
@@ -33,12 +32,12 @@
 	rm -f ${distdir}/ChangeLog && git log >${distdir}/ChangeLog
 
 cpp-demo:
-	cd tests && make demo
+	$(MAKE) -C tests demo
 
 if HAVE_FORTRAN
 
 fortran-demo:
-	cd fortran && make demo
+	$(MAKE) -C fortran demo
 
 demo: cpp-demo fortran-demo
 
@@ -52,7 +51,7 @@
 endif
 
 time:
-	cd tests && make time
+	$(MAKE) -C tests time
 
 bin_SCRIPTS=qd-config
 
diff -Nur qd-2.3.12.orig/qd-config.in qd-2.3.12/qd-config.in
--- qd-2.3.12.orig/qd-config.in	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/qd-config.in	2012-01-13 04:17:47.000000000 +0000
@@ -30,7 +30,7 @@
 FCLIBS="-L$libdir -lqdmod -lqd @LIBS@ @FCLIBS@"
 FMAINLIB="-L$libdir -lqd_f_main"
 FCFLAGS="@REQ_FCFLAGS@"
-MODFLAG="@ax_f90_modflag@$libdir/qd"
+MODFLAG="@ax_f90_modflag@$includedir/qd"
 
 build="@BUILDER@-@BUILDDATE@"
 configure_args="@CONFIGURE_ARGS@"
diff -Nur qd-2.3.12.orig/src/Makefile.am qd-2.3.12/src/Makefile.am
--- qd-2.3.12.orig/src/Makefile.am	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/src/Makefile.am	2012-01-13 04:15:47.000000000 +0000
@@ -1,9 +1,9 @@
 SRC = c_dd.cpp c_qd.cpp dd_real.cpp dd_const.cpp \
       fpu.cpp qd_real.cpp qd_const.cpp util.cpp bits.cpp util.h
 
-lib_LIBRARIES = libqd.a
+lib_LTLIBRARIES = libqd.la
 
-libqd_a_SOURCES = $(SRC)
+libqd_la_SOURCES = $(SRC)
 
 AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
 
diff -Nur qd-2.3.12.orig/tests/Makefile.am qd-2.3.12/tests/Makefile.am
--- qd-2.3.12.orig/tests/Makefile.am	2012-01-13 04:15:25.000000000 +0000
+++ qd-2.3.12/tests/Makefile.am	2012-01-13 04:15:47.000000000 +0000
@@ -1,4 +1,4 @@
-LDADD = $(top_builddir)/src/libqd.a
+LDADD = $(top_builddir)/src/libqd.la
 AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
 
 TESTS = qd_test pslq_test c_test
@@ -15,9 +15,9 @@
 
 f_test_SOURCES = f_test.f
 f_test_LINK=$(CXXLINK)
-f_test_LDADD = $(top_builddir)/fortran/libqdmod.a \
-               $(top_builddir)/fortran/libqd_f_main.a \
-               $(LDADD) $(top_builddir)/src/libqd.a $(FCLIBS)
+f_test_LDADD = $(top_builddir)/fortran/libqdmod.la \
+               $(top_builddir)/fortran/libqd_f_main.la \
+               $(LDADD) $(top_builddir)/src/libqd.la $(FCLIBS)
 endif
 
 CLEANFILES=qd_timer quadt_test huge
