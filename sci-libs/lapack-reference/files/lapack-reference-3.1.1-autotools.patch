--- configure.ac 	1970-01-01 01:00:00.000000000 +0100
+++ configure.ac	2007-11-09 18:12:33.000000000 +0000
@@ -0,0 +1,21 @@
+AC_PREREQ(2.59)
+AC_INIT(lapack, 3.1.1, lapack@cs.utk.edu)
+AM_INIT_AUTOMAKE([foreign])
+
+dnl AC_LANG(Fortran 77)
+AC_PROG_F77
+AC_PROG_LIBTOOL
+
+sinclude(acx_blas.m4)
+ACX_BLAS
+if test x"$BLAS_LIBS" = x; then
+   AC_MSG_ERROR([Cannot find blas libraries])
+fi
+
+AC_ARG_VAR(NOOPT_FFLAGS, Fortran 77 compiler flags to use for unoptimized files)
+
+AC_CONFIG_FILES([Makefile
+                 SRC/Makefile
+                 INSTALL/Makefile
+  		 lapack.pc])
+AC_OUTPUT
--- Makefile.am 	1970-01-01 01:00:00.000000000 +0100
+++ Makefile.am	2007-11-09 17:46:18.000000000 +0000
@@ -0,0 +1,6 @@
+SUBDIRS = INSTALL SRC
+
+pkgconfigdir = $(libdir)
+pkgconfig_DATA = lapack.pc
+
+EXTRA_DIST = README lapack.pc
--- acx_blas.m4 	1970-01-01 01:00:00.000000000 +0100
+++ acx_blas.m4	2007-08-04 22:50:48.000000000 +0100
@@ -0,0 +1,191 @@
+##### http://autoconf-archive.cryp.to/acx_blas.html
+#
+# SYNOPSIS
+#
+#   ACX_BLAS([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro looks for a library that implements the BLAS
+#   linear-algebra interface (see http://www.netlib.org/blas/). On
+#   success, it sets the BLAS_LIBS output variable to hold the
+#   requisite library linkages.
+#
+#   To link with BLAS, you should link with:
+#
+#   	$BLAS_LIBS $LIBS $FLIBS
+#
+#   in that order. FLIBS is the output variable of the
+#   AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and
+#   is sometimes necessary in order to link with F77 libraries. Users
+#   will also need to use AC_F77_DUMMY_MAIN (see the autoconf manual),
+#   for the same reason.
+#
+#   Many libraries are searched for, from ATLAS to CXML to ESSL. The
+#   user may also use --with-blas=<lib> in order to use some specific
+#   BLAS library <lib>. In order to link successfully, however, be
+#   aware that you will probably need to use the same Fortran compiler
+#   (which can be set via the F77 env. var.) as was used to compile the
+#   BLAS library.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if a BLAS
+#   library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+#   run it if it is not found. If ACTION-IF-FOUND is not specified, the
+#   default action will define HAVE_BLAS.
+#
+#   This macro requires autoconf 2.50 or later.
+#
+# LAST MODIFICATION
+#
+#   2007-07-29
+#
+# COPYLEFT
+#
+#   Copyright (c) 2007 Steven G. Johnson <stevenj@alum.mit.edu>
+#
+#   This program is free software: you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License as
+#   published by the Free Software Foundation, either version 3 of the
+#   License, or (at your option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this program. If not, see
+#   <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright
+#   owner gives unlimited permission to copy, distribute and modify the
+#   configure scripts that are the output of Autoconf when processing
+#   the Macro. You need not follow the terms of the GNU General Public
+#   License when using or distributing such scripts, even though
+#   portions of the text of the Macro appear in them. The GNU General
+#   Public License (GPL) does govern all other use of the material that
+#   constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the
+#   Autoconf Macro released by the Autoconf Macro Archive. When you
+#   make and distribute a modified version of the Autoconf Macro, you
+#   may extend this special exception to the GPL to apply to your
+#   modified version as well.
+
+AC_DEFUN([ACX_BLAS], [
+AC_PREREQ(2.50)
+AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
+acx_blas_ok=no
+
+AC_ARG_WITH(blas,
+	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
+case $with_blas in
+	yes | "") ;;
+	no) acx_blas_ok=disable ;;
+	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
+	*) BLAS_LIBS="-l$with_blas" ;;
+esac
+
+# Get fortran linker names of BLAS functions to check for.
+AC_F77_FUNC(sgemm)
+AC_F77_FUNC(dgemm)
+
+acx_blas_save_LIBS="$LIBS"
+LIBS="$LIBS $FLIBS"
+
+# First, check BLAS_LIBS environment variable
+if test $acx_blas_ok = no; then
+if test "x$BLAS_LIBS" != x; then
+	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
+	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
+	AC_MSG_RESULT($acx_blas_ok)
+	LIBS="$save_LIBS"
+fi
+fi
+
+# BLAS linked to by default?  (happens on some supercomputers)
+if test $acx_blas_ok = no; then
+	save_LIBS="$LIBS"; LIBS="$LIBS"
+	AC_CHECK_FUNC($sgemm, [acx_blas_ok=yes])
+	LIBS="$save_LIBS"
+fi
+
+# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(atlas, ATL_xerbla,
+		[AC_CHECK_LIB(f77blas, $sgemm,
+		[AC_CHECK_LIB(cblas, cblas_dgemm,
+			[acx_blas_ok=yes
+			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
+			[], [-lf77blas -latlas])],
+			[], [-latlas])])
+fi
+
+# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(dgemm, $dgemm,
+		[AC_CHECK_LIB(sgemm, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
+			[], [-lblas])],
+			[], [-lblas])])
+fi
+
+# BLAS in Alpha CXML library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(cxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
+fi
+
+# BLAS in Alpha DXML library? (now called CXML, see above)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(dxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
+fi
+
+# BLAS in Sun Performance library?
+if test $acx_blas_ok = no; then
+	if test "x$GCC" != xyes; then # only works with Sun CC
+		AC_CHECK_LIB(sunmath, acosp,
+			[AC_CHECK_LIB(sunperf, $sgemm,
+        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
+                                 acx_blas_ok=yes],[],[-lsunmath])])
+	fi
+fi
+
+# BLAS in SCSL library?  (SGI/Cray Scientific Library)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(scs, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
+fi
+
+# BLAS in SGIMATH library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(complib.sgimath, $sgemm,
+		     [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
+fi
+
+# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(essl, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
+			[], [-lblas $FLIBS])])
+fi
+
+# Generic BLAS library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
+fi
+
+AC_SUBST(BLAS_LIBS)
+
+LIBS="$acx_blas_save_LIBS"
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_blas_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
+        :
+else
+        acx_blas_ok=no
+        $2
+fi
+])dnl ACX_BLAS
--- lapack.pc.in 	1970-01-01 01:00:00.000000000 +0100
+++ lapack.pc.in	2007-11-09 17:46:18.000000000 +0000
@@ -0,0 +1,11 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: @PACKAGE_NAME@
+Description: Linear Algebra PACKage FORTRAN 77 reference implementation
+Version: @PACKAGE_VERSION@
+Requires: blas
+URL: http://www.netlib.org/lapack/
+Libs: -llapack
--- SRC/Makefile.am 	1970-01-01 01:00:00.000000000 +0100
+++ SRC/Makefile.am	2007-11-09 18:20:03.000000000 +0000
@@ -0,0 +1,292 @@
+lib_LTLIBRARIES = \
+	liblapack.la
+
+noinst_LTLIBRARIES = \
+	liblapack-noopt.la
+
+ALLAUX_SOURCES = ilaenv.f ieeeck.f lsamen.f xerbla.f iparmq.f \
+	../INSTALL/ilaver.f ../INSTALL/lsame.f
+
+SINGLE_NOOPT_SOURCES = \
+	slaruv.f ../INSTALL/slamch.f
+
+SINGLE_SOURCES = \
+	sbdsdc.f \
+	sbdsqr.f sdisna.f slabad.f slacpy.f sladiv.f slae2.f  slaebz.f \
+	slaed0.f slaed1.f slaed2.f slaed3.f slaed4.f slaed5.f slaed6.f \
+	slaed7.f slaed8.f slaed9.f slaeda.f slaev2.f slagtf.f \
+	slagts.f slamrg.f slanst.f \
+	slapy2.f slapy3.f slarnv.f \
+	slarra.f slarrb.f slarrc.f slarrd.f slarre.f slarrf.f slarrj.f \
+	slarrk.f slarrr.f slaneg.f \
+	slartg.f slas2.f  slascl.f \
+	slasd0.f slasd1.f slasd2.f slasd3.f slasd4.f slasd5.f slasd6.f \
+	slasd7.f slasd8.f slasda.f slasdq.f slasdt.f \
+	slaset.f slasq1.f slasq2.f slasq3.f slazq3.f slasq4.f slazq4.f slasq5.f slasq6.f \
+	slasr.f  slasrt.f slassq.f slasv2.f spttrf.f sstebz.f sstedc.f \
+	ssteqr.f ssterf.f slaisnan.f sisnan.f \
+	../INSTALL/second_INT_CPU_TIME.f
+
+DOUBLE_NOOPT_SOURCES = \
+	dlaruv.f ../INSTALL/dlamch.f
+
+DOUBLE_SOURCES = \
+	dbdsdc.f \
+	dbdsqr.f ddisna.f dlabad.f dlacpy.f dladiv.f dlae2.f  dlaebz.f \
+	dlaed0.f dlaed1.f dlaed2.f dlaed3.f dlaed4.f dlaed5.f dlaed6.f \
+	dlaed7.f dlaed8.f dlaed9.f dlaeda.f dlaev2.f dlagtf.f \
+	dlagts.f dlamrg.f dlanst.f \
+	dlapy2.f dlapy3.f dlarnv.f \
+	dlarra.f dlarrb.f dlarrc.f dlarrd.f dlarre.f dlarrf.f dlarrj.f \
+	dlarrk.f dlarrr.f dlaneg.f \
+	dlartg.f dlas2.f  dlascl.f \
+	dlasd0.f dlasd1.f dlasd2.f dlasd3.f dlasd4.f dlasd5.f dlasd6.f \
+	dlasd7.f dlasd8.f dlasda.f dlasdq.f dlasdt.f \
+	dlaset.f dlasq1.f dlasq2.f dlasq3.f dlazq3.f dlasq4.f dlazq4.f dlasq5.f dlasq6.f \
+	dlasr.f  dlasrt.f dlassq.f dlasv2.f dpttrf.f dstebz.f dstedc.f \
+	dsteqr.f dsterf.f dlaisnan.f disnan.f \
+	../INSTALL/dsecnd_INT_CPU_TIME.f
+
+S_SOURCES = \
+	sgbbrd.f sgbcon.f sgbequ.f sgbrfs.f sgbsv.f  \
+	sgbsvx.f sgbtf2.f sgbtrf.f sgbtrs.f sgebak.f sgebal.f sgebd2.f \
+	sgebrd.f sgecon.f sgeequ.f sgees.f  sgeesx.f sgeev.f  sgeevx.f \
+	sgegs.f  sgegv.f  sgehd2.f sgehrd.f sgelq2.f sgelqf.f \
+	sgels.f  sgelsd.f sgelss.f sgelsx.f sgelsy.f sgeql2.f sgeqlf.f \
+	sgeqp3.f sgeqpf.f sgeqr2.f sgeqrf.f sgerfs.f sgerq2.f sgerqf.f \
+	sgesc2.f sgesdd.f sgesv.f  sgesvd.f sgesvx.f sgetc2.f sgetf2.f \
+	sgetrf.f sgetri.f \
+	sgetrs.f sggbak.f sggbal.f sgges.f  sggesx.f sggev.f  sggevx.f \
+	sggglm.f sgghrd.f sgglse.f sggqrf.f \
+	sggrqf.f sggsvd.f sggsvp.f sgtcon.f sgtrfs.f sgtsv.f  \
+	sgtsvx.f sgttrf.f sgttrs.f sgtts2.f shgeqz.f \
+	shsein.f shseqr.f slabrd.f slacon.f slacn2.f \
+	slaein.f slaexc.f slag2.f  slags2.f slagtm.f slagv2.f slahqr.f \
+	slahrd.f slahr2.f slaic1.f slaln2.f slals0.f slalsa.f slalsd.f \
+	slangb.f slange.f slangt.f slanhs.f slansb.f slansp.f \
+	slansy.f slantb.f slantp.f slantr.f slanv2.f \
+	slapll.f slapmt.f \
+	slaqgb.f slaqge.f slaqp2.f slaqps.f slaqsb.f slaqsp.f slaqsy.f \
+	slaqr0.f slaqr1.f slaqr2.f slaqr3.f slaqr4.f slaqr5.f \
+	slaqtr.f slar1v.f slar2v.f \
+	slarf.f  slarfb.f slarfg.f slarft.f slarfx.f slargv.f \
+	slarrv.f slartv.f \
+	slarz.f  slarzb.f slarzt.f slaswp.f slasy2.f slasyf.f \
+	slatbs.f slatdf.f slatps.f slatrd.f slatrs.f slatrz.f slatzm.f \
+	slauu2.f slauum.f sopgtr.f sopmtr.f sorg2l.f sorg2r.f \
+	sorgbr.f sorghr.f sorgl2.f sorglq.f sorgql.f sorgqr.f sorgr2.f \
+	sorgrq.f sorgtr.f sorm2l.f sorm2r.f \
+	sormbr.f sormhr.f sorml2.f sormlq.f sormql.f sormqr.f sormr2.f \
+	sormr3.f sormrq.f sormrz.f sormtr.f spbcon.f spbequ.f spbrfs.f \
+	spbstf.f spbsv.f  spbsvx.f \
+	spbtf2.f spbtrf.f spbtrs.f spocon.f spoequ.f sporfs.f sposv.f  \
+	sposvx.f spotf2.f spotrf.f spotri.f spotrs.f sppcon.f sppequ.f \
+	spprfs.f sppsv.f  sppsvx.f spptrf.f spptri.f spptrs.f sptcon.f \
+	spteqr.f sptrfs.f sptsv.f  sptsvx.f spttrs.f sptts2.f srscl.f  \
+	ssbev.f  ssbevd.f ssbevx.f ssbgst.f ssbgv.f  ssbgvd.f ssbgvx.f \
+	ssbtrd.f sspcon.f sspev.f  sspevd.f sspevx.f sspgst.f \
+	sspgv.f  sspgvd.f sspgvx.f ssprfs.f sspsv.f  sspsvx.f ssptrd.f \
+	ssptrf.f ssptri.f ssptrs.f sstegr.f sstein.f sstev.f  sstevd.f sstevr.f \
+	sstevx.f ssycon.f ssyev.f  ssyevd.f ssyevr.f ssyevx.f ssygs2.f \
+	ssygst.f ssygv.f  ssygvd.f ssygvx.f ssyrfs.f ssysv.f  ssysvx.f \
+	ssytd2.f ssytf2.f ssytrd.f ssytrf.f ssytri.f ssytrs.f stbcon.f \
+	stbrfs.f stbtrs.f stgevc.f stgex2.f stgexc.f stgsen.f \
+	stgsja.f stgsna.f stgsy2.f stgsyl.f stpcon.f stprfs.f stptri.f \
+	stptrs.f \
+	strcon.f strevc.f strexc.f strrfs.f strsen.f strsna.f strsyl.f \
+	strti2.f strtri.f strtrs.f stzrqf.f stzrzf.f sstemr.f
+
+C_SOURCES = \
+	cbdsqr.f cgbbrd.f cgbcon.f cgbequ.f cgbrfs.f cgbsv.f  cgbsvx.f \
+	cgbtf2.f cgbtrf.f cgbtrs.f cgebak.f cgebal.f cgebd2.f cgebrd.f \
+	cgecon.f cgeequ.f cgees.f  cgeesx.f cgeev.f  cgeevx.f \
+	cgegs.f  cgegv.f  cgehd2.f cgehrd.f cgelq2.f cgelqf.f \
+	cgels.f  cgelsd.f cgelss.f cgelsx.f cgelsy.f cgeql2.f cgeqlf.f cgeqp3.f \
+	cgeqpf.f cgeqr2.f cgeqrf.f cgerfs.f cgerq2.f cgerqf.f \
+	cgesc2.f cgesdd.f cgesv.f  cgesvd.f cgesvx.f cgetc2.f cgetf2.f cgetrf.f \
+	cgetri.f cgetrs.f \
+	cggbak.f cggbal.f cgges.f  cggesx.f cggev.f  cggevx.f cggglm.f \
+	cgghrd.f cgglse.f cggqrf.f cggrqf.f \
+	cggsvd.f cggsvp.f \
+	cgtcon.f cgtrfs.f cgtsv.f  cgtsvx.f cgttrf.f cgttrs.f cgtts2.f chbev.f  \
+	chbevd.f chbevx.f chbgst.f chbgv.f  chbgvd.f chbgvx.f chbtrd.f \
+	checon.f cheev.f  cheevd.f cheevr.f cheevx.f chegs2.f chegst.f \
+	chegv.f  chegvd.f chegvx.f cherfs.f chesv.f  chesvx.f chetd2.f \
+	chetf2.f chetrd.f \
+	chetrf.f chetri.f chetrs.f chgeqz.f chpcon.f chpev.f  chpevd.f \
+	chpevx.f chpgst.f chpgv.f  chpgvd.f chpgvx.f chprfs.f chpsv.f  \
+	chpsvx.f \
+	chptrd.f chptrf.f chptri.f chptrs.f chsein.f chseqr.f clabrd.f \
+	clacgv.f clacon.f clacn2.f clacp2.f clacpy.f clacrm.f clacrt.f cladiv.f \
+	claed0.f claed7.f claed8.f \
+	claein.f claesy.f claev2.f clags2.f clagtm.f \
+	clahef.f clahqr.f \
+	clahrd.f clahr2.f claic1.f clals0.f clalsa.f clalsd.f clangb.f clange.f clangt.f \
+	clanhb.f clanhe.f \
+	clanhp.f clanhs.f clanht.f clansb.f clansp.f clansy.f clantb.f \
+	clantp.f clantr.f clapll.f clapmt.f clarcm.f claqgb.f claqge.f \
+	claqhb.f claqhe.f claqhp.f claqp2.f claqps.f claqsb.f \
+	claqr0.f claqr1.f claqr2.f claqr3.f claqr4.f claqr5.f \
+	claqsp.f claqsy.f clar1v.f clar2v.f clarf.f  clarfb.f clarfg.f clarft.f \
+	clarfx.f clargv.f clarnv.f clarrv.f clartg.f clartv.f \
+	clarz.f  clarzb.f clarzt.f clascl.f claset.f clasr.f  classq.f \
+	claswp.f clasyf.f clatbs.f clatdf.f clatps.f clatrd.f clatrs.f clatrz.f \
+	clatzm.f clauu2.f clauum.f cpbcon.f cpbequ.f cpbrfs.f cpbstf.f cpbsv.f  \
+	cpbsvx.f cpbtf2.f cpbtrf.f cpbtrs.f cpocon.f cpoequ.f cporfs.f \
+	cposv.f  cposvx.f cpotf2.f cpotrf.f cpotri.f cpotrs.f cppcon.f \
+	cppequ.f cpprfs.f cppsv.f  cppsvx.f cpptrf.f cpptri.f cpptrs.f \
+	cptcon.f cpteqr.f cptrfs.f cptsv.f  cptsvx.f cpttrf.f cpttrs.f cptts2.f \
+	crot.f   cspcon.f cspmv.f  cspr.f   csprfs.f cspsv.f  \
+	cspsvx.f csptrf.f csptri.f csptrs.f csrscl.f cstedc.f \
+	cstegr.f cstein.f csteqr.f csycon.f csymv.f  \
+	csyr.f   csyrfs.f csysv.f  csysvx.f csytf2.f csytrf.f csytri.f \
+	csytrs.f ctbcon.f ctbrfs.f ctbtrs.f ctgevc.f ctgex2.f \
+	ctgexc.f ctgsen.f ctgsja.f ctgsna.f ctgsy2.f ctgsyl.f ctpcon.f \
+	ctprfs.f ctptri.f \
+	ctptrs.f ctrcon.f ctrevc.f ctrexc.f ctrrfs.f ctrsen.f ctrsna.f \
+	ctrsyl.f ctrti2.f ctrtri.f ctrtrs.f ctzrqf.f ctzrzf.f cung2l.f cung2r.f \
+	cungbr.f cunghr.f cungl2.f cunglq.f cungql.f cungqr.f cungr2.f \
+	cungrq.f cungtr.f cunm2l.f cunm2r.f cunmbr.f cunmhr.f cunml2.f \
+	cunmlq.f cunmql.f cunmqr.f cunmr2.f cunmr3.f cunmrq.f cunmrz.f \
+	cunmtr.f cupgtr.f cupmtr.f icmax1.f scsum1.f cstemr.f
+
+D_SOURCES = \
+	dgbbrd.f dgbcon.f dgbequ.f dgbrfs.f dgbsv.f  \
+	dgbsvx.f dgbtf2.f dgbtrf.f dgbtrs.f dgebak.f dgebal.f dgebd2.f \
+	dgebrd.f dgecon.f dgeequ.f dgees.f  dgeesx.f dgeev.f  dgeevx.f \
+	dgegs.f  dgegv.f  dgehd2.f dgehrd.f dgelq2.f dgelqf.f \
+	dgels.f  dgelsd.f dgelss.f dgelsx.f dgelsy.f dgeql2.f dgeqlf.f \
+	dgeqp3.f dgeqpf.f dgeqr2.f dgeqrf.f dgerfs.f dgerq2.f dgerqf.f \
+	dgesc2.f dgesdd.f dgesv.f  dgesvd.f dgesvx.f dgetc2.f dgetf2.f \
+	dgetrf.f dgetri.f \
+	dgetrs.f dggbak.f dggbal.f dgges.f  dggesx.f dggev.f  dggevx.f \
+	dggglm.f dgghrd.f dgglse.f dggqrf.f \
+	dggrqf.f dggsvd.f dggsvp.f dgtcon.f dgtrfs.f dgtsv.f  \
+	dgtsvx.f dgttrf.f dgttrs.f dgtts2.f dhgeqz.f \
+	dhsein.f dhseqr.f dlabrd.f dlacon.f dlacn2.f \
+	dlaein.f dlaexc.f dlag2.f  dlags2.f dlagtm.f dlagv2.f dlahqr.f \
+	dlahrd.f dlahr2.f dlaic1.f dlaln2.f dlals0.f dlalsa.f dlalsd.f \
+	dlangb.f dlange.f dlangt.f dlanhs.f dlansb.f dlansp.f \
+	dlansy.f dlantb.f dlantp.f dlantr.f dlanv2.f \
+	dlapll.f dlapmt.f \
+	dlaqgb.f dlaqge.f dlaqp2.f dlaqps.f dlaqsb.f dlaqsp.f dlaqsy.f \
+	dlaqr0.f dlaqr1.f dlaqr2.f dlaqr3.f dlaqr4.f dlaqr5.f \
+	dlaqtr.f dlar1v.f dlar2v.f \
+	dlarf.f  dlarfb.f dlarfg.f dlarft.f dlarfx.f dlargv.f \
+	dlarrv.f dlartv.f \
+	dlarz.f  dlarzb.f dlarzt.f dlaswp.f dlasy2.f dlasyf.f \
+	dlatbs.f dlatdf.f dlatps.f dlatrd.f dlatrs.f dlatrz.f dlatzm.f dlauu2.f \
+	dlauum.f dopgtr.f dopmtr.f dorg2l.f dorg2r.f \
+	dorgbr.f dorghr.f dorgl2.f dorglq.f dorgql.f dorgqr.f dorgr2.f \
+	dorgrq.f dorgtr.f dorm2l.f dorm2r.f \
+	dormbr.f dormhr.f dorml2.f dormlq.f dormql.f dormqr.f dormr2.f \
+	dormr3.f dormrq.f dormrz.f dormtr.f dpbcon.f dpbequ.f dpbrfs.f \
+	dpbstf.f dpbsv.f  dpbsvx.f \
+	dpbtf2.f dpbtrf.f dpbtrs.f dpocon.f dpoequ.f dporfs.f dposv.f  \
+	dposvx.f dpotf2.f dpotrf.f dpotri.f dpotrs.f dppcon.f dppequ.f \
+	dpprfs.f dppsv.f  dppsvx.f dpptrf.f dpptri.f dpptrs.f dptcon.f \
+	dpteqr.f dptrfs.f dptsv.f  dptsvx.f dpttrs.f dptts2.f drscl.f  \
+	dsbev.f  dsbevd.f dsbevx.f dsbgst.f dsbgv.f  dsbgvd.f dsbgvx.f \
+	dsbtrd.f  dspcon.f dspev.f  dspevd.f dspevx.f dspgst.f \
+	dspgv.f  dspgvd.f dspgvx.f dsprfs.f dspsv.f  dspsvx.f dsptrd.f \
+	dsptrf.f dsptri.f dsptrs.f dstegr.f dstein.f dstev.f  dstevd.f dstevr.f \
+	dstevx.f dsycon.f dsyev.f  dsyevd.f dsyevr.f \
+	dsyevx.f dsygs2.f dsygst.f dsygv.f  dsygvd.f dsygvx.f dsyrfs.f \
+	dsysv.f  dsysvx.f \
+	dsytd2.f dsytf2.f dsytrd.f dsytrf.f dsytri.f dsytrs.f dtbcon.f \
+	dtbrfs.f dtbtrs.f dtgevc.f dtgex2.f dtgexc.f dtgsen.f \
+	dtgsja.f dtgsna.f dtgsy2.f dtgsyl.f dtpcon.f dtprfs.f dtptri.f \
+	dtptrs.f \
+	dtrcon.f dtrevc.f dtrexc.f dtrrfs.f dtrsen.f dtrsna.f dtrsyl.f \
+	dtrti2.f dtrtri.f dtrtrs.f dtzrqf.f dtzrzf.f dstemr.f \
+	dsgesv.f dlag2s.f slag2d.f
+
+Z_SOURCES = \
+	zbdsqr.f zgbbrd.f zgbcon.f zgbequ.f zgbrfs.f zgbsv.f  zgbsvx.f \
+	zgbtf2.f zgbtrf.f zgbtrs.f zgebak.f zgebal.f zgebd2.f zgebrd.f \
+	zgecon.f zgeequ.f zgees.f  zgeesx.f zgeev.f  zgeevx.f \
+	zgegs.f  zgegv.f  zgehd2.f zgehrd.f zgelq2.f zgelqf.f \
+	zgels.f  zgelsd.f zgelss.f zgelsx.f zgelsy.f zgeql2.f zgeqlf.f zgeqp3.f \
+	zgeqpf.f zgeqr2.f zgeqrf.f zgerfs.f zgerq2.f zgerqf.f \
+	zgesc2.f zgesdd.f zgesv.f  zgesvd.f zgesvx.f zgetc2.f zgetf2.f zgetrf.f \
+	zgetri.f zgetrs.f \
+	zggbak.f zggbal.f zgges.f  zggesx.f zggev.f  zggevx.f zggglm.f \
+	zgghrd.f zgglse.f zggqrf.f zggrqf.f \
+	zggsvd.f zggsvp.f \
+	zgtcon.f zgtrfs.f zgtsv.f  zgtsvx.f zgttrf.f zgttrs.f zgtts2.f zhbev.f  \
+	zhbevd.f zhbevx.f zhbgst.f zhbgv.f  zhbgvd.f zhbgvx.f zhbtrd.f \
+	zhecon.f zheev.f  zheevd.f zheevr.f zheevx.f zhegs2.f zhegst.f \
+	zhegv.f  zhegvd.f zhegvx.f zherfs.f zhesv.f  zhesvx.f zhetd2.f \
+	zhetf2.f zhetrd.f \
+	zhetrf.f zhetri.f zhetrs.f zhgeqz.f zhpcon.f zhpev.f  zhpevd.f \
+	zhpevx.f zhpgst.f zhpgv.f  zhpgvd.f zhpgvx.f zhprfs.f zhpsv.f  \
+	zhpsvx.f \
+	zhptrd.f zhptrf.f zhptri.f zhptrs.f zhsein.f zhseqr.f zlabrd.f \
+	zlacgv.f zlacon.f zlacn2.f zlacp2.f zlacpy.f zlacrm.f zlacrt.f zladiv.f \
+	zlaed0.f zlaed7.f zlaed8.f \
+	zlaein.f zlaesy.f zlaev2.f zlags2.f zlagtm.f \
+	zlahef.f zlahqr.f \
+	zlahrd.f zlahr2.f zlaic1.f zlals0.f zlalsa.f zlalsd.f zlangb.f zlange.f \
+	zlangt.f zlanhb.f \
+	zlanhe.f \
+	zlanhp.f zlanhs.f zlanht.f zlansb.f zlansp.f zlansy.f zlantb.f \
+	zlantp.f zlantr.f zlapll.f zlapmt.f zlaqgb.f zlaqge.f \
+	zlaqhb.f zlaqhe.f zlaqhp.f zlaqp2.f zlaqps.f zlaqsb.f \
+	zlaqr0.f zlaqr1.f zlaqr2.f zlaqr3.f zlaqr4.f zlaqr5.f \
+	zlaqsp.f zlaqsy.f zlar1v.f zlar2v.f zlarcm.f zlarf.f  zlarfb.f \
+	zlarfg.f zlarft.f \
+	zlarfx.f zlargv.f zlarnv.f zlarrv.f zlartg.f zlartv.f \
+	zlarz.f  zlarzb.f zlarzt.f zlascl.f zlaset.f zlasr.f  \
+	zlassq.f zlaswp.f zlasyf.f \
+	zlatbs.f zlatdf.f zlatps.f zlatrd.f zlatrs.f zlatrz.f zlatzm.f zlauu2.f \
+	zlauum.f zpbcon.f zpbequ.f zpbrfs.f zpbstf.f zpbsv.f  \
+	zpbsvx.f zpbtf2.f zpbtrf.f zpbtrs.f zpocon.f zpoequ.f zporfs.f \
+	zposv.f  zposvx.f zpotf2.f zpotrf.f zpotri.f zpotrs.f zppcon.f \
+	zppequ.f zpprfs.f zppsv.f  zppsvx.f zpptrf.f zpptri.f zpptrs.f \
+	zptcon.f zpteqr.f zptrfs.f zptsv.f  zptsvx.f zpttrf.f zpttrs.f zptts2.f \
+	zrot.f   zspcon.f zspmv.f  zspr.f   zsprfs.f zspsv.f  \
+	zspsvx.f zsptrf.f zsptri.f zsptrs.f zdrscl.f zstedc.f \
+	zstegr.f zstein.f zsteqr.f zsycon.f zsymv.f  \
+	zsyr.f   zsyrfs.f zsysv.f  zsysvx.f zsytf2.f zsytrf.f zsytri.f \
+	zsytrs.f ztbcon.f ztbrfs.f ztbtrs.f ztgevc.f ztgex2.f \
+	ztgexc.f ztgsen.f ztgsja.f ztgsna.f ztgsy2.f ztgsyl.f ztpcon.f \
+	ztprfs.f ztptri.f \
+	ztptrs.f ztrcon.f ztrevc.f ztrexc.f ztrrfs.f ztrsen.f ztrsna.f \
+	ztrsyl.f ztrti2.f ztrtri.f ztrtrs.f ztzrqf.f ztzrzf.f zung2l.f \
+	zung2r.f zungbr.f zunghr.f zungl2.f zunglq.f zungql.f zungqr.f zungr2.f \
+	zungrq.f zungtr.f zunm2l.f zunm2r.f zunmbr.f zunmhr.f zunml2.f \
+	zunmlq.f zunmql.f zunmqr.f zunmr2.f zunmr3.f zunmrq.f zunmrz.f \
+	zunmtr.f zupgtr.f \
+	zupmtr.f izmax1.f dzsum1.f zstemr.f \
+	zcgesv.f zlag2c.f clag2z.f
+
+liblapack_noopt_la_FFLAGS = \
+	$(NOOPT_FFLAGS)
+
+liblapack_noopt_la_SOURCES = \
+	$(SINGLE_NOOPT_SOURCES) \
+	$(DOUBLE_NOOPT_SOURCES)
+
+liblapack_la_LIBADD = liblapack-noopt.la @BLAS_LIBS@
+
+liblapack_la_SOURCES = \
+	$(ALLAUX_SOURCES) \
+	$(SINGLE_SOURCES) \
+	$(DOUBLE_SOURCES) \
+	$(S_SOURCES) \
+	$(C_SOURCES) \
+	$(D_SOURCES) \
+	$(Z_SOURCES)
+
+# Automake doesn't have a way to build with no optimization
+# See http://sources.redhat.com/ml/automake/2002-08/msg00082.html
+# This is the automake-produced rule with $(FFLAGS) removed
+liblapack_noopt_la-slaruv.lo: slaruv.f
+	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(liblapack_noopt_la_FFLAGS) -c -o liblapack_noopt_la-slaruv.lo `test -f 'slaruv.f' || echo '$(srcdir)/'`slaruv.f
+liblapack_noopt_la-dlaruv.lo: dlaruv.f
+	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(liblapack_noopt_la_FFLAGS) -c -o liblapack_noopt_la-dlaruv.lo `test -f 'dlaruv.f' || echo '$(srcdir)/'`dlaruv.f
+
+liblapack_noopt_la-slamch.lo: ../INSTALL/slamch.f
+	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(liblapack_noopt_la_FFLAGS) -c -o liblapack_noopt_la-slamch.lo `test -f '../INSTALL/slamch.f' || echo '$(srcdir)/'`../INSTALL/slamch.f
+liblapack_noopt_la-dlamch.lo: ../INSTALL/dlamch.f
+	$(LIBTOOL) --tag=F77 --mode=compile $(F77) $(liblapack_noopt_la_FFLAGS) -c -o liblapack_noopt_la-dlamch.lo `test -f '../INSTALL/dlamch.f' || echo '$(srcdir)/'`../INSTALL/dlamch.f
--- INSTALL/Makefile.am 	1970-01-01 01:00:00.000000000 +0100
+++ INSTALL/Makefile.am	2007-11-09 17:46:18.000000000 +0000
@@ -0,0 +1,23 @@
+check_PROGRAMS = \
+	testlsame \
+	testslamch \
+	testdlamch \
+	testsecond \
+	testdsecnd \
+	testieee
+
+TESTS = $(check_PROGRAMS)
+
+testlsame_SOURCES = lsame.f lsametst.f
+testslamch_SOURCES = slamch.f lsame.f slamchtst.f
+testdlamch_SOURCES = dlamch.f lsame.f dlamchtst.f
+testsecond_SOURCES = second_INT_CPU_TIME.f secondtst.f
+testdsecnd_SOURCES = dsecnd_INT_CPU_TIME.f dsecndtst.f
+testieee_SOURCES = tstiee.f
+
+EXTRA_DIST = \
+	lawn81.pdf \
+	lawn81.ps \
+	lawn81.tex \
+	org2.ps \
+	psfig.tex
