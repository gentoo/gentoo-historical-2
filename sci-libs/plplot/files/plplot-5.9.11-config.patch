Index: scripts/style_source.sh
===================================================================
--- scripts/style_source.sh	(revision 12913)
+++ scripts/style_source.sh	(working copy)
@@ -193,7 +193,7 @@
 
 export csource_LIST
 # Top level directory.
-csource_LIST="config.h.in"
+csource_LIST="plplot_config.h.in"
 
 # src directory
 csource_LIST="$csource_LIST src/*.[ch]"
Index: doc/Doxyfile.in
===================================================================
--- doc/Doxyfile.in	(revision 12913)
+++ doc/Doxyfile.in	(working copy)
@@ -660,7 +660,7 @@
                          "@CMAKE_SOURCE_DIR@/drivers" \
                          "@CMAKE_SOURCE_DIR@/bindings" \
                          "@CMAKE_SOURCE_DIR@/include" \
-                         "@CMAKE_BINARY_DIR@/config.h" \
+                         "@CMAKE_BINARY_DIR@/plplot_config.h" \
                          "@CMAKE_BINARY_DIR@/lib" \
                          "@CMAKE_BINARY_DIR@/bindings" \
                          "@CMAKE_BINARY_DIR@/include"
Index: doc/CMakeLists.txt
===================================================================
--- doc/CMakeLists.txt	(revision 12913)
+++ doc/CMakeLists.txt	(working copy)
@@ -60,7 +60,7 @@
   endforeach(directory ${doxygen_directories})
   # Must append one specific configured file to be consistent with
   # the INPUT parameter in Doxyfile(.in).
-  list(APPEND doxygen_globs ${CMAKE_BINARY_DIR}/config.h)
+  list(APPEND doxygen_globs ${CMAKE_BINARY_DIR}/plplot_config.h)
   #message(STATUS "DEBUG: doxygen_globs = ${doxygen_globs}")
 
   # RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} works (because that is the
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 12913)
+++ CMakeLists.txt	(working copy)
@@ -121,10 +121,10 @@
   )
 
 configure_file(
-  ${CMAKE_CURRENT_SOURCE_DIR}/config.h.in
-  ${CMAKE_CURRENT_BINARY_DIR}/config.h
+  ${CMAKE_CURRENT_SOURCE_DIR}/plplot_config.h.in
+  ${CMAKE_CURRENT_BINARY_DIR}/plplot_config.h
   )
-# Allow access to the generated config.h for this build.
+# Allow access to the generated plplot_config.h for this build.
 add_definitions("-DHAVE_CONFIG_H")
 # Install top-level files
 
Index: include/plConfig.h.in
===================================================================
--- include/plConfig.h.in	(revision 12913)
+++ include/plConfig.h.in	(working copy)
@@ -5,7 +5,7 @@
 //  IFS, University of Texas at Austin
 //  18-Jul-1994
 //
-//  Copyright (C) 2004, 2006, 2007, 2008, 2009  Alan W. Irwin
+//  Copyright (C) 2004-2013  Alan W. Irwin
 //  Copyright (C) 2004  Rafael Laboissiere
 //  Copyright (C) 2004  Joao Cardoso
 //
@@ -24,33 +24,28 @@
 //  You should have received a copy of the GNU Library General Public License
 //  along with PLplot; if not, write to the Free Software
 //  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
-//
-//
 
 // Configured (by CMake) macros for PLplot that are required for the
-// core build and the build of the installed
-// examples (and presumably any user applications).  Therefore, the
-// configured plConfig.h should be installed.  In contrast,
-// config.h.cmake (note, plConfig.h #includes config.h for
-// the core build because HAVE_CONFIG_H is #defined in that case)
-// contains configured macros that are only required for the core
-// build.  Therefore, in contrast to plConfig.h, config.h should not
-// be installed.
+// core build and the build of the installed examples (and presumably
+// any user applications).  Therefore, the configured plConfig.h
+// should be installed.  In contrast, plplot_config.h.in (note,
+// plConfig.h #includes plplot_config.h for the core build because
+// HAVE_CONFIG_H is #defined in that case) contains configured macros
+// that are only required for the core build.  Therefore, in contrast
+// to plConfig.h, plplot_config.h should not be installed.
 //
 // Maintenance issue: in makes no sense to configure duplicate macros
-// for both config.h and plConfig.h.  Therefore, when adding a macro
+// for both plplot_config.h and plConfig.h.  Therefore, when adding a macro
 // decide which file to put it in depending on whether the result is
 // needed for the installed examples build or not.  Furthermore, move
 // configured macros from one file to the other as needed depending on
 // that criterion, but do not copy them.
-//
-//
 
 #ifndef __PLCONFIG_H__
 #define __PLCONFIG_H__
 
 #ifdef HAVE_CONFIG_H
-#  include <config.h>
+#  include <plplot_config.h>
 #endif
 
 // Define if you have c++ accessible stdint.h
Index: config.h.in
===================================================================
--- config.h.in	(revision 12913)
+++ config.h.in	(working copy)
@@ -1,311 +0,0 @@
-// Configured (by CMake) macros for PLplot that are required for the
-// core build but _not_ required for the build of the installed
-// examples (and presumably any user applications).  Therefore, the
-// configured config.h should not be installed.  In contrast,
-// include/plConfig.h.cmake (note, plConfig.h #includes config.h for
-// the core build because HAVE_CONFIG_H is #defined in that case)
-// contains configured macros that are required for the core build,
-// installed examples build, and build of user applications.
-// Therefore, in contrast to config.h, plConfig.h should be installed.
-//
-// Maintenance issue: in makes no sense to configure duplicate macros
-// for both config.h and plConfig.h.  Therefore, when adding a macro
-// decide which file to put it in depending on whether the result is
-// needed for the installed examples build or not.  Furthermore, move
-// configured macros from one file to the other as needed depending on
-// that criterion, but do not copy them.
-//
-//
-
-// Location of executables
-#define BIN_DIR                  "@BIN_DIR@"
-
-// Location of Build tree
-#define BUILD_DIR                "@BUILD_DIR@"
-
-// Location of package data files
-#define DATA_DIR                 "@DATA_DIR@"
-
-// Location of dynamically loaded drivers
-#define DRV_DIR                  "@DRV_DIR@"
-
-// Name of the default cmap0 palette to use
-#define PL_DEFAULT_CMAP0_FILE    "@DEFAULT_CMAP0_FILE@"
-
-// Name of the default cmap1 palette to use
-#define PL_DEFAULT_CMAP1_FILE    "@DEFAULT_CMAP1_FILE@"
-
-// Define if support for deprecated plplot functions should be compiled
-#cmakedefine PL_DEPRECATED
-
-// Define if there is support for dynamically loaded drivers
-#cmakedefine ENABLE_DYNDRIVERS
-
-// Define to 1 if you have the <cmath> header file.
-#cmakedefine HAVE_CMATH 1
-
-// Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
-//
-#cmakedefine HAVE_DIRENT_H 1
-
-// Define to 1 if you have the <dlfcn.h> header file.
-#cmakedefine HAVE_DLFCN_H 1
-
-// Define if [freetype] is available
-#cmakedefine PL_HAVE_FREETYPE
-
-// Define if [shapelib] is available
-#cmakedefine HAVE_SHAPELIB
-
-// Define if [agg] is available
-#cmakedefine HAVE_AGG
-
-// Define to 1 if you have the <glib.h> header file.
-#cmakedefine HAVE_GLIB_H 1
-
-// Define to 1 if you have the <glib-object.h> header file.
-#cmakedefine HAVE_GLIB_OBJECT_H 1
-
-// Define to 1 if you have the <gtk/gtk.h> header file.
-#cmakedefine HAVE_GTK_GTK_H 1
-
-// Define to 1 if you have the <inttypes.h> header file.
-#cmakedefine HAVE_INTTYPES_H 1
-
-// Define if [incr], [Tcl] is available
-#cmakedefine HAVE_ITCL
-
-// Define to 1 if you have the <itclDecls.h> header file.
-#cmakedefine HAVE_ITCLDECLS_H 1
-
-// Define if Tk is available
-#cmakedefine ENABLE_tk
-
-// Define if [incr], [Tk] is available
-#cmakedefine HAVE_ITK
-
-// Define to 1 if you have the <jni.h> header file.
-#cmakedefine HAVE_JNI_H 1
-
-// Define to 1 if you have the <libart_lgpl/libart.h> header file.
-#cmakedefine HAVE_LIBART_LGPL_LIBART_H 1
-
-// Define to 1 if you have the <libgnomecanvas/libgnomecanvas.h> header file.
-//
-#cmakedefine HAVE_LIBGNOMECANVAS_LIBGNOMECANVAS_H 1
-
-// Define to 1 if you have the <libgnomeprint/gnome-print.h> header file.
-#cmakedefine HAVE_LIBGNOMEPRINT_GNOME_PRINT_H 1
-
-// Define if libunicode is available
-#cmakedefine HAVE_LIBUNICODE
-
-// Define to 1 if you have the <math.h> header file.
-#cmakedefine HAVE_MATH_H 1
-
-// Define to 1 if you have the <memory.h> header file.
-#cmakedefine HAVE_MEMORY_H 1
-
-// Define to 1 if the function mkstemp is available.
-#cmakedefine PL_HAVE_MKSTEMP 1
-
-// Define to 1 if the function mkdtemp is available.
-#cmakedefine PL_HAVE_MKDTEMP 1
-
-// Define to 1 if the function mkfifo is available.
-#cmakedefine PL_HAVE_MKFIFO 1
-
-// Define to 1 if you have the <ndir.h> header file, and it defines `DIR'.
-#cmakedefine HAVE_NDIR_H 1
-
-// Define if libpango is available
-#cmakedefine HAVE_PANGO
-
-// Define if popen is available
-#cmakedefine HAVE_POPEN
-
-// Define if _NSGetArgc is available
-#cmakedefine HAVE_NSGETARGC
-
-// Define if pthreads is available
-#cmakedefine PL_HAVE_PTHREAD
-
-// Define if Qhull is available
-#cmakedefine PL_HAVE_QHULL
-
-// Define to 1 if you have the <stdlib.h> header file.
-#cmakedefine HAVE_STDLIB_H 1
-
-// Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
-//
-#cmakedefine HAVE_SYS_DIR_H 1
-
-// Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
-//
-#cmakedefine HAVE_SYS_NDIR_H 1
-
-// Define to 1 if you have the <sys/stat.h> header file.
-#cmakedefine HAVE_SYS_STAT_H 1
-
-// Define to 1 if you have the <sys/types.h> header file.
-#cmakedefine HAVE_SYS_TYPES_H 1
-
-// Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible.
-#cmakedefine HAVE_SYS_WAIT_H 1
-
-// Define to 1 if you have the <termios.h> header file.
-#cmakedefine HAVE_TERMIOS_H 1
-
-// Define to 1 if you have the <crt_externs.h> header file.
-#cmakedefine HAVE_CRT_EXTERNS_H 1
-
-// Define to 1 if the function unlink is available
-#cmakedefine PL_HAVE_UNLINK 1
-
-// Define to 1 if you have the `vfork' function.
-#cmakedefine HAVE_VFORK 1
-
-// Define to 1 if you have the <vfork.h> header file.
-#cmakedefine HAVE_VFORK_H 1
-
-// Include sys/type.h if needed
-#cmakedefine NEED_SYS_TYPE_H
-
-// Name of package
-#define PACKAGE    "@PACKAGE@"
-
-// Define if the win32 ltdl implementation should be used
-#cmakedefine LTDL_WIN32
-
-// Portable definition for PTHREAD_MUTEX_RECURSIVE
-#define PLPLOT_MUTEX_RECURSIVE             @PLPLOT_MUTEX_RECURSIVE@
-
-// Directory containing fonts that are accessible from freetype
-#define PL_FREETYPE_FONT_DIR               "@PL_FREETYPE_FONT_DIR@"
-
-// MONO font accessible from freetype
-#define PL_FREETYPE_MONO                   "@PL_FREETYPE_MONO@"
-
-// MONO_BOLD font accessible from freetype
-#define PL_FREETYPE_MONO_BOLD              "@PL_FREETYPE_MONO_BOLD@"
-
-// MONO_BOLD_ITALIC font accessible from freetype
-#define PL_FREETYPE_MONO_BOLD_ITALIC       "@PL_FREETYPE_MONO_BOLD_ITALIC@"
-
-// MONO_BOLD_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_MONO_BOLD_OBLIQUE      "@PL_FREETYPE_MONO_BOLD_OBLIQUE@"
-
-// MONO_ITALIC font accessible from freetype
-#define PL_FREETYPE_MONO_ITALIC            "@PL_FREETYPE_MONO_ITALIC@"
-
-// MONO_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_MONO_OBLIQUE           "@PL_FREETYPE_MONO_OBLIQUE@"
-
-// SANS font accessible from freetype
-#define PL_FREETYPE_SANS                   "@PL_FREETYPE_SANS@"
-
-// SANS_BOLD font accessible from freetype
-#define PL_FREETYPE_SANS_BOLD              "@PL_FREETYPE_SANS_BOLD@"
-
-// SANS_BOLD_ITALIC font accessible from freetype
-#define PL_FREETYPE_SANS_BOLD_ITALIC       "@PL_FREETYPE_SANS_BOLD_ITALIC@"
-
-// SANS_BOLD_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SANS_BOLD_OBLIQUE      "@PL_FREETYPE_SANS_BOLD_OBLIQUE@"
-
-// SANS_ITALIC font accessible from freetype
-#define PL_FREETYPE_SANS_ITALIC            "@PL_FREETYPE_SANS_ITALIC@"
-
-// SANS_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SANS_OBLIQUE           "@PL_FREETYPE_SANS_OBLIQUE@"
-
-// SCRIPT font accessible from freetype
-#define PL_FREETYPE_SCRIPT                 "@PL_FREETYPE_SCRIPT@"
-
-// SCRIPT_BOLD font accessible from freetype
-#define PL_FREETYPE_SCRIPT_BOLD            "@PL_FREETYPE_SCRIPT_BOLD@"
-
-// SCRIPT_BOLD_ITALIC font accessible from freetype
-#define PL_FREETYPE_SCRIPT_BOLD_ITALIC     "@PL_FREETYPE_SCRIPT_BOLD_ITALIC@"
-
-// SCRIPT_BOLD_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SCRIPT_BOLD_OBLIQUE    "@PL_FREETYPE_SCRIPT_BOLD_OBLIQUE@"
-
-// SCRIPT_ITALIC font accessible from freetype
-#define PL_FREETYPE_SCRIPT_ITALIC          "@PL_FREETYPE_SCRIPT_ITALIC@"
-
-// SCRIPT_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SCRIPT_OBLIQUE         "@PL_FREETYPE_SCRIPT_OBLIQUE@"
-
-// SERIF font accessible from freetype
-#define PL_FREETYPE_SERIF                  "@PL_FREETYPE_SERIF@"
-
-// SERIF_BOLD font accessible from freetype
-#define PL_FREETYPE_SERIF_BOLD             "@PL_FREETYPE_SERIF_BOLD@"
-
-// SERIF_BOLD_ITALIC font accessible from freetype
-#define PL_FREETYPE_SERIF_BOLD_ITALIC      "@PL_FREETYPE_SERIF_BOLD_ITALIC@"
-
-// SERIF_BOLD_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SERIF_BOLD_OBLIQUE     "@PL_FREETYPE_SERIF_BOLD_OBLIQUE@"
-
-// SERIF_ITALIC font accessible from freetype
-#define PL_FREETYPE_SERIF_ITALIC           "@PL_FREETYPE_SERIF_ITALIC@"
-
-// SERIF_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SERIF_OBLIQUE          "@PL_FREETYPE_SERIF_OBLIQUE@"
-
-// Symbol font accessible from freetype
-#define PL_FREETYPE_SYMBOL                 "@PL_FREETYPE_SYMBOL@"
-
-// SYMBOL_BOLD font accessible from freetype
-#define PL_FREETYPE_SYMBOL_BOLD            "@PL_FREETYPE_SYMBOL_BOLD@"
-
-// SYMBOL_BOLD_ITALIC font accessible from freetype
-#define PL_FREETYPE_SYMBOL_BOLD_ITALIC     "@PL_FREETYPE_SYMBOL_BOLD_ITALIC@"
-
-// SYMBOL_BOLD_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SYMBOL_BOLD_OBLIQUE    "@PL_FREETYPE_SYMBOL_BOLD_OBLIQUE@"
-
-// SYMBOL_ITALIC font accessible from freetype
-#define PL_FREETYPE_SYMBOL_ITALIC          "@PL_FREETYPE_SYMBOL_ITALIC@"
-
-// SYMBOL_OBLIQUE font accessible from freetype
-#define PL_FREETYPE_SYMBOL_OBLIQUE         "@PL_FREETYPE_SYMBOL_OBLIQUE@"
-
-// Define as the return type of signal handlers (`int' or `void').
-#define RETSIGTYPE                         @RETSIGTYPE@
-
-// Location of Source tree
-#define SOURCE_DIR                         "@SOURCE_DIR@"
-
-// Define to 1 if you have the ANSI C header files.
-#cmakedefine STDC_HEADERS 1
-
-// Overall PLplot version number
-#define PLPLOT_VERSION             "@PLPLOT_VERSION@"
-
-// Location of Tcl stuff
-#define TCL_DIR                    "@TCL_DIR@"
-// Consistent package versions for Itcl and friends found by PLplot
-// If PLplot could not find consistent values these are set to 0.0.0
-#define PLPLOT_ITCL_VERSION        "@PLPLOT_ITCL_VERSION@"
-#define PLPLOT_ITK_VERSION         "@PLPLOT_ITK_VERSION@"
-#define PLPLOT_IWIDGETS_VERSION    "@PLPLOT_IWIDGETS_VERSION@"
-
-// Define if csa is desired
-#cmakedefine WITH_CSA
-
-// Define if want to use general fill_intersection_polygon approach
-// rather than the traditional code to fill the intersection of a polygon with
-// the clipping limits.
-#cmakedefine USE_FILL_INTERSECTION_POLYGON
-
-// Define to `char *' if <sys/types.h> does not define.
-#cmakedefine caddr_t
-
-// Define to `int' if <sys/types.h> does not define.
-#cmakedefine pid_t
-
-// Define as `fork' if `vfork' does not work.
-#cmakedefine vfork
Index: drivers/plplotcanvas-hacktext.c
===================================================================
--- drivers/plplotcanvas-hacktext.c	(revision 12913)
+++ drivers/plplotcanvas-hacktext.c	(working copy)
@@ -31,7 +31,7 @@
 // FIXME: TODO: Clipping
 //
 
-#include <config.h>
+#include <plplot_config.h>
 
 #include <math.h>
 #include <string.h>
Index: plplot_config.h.in
===================================================================
--- plplot_config.h.in	(revision 0)
+++ plplot_config.h.in	(revision 12914)
@@ -0,0 +1,311 @@
+// Configured (by CMake) macros for PLplot that are required for the
+// core build but _not_ required for the build of the installed
+// examples (and presumably any user applications).  Therefore, the
+// configured plplot_config.h should not be installed.  In contrast,
+// include/plConfig.h.in (note, the configured plConfig.h result
+// #includes plplot_config.h for the core build because HAVE_CONFIG_H
+// is #defined in that case) contains configured macros that are
+// required for the core build, installed examples build, and build of
+// user applications.  Therefore, in contrast to plplot_config.h,
+// plConfig.h should be installed.
+//
+// Maintenance issue: in makes no sense to configure duplicate macros
+// for both plplot_config.h and plConfig.h.  Therefore, when adding a macro
+// decide which file to put it in depending on whether the result is
+// needed for the installed examples build or not.  Furthermore, move
+// configured macros from one file to the other as needed depending on
+// that criterion, but do not copy them.
+//
+
+// Location of executables
+#define BIN_DIR                  "@BIN_DIR@"
+
+// Location of Build tree
+#define BUILD_DIR                "@BUILD_DIR@"
+
+// Location of package data files
+#define DATA_DIR                 "@DATA_DIR@"
+
+// Location of dynamically loaded drivers
+#define DRV_DIR                  "@DRV_DIR@"
+
+// Name of the default cmap0 palette to use
+#define PL_DEFAULT_CMAP0_FILE    "@DEFAULT_CMAP0_FILE@"
+
+// Name of the default cmap1 palette to use
+#define PL_DEFAULT_CMAP1_FILE    "@DEFAULT_CMAP1_FILE@"
+
+// Define if support for deprecated plplot functions should be compiled
+#cmakedefine PL_DEPRECATED
+
+// Define if there is support for dynamically loaded drivers
+#cmakedefine ENABLE_DYNDRIVERS
+
+// Define to 1 if you have the <cmath> header file.
+#cmakedefine HAVE_CMATH 1
+
+// Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
+//
+#cmakedefine HAVE_DIRENT_H 1
+
+// Define to 1 if you have the <dlfcn.h> header file.
+#cmakedefine HAVE_DLFCN_H 1
+
+// Define if [freetype] is available
+#cmakedefine PL_HAVE_FREETYPE
+
+// Define if [shapelib] is available
+#cmakedefine HAVE_SHAPELIB
+
+// Define if [agg] is available
+#cmakedefine HAVE_AGG
+
+// Define to 1 if you have the <glib.h> header file.
+#cmakedefine HAVE_GLIB_H 1
+
+// Define to 1 if you have the <glib-object.h> header file.
+#cmakedefine HAVE_GLIB_OBJECT_H 1
+
+// Define to 1 if you have the <gtk/gtk.h> header file.
+#cmakedefine HAVE_GTK_GTK_H 1
+
+// Define to 1 if you have the <inttypes.h> header file.
+#cmakedefine HAVE_INTTYPES_H 1
+
+// Define if [incr], [Tcl] is available
+#cmakedefine HAVE_ITCL
+
+// Define to 1 if you have the <itclDecls.h> header file.
+#cmakedefine HAVE_ITCLDECLS_H 1
+
+// Define if Tk is available
+#cmakedefine ENABLE_tk
+
+// Define if [incr], [Tk] is available
+#cmakedefine HAVE_ITK
+
+// Define to 1 if you have the <jni.h> header file.
+#cmakedefine HAVE_JNI_H 1
+
+// Define to 1 if you have the <libart_lgpl/libart.h> header file.
+#cmakedefine HAVE_LIBART_LGPL_LIBART_H 1
+
+// Define to 1 if you have the <libgnomecanvas/libgnomecanvas.h> header file.
+//
+#cmakedefine HAVE_LIBGNOMECANVAS_LIBGNOMECANVAS_H 1
+
+// Define to 1 if you have the <libgnomeprint/gnome-print.h> header file.
+#cmakedefine HAVE_LIBGNOMEPRINT_GNOME_PRINT_H 1
+
+// Define if libunicode is available
+#cmakedefine HAVE_LIBUNICODE
+
+// Define to 1 if you have the <math.h> header file.
+#cmakedefine HAVE_MATH_H 1
+
+// Define to 1 if you have the <memory.h> header file.
+#cmakedefine HAVE_MEMORY_H 1
+
+// Define to 1 if the function mkstemp is available.
+#cmakedefine PL_HAVE_MKSTEMP 1
+
+// Define to 1 if the function mkdtemp is available.
+#cmakedefine PL_HAVE_MKDTEMP 1
+
+// Define to 1 if the function mkfifo is available.
+#cmakedefine PL_HAVE_MKFIFO 1
+
+// Define to 1 if you have the <ndir.h> header file, and it defines `DIR'.
+#cmakedefine HAVE_NDIR_H 1
+
+// Define if libpango is available
+#cmakedefine HAVE_PANGO
+
+// Define if popen is available
+#cmakedefine HAVE_POPEN
+
+// Define if _NSGetArgc is available
+#cmakedefine HAVE_NSGETARGC
+
+// Define if pthreads is available
+#cmakedefine PL_HAVE_PTHREAD
+
+// Define if Qhull is available
+#cmakedefine PL_HAVE_QHULL
+
+// Define to 1 if you have the <stdlib.h> header file.
+#cmakedefine HAVE_STDLIB_H 1
+
+// Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
+//
+#cmakedefine HAVE_SYS_DIR_H 1
+
+// Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
+//
+#cmakedefine HAVE_SYS_NDIR_H 1
+
+// Define to 1 if you have the <sys/stat.h> header file.
+#cmakedefine HAVE_SYS_STAT_H 1
+
+// Define to 1 if you have the <sys/types.h> header file.
+#cmakedefine HAVE_SYS_TYPES_H 1
+
+// Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible.
+#cmakedefine HAVE_SYS_WAIT_H 1
+
+// Define to 1 if you have the <termios.h> header file.
+#cmakedefine HAVE_TERMIOS_H 1
+
+// Define to 1 if you have the <crt_externs.h> header file.
+#cmakedefine HAVE_CRT_EXTERNS_H 1
+
+// Define to 1 if the function unlink is available
+#cmakedefine PL_HAVE_UNLINK 1
+
+// Define to 1 if you have the `vfork' function.
+#cmakedefine HAVE_VFORK 1
+
+// Define to 1 if you have the <vfork.h> header file.
+#cmakedefine HAVE_VFORK_H 1
+
+// Include sys/type.h if needed
+#cmakedefine NEED_SYS_TYPE_H
+
+// Name of package
+#define PACKAGE    "@PACKAGE@"
+
+// Define if the win32 ltdl implementation should be used
+#cmakedefine LTDL_WIN32
+
+// Portable definition for PTHREAD_MUTEX_RECURSIVE
+#define PLPLOT_MUTEX_RECURSIVE             @PLPLOT_MUTEX_RECURSIVE@
+
+// Directory containing fonts that are accessible from freetype
+#define PL_FREETYPE_FONT_DIR               "@PL_FREETYPE_FONT_DIR@"
+
+// MONO font accessible from freetype
+#define PL_FREETYPE_MONO                   "@PL_FREETYPE_MONO@"
+
+// MONO_BOLD font accessible from freetype
+#define PL_FREETYPE_MONO_BOLD              "@PL_FREETYPE_MONO_BOLD@"
+
+// MONO_BOLD_ITALIC font accessible from freetype
+#define PL_FREETYPE_MONO_BOLD_ITALIC       "@PL_FREETYPE_MONO_BOLD_ITALIC@"
+
+// MONO_BOLD_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_MONO_BOLD_OBLIQUE      "@PL_FREETYPE_MONO_BOLD_OBLIQUE@"
+
+// MONO_ITALIC font accessible from freetype
+#define PL_FREETYPE_MONO_ITALIC            "@PL_FREETYPE_MONO_ITALIC@"
+
+// MONO_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_MONO_OBLIQUE           "@PL_FREETYPE_MONO_OBLIQUE@"
+
+// SANS font accessible from freetype
+#define PL_FREETYPE_SANS                   "@PL_FREETYPE_SANS@"
+
+// SANS_BOLD font accessible from freetype
+#define PL_FREETYPE_SANS_BOLD              "@PL_FREETYPE_SANS_BOLD@"
+
+// SANS_BOLD_ITALIC font accessible from freetype
+#define PL_FREETYPE_SANS_BOLD_ITALIC       "@PL_FREETYPE_SANS_BOLD_ITALIC@"
+
+// SANS_BOLD_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SANS_BOLD_OBLIQUE      "@PL_FREETYPE_SANS_BOLD_OBLIQUE@"
+
+// SANS_ITALIC font accessible from freetype
+#define PL_FREETYPE_SANS_ITALIC            "@PL_FREETYPE_SANS_ITALIC@"
+
+// SANS_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SANS_OBLIQUE           "@PL_FREETYPE_SANS_OBLIQUE@"
+
+// SCRIPT font accessible from freetype
+#define PL_FREETYPE_SCRIPT                 "@PL_FREETYPE_SCRIPT@"
+
+// SCRIPT_BOLD font accessible from freetype
+#define PL_FREETYPE_SCRIPT_BOLD            "@PL_FREETYPE_SCRIPT_BOLD@"
+
+// SCRIPT_BOLD_ITALIC font accessible from freetype
+#define PL_FREETYPE_SCRIPT_BOLD_ITALIC     "@PL_FREETYPE_SCRIPT_BOLD_ITALIC@"
+
+// SCRIPT_BOLD_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SCRIPT_BOLD_OBLIQUE    "@PL_FREETYPE_SCRIPT_BOLD_OBLIQUE@"
+
+// SCRIPT_ITALIC font accessible from freetype
+#define PL_FREETYPE_SCRIPT_ITALIC          "@PL_FREETYPE_SCRIPT_ITALIC@"
+
+// SCRIPT_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SCRIPT_OBLIQUE         "@PL_FREETYPE_SCRIPT_OBLIQUE@"
+
+// SERIF font accessible from freetype
+#define PL_FREETYPE_SERIF                  "@PL_FREETYPE_SERIF@"
+
+// SERIF_BOLD font accessible from freetype
+#define PL_FREETYPE_SERIF_BOLD             "@PL_FREETYPE_SERIF_BOLD@"
+
+// SERIF_BOLD_ITALIC font accessible from freetype
+#define PL_FREETYPE_SERIF_BOLD_ITALIC      "@PL_FREETYPE_SERIF_BOLD_ITALIC@"
+
+// SERIF_BOLD_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SERIF_BOLD_OBLIQUE     "@PL_FREETYPE_SERIF_BOLD_OBLIQUE@"
+
+// SERIF_ITALIC font accessible from freetype
+#define PL_FREETYPE_SERIF_ITALIC           "@PL_FREETYPE_SERIF_ITALIC@"
+
+// SERIF_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SERIF_OBLIQUE          "@PL_FREETYPE_SERIF_OBLIQUE@"
+
+// Symbol font accessible from freetype
+#define PL_FREETYPE_SYMBOL                 "@PL_FREETYPE_SYMBOL@"
+
+// SYMBOL_BOLD font accessible from freetype
+#define PL_FREETYPE_SYMBOL_BOLD            "@PL_FREETYPE_SYMBOL_BOLD@"
+
+// SYMBOL_BOLD_ITALIC font accessible from freetype
+#define PL_FREETYPE_SYMBOL_BOLD_ITALIC     "@PL_FREETYPE_SYMBOL_BOLD_ITALIC@"
+
+// SYMBOL_BOLD_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SYMBOL_BOLD_OBLIQUE    "@PL_FREETYPE_SYMBOL_BOLD_OBLIQUE@"
+
+// SYMBOL_ITALIC font accessible from freetype
+#define PL_FREETYPE_SYMBOL_ITALIC          "@PL_FREETYPE_SYMBOL_ITALIC@"
+
+// SYMBOL_OBLIQUE font accessible from freetype
+#define PL_FREETYPE_SYMBOL_OBLIQUE         "@PL_FREETYPE_SYMBOL_OBLIQUE@"
+
+// Define as the return type of signal handlers (`int' or `void').
+#define RETSIGTYPE                         @RETSIGTYPE@
+
+// Location of Source tree
+#define SOURCE_DIR                         "@SOURCE_DIR@"
+
+// Define to 1 if you have the ANSI C header files.
+#cmakedefine STDC_HEADERS 1
+
+// Overall PLplot version number
+#define PLPLOT_VERSION             "@PLPLOT_VERSION@"
+
+// Location of Tcl stuff
+#define TCL_DIR                    "@TCL_DIR@"
+// Consistent package versions for Itcl and friends found by PLplot
+// If PLplot could not find consistent values these are set to 0.0.0
+#define PLPLOT_ITCL_VERSION        "@PLPLOT_ITCL_VERSION@"
+#define PLPLOT_ITK_VERSION         "@PLPLOT_ITK_VERSION@"
+#define PLPLOT_IWIDGETS_VERSION    "@PLPLOT_IWIDGETS_VERSION@"
+
+// Define if csa is desired
+#cmakedefine WITH_CSA
+
+// Define if want to use general fill_intersection_polygon approach
+// rather than the traditional code to fill the intersection of a polygon with
+// the clipping limits.
+#cmakedefine USE_FILL_INTERSECTION_POLYGON
+
+// Define to `char *' if <sys/types.h> does not define.
+#cmakedefine caddr_t
+
+// Define to `int' if <sys/types.h> does not define.
+#cmakedefine pid_t
+
+// Define as `fork' if `vfork' does not work.
+#cmakedefine vfork

Property changes on: plplot_config.h.in
___________________________________________________________________
Added: svn:keywords
## -0,0 +1 ##
+Author Date Id Revision
\ No newline at end of property
Added: svn:eol-style
## -0,0 +1 ##
+native
\ No newline at end of property
