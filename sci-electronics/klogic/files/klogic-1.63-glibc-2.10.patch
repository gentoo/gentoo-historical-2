diff -ur klogic-1.63.orig/klogic/dlgEqu.cpp klogic-1.63/klogic/dlgEqu.cpp
--- klogic-1.63.orig/klogic/dlgEqu.cpp	2003-12-26 15:26:54.000000000 +0200
+++ klogic-1.63/klogic/dlgEqu.cpp	2009-08-09 19:40:41.000000000 +0300
@@ -404,11 +404,11 @@
 	}
 
 	// remove pre- and suffixes from the output name
-	search = strstr(buf, TYPE_INTERN);
+	search = const_cast<char*> (strstr(buf, TYPE_INTERN));
 	if (!search) {
-		search = strstr(buf, TYPE_FINAL);
+		search = const_cast<char*> (strstr(buf, TYPE_FINAL));
 		if (!search) {
-			search = strstr(buf, " = ");
+			search = const_cast<char*> (strstr(buf, " = "));
 		}
 	}
 	if (!search) {
diff -ur klogic-1.63.orig/klogic/symbolicCalc.cpp klogic-1.63/klogic/symbolicCalc.cpp
--- klogic-1.63.orig/klogic/symbolicCalc.cpp	2004-06-21 10:39:12.000000000 +0300
+++ klogic-1.63/klogic/symbolicCalc.cpp	2009-08-09 19:30:43.000000000 +0300
@@ -346,7 +346,7 @@
 // assumes that there are no parenthesis errors!
 int SymbolicCalc::needsParenthesis(const char * eq, char op)
 {
-	char *par = strchr(eq, '(');
+	char *par = const_cast<char*> (strchr(eq, '('));
 	if (!par) {
 		switch (op) {
 			case Operator::NOT:
@@ -369,7 +369,7 @@
 				break;
 		}
 	}
-	char * deq = strrchr(eq, ')');
+	char * deq = const_cast<char*> (strrchr(eq, ')'));
 	if (!deq) fatal("fatal parenthesis error in class SymbolicCalc!\n");
 	*par = 0;
 	switch (op) {
