# This file was auto-generated by running the scripts/config program. Feel free
# to change the values in here to suit your needs. Beware that running scripts/config
# again will overwrite any changes!

SHELL                  = /bin/sh

VERSION                = 7.1

# Change CADDIR to install in a different place
CADDIR                 = ${DESTDIR}/usr
BINDIR                 = ${CADDIR}/bin
LIBDIR                 = ${CADDIR}/lib
MANDIR                 = ${CADDIR}/share/man
SYSDIR                 = ${CADDIR}/share/magic/sys
SCMDIR                 = ${CADDIR}/share/magic/scm

SCRIPTS                = ${MAGICDIR}/scripts

MODULES               += readline

# Define your make environment
# MAKE                   = gmake
# MAKEFLAGS              = -j4

RM                     = rm -f
CP                     = cp
AR                     = ar
ARFLAGS                = crv
LD                     = ld -r
RANLIB                 = ranlib

CC                     = gcc
CPP                    = /lib/cpp -P -traditional
CPPFLAGS               = -I. -I${MAGICDIR} -I${MAGICDIR}/readline
DFLAGS                 = -Dlinux -DSYSV -DF_OK=0 -DW_OK=2 -D__NO_STRING_INLINES -DISC -DFILE_LOCKS -DNONMANHATTAN
CFLAGS                 = -g -march=i486 
# These CFLAGS may include switches for an optimized compile
# CFLAGS                 = -g  -m486 -O6 -fomit-frame-pointer

READLINE_DEFS          = 
READLINE_LIBS          =  -L${MAGICDIR}/readline/readline -lreadline -ltermcap

DEPEND_FLAG            = -MM
DEPEND_FILE            = Depend

GR_CFLAGS              = -DX11 -DXLIB -I/usr/X11R6/include
GR_LIBS                =  -lX11 -L/usr/X11R6/lib/ -lbsd
GR_SRCS                =  ${X11_SRCS}
GR_HELPER_SRCS         =  ${X11HELPER_SRCS}
GR_HELPER_PROG         =  ${X11HELP_PROG}

# Set your .magic to be installed
#   proto.magic     - original
#   proto.magic.new - with X11 extensions
#   proto.magic-scm - load scheme extensions
DOT_MAGIC_FILES        = proto.magic.new proto.magic-scm

OBJS      = ${SRCS:.c=.o}
LIB_OBJS  = ${LIB_SRCS:.c=.o}
CLEANS    = ${OBJS} ${LIB_OBJS} lib${MODULE}.a lib${MODULE}.o ${MODULE}
