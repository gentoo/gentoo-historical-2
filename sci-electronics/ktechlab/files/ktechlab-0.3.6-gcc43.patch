diff -Naurd ktechlab-0.3.orig/src/cells.h ktechlab-0.3/src/cells.h
--- ktechlab-0.3.orig/src/cells.h	2005-12-30 14:22:12.000000000 +0300
+++ ktechlab-0.3/src/cells.h	2008-11-08 03:28:22.000000000 +0300
@@ -52,6 +52,9 @@
 /**
 @author David Saxton
 */
+
+typedef unsigned int uint;
+
 class Cells
 {
 public:
diff -Naurd ktechlab-0.3.orig/src/cnitem.cpp ktechlab-0.3/src/cnitem.cpp
--- ktechlab-0.3.orig/src/cnitem.cpp	2005-12-30 14:22:12.000000000 +0300
+++ ktechlab-0.3/src/cnitem.cpp	2008-11-08 03:27:01.000000000 +0300
@@ -65,8 +65,8 @@
 
 bool CNItem::preResize( QRect sizeRect )
 {
-	if ( (std::abs(sizeRect.width()) < minimumSize().width()) ||
-		 (std::abs(sizeRect.height()) < minimumSize().height()) )
+	if ( (std::abs((double)sizeRect.width()) < minimumSize().width()) ||
+		 (std::abs((double)sizeRect.height()) < minimumSize().height()) )
 		return false;
 	
 	updateConnectorPoints(false);
diff -Naurd ktechlab-0.3.orig/src/conrouter.cpp ktechlab-0.3/src/conrouter.cpp
--- ktechlab-0.3.orig/src/conrouter.cpp	2005-12-30 14:22:12.000000000 +0300
+++ ktechlab-0.3/src/conrouter.cpp	2008-11-08 03:22:28.000000000 +0300
@@ -492,7 +492,7 @@
 	{
 		for ( int x = start; x!=end; x+=dd )
 		{
-			if ( std::abs(x-start)>1 && std::abs(x-end)>1 && ((*cells)[x][y].CIpenalty > maxCIScore || (*cells)[x][y].Cpenalty > maxConScore) )
+			if ( std::abs((double)(x-start))>1 && std::abs((double)(x-end))>1 && ((*cells)[x][y].CIpenalty > maxCIScore || (*cells)[x][y].Cpenalty > maxConScore) )
 			{
 				return false;
 			} else {
@@ -504,7 +504,7 @@
 	{
 		for ( int y = start; y!=end; y+=dd )
 		{
-			if ( std::abs(y-start)>1 && std::abs(y-end)>1 && ((*cells)[x][y].CIpenalty > maxCIScore || (*cells)[x][y].Cpenalty > maxConScore) )
+			if ( std::abs((double)(y-start))>1 && std::abs((double)(y-end))>1 && ((*cells)[x][y].CIpenalty > maxCIScore || (*cells)[x][y].Cpenalty > maxConScore) )
 			{
 				return false;
 			} else {
diff -Naurd ktechlab-0.3.orig/src/electronics/simulation/matrix.cpp ktechlab-0.3/src/electronics/simulation/matrix.cpp
--- ktechlab-0.3.orig/src/electronics/simulation/matrix.cpp	2005-12-30 14:22:06.000000000 +0300
+++ ktechlab-0.3/src/electronics/simulation/matrix.cpp	2008-11-08 03:28:51.000000000 +0300
@@ -288,7 +288,7 @@
 Map::Map( const uint size )
 {
 	m_size = size;
-	m_map = new ETMap( m_size, m_size );
+	m_map = new ETMap( m_size );
 	reset();
 }
 
diff -Naurd ktechlab-0.3.orig/src/nodegroup.cpp ktechlab-0.3/src/nodegroup.cpp
--- ktechlab-0.3.orig/src/nodegroup.cpp	2005-12-30 14:22:12.000000000 +0300
+++ ktechlab-0.3/src/nodegroup.cpp	2008-11-08 03:25:27.000000000 +0300
@@ -16,6 +16,7 @@
 
 #include <kdebug.h>
 #include <assert.h>
+#include <cmath>
 
 NodeGroup::NodeGroup( ICNDocument *icnDocument, const char *name )
 	: QObject( icnDocument, name )
@@ -274,7 +275,7 @@
 		{
 			if ( *it1 != *it2 && (*it1)->y() == (*it2)->y() && canRoute( *it1, *it2 ) )
 			{
-				const int distance = std::abs(int( (*it1)->x()-(*it2)->x() ));
+				const int distance = std::abs((double)( (*it1)->x()-(*it2)->x() ));
 				if ( distance < shortest )
 				{
 					shortest = distance;
@@ -296,7 +297,7 @@
 		{
 			if ( *it1 != *it2 && (*it1)->x() == (*it2)->x() && canRoute( *it1, *it2 ) )
 			{
-				const int distance = std::abs(int( (*it1)->y()-(*it2)->y() ));
+				const int distance = std::abs((double)( (*it1)->y()-(*it2)->y() ));
 				if ( distance < shortest )
 				{
 					shortest = distance;
@@ -320,7 +321,7 @@
 			{
 				const int dx = (int)((*it1)->x()-(*it2)->x());
 				const int dy = (int)((*it1)->y()-(*it2)->y());
-				const int distance = std::abs(dx) + std::abs(dy);
+				const int distance = std::abs((double)dx) + std::abs((double)dy);
 				if ( distance < shortest )
 				{
 					shortest = distance;
