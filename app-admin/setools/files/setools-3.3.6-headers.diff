diff -purN setools-3.3.6.orig/libqpol/include/qpol/Makefile.am setools-3.3.6/libqpol/include/qpol/Makefile.am
--- setools-3.3.6.orig/libqpol/include/qpol/Makefile.am	2009-07-14 11:03:27.000000000 -0700
+++ setools-3.3.6/libqpol/include/qpol/Makefile.am	2009-09-20 15:15:00.362508234 -0700
@@ -17,7 +17,7 @@ qpol_HEADERS = \
 	netifcon_query.h \
 	nodecon_query.h \
 	permissive_query.h \
-	polcap_query.h
+	polcap_query.h \
 	policy.h \
 	policy_extend.h \
 	portcon_query.h \
diff -purN setools-3.3.6.orig/libseaudit/include/seaudit/avc_message.h setools-3.3.6/libseaudit/include/seaudit/avc_message.h
--- setools-3.3.6.orig/libseaudit/include/seaudit/avc_message.h	2009-07-16 07:41:36.000000000 -0700
+++ setools-3.3.6/libseaudit/include/seaudit/avc_message.h	2009-09-20 14:57:57.294509062 -0700
@@ -104,7 +104,7 @@ extern "C"
  * @return Source target, or NULL upon error or if unknown.  Do not
  * free() this string.
  */
-	extern const char *seaudit_avc_message_get_source__mls_lvl(const seaudit_avc_message_t * avc);
+	extern const char *seaudit_avc_message_get_source_mls_lvl(const seaudit_avc_message_t * avc);
 	
 /**
  * Return the source context's mls clearance of an avc message.
@@ -114,7 +114,7 @@ extern "C"
  * @return Source target, or NULL upon error or if unknown.  Do not
  * free() this string.
  */
-	extern const char *seaudit_avc_message_get_source__mls_clr(const seaudit_avc_message_t * avc);	
+	extern const char *seaudit_avc_message_get_source_mls_clr(const seaudit_avc_message_t * avc);	
 
 /**
  * Return the target context's user of an avc message.
diff -purN setools-3.3.6.orig/seaudit/toplevel.h setools-3.3.6/seaudit/toplevel.h
--- setools-3.3.6.orig/seaudit/toplevel.h	2009-07-16 07:41:36.000000000 -0700
+++ setools-3.3.6/seaudit/toplevel.h	2009-09-20 15:04:48.770508867 -0700
@@ -155,28 +155,28 @@ apol_vector_t *toplevel_get_log_roles(to
 apol_vector_t *toplevel_get_log_types(toplevel_t * top);
 
 /**
- * Return a vector of strings corresponding to all mls
- * levels found within the current log file.  
- * The vector will be sorted alphabetically.
+ * Return a vector of strings corresponding to all mls levels
+ * found within currently opened log files.  The vector will be sorted
+ * alphabetically.
  *
  * @param top Toplevel containing seaudit log object.
  *
  * @return Vector of sorted types, or NULL if no log is loaded.  The
  * caller must call apol_vector_destroy() upon the return value.
  */
-apol_vector_t *toplevel_get_log_clr(toplevel_t * top);
+apol_vector_t *toplevel_get_log_mls_lvl(toplevel_t * top);
 
 /**
- * Return a vector of strings corresponding to all mls
- * clearance found within the current log file.  
- * The vector will be sorted alphabetically.
+ * Return a vector of strings corresponding to all mls clearance
+ * found within currently opened log files.  The vector will be sorted
+ * alphabetically.
  *
  * @param top Toplevel containing seaudit log object.
  *
  * @return Vector of sorted types, or NULL if no log is loaded.  The
  * caller must call apol_vector_destroy() upon the return value.
  */
-apol_vector_t *toplevel_get_log_clr(toplevel_t * top);
+apol_vector_t *toplevel_get_log_mls_clr(toplevel_t * top);
 
 /**
  * Return a vector of strings corresponding to all object classes
