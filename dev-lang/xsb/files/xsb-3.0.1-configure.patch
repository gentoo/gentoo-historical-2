--- XSB.orig/build/configure.in	2006-06-25 13:08:48.000000000 +1200
+++ XSB/build/configure.in	2007-02-08 21:01:15.000000000 +1300
@@ -258,9 +258,9 @@
 dnl prefix given by the user. The prefix variable will later get
 dnl the <xsb-version> subdirectory added in.
 orig_prefix=
-if test "$prefix" = "NONE" -o -z "$prefix" ; then
+if test true ; then
+    install_prefix=$prefix/lib/xsb
     prefix=$topdir
-    orig_prefix=$prefix
 else
     dnl strip any trailing slashes in prefix
     prefix=`echo "${prefix}" | sed 's,\([[^/]]\)/*$,\1,'`
@@ -321,7 +321,7 @@
 fi
 
 config_prefix=${topdir}/config
-install_config_prefix=${prefix}/config
+install_config_prefix=${install_prefix}/config
 
 if test "$config_tag" != "NONE" -a -n "$config_tag" ; then
     config_tag="-$config_tag"
@@ -431,11 +431,11 @@
     config_dot_h_templ=def_config.in
 
     dnl Check configuration for a Unix variant
-    if test "$configuration" = "NONE" ; then
-        echo '
-- You did not tell me what kind of host system you want to configure.
-- I will attempt to guess the kind of system this is.
-' 1>&6
+    if test "NONE$configuration" = "NONE" ; then
+#        echo '
+#- You did not tell me what kind of host system you want to configure.
+#- I will attempt to guess the kind of system this is.
+#' 1>&6
         AC_CANONICAL_HOST
         canonical=$host
         configuration=$host_alias
@@ -502,7 +502,7 @@
 
 # site-specific directories
 # where the site is
-test "$site_prefix" = "NONE" && site_prefix=${orig_prefix}/site
+test "NONE$site_prefix" = "NONE" && site_prefix=${install_prefix}/site
 # site-specific config-independent XSB libraries
 site_libdir=${site_prefix}/lib
 # site-specific config-dependent stuff goes
@@ -511,17 +511,17 @@
 site_config_libdir=${site_config_prefix}/lib
 
 # Installation directories: We only check if they exist
-install_libdir=${prefix}/lib
-install_syslibdir=${prefix}/syslib
-install_cmplibdir=${prefix}/cmplib
-install_emudir=${prefix}/emu
-install_scriptdir=${prefix}/bin     # where the xsb invocation script goes
-install_builddir=${prefix}/build    # where the config detection scripts go
-install_prolog_includes=${prefix}/prolog_includes
-install_pkgdir=${prefix}/packages
-install_pkgxmcdir=${prefix}/packages/xmc
-install_examples=${prefix}/examples
-install_etcdir=${prefix}/etc
+install_libdir=${install_prefix}/lib
+install_syslibdir=${install_prefix}/syslib
+install_cmplibdir=${install_prefix}/cmplib
+install_emudir=${install_prefix}/emu
+install_scriptdir=${install_prefix}/bin     # where the xsb invocation script goes
+install_builddir=${install_prefix}/build    # where the config detection scripts go
+install_prolog_includes=${install_prefix}/prolog_includes
+install_pkgdir=${install_prefix}/packages
+install_pkgxmcdir=${install_prefix}/packages/xmc
+install_examples=${install_prefix}/examples
+install_etcdir=${install_prefix}/etc
 
 arch_install_config_prefix=${install_config_prefix}/${full_config_name}
 arch_install_bindir=${arch_install_config_prefix}/bin
@@ -550,7 +550,7 @@
   rm -f  buildxsb.lock
   exit 1
 fi
-
+if false ; then
 # Test if directories exist
 echo "Checking installation directories..."
 
@@ -670,7 +670,7 @@
 test -f .missingdirs.tmp && exit 1
 
 echo "Checking installation directories ... Done"
-
+fi
 
 AC_PROG_CC
 AC_PROG_CPP
@@ -1024,11 +1024,11 @@
 #	    with_odbc=no
 #	else
 #	    AC_DEFINE(XSB_ODBC)
-        cat <<EOT
-
-Building with support for ODBC
-
-EOT
+#        cat <<EOT
+#
+#Building with support for ODBC
+#
+#EOT
 #	fi
 #	dnl restore CPPFLAGS
 #	CPPFLAGS="${saved_cpp_flags}"
@@ -1132,8 +1132,8 @@
 AC_SUBST(perl_ccflags)
 AC_SUBST(perl_libs)
 
-
-# Java support
+if test "${with_interprolog}" = "yes"; then
+if test "x$JAVAC" = x; then
 AC_CHECK_PROG(java_support, javac, "yes", "no")
 if test "${java_support}" = "yes"; then
     dnl after AC_CHECK_PROG, ac_dir holds the directory where javac is found
@@ -1141,17 +1141,20 @@
 else
     javac=javac
 fi
-
+else
+  javac="$JAVAC"
+  java_support=yes
+fi
 AC_SUBST(javac)
 AC_SUBST(java_support)
 
-AC_PATH_PROG(java_path,javac,no)
-java_path=`dirname $java_path`
+#AC_PATH_PROG(java_path,javac,no)
+java_path=`dirname $javac`
 java_path=`dirname $java_path`
 java_path=$java_path/include
 #java_path=`echo $java_path | sed 's,bin/javac,include,' `
 
-if test "${with_interprolog}" = "yes"; then
+#if test "${with_interprolog}" = "yes"; then
     if test "${java_support}" != "yes"; then
         echo "Interprolog not supported due to failure to find Java"
         with_interprolog=""
@@ -1175,14 +1178,14 @@
 if test "${enable_profile}" = "yes"; then
     AC_DEFINE(DEBUG)
     AC_DEFINE(PROFILE)
-    do_debugging=yes
+#    do_debugging=yes
 fi
 
 if test "${enable_debug}" = "yes"; then
     AC_DEFINE(NON_OPT_COMPILE)
     AC_DEFINE(DEBUG)
 dnl    AC_DEFINE(CP_DEBUG)
-    do_debugging=yes
+#    do_debugging=yes
 fi
 
 if test "${enable_debug_verbose}" = "yes"; then
@@ -1547,20 +1550,22 @@
 #fi
 
 # dnl ODBC library
-if test "${with_odbc}" = yes ; then
+#if test "${with_odbc}" = yes ; then
    case "$canonical" in
     *-cygwin*)  LDFLAGS="-lodbc32 ${LDFLAGS}"
                 LINKFLAGS="-lodbc32 ${LINKFLAGS}"
         ;;
-    *)          if test -n "${with_iodbc}"; then
-                    LDFLAGS="-liodbc ${LDFLAGS}"
-                    LINKFLAGS="-liodbc ${LINKFLAGS}"
-                else
-                    LDFLAGS="-lodbc ${LDFLAGS}"
-                    LINKFLAGS="-lodbc ${LINKFLAGS}"
+    *)          if test "${with_iodbc}" = "yes"; then
+                    ODBC_CFLAGS="$(iodbc-config --cflags)"
+                    LDFLAGS="$(iodbc-config --libs) ${LDFLAGS}"
+#                    LINKFLAGS="-liodbc ${LINKFLAGS}"
+                elif test "${with_odbc}" = "yes"; then
+                    ODBC_CFLAGS="$(odbc_config --cflags)"
+                    LDFLAGS="$(odbc_config --libs) ${LDFLAGS}"
+#                    LINKFLAGS="-lodbc ${LINKFLAGS}"
                 fi
     esac
-fi
+#fi
 
 # this is needed for -mno-cygwin dll compilation
 DLLTYPE=nodll
@@ -1696,6 +1701,7 @@
 
 AC_SUBST(ODBCSRC)
 AC_SUBST(ODBCOBJ)
+AC_SUBST(ODBC_CFLAGS)
 AC_SUBST(INTERPROLOGSRC)
 AC_SUBST(INTERPROLOGOBJ)
 AC_SUBST(mno_cyg_inclib)
@@ -1726,11 +1732,11 @@
 AC_SUBST(xsb_asm_extension)
 AC_SUBST(xsb_dcl_extension)
 
-AC_OUTPUT([ ${arch_config_prefix}/topMakefile:topMakefile.in
-        ${arch_config_prefix}/emuMakefile:emuMakefile.in
-        ${arch_config_prefix}/modMakefile:modMakefile.in
-        ${arch_config_prefix}/gppMakefile:gppMakefile.in
-        ${arch_config_prefix}/smoMakefile:smoMakefile.in
+AC_OUTPUT([ ${build_dir}/Makefile:topMakefile.in
+        ${emudir}/Makefile:emuMakefile.in
+        ${build_dir}/modMakefile:modMakefile.in
+        ${topdir}/gpp/Makefile:gppMakefile.in
+        ${build_dir}/smoMakefile:smoMakefile.in
         ${arch_config_prefix}/makedef.sh:makedef.sh.in
         ${arch_config_file}:${configuration_templ}
         makexsb:makexsb.in
@@ -1854,10 +1860,10 @@
 
 # This is needed so that *after* XSB is installed in a common directory,
 # users could compile packages that produce arch-specific code.
-chmod 777 ${site_config_libdir};
-chmod a+t ${site_config_libdir};
-chmod 777 ${arch_install_config_libdir};
-chmod a+t ${arch_install_config_libdir};
+# chmod 777 ${site_config_libdir};
+# chmod a+t ${site_config_libdir};
+# chmod 777 ${arch_install_config_libdir};
+# chmod a+t ${arch_install_config_libdir};
 
 
 dnl Add site dynamic libraries to XSB library path
@@ -1904,9 +1910,9 @@
 # configuring for Windows over Samba, NFS, etc.
 chmod 644 ${arch_config_file} \
       ${arch_config_prefix}/xsb_config.h \
-      ${arch_config_prefix}/xsb_debug.h \
-      ${arch_config_prefix}/*Makefile \
-      ${arch_config_prefix}/MSVC*
+      ${arch_config_prefix}/xsb_debug.h
+#      ${arch_config_prefix}/*Makefile \
+#      ${arch_config_prefix}/MSVC*
 
 
 # phantom private_builtin.c file
