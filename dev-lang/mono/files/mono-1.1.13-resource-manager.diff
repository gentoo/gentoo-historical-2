diff -aur mono-1.1.13-orig/mcs/class/corlib/corlib_test.dll.sources mono-1.1.13/mcs/class/corlib/corlib_test.dll.sources
--- mono-1.1.13-orig/mcs/class/corlib/corlib_test.dll.sources	2005-12-15 09:53:24.000000000 -0800
+++ mono-1.1.13/mcs/class/corlib/corlib_test.dll.sources	2006-01-13 14:34:40.000000000 -0800
@@ -120,6 +120,7 @@
 System.Reflection/StrongNameKeyPairTest.cs
 System/ResolveEventArgsTest.cs
 System.Resources/ResourceReaderTest.cs
+System.Resources/ResourceManagerTest.cs
 System.Runtime.CompilerServices/RuntimeHelpersTest.cs
 System.Runtime.InteropServices/GCHandleTest.cs
 System.Runtime.InteropServices/MarshalTest.cs
diff -aur mono-1.1.13-orig/mcs/class/corlib/System.Resources/ResourceManager.cs mono-1.1.13/mcs/class/corlib/System.Resources/ResourceManager.cs
--- mono-1.1.13-orig/mcs/class/corlib/System.Resources/ResourceManager.cs	2005-06-23 16:11:11.000000000 -0700
+++ mono-1.1.13/mcs/class/corlib/System.Resources/ResourceManager.cs	2006-01-13 14:34:40.000000000 -0800
@@ -9,7 +9,7 @@
 //
 
 //
-// Copyright (C) 2004 Novell, Inc (http://www.novell.com)
+// Copyright (C) 2004, 2005 Novell, Inc (http://www.novell.com)
 //
 // Permission is hereby granted, free of charge, to any person obtaining
 // a copy of this software and associated documentation files (the
@@ -161,44 +161,37 @@
 			return(GetObject(name, null));
 		}
 
-		public virtual object GetObject(string name, CultureInfo culture)
+		public virtual object GetObject (string name, CultureInfo culture)
 		{
-			if(name==null) {
-				throw new ArgumentNullException("name is null");
+			if (name == null) {
+				throw new ArgumentNullException("name");
 			}
 
-			if(culture==null) {
-				culture=CultureInfo.CurrentUICulture;
+			if (culture == null) {
+				culture = CultureInfo.CurrentUICulture;
 			}
 
-			lock(this) {
-				ResourceSet set=InternalGetResourceSet(culture, true, true);
-				object obj=null;
+			lock (this) {
+				while (true) {
+
+					ResourceSet set = InternalGetResourceSet (culture, true, true);
 				
-				if(set != null) {
-					obj=set.GetObject(name, ignoreCase);
-					if(obj != null) {
-						return(obj);
+					if (set != null) {
+						object obj = set.GetObject(name, ignoreCase);
+						if (obj != null) {
+							return obj;
+						}
 					}
-				}
-				
-				/* Try parent cultures */
 
-				do {
-					culture=culture.Parent;
+					if (culture == neutral_culture ||
+					    culture == CultureInfo.InvariantCulture)
+						break;
 
-					set=InternalGetResourceSet(culture, true, true);
-					if(set!=null) {
-						obj=set.GetObject(name, ignoreCase);
-						if(obj != null) {
-							return(obj);
-						}
-					}
-				} while(!culture.Equals(neutral_culture) &&
-					!culture.Equals(CultureInfo.InvariantCulture));
+					culture = culture.Parent;
+				}
 			}
 			
-			return(null);
+			return null;
 		}
 		
 		
@@ -223,41 +216,33 @@
 		public virtual string GetString (string name, CultureInfo culture)
 		{
 			if (name == null) {
-				throw new ArgumentNullException ("Name is null.");
+				throw new ArgumentNullException ("name");
 			}
 
-			if(culture==null) {
-				culture=CultureInfo.CurrentUICulture;
+			if(culture == null) {
+				culture = CultureInfo.CurrentUICulture;
 			}
 
-			lock(this) {
-				ResourceSet set=InternalGetResourceSet(culture, true, true);
-				string str=null;
+			lock (this) {
+				while (true) {
+					ResourceSet set = InternalGetResourceSet (culture, true, true);
 
-				if(set!=null) {
-					str=set.GetString(name, ignoreCase);
-					if(str!=null) {
-						return(str);
+					if (set != null) {
+						string str = set.GetString (name, ignoreCase);
+						if (str != null) {
+							return str;
+						}
 					}
-				}
-
-				/* Try parent cultures */
 
-				do {
-					culture=culture.Parent;
+					if (culture == neutral_culture ||
+					    culture == CultureInfo.InvariantCulture)
+						break;
 
-					set=InternalGetResourceSet(culture, true, true);
-					if(set!=null) {
-						str=set.GetString(name, ignoreCase);
-						if(str!=null) {
-							return(str);
-						}
-					}
-				} while(!culture.Equals(neutral_culture) &&
-					!culture.Equals(CultureInfo.InvariantCulture));
+					culture = culture.Parent;
+				}
 			}
 			
-			return(null);
+			return null;
 		}
 
 		protected virtual string GetResourceFileName (CultureInfo culture)
