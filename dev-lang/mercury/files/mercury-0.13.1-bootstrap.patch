--- mercury-compiler-0.13.1.orig/configure	2006-12-01 22:37:01.000000000 +1300
+++ mercury-compiler-0.13.1/configure	2006-12-04 20:50:57.000000000 +1300
@@ -7410,21 +7410,21 @@
 
 echo "$as_me:$LINENO: result: $mercury_cv_unboxed_floats" >&5
 echo "${ECHO_T}$mercury_cv_unboxed_floats" >&6
-if test "$mercury_cv_unboxed_floats" = yes; then
-	if test "$BOOTSTRAP_MC" = ""; then
-		{ echo "$as_me:$LINENO: WARNING: Mercury compiler not yet installed -
-****	cannot use unboxed floats, bootstrapping using boxed floats
-****	after installation is complete you may want to reinstall
-****	from scratch so you can use unboxed floats, which are more
-****	efficient." >&5
-echo "$as_me: WARNING: Mercury compiler not yet installed -
-****	cannot use unboxed floats, bootstrapping using boxed floats
-****	after installation is complete you may want to reinstall
-****	from scratch so you can use unboxed floats, which are more
-****	efficient." >&2;}
-		mercury_cv_unboxed_floats=no
-	fi
-fi
+#if test "$mercury_cv_unboxed_floats" = yes; then
+#	if test "$BOOTSTRAP_MC" = ""; then
+#		{ echo "$as_me:$LINENO: WARNING: Mercury compiler not yet installed -
+#****	cannot use unboxed floats, bootstrapping using boxed floats
+#****	after installation is complete you may want to reinstall
+#****	from scratch so you can use unboxed floats, which are more
+#****	efficient." >&5
+#echo "$as_me: WARNING: Mercury compiler not yet installed -
+#****	cannot use unboxed floats, bootstrapping using boxed floats
+#****	after installation is complete you may want to reinstall
+#****	from scratch so you can use unboxed floats, which are more
+#****	efficient." >&2;}
+#		mercury_cv_unboxed_floats=no
+#	fi
+#fi
 if test "$mercury_cv_unboxed_floats" = yes; then
 	HAVE_BOXED_FLOATS="--unboxed-float"
 else
@@ -8980,34 +8980,34 @@
 
 if test "$BEST_GRADE_FOR_COMPILER" != "$BOOTSTRAP_GRADE"; then
 	if test "$BOOTSTRAP_MC" = ""; then
-		GRADE="$BOOTSTRAP_GRADE"
-		{ echo "$as_me:$LINENO: WARNING: Mercury compiler not yet installed
-****	cannot use grade \`$BEST_GRADE_FOR_COMPILER'
-****	using grade \`$GRADE' to compile the compiler
-****	after installation is complete you should reinstall
-****	from scratch so you can use the more efficient
-****	grade \`$BEST_GRADE_FOR_COMPILER'." >&5
-echo "$as_me: WARNING: Mercury compiler not yet installed
-****	cannot use grade \`$BEST_GRADE_FOR_COMPILER'
-****	using grade \`$GRADE' to compile the compiler
-****	after installation is complete you should reinstall
-****	from scratch so you can use the more efficient
-****	grade \`$BEST_GRADE_FOR_COMPILER'." >&2;}
-
+		if test "$BOOTSTRAP_STAGE" = "1"; then
+			GRADE="$BOOTSTRAP_GRADE"
+		else
+			GRADE=$BEST_GRADE_FOR_COMPILER
+			find library compiler browser mdbcomp analysis \
+				profiler deep_profiler slice \
+				-name \*.c -o -name \*.c_date | \
+				xargs rm > /dev/null 2>&1
+			find -name \*.o -o -name \*.pic_o -o \
+				-name \*.a -o -name \*.so | \
+				xargs rm > /dev/null 2>&1
+			rm -f compiler/mercury_compile profiler/mercury_profile
+		fi
 	else
-		GRADE=$BEST_GRADE_FOR_COMPILER
-		echo "using grade \`$GRADE' to compile the compiler
-	compiler and library will be rebuilt with new grade
-	installation may take a long time" 1>&6
-		find library compiler browser mdbcomp analysis \
-			profiler deep_profiler \
-			-name \*.c -o -name \*.c_date | \
-			xargs rm > /dev/null 2>&1
+		if test "$BOOTSTRAP_STAGE" = "1"; then
+			GRADE=$BEST_GRADE_FOR_COMPILER
+			find library compiler browser mdbcomp analysis \
+				profiler deep_profiler slice \
+				-name \*.c -o -name \*.c_date | \
+				xargs rm > /dev/null 2>&1
+		else
+			GRADE=$BEST_GRADE_FOR_COMPILER
+		fi
 	fi
 else
 	GRADE=$BEST_GRADE_FOR_COMPILER
-	echo "using grade \`$GRADE' to compile the compiler" 1>&6
 fi
+echo "using grade \`$GRADE' to compile the compiler" 1>&6
 
 
 #-----------------------------------------------------------------------------#
@@ -10222,12 +10222,12 @@
 
 fi
 #-----------------------------------------------------------------------------#
-if test "$BOOTSTRAP_MC" = ""; then
-	BOOTSTRAP_MC=mmc
-fi
-BOOTSTRAP_MC_COMPILER="$BOOTSTRAP_MC"
-BOOTSTRAP_MC_ARGS="$HAVE_BOXED_FLOATS --conf-low-tag-bits $LOW_TAG_BITS --bits-per-word $BITS_PER_WORD --bytes-per-word $BYTES_PER_WORD"
-BOOTSTRAP_MC="$BOOTSTRAP_MC_COMPILER $BOOTSTRAP_MC_ARGS"
+#if test "$BOOTSTRAP_MC" = ""; then
+#	BOOTSTRAP_MC=mmc
+#fi
+#BOOTSTRAP_MC_COMPILER="$BOOTSTRAP_MC"
+#BOOTSTRAP_MC_ARGS="$HAVE_BOXED_FLOATS --conf-low-tag-bits $LOW_TAG_BITS --bits-per-word $BITS_PER_WORD --bytes-per-word $BYTES_PER_WORD"
+#BOOTSTRAP_MC="$BOOTSTRAP_MC_COMPILER $BOOTSTRAP_MC_ARGS"
 
 
 
@@ -12260,6 +12260,13 @@
     rm -f confscratch $to_delete
 fi
 #-----------------------------------------------------------------------------#
+if test "$BOOTSTRAP_MC" = ""; then
+	BOOTSTRAP_MC=mmc
+fi
+BOOTSTRAP_MC_COMPILER="$BOOTSTRAP_MC"
+BOOTSTRAP_MC_ARGS="$HAVE_BOXED_FLOATS --conf-low-tag-bits $LOW_TAG_BITS --bits-per-word $BITS_PER_WORD --bytes-per-word $BYTES_PER_WORD"
+BOOTSTRAP_MC="$BOOTSTRAP_MC_COMPILER $BOOTSTRAP_MC_ARGS"
+#-----------------------------------------------------------------------------#
 
 echo "$as_me:$LINENO: checking for C shell executable" >&5
 echo $ECHO_N "checking for C shell executable... $ECHO_C" >&6
