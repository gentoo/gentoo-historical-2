diff -ur tuprolog.orig/src/alice/tuprolog/ChoicePointStore.java tuprolog/src/alice/tuprolog/ChoicePointStore.java
--- tuprolog.orig/src/alice/tuprolog/ChoicePointStore.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/tuprolog/ChoicePointStore.java	2010-09-08 20:02:31.000000000 +1200
@@ -35,7 +35,6 @@
 	
 	/**
 	 * Return the actual choice-point store
-	 * @return
 	 */
 	public ChoicePointContext getPointer() {
 		return pointer;
@@ -44,7 +43,6 @@
 	/**
 	 * Check if a choice point exists in the store.
 	 * As a side effect, removes choice points which have been already used and are now empty. 
-	 * @return
 	 */
 	protected boolean existChoicePoint() {
 		if (pointer == null) return false;
diff -ur tuprolog.orig/src/alice/tuprolog/ClauseStore.java tuprolog/src/alice/tuprolog/ClauseStore.java
--- tuprolog.orig/src/alice/tuprolog/ClauseStore.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/tuprolog/ClauseStore.java	2010-09-08 20:04:18.000000000 +1200
@@ -58,8 +58,6 @@
 	
 	/**
 	 * Verify if there is a term in compatibleGoals compatible with goal. 
-	 * @param goal
-	 * @param compGoals
 	 * @return true if compatible or false otherwise.
 	 */
 	protected boolean existCompatibleClause() {
diff -ur tuprolog.orig/src/alice/tuprolog/EngineManager.java tuprolog/src/alice/tuprolog/EngineManager.java
--- tuprolog.orig/src/alice/tuprolog/EngineManager.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/tuprolog/EngineManager.java	2010-09-08 20:05:24.000000000 +1200
@@ -87,7 +87,7 @@
 	/**
 	 *  Solves a query
 	 *
-	 * @param g the term representing the goal to be demonstrated
+	 * @param query the term representing the goal to be demonstrated
 	 * @return the result of the demonstration
 	 * @see SolveInfo
 	 **/
diff -ur tuprolog.orig/src/alice/tuprolog/PrimitiveManager.java tuprolog/src/alice/tuprolog/PrimitiveManager.java
--- tuprolog.orig/src/alice/tuprolog/PrimitiveManager.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/tuprolog/PrimitiveManager.java	2010-09-08 20:06:12.000000000 +1200
@@ -87,7 +87,7 @@
 	 * This involves identifying structs representing builtin
 	 * predicates and functors, and setting up related structures and links
 	 *
-	 * @parm term the term to be identified
+	 * @param term the term to be identified
 	 * @return term with the identified built-in directive
 	 */
 	public Term identifyDirective(Term term) {
diff -ur tuprolog.orig/src/alice/tuprolog/lib/BasicLibrary.java tuprolog/src/alice/tuprolog/lib/BasicLibrary.java
--- tuprolog.orig/src/alice/tuprolog/lib/BasicLibrary.java	2010-05-28 10:11:46.000000000 +1200
+++ tuprolog/src/alice/tuprolog/lib/BasicLibrary.java	2010-09-08 20:06:48.000000000 +1200
@@ -109,7 +109,7 @@
 	/**
 	 * Loads a library constructed from a theory.
 	 * 
-	 * @param theory
+	 * @param th
 	 *            theory text
 	 * @param libName
 	 *            name of the library
diff -ur tuprolog.orig/src/alice/tuprolog/lib/IOLibrary.java tuprolog/src/alice/tuprolog/lib/IOLibrary.java
--- tuprolog.orig/src/alice/tuprolog/lib/IOLibrary.java	2010-02-09 19:56:58.000000000 +1300
+++ tuprolog/src/alice/tuprolog/lib/IOLibrary.java	2010-09-08 20:07:27.000000000 +1200
@@ -372,7 +372,7 @@
 	/**
 	 * Sets an arbitrary seed for the Random object.
 	 * 
-	 * @param seed Seed to use
+	 * @param t Seed to use
 	 * @return true if seed Term has a valid long value, false otherwise
 	 */
 	public boolean set_seed_1(Term t) throws PrologError {
diff -ur tuprolog.orig/src/alice/tuprolog/lib/JavaLibrary.java tuprolog/src/alice/tuprolog/lib/JavaLibrary.java
--- tuprolog.orig/src/alice/tuprolog/lib/JavaLibrary.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/tuprolog/lib/JavaLibrary.java	2010-09-08 20:08:01.000000000 +1200
@@ -1390,8 +1390,6 @@
 
 	/**
 	 * Generates a fresh numeric identifier
-	 * 
-	 * @return
 	 */
 	protected Struct generateFreshId() {
 		return new Struct("$obj_" + id++);
diff -ur tuprolog.orig/src/alice/tuprologx/ide/LibraryDialogFrame.java tuprolog/src/alice/tuprologx/ide/LibraryDialogFrame.java
--- tuprolog.orig/src/alice/tuprologx/ide/LibraryDialogFrame.java	2010-01-21 21:29:22.000000000 +1300
+++ tuprolog/src/alice/tuprologx/ide/LibraryDialogFrame.java	2010-09-08 20:09:36.000000000 +1200
@@ -317,7 +317,6 @@
         displayLibraryManagerStatus();
     }
 
-    /** @see alice.tuprologx.ide.SwingFrame#onClose()*/
     public void closeLibraryDialog()
     {
     	onClose();
diff -ur tuprolog.orig/src/alice/tuprologx/ide/ToolBar.java tuprolog/src/alice/tuprologx/ide/ToolBar.java
--- tuprolog.orig/src/alice/tuprologx/ide/ToolBar.java	2010-01-21 21:29:22.000000000 +1300
+++ tuprolog/src/alice/tuprologx/ide/ToolBar.java	2010-09-08 20:10:48.000000000 +1200
@@ -232,8 +232,6 @@
 
     /**
      * Set the tuProlog config frame
-     *
-     * @param libraryManager a libraryManager to associate to the libraryDialog 
      */
 	public void setPrologConfig(PrologConfigFrame configFrame)
 	{
diff -ur tuprolog.orig/src/alice/tuprologx/pj/lib/PJLibrary.java tuprolog/src/alice/tuprologx/pj/lib/PJLibrary.java
--- tuprolog.orig/src/alice/tuprologx/pj/lib/PJLibrary.java	2010-01-21 21:29:48.000000000 +1300
+++ tuprolog/src/alice/tuprologx/pj/lib/PJLibrary.java	2010-09-08 20:13:15.000000000 +1200
@@ -1252,7 +1252,6 @@
 	
 	/**
 	 * Generates a fresh numeric identifier
-	 * @return
 	 */
 	protected Struct generateFreshId() {
 		return new Struct("$obj_" + id++);        
diff -ur tuprolog.orig/src/alice/util/jedit/InputHandler.java tuprolog/src/alice/util/jedit/InputHandler.java
--- tuprolog.orig/src/alice/util/jedit/InputHandler.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/util/jedit/InputHandler.java	2010-09-08 20:22:49.000000000 +1200
@@ -24,7 +24,7 @@
  *
  * @author Slava Pestov
  * @version $Id: InputHandler.java,v 1.14 1999/12/13 03:40:30 sp Exp $
- * @see org.gjt.sp.jedit.textarea.DefaultInputHandler
+ * @see alice.util.jedit.DefaultInputHandler
  */
 public abstract class InputHandler extends KeyAdapter
 {
@@ -187,7 +187,7 @@
 	/**
 	 * Grabs the next key typed event and invokes the specified
 	 * action with the key as a the action command.
-	 * @param action The action
+	 * @param listener The action
 	 */
 	public void grabNextKeyStroke(ActionListener listener)
 	{
diff -ur tuprolog.orig/src/alice/util/jedit/JEditTextArea.java tuprolog/src/alice/util/jedit/JEditTextArea.java
--- tuprolog.orig/src/alice/util/jedit/JEditTextArea.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/util/jedit/JEditTextArea.java	2010-09-08 20:16:23.000000000 +1200
@@ -1389,7 +1389,7 @@
 
 	/**
 	 * Sets if the selection should be rectangular.
-	 * @param overwrite True if the selection should be rectangular,
+	 * @param rectSelect True if the selection should be rectangular,
 	 * false otherwise.
 	 */
 	public final void setSelectionRectangular(boolean rectSelect)
diff -ur tuprolog.orig/src/alice/util/jedit/KeywordMap.java tuprolog/src/alice/util/jedit/KeywordMap.java
--- tuprolog.orig/src/alice/util/jedit/KeywordMap.java	2010-01-21 21:29:22.000000000 +1300
+++ tuprolog/src/alice/util/jedit/KeywordMap.java	2010-09-08 20:16:52.000000000 +1200
@@ -75,7 +75,7 @@
 	/**
 	 * Adds a key-value mapping.
 	 * @param keyword The key
-	 * @Param id The value
+	 * @param id The value
 	 */
 	public void add(String keyword, byte id)
 	{
diff -ur tuprolog.orig/src/alice/util/jedit/TextAreaPainter.java tuprolog/src/alice/util/jedit/TextAreaPainter.java
--- tuprolog.orig/src/alice/util/jedit/TextAreaPainter.java	2010-01-21 21:29:24.000000000 +1300
+++ tuprolog/src/alice/util/jedit/TextAreaPainter.java	2010-09-08 20:18:43.000000000 +1200
@@ -75,7 +75,7 @@
 	/**
 	 * Returns the syntax styles used to paint colorized text. Entry <i>n</i>
 	 * will be used to paint tokens with id = <i>n</i>.
-	 * @see org.gjt.sp.jedit.syntax.Token
+	 * @see alice.util.jedit.Token
 	 */
 	public final SyntaxStyle[] getStyles()
 	{
@@ -86,7 +86,7 @@
 	 * Sets the syntax styles used to paint colorized text. Entry <i>n</i>
 	 * will be used to paint tokens with id = <i>n</i>.
 	 * @param styles The syntax styles
-	 * @see org.gjt.sp.jedit.syntax.Token
+	 * @see alice.util.jedit.Token
 	 */
 	public final void setStyles(SyntaxStyle[] styles)
 	{
@@ -356,7 +356,7 @@
 
 	/**
 	 * Repaints the text.
-	 * @param g The graphics context
+	 * @param gfx The graphics context
 	 */
 	public void paint(Graphics gfx)
 	{
diff -ur tuprolog.orig/src/alice/util/jedit/TokenMarker.java tuprolog/src/alice/util/jedit/TokenMarker.java
--- tuprolog.orig/src/alice/util/jedit/TokenMarker.java	2010-01-21 21:29:22.000000000 +1300
+++ tuprolog/src/alice/util/jedit/TokenMarker.java	2010-09-08 20:19:08.000000000 +1200
@@ -24,7 +24,7 @@
  * @author Slava Pestov
  * @version $Id: TokenMarker.java,v 1.32 1999/12/13 03:40:30 sp Exp $
  *
- * @see org.gjt.sp.jedit.syntax.Token
+ * @see alice.util.jedit.Token
  */
 public abstract class TokenMarker
 {
