diff -ru avifile-0.7-0.7.41/include/avm_cpuinfo.h avifile-0.7-0.7.41.new/include/avm_cpuinfo.h
--- avifile-0.7-0.7.41/include/avm_cpuinfo.h	2003-05-25 00:44:03.000000000 +0200
+++ avifile-0.7-0.7.41.new/include/avm_cpuinfo.h	2004-10-06 11:43:22.935747117 +0200
@@ -47,7 +47,7 @@
 extern "C" {
 #endif /* __cplusplus */
 
-static inline int avm_is_mmx_state() __THROW
+__THROW static inline int avm_is_mmx_state()
 {
 #ifdef ARCH_X86
     if (freq.HaveMMX())
@@ -66,7 +66,7 @@
  *  Returns duration of time interval between two timestamps, received
  *  with longcount().
  */
-static inline float to_float(int64_t tend, int64_t tbegin) __THROW
+__THROW static inline float to_float(int64_t tend, int64_t tbegin)
 {
     return float((tend - tbegin) / (double)freq / 1000.);
 }
diff -ru avifile-0.7-0.7.41/include/utils.h avifile-0.7-0.7.41.new/include/utils.h
--- avifile-0.7-0.7.41/include/utils.h	2002-09-24 09:19:22.000000000 +0200
+++ avifile-0.7-0.7.41.new/include/utils.h	2004-10-06 11:43:22.936746979 +0200
@@ -38,7 +38,7 @@
  * function to retrieve/store data in machine independent format
  * - right now dump implementation - as we could check functionality
  */
-static inline uint16_t avm_get_le16(const void* p) __THROW {
+__THROW static inline uint16_t avm_get_le16(const void* p) {
 #ifdef WORDS_BIGENDIAN 
     const uint8_t* c = (const uint8_t*) p;
     return c[0] | c[1] << 8;
@@ -47,7 +47,7 @@
 #endif
 }
 
-static inline uint8_t* avm_set_le16(void* p, uint16_t v) __THROW {
+__THROW static inline uint8_t* avm_set_le16(void* p, uint16_t v) {
     uint8_t* b = (uint8_t*) p;
 #ifdef WORDS_BIGENDIAN 
     b[0] = v & 0xff;
@@ -58,7 +58,7 @@
     return b;
 }
 
-static inline uint32_t avm_get_le32(const void* p) __THROW {
+__THROW static inline uint32_t avm_get_le32(const void* p) {
 #ifdef WORDS_BIGENDIAN 
     const uint8_t* c = (const uint8_t*) p;
     return c[0] | c[1] << 8 | c[2] << 16 | c[3] << 24;
@@ -67,7 +67,7 @@
 #endif
 }
 
-static inline uint8_t* avm_set_le32(void* p, uint32_t v) __THROW {
+__THROW static inline uint8_t* avm_set_le32(void* p, uint32_t v) {
     uint8_t* b = (uint8_t*) p;
 #ifdef WORDS_BIGENDIAN 
     b[0] = v & 0xff;
@@ -80,7 +80,7 @@
     return b;
 }
 
-static inline uint64_t avm_get_le64(const void* p) __THROW {
+__THROW static inline uint64_t avm_get_le64(const void* p) {
 #ifdef WORDS_BIGENDIAN 
     const uint8_t* c = (const uint8_t*) p;
     return avm_get_le32(c) | (((uint64_t)avm_get_le32(c + 4)) << 32);
@@ -89,7 +89,7 @@
 #endif
 }
 
-static inline uint16_t avm_get_be16(const void* p) __THROW {
+__THROW static inline uint16_t avm_get_be16(const void* p) {
 #ifdef WORDS_BIGENDIAN
     return *(const uint16_t*)p;
 #else
@@ -98,14 +98,14 @@
 #endif
 }
 
-static inline uint8_t* avm_set_be16(void* p, uint16_t v) __THROW {
+__THROW static inline uint8_t* avm_set_be16(void* p, uint16_t v) {
     uint8_t* b = (uint8_t*) p;
     b[0] = (v >> 8) & 0xff;
     b[1] = v & 0xff;
     return b;
 }
 
-static inline uint32_t avm_get_be32(const void* p) __THROW  {
+__THROW static inline uint32_t avm_get_be32(const void* p) {
 #ifdef WORDS_BIGENDIAN
     return *(const uint32_t*)p;
 #else
@@ -114,7 +114,7 @@
 #endif
 }
 
-static inline uint8_t* avm_set_be32(void* p, uint32_t v) __THROW {
+__THROW static inline uint8_t* avm_set_be32(void* p, uint32_t v) {
     uint8_t* b = (uint8_t*) p;
     b[0] = (v >> 24) & 0xff;
     b[1] = (v >> 16) & 0xff;
@@ -123,7 +123,7 @@
     return b;
 }
 
-static inline uint64_t avm_get_be64(const void* p) __THROW  {
+__THROW static inline uint64_t avm_get_be64(const void* p)  {
 #ifdef WORDS_BIGENDIAN
     return *(const uint64_t*)p;
 #else
@@ -132,15 +132,15 @@
 #endif
 }
 
-static inline int avm_img_is_rgb(fourcc_t fmt) __THROW
+__THROW static inline int avm_img_is_rgb(fourcc_t fmt)
 {
     return ((fmt & 0xffffff00) == IMG_FMT_RGB);
 }
-static inline int avm_img_is_bgr(fourcc_t fmt) __THROW
+__THROW static inline int avm_img_is_bgr(fourcc_t fmt)
 {
     return ((fmt & 0xffffff00) == IMG_FMT_BGR);
 }
-static inline int avm_img_get_depth(fourcc_t fmt) __THROW
+__THROW static inline int avm_img_get_depth(fourcc_t fmt)
 {
     return fmt & 0xff;
 }
diff -ru avifile-0.7-0.7.41/lib/common/fcc_type.c avifile-0.7-0.7.41.new/lib/common/fcc_type.c
--- avifile-0.7-0.7.41/lib/common/fcc_type.c	2002-11-01 12:46:58.000000000 +0100
+++ avifile-0.7-0.7.41.new/lib/common/fcc_type.c	2004-10-06 11:44:05.740822469 +0200
@@ -4,7 +4,7 @@
 
 //#include <stdio.h>
 
-const char* avm_fcc_name(fourcc_t fcc) __THROW
+__THROW const char* avm_fcc_name(fourcc_t fcc)
 {
     switch (fcc)
     {
@@ -106,7 +106,7 @@
     { 0, "Unknown" }
 };
 
-const char *avm_img_format_name(fourcc_t fmt) __THROW
+__THROW const char *avm_img_format_name(fourcc_t fmt)
 {
     const struct dts* t = data;
 
diff -ru avifile-0.7-0.7.41/lib/common/utils.c avifile-0.7-0.7.41.new/lib/common/utils.c
--- avifile-0.7-0.7.41/lib/common/utils.c	2002-07-04 20:59:31.000000000 +0200
+++ avifile-0.7-0.7.41.new/lib/common/utils.c	2004-10-06 11:45:10.652837913 +0200
@@ -10,7 +10,7 @@
 uint_t (*localcount)(void);
 int64_t (*longcount)(void);
 
-WAVEFORMATEX* avm_get_leWAVEFORMATEX(WAVEFORMATEX* wf) __THROW
+__THROW WAVEFORMATEX* avm_get_leWAVEFORMATEX(WAVEFORMATEX* wf)
 {
     wf->wFormatTag	= avm_get_le16(&wf->wFormatTag);
     wf->nChannels	= avm_get_le16(&wf->nChannels);
@@ -22,7 +22,7 @@
     return wf;
 }
 
-BITMAPINFOHEADER* avm_get_leBITMAPINFOHEADER(BITMAPINFOHEADER* bi) __THROW
+__THROW BITMAPINFOHEADER* avm_get_leBITMAPINFOHEADER(BITMAPINFOHEADER* bi)
 {
     bi->biSize		= avm_get_le32(&bi->biSize);
     bi->biWidth		= avm_get_le32(&bi->biWidth);
@@ -44,7 +44,7 @@
  * (Note: on solaris, usleep is not thread-safe)
  */
 #ifndef WIN32
-int avm_usleep(unsigned long delay) __THROW
+__THROW int avm_usleep(unsigned long delay)
 {
 #if   HAVE_NANOSLEEP
     struct timespec tsp;
@@ -62,7 +62,7 @@
  * Solaris (maybe other operating systems, too) does not have avm_setenv(),
  * and avm_unsetenv() in libc, provide our own implementation.
  */
-int avm_setenv(const char *name, const char *value, int overwrite) __THROW
+__THROW int avm_setenv(const char *name, const char *value, int overwrite)
 {
 #if HAVE_SETENV
     return setenv(name, value, overwrite);
@@ -80,7 +80,7 @@
 #endif
 }
 
-void avm_unsetenv(const char *name) __THROW
+__THROW void avm_unsetenv(const char *name) 
 {
 #if HAVE_UNSETENV
     unsetenv(name);
diff -ru avifile-0.7-0.7.41/lib/common/wave_type.c avifile-0.7-0.7.41.new/lib/common/wave_type.c
--- avifile-0.7-0.7.41/lib/common/wave_type.c	2002-11-29 14:09:46.000000000 +0100
+++ avifile-0.7-0.7.41.new/lib/common/wave_type.c	2004-10-06 11:45:44.497153438 +0200
@@ -3,7 +3,7 @@
 #include <string.h>
 #include <stdio.h>
 
-const char* avm_wave_format_name(short fmt) __THROW
+__THROW const char* avm_wave_format_name(short fmt) 
 {
     switch ((unsigned short)fmt)
     {
@@ -46,7 +46,7 @@
     }
 }
 
-char* avm_wave_format(char* buf, uint_t s, const WAVEFORMATEX* wf) __THROW
+__THROW char* avm_wave_format(char* buf, uint_t s, const WAVEFORMATEX* wf)
 {
     if (buf)
     {
