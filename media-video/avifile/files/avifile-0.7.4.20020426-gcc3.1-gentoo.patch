diff -ur avifile0.7-0.7.4.orginal/include/version.h avifile0.7-0.7.4/include/version.h
--- avifile0.7-0.7.4.orginal/include/version.h	2002-04-26 07:39:40.000000000 -0500
+++ avifile0.7-0.7.4/include/version.h	2002-05-25 14:08:45.000000000 -0500
@@ -3,5 +3,5 @@
 #define AVIFILE_MAJOR_VERSION 0
 #define AVIFILE_MINOR_VERSION 7
 #define AVIFILE_PATCHLEVEL 4
-#define AVIFILE_BUILD "CVS-020426-14:19-2.95.4"
+#define AVIFILE_BUILD "CVS-020525-14:08-3.1"
 #endif
diff -ur avifile0.7-0.7.4.orginal/lib/aviplay/aviplay.cpp avifile0.7-0.7.4/lib/aviplay/aviplay.cpp
--- avifile0.7-0.7.4.orginal/lib/aviplay/aviplay.cpp	2002-04-25 13:17:40.000000000 -0500
+++ avifile0.7-0.7.4/lib/aviplay/aviplay.cpp	2002-05-25 13:35:15.000000000 -0500
@@ -947,7 +947,7 @@
     Set(ASYNC_TIME_MS, int(async * 1000), 0);
 }
 
-void AviPlayer::SetAudioFunc(AUDIOFUNC func, void* arg=0)
+void AviPlayer::SetAudioFunc(AUDIOFUNC func, void* arg)
 {
     lockThreads("SetAudioFunc");
     m_pAudiofunc = func;
@@ -977,7 +977,7 @@
     ReseekExact(GetPos());
 }
 
-IAviPlayer* CreateAviPlayer(const char* filename, int bitdepth, const char* subname, const char* vcodec=0, const char* acodec=0)
+IAviPlayer* CreateAviPlayer(const char* filename, int bitdepth, const char* subname, const char* vcodec, const char* acodec)
 {
     try {
 	return new AviPlayer(filename, bitdepth, subname, vcodec, acodec);
diff -ur avifile0.7-0.7.4.orginal/lib/aviplay/aviplay_impl.h avifile0.7-0.7.4/lib/aviplay/aviplay_impl.h
--- avifile0.7-0.7.4.orginal/lib/aviplay/aviplay_impl.h	2002-04-23 14:32:52.000000000 -0500
+++ avifile0.7-0.7.4/lib/aviplay/aviplay_impl.h	2002-05-25 13:34:40.000000000 -0500
@@ -53,7 +53,7 @@
 	m_pKillhandler = handler;
 	m_pKillhandlerArg = arg;
     }
-    virtual void SetAudioFunc(AUDIOFUNC func, void* arg = 0);
+    virtual void SetAudioFunc(AUDIOFUNC func, void* arg);
     virtual double GetPos() const;
     virtual framepos_t GetFramePos() const;
 
diff -ur avifile0.7-0.7.4.orginal/lib/aviplay/SdlAudioRenderer.cpp avifile0.7-0.7.4/lib/aviplay/SdlAudioRenderer.cpp
--- avifile0.7-0.7.4.orginal/lib/aviplay/SdlAudioRenderer.cpp	2002-04-25 13:25:59.000000000 -0500
+++ avifile0.7-0.7.4/lib/aviplay/SdlAudioRenderer.cpp	2002-05-25 13:35:45.000000000 -0500
@@ -28,7 +28,7 @@
 AVM_BEGIN_NAMESPACE;
 
 SdlAudioRenderer::SdlAudioRenderer(IReadStream* as, WAVEFORMATEX& Owf,
-				   uint_t useFreq = 0, const char* privcname = 0)
+				   uint_t useFreq, const char* privcname)
     :IAudioRenderer(as, Owf, privcname), m_uiUseFreq(useFreq)
 {
     try
diff -ur avifile0.7-0.7.4.orginal/lib/aviwrite/AviAudioWriteStream.cpp avifile0.7-0.7.4/lib/aviwrite/AviAudioWriteStream.cpp
--- avifile0.7-0.7.4.orginal/lib/aviwrite/AviAudioWriteStream.cpp	2002-04-08 03:15:50.000000000 -0500
+++ avifile0.7-0.7.4/lib/aviwrite/AviAudioWriteStream.cpp	2002-05-25 13:36:14.000000000 -0500
@@ -8,7 +8,7 @@
 
 AviAudioWriteStream::AviAudioWriteStream(AviWriteFile* file, int ckid, const CodecInfo& ci,
 					 const WAVEFORMATEX* fmt,
-					 int bitrate, int flags=0)
+					 int bitrate, int flags)
     :AviWriteStream(file, ckid, IStream::Audio, ci.fourcc, bitrate, flags),
     m_pIEnc(0), m_astatus(0), m_bitrate(bitrate)
 {
diff -ur avifile0.7-0.7.4.orginal/lib/aviwrite/AviVideoWriteStream.cpp avifile0.7-0.7.4/lib/aviwrite/AviVideoWriteStream.cpp
--- avifile0.7-0.7.4.orginal/lib/aviwrite/AviVideoWriteStream.cpp	2002-03-20 05:07:29.000000000 -0600
+++ avifile0.7-0.7.4/lib/aviwrite/AviVideoWriteStream.cpp	2002-05-25 13:36:32.000000000 -0500
@@ -29,7 +29,7 @@
     delete[] m_local_buffer;
 }
 
-int AviVideoWriteStream::AddFrame(CImage* chunk, uint_t* pSize = 0, int* pKeyframe = 0)
+int AviVideoWriteStream::AddFrame(CImage* chunk, uint_t* pSize, int* pKeyframe)
 {
     if (m_vstatus != 1)
     {
diff -ur avifile0.7-0.7.4.orginal/lib/aviwrite/AviWrite.cpp avifile0.7-0.7.4/lib/aviwrite/AviWrite.cpp
--- avifile0.7-0.7.4.orginal/lib/aviwrite/AviWrite.cpp	2002-04-08 03:15:51.000000000 -0500
+++ avifile0.7-0.7.4/lib/aviwrite/AviWrite.cpp	2002-05-25 13:36:05.000000000 -0500
@@ -282,7 +282,7 @@
 }
 
 avm::IVideoWriteStream* AviWriteFile::AddVideoStream(const VideoEncoderInfo* vi,
-						     int frame_rate, int flags = 0)
+						     int frame_rate, int flags)
 {
     const CodecInfo* pci = CodecInfo::match(CodecInfo::Video, vi->cname);
     if (!pci)
diff -ur avifile0.7-0.7.4.orginal/plugins/libffmpeg/FFVideoDecoder.cpp avifile0.7-0.7.4/plugins/libffmpeg/FFVideoDecoder.cpp
--- avifile0.7-0.7.4.orginal/plugins/libffmpeg/FFVideoDecoder.cpp	2002-04-25 15:11:04.000000000 -0500
+++ avifile0.7-0.7.4/plugins/libffmpeg/FFVideoDecoder.cpp	2002-05-25 13:37:53.000000000 -0500
@@ -86,7 +86,7 @@
     return 0;
 }
 
-int FFVideoDecoder::SetDestFmt(int bits = 24, fourcc_t csp = 0)
+int FFVideoDecoder::SetDestFmt(int bits, fourcc_t csp)
 {
     if (!CImage::Supported(csp, bits) || csp != fccYV12)
 	return -1;
diff -ur avifile0.7-0.7.4.orginal/plugins/libffmpeg/FFVideoEncoder.cpp avifile0.7-0.7.4/plugins/libffmpeg/FFVideoEncoder.cpp
--- avifile0.7-0.7.4.orginal/plugins/libffmpeg/FFVideoEncoder.cpp	2002-04-25 15:41:10.000000000 -0500
+++ avifile0.7-0.7.4/plugins/libffmpeg/FFVideoEncoder.cpp	2002-05-25 13:38:04.000000000 -0500
@@ -34,7 +34,7 @@
     Stop();
 }
 
-int FFVideoEncoder::EncodeFrame(const CImage* src, void* dest, int* is_keyframe, uint_t* size, int* lpckid = 0)
+int FFVideoEncoder::EncodeFrame(const CImage* src, void* dest, int* is_keyframe, uint_t* size, int* lpckid)
 {
     int hr = 0;
 #if 0
diff -ur avifile0.7-0.7.4.orginal/samples/mjpeg_plugin/mjpeg_encoder.cpp avifile0.7-0.7.4/samples/mjpeg_plugin/mjpeg_encoder.cpp
--- avifile0.7-0.7.4.orginal/samples/mjpeg_plugin/mjpeg_encoder.cpp	2002-02-04 03:58:38.000000000 -0600
+++ avifile0.7-0.7.4/samples/mjpeg_plugin/mjpeg_encoder.cpp	2002-05-25 13:47:48.000000000 -0500
@@ -20,7 +20,7 @@
     Stop();
 }
 
-int MJPEG_VideoEncoder::EncodeFrame(const CImage* src, void* dest, int* is_keyframe, uint_t* size, int* lpckid=0)
+int MJPEG_VideoEncoder::EncodeFrame(const CImage* src, void* dest, int* is_keyframe, uint_t* size, int* lpckid)
 {
     if ((dest == 0) || (src == 0))
     {
diff -ur avifile0.7-0.7.4.orginal/samples/qtrecompress/rgn.cpp avifile0.7-0.7.4/samples/qtrecompress/rgn.cpp
--- avifile0.7-0.7.4.orginal/samples/qtrecompress/rgn.cpp	2002-04-24 10:34:07.000000000 -0500
+++ avifile0.7-0.7.4/samples/qtrecompress/rgn.cpp	2002-05-25 13:43:07.000000000 -0500
@@ -7,7 +7,7 @@
 using namespace std;
 template<class T> T mymin(const T x, const T y) {return (x<y)?x:y;}
 
-void CEdgeRgn::Maximize(unsigned char* data, int xd, int yd, int depth=3)
+void CEdgeRgn::Maximize(unsigned char* data, int xd, int yd, int depth)
 {
 
 #ifdef i386
diff -ur avifile0.7-0.7.4.orginal/samples/qtvidcap/qtrenderer.cpp avifile0.7-0.7.4/samples/qtvidcap/qtrenderer.cpp
--- avifile0.7-0.7.4.orginal/samples/qtvidcap/qtrenderer.cpp	2001-12-17 07:00:13.000000000 -0600
+++ avifile0.7-0.7.4/samples/qtvidcap/qtrenderer.cpp	2002-05-25 13:44:57.000000000 -0500
@@ -35,7 +35,7 @@
     XDestroyImage( x );
 }
 
-ShmRenderer::ShmRenderer(QWidget* w, int x, int y, int xpos=0, int ypos=0) : xshminit(0), xshmimg(0), xshmpm(0)
+ShmRenderer::ShmRenderer(QWidget* w, int x, int y, int xpos, int ypos) : xshminit(0), xshmimg(0), xshmpm(0)
 {
     pthread_mutex_init(&mutex, 0);
     dev=(QPaintDevice*)w;
diff -ur avifile0.7-0.7.4.orginal/samples/qtvidcap/v4lwindow.cpp avifile0.7-0.7.4/samples/qtvidcap/v4lwindow.cpp
--- avifile0.7-0.7.4.orginal/samples/qtvidcap/v4lwindow.cpp	2002-04-02 03:28:15.000000000 -0600
+++ avifile0.7-0.7.4/samples/qtvidcap/v4lwindow.cpp	2002-05-25 13:46:49.000000000 -0500
@@ -47,7 +47,7 @@
     qApp->postEvent(this, e);
 }
 
-V4LWindow::V4LWindow(v4lxif * pDev, QWidget * pParent=0)
+V4LWindow::V4LWindow(v4lxif * pDev, QWidget * pParent)
 : QWidget(pParent, 0, 0), m_eMode(Overlay), m_pDev(pDev), m_pRenderer(0),
     m_pPopup(0), m_pPicConfig(0), m_pCapDialog(0), m_pCC(0),
     m_bForce4x3(true), m_bSubtitles(false),
@@ -421,7 +421,7 @@
 	    postResizeEvent(width(), height());
 }
 
-void V4LWindow::getOverlaySizeAndOffset(int *pw, int *ph, int* pdx=0, int* pdy=0)
+void V4LWindow::getOverlaySizeAndOffset(int *pw, int *ph, int* pdx, int* pdy)
 {
     int dxpos, dypos;
     int max_w, max_h;
@@ -475,7 +475,7 @@
     return r;
 }
 
-void V4LWindow::setupPicDimensions(int* pdx=0, int* pdy=0)
+void V4LWindow::setupPicDimensions(int* pdx, int* pdy)
 {
     Locker lock(m_Mutex);
     int dxpos, dypos, pw, ph;
