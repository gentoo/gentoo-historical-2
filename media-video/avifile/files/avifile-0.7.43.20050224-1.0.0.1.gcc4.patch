diff -urN avifile-0.7.43.20050224/ffmpeg/libavcodec/avcodec.h ./ffmpeg/libavcodec/avcodec.h
--- avifile-0.7.43.20050224/ffmpeg/libavcodec/avcodec.h	2005-02-24 12:31:10.000000000 +0100
+++ avifile-0.7.43.20050224.gcc4/ffmpeg/libavcodec/avcodec.h	2005-03-18 09:29:44.849987503 +0100
@@ -1813,6 +1813,14 @@
 #define FF_OPT_MAX_DEPTH 10
 } AVOption;
 
+#ifdef HAVE_MMX
+extern const struct AVOption avoptions_common[3 + 5];
+#else
+extern const struct AVOption avoptions_common[3];
+#endif
+extern const struct AVOption avoptions_workaround_bug[11];
+
+
 /**
  * Parse option(s) and sets fields in passed structure
  * @param strct	structure where the parsed results will be written
diff -urN avifile-0.7.43.20050224/ffmpeg/libavcodec/common.h ./ffmpeg/libavcodec/common.h
--- avifile-0.7.43.20050224/ffmpeg/libavcodec/common.h	2005-02-15 13:33:33.000000000 +0100
+++ avifile-0.7.43.20050224.gcc4/ffmpeg/libavcodec/common.h	2005-03-18 09:34:02.595215479 +0100
@@ -53,15 +53,6 @@
     { name, help, offsetof(AVCodecContext, field), FF_OPT_TYPE_RCOVERRIDE, .defval = 0, .defstr = NULL }
 #define AVOPTION_SUB(ptr) { .name = NULL, .help = (const char*)ptr }
 #define AVOPTION_END() AVOPTION_SUB(NULL)
-
-struct AVOption;
-#ifdef HAVE_MMX
-extern const struct AVOption avoptions_common[3 + 5];
-#else
-extern const struct AVOption avoptions_common[3];
-#endif
-extern const struct AVOption avoptions_workaround_bug[11];
-
 #endif /* HAVE_AV_CONFIG_H */
 
 /* Suppress restrict if it was not defined in config.h.  */
diff -urN avifile-0.7.43.20050224/ffmpeg/libavcodec/dsputil.h ./ffmpeg/libavcodec/dsputil.h
--- avifile-0.7.43.20050224/ffmpeg/libavcodec/dsputil.h	2005-02-15 13:33:34.000000000 +0100
+++ avifile-0.7.43.20050224.gcc4/ffmpeg/libavcodec/dsputil.h	2005-03-18 09:24:45.732740888 +0100
@@ -604,33 +604,6 @@
     return score;\
 }
 
-#ifndef HAVE_LRINTF
-/* XXX: add ISOC specific test to avoid specific BSD testing. */
-/* better than nothing implementation. */
-/* btw, rintf() is existing on fbsd too -- alex */
-static always_inline long int lrintf(float x)
-{
-#ifdef CONFIG_WIN32
-#  ifdef ARCH_X86
-    int32_t i;
-    asm volatile(
-        "fistpl %0\n\t"
-        : "=m" (i) : "t" (x) : "st"
-    );
-    return i;
-#  else
-    /* XXX: incorrect, but make it compile */
-    return (int)(x + (x < 0 ? -0.5 : 0.5));
-#  endif
-#else
-    return (int)(rint(x));
-#endif
-}
-#else
-#ifndef _ISOC9X_SOURCE
-#define _ISOC9X_SOURCE
-#endif
 #include <math.h>
-#endif
 
 #endif
diff -urN avifile-0.7.43.20050224/lib/aviplay/AudioQueue.h ./lib/aviplay/AudioQueue.h
--- avifile-0.7.43.20050224/lib/aviplay/AudioQueue.h	2004-08-25 18:29:06.000000000 +0200
+++ avifile-0.7.43.20050224.gcc4/lib/aviplay/AudioQueue.h	2005-03-18 09:32:07.258488382 +0100
@@ -16,10 +16,11 @@
     virtual int Mix(void* data, const void* src, uint_t n) const = 0;
 };
 
+#define MAX_BUFFER_TIME 1.0;
+
 class AudioQueue
 {
 public:
-    static const double MAX_BUFFER_TIME = 1.0;
     AudioQueue(WAVEFORMATEX& Iwf, WAVEFORMATEX& Owf);
     ~AudioQueue();
 
diff -urN avifile-0.7.43.20050224/lib/aviplay/aviplay_impl.h ./lib/aviplay/aviplay_impl.h
--- avifile-0.7.43.20050224/lib/aviplay/aviplay_impl.h	2003-12-17 21:37:54.000000000 +0100
+++ avifile-0.7.43.20050224.gcc4/lib/aviplay/aviplay_impl.h	2005-03-18 09:32:07.260487996 +0100
@@ -136,8 +136,6 @@
     void createAudioRenderer();
     int restartVideoStreaming(const char* codec = 0);
 
-    static const float m_fDropLimit = -0.015;
-
     mutable int AviPlayer::propertyRead[LAST_PROPERTY]; // have we read at least once from Registry::
 
     avm::vector<IVideoRenderer*> m_VideoRenderers; // we could draw image to more places
diff -urN avifile-0.7.43.20050224/lib/aviplay/aviplayth.cpp ./lib/aviplay/aviplayth.cpp
--- avifile-0.7.43.20050224/lib/aviplay/aviplayth.cpp	2004-10-25 12:27:42.000000000 +0200
+++ avifile-0.7.43.20050224.gcc4/lib/aviplay/aviplayth.cpp	2005-03-18 09:32:07.261487803 +0100
@@ -31,6 +31,7 @@
 // preffer video playing thread
 static const int PRIORITY_ADD_VIDEO = 0;
 static const int PRIORITY_ADD_AUDIO = 0;
+static const float m_fDropLimit = -0.015;
 
 float AviPlayer::getVideoAsync()
 {
diff -urN avifile-0.7.43.20050224/lib/aviread/ReadFile.cpp ./lib/aviread/ReadFile.cpp
--- avifile-0.7.43.20050224/lib/aviread/ReadFile.cpp	2004-03-10 18:00:09.000000000 +0100
+++ avifile-0.7.43.20050224.gcc4/lib/aviread/ReadFile.cpp	2005-03-18 09:32:07.273485486 +0100
@@ -125,7 +125,7 @@
 };
 
 
-avm::IReadFile* avm::CreateReadFile(const char* name, unsigned int flags)
+IReadFile* CreateReadFile(const char* name, unsigned int flags)
 {
     ReadFile* r = new ReadFile(name, flags);
     return r;
diff -urN avifile-0.7.43.20050224/samples/qtvidcap/kv4lsetup.cpp ./samples/qtvidcap/kv4lsetup.cpp
--- avifile-0.7.43.20050224/samples/qtvidcap/kv4lsetup.cpp	2004-11-04 14:43:49.000000000 +0100
+++ avifile-0.7.43.20050224.gcc4/samples/qtvidcap/kv4lsetup.cpp	2005-03-18 09:32:07.283483556 +0100
@@ -311,7 +311,7 @@
     fbuf.depth        = set_bpp;
     fbuf.bytesperline = set_bpl;
     if (set_base != NULL)
-	fbuf.base     = (void*)((unsigned int)set_base+(unsigned int)shift);
+	fbuf.base     = (void*)((unsigned long)set_base+(unsigned long)shift);
 
     /* XXX bttv confuses color depth and bits/pixel */
 #ifndef X_DISPLAY_MISSING
diff -urN avifile-0.7.43.20050224/samples/qtvidcap/v4lxif.cpp ./samples/qtvidcap/v4lxif.cpp
--- avifile-0.7.43.20050224/samples/qtvidcap/v4lxif.cpp	2004-11-04 14:43:50.000000000 +0100
+++ avifile-0.7.43.20050224.gcc4/samples/qtvidcap/v4lxif.cpp	2005-03-18 09:32:07.291482011 +0100
@@ -1118,7 +1118,7 @@
 		XF86DGAGetVideoLL(disp, DefaultScreen(disp), (int *)&base, &width, &bank, &ram );
 		if (!base)
 		    avml(AVML_WARN,
-			 "v4l1: can not allocate frame buffer base: 0x%x\n",(int)base);
+			 "v4l1: can not allocate frame buffer base: 0x%lx\n",(long)base);
 	    }
 	}
     }
