diff -ur qc-usb-0.6.3.orig/qc-driver.c qc-usb-0.6.3/qc-driver.c
--- qc-usb-0.6.3.orig/qc-driver.c	2006-05-04 00:41:21.000000000 +0200
+++ qc-usb-0.6.3/qc-driver.c	2006-05-04 00:44:19.000000000 +0200
@@ -75,63 +75,63 @@
 #endif
 /* }}} */
 /* {{{ [fold] Module parameters  */
-MODULE_PARM_DESC(qcdebug, "Sets the debug output (bitfield)");
-MODULE_PARM(qcdebug, "i");
 int qcdebug = DEBUGLEVEL;
+MODULE_PARM_DESC(qcdebug, "Sets the debug output (bitfield)");
+module_param(qcdebug, int, 0);
 
-MODULE_PARM_DESC(keepsettings, "Keep picture settings across one open to another (0-1)");
-MODULE_PARM(keepsettings, "i");
 static int keepsettings = 0;
+MODULE_PARM_DESC(keepsettings, "Keep picture settings across one open to another (0-1)");
+module_param(keepsettings, int, 0);
 
-MODULE_PARM_DESC(settle, "Maximum number of frames to wait picture brightness to settle (0-255)");
-MODULE_PARM(settle, "i");
 static int settle = 0;
+MODULE_PARM_DESC(settle, "Maximum number of frames to wait picture brightness to settle (0-255)");
+module_param(settle, int, 0);
 
 /* Subsampling is used to allow higher scan rate with smaller images. */
-MODULE_PARM_DESC(subsample, "Sets subsampling (0-1)");
-MODULE_PARM(subsample, "i");
 static int subsample = 0;	/* normal or sub-sample (sub-sample to increase the speed) */
+MODULE_PARM_DESC(subsample, "Sets subsampling (0-1)");
+module_param(subsample, int, 0);
 
-MODULE_PARM_DESC(compress, "Enable compressed mode (0-1)");
-MODULE_PARM(compress, "i");
 static int compress = 0;	/* Enable compressed mode if available (higher framerate) */
+MODULE_PARM_DESC(compress, "Enable compressed mode (0-1)");
+module_param(compress, int, 0);
 
-MODULE_PARM_DESC(frameskip, "How frequently capture frames (0-10)");
-MODULE_PARM(frameskip, "i");
 static int frameskip = 0;
+MODULE_PARM_DESC(frameskip, "How frequently capture frames (0-10)");
+module_param(frameskip, int, 0);
 
-MODULE_PARM_DESC(quality, "Sets the picture quality (0-5)");
-MODULE_PARM(quality, "i");
 static int quality = 5;		/* 5 = generalized adjustable Pei-Tam method */
+MODULE_PARM_DESC(quality, "Sets the picture quality (0-5)");
+module_param(quality, int, 0);
 
-MODULE_PARM_DESC(adaptive, "Automatic adaptive brightness control (0-1)");
-MODULE_PARM(adaptive, "i");
 static int adaptive = 1;
+MODULE_PARM_DESC(adaptive, "Automatic adaptive brightness control (0-1)");
+module_param(adaptive, int, 0);
 
-MODULE_PARM_DESC(equalize, "Equalize image (0-1)");
-MODULE_PARM(equalize, "i");
 static int equalize = 0;	/* Disabled by default */
+MODULE_PARM_DESC(equalize, "Equalize image (0-1)");
+module_param(equalize, int, 0);
 
-MODULE_PARM_DESC(userlut, "Apply user-specified lookup-table (0-1)");
-MODULE_PARM(userlut, "i");
 static int userlut = 0;		/* Disabled by default */
+MODULE_PARM_DESC(userlut, "Apply user-specified lookup-table (0-1)");
+module_param(userlut, int, 0);
 
-MODULE_PARM_DESC(retryerrors, "Retry if image capture fails, otherwise return error code (0-1)");
-MODULE_PARM(retryerrors, "i");
 static int retryerrors = 1;	/* Enabled by default */
+MODULE_PARM_DESC(retryerrors, "Retry if image capture fails, otherwise return error code (0-1)");
+module_param(retryerrors, int, 0);
 
 /* Bug in Xvideo(?): if the width is not divisible by 8 and Xvideo is used, the frame is shown wrongly */
-MODULE_PARM_DESC(compatible, "Enable workaround for bugs in application programs (bitfield)");
-MODULE_PARM(compatible, "i");
 static int compatible = 0;	/* Disabled by default */
+MODULE_PARM_DESC(compatible, "Enable workaround for bugs in application programs (bitfield)");
+module_param(compatible, int, 0);
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,5)
+static int video_nr = -1;
 MODULE_PARM_DESC(video_nr, "Set videodevice number (/dev/videoX)");
-MODULE_PARM(video_nr,"i");
+module_param(video_nr, int, 0);
 /* video_nr option allows to specify a certain /dev/videoX device */
 /* (like /dev/video0 or /dev/video1 ...)                          */
 /* for autodetect first available use video_nr=-1 (defaultvalue)  */
-static int video_nr = -1;
 #endif
 /* }}} */
 /* {{{ [fold] Miscellaneous data  */
