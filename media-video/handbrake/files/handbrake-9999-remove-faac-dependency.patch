--- a/gtk/src/audiohandler.c	
+++ b/gtk/src/audiohandler.c	
@@ -71,10 +71,7 @@
         if (enc->codec == fallback &&
             !(enc->muxers & mux))
         {
-            if ( mux & HB_MUX_MASK_MKV )
-                fallback = HB_ACODEC_LAME;
-            else
-                fallback = HB_ACODEC_FAAC;
+            fallback = HB_ACODEC_LAME;
             break;
         }
     }
@@ -132,7 +129,7 @@
             return HB_ACODEC_LAME;
 
         case HB_ACODEC_AAC_PASS:
-            return HB_ACODEC_FAAC;
+            return HB_ACODEC_FFAAC;
 
         case HB_ACODEC_AC3_PASS:
             return HB_ACODEC_AC3;
--- a/gtk/src/hb-backend.c	
+++ b/gtk/src/hb-backend.c	
@@ -3843,7 +3843,7 @@
 gint
 ghb_get_default_acodec()
 {
-    return HB_ACODEC_FAAC;
+    return HB_ACODEC_LAME;
 }
 
 static void
@@ -4581,13 +4581,9 @@
             {
                 codec = HB_ACODEC_AC3;
             }
-            else if (mux & HB_MUX_MASK_MKV)
-            {
-                codec = HB_ACODEC_LAME;
-            }
             else
             {
-                codec = HB_ACODEC_FAAC;
+                codec = HB_ACODEC_LAME;
             }
             value = ghb_lookup_audio_encoder_value(codec);
             ghb_settings_take_value(asettings, "AudioEncoder", value);
@@ -4601,7 +4597,7 @@
             if (codec == HB_ACODEC_VORBIS)
             {
                 a_unsup = "Vorbis";
-                codec = HB_ACODEC_FAAC;
+                codec = HB_ACODEC_LAME;
             }
         }
         if (a_unsup)
--- a/gtk/src/preset_xlat.c	
+++ b/gtk/src/preset_xlat.c	
@@ -260,7 +260,6 @@
 
 static value_map_t acodec_xlat[] =
 {
-    {"AAC (faac)", "faac"},
     {"AC3 Passthru", "ac3"},
     {"MP3 (lame)", "lame"},
     {"Vorbis (vorbis)", "vorbis"},
--- a/libhb/common.c	
+++ b/libhb/common.c	
@@ -227,7 +227,6 @@
     // actual encoders
     { { "AAC (CoreAudio)",    "ca_aac",     HB_ACODEC_CA_AAC,       HB_MUX_MASK_MP4|HB_MUX_MASK_MKV, }, NULL, 1, HB_GID_ACODEC_AAC,        },
     { { "HE-AAC (CoreAudio)", "ca_haac",    HB_ACODEC_CA_HAAC,      HB_MUX_MASK_MP4|HB_MUX_MASK_MKV, }, NULL, 1, HB_GID_ACODEC_AAC_HE,     },
-    { { "AAC (faac)",         "faac",       HB_ACODEC_FAAC,         HB_MUX_MASK_MP4|HB_MUX_MASK_MKV, }, NULL, 1, HB_GID_ACODEC_AAC,        },
     { { "AAC (avcodec)",      "av_aac",     HB_ACODEC_FFAAC,        HB_MUX_MASK_MP4|HB_MUX_MASK_MKV, }, NULL, 1, HB_GID_ACODEC_AAC,        },
     { { "AAC (FDK)",          "fdk_aac",    HB_ACODEC_FDK_AAC,      HB_MUX_MASK_MP4|HB_MUX_MASK_MKV, }, NULL, 1, HB_GID_ACODEC_AAC,        },
     { { "HE-AAC (FDK)",       "fdk_haac",   HB_ACODEC_FDK_HAAC,     HB_MUX_MASK_MP4|HB_MUX_MASK_MKV, }, NULL, 1, HB_GID_ACODEC_AAC_HE,     },
--- a/libhb/common.h	
+++ b/libhb/common.h	
@@ -1005,7 +1005,6 @@
 extern hb_work_object_t hb_decavcodeca;
 extern hb_work_object_t hb_decavcodecv;
 extern hb_work_object_t hb_declpcm;
-extern hb_work_object_t hb_encfaac;
 extern hb_work_object_t hb_enclame;
 extern hb_work_object_t hb_encvorbis;
 extern hb_work_object_t hb_muxer;
--- a/libhb/encfaac.c	
+++ b/libhb/encfaac.c	
@@ -1,3 +1,4 @@
+#if 0
 /* encfaac.c
 
    Copyright (c) 2003-2013 HandBrake Team
@@ -289,3 +290,4 @@
     return HB_WORK_OK;
 }
 #endif // USE_FAAC
+#endif /* 0 */
\ No newline at end of file
--- a/libhb/hb.c	
+++ b/libhb/hb.c	
@@ -1656,9 +1656,6 @@
     hb_register(&hb_encca_aac);
     hb_register(&hb_encca_haac);
 #endif
-#ifdef USE_FAAC
-    hb_register(&hb_encfaac);
-#endif
     hb_register(&hb_enclame);
     hb_register(&hb_enctheora);
     hb_register(&hb_encvorbis);
--- a/libhb/internal.h	
+++ b/libhb/internal.h	
@@ -410,7 +410,6 @@
     WORK_DECAVCODEC,
     WORK_DECAVCODECV,
     WORK_DECLPCM,
-    WORK_ENCFAAC,
     WORK_ENCLAME,
     WORK_ENCVORBIS,
     WORK_ENC_CA_AAC,
--- a/libhb/module.defs	
+++ b/libhb/module.defs	
@@ -1,4 +1,4 @@
-__deps__ := A52DEC BZIP2 FAAC FFMPEG FONTCONFIG FREETYPE LAME LIBASS LIBDCA \
+__deps__ := A52DEC BZIP2 FFMPEG FONTCONFIG FREETYPE LAME LIBASS LIBDCA \
     LIBDVDREAD LIBDVDNAV LIBICONV LIBMKV LIBOGG LIBSAMPLERATE LIBTHEORA LIBVORBIS LIBXML2 \
     MP4V2 MPEG2DEC PTHREADW32 X264 ZLIB LIBBLURAY FDKAAC
 
@@ -43,9 +43,6 @@
 ifeq (1,$(FEATURE.libav_aac))
 LIBHB.GCC.D += USE_LIBAV_AAC
 endif
-ifeq (1,$(FEATURE.faac))
-LIBHB.GCC.D += USE_FAAC
-endif
 ifeq (1,$(FEATURE.mp4v2))
 LIBHB.GCC.D += USE_MP4V2
 endif
@@ -119,10 +116,6 @@
 LIBHB.dll.libs += $(CONTRIB.build/)lib/libfdk-aac.a
 endif
 
-ifeq (1,$(FEATURE.faac))
-LIBHB.dll.libs += $(CONTRIB.build/)lib/libfaac.a
-endif
-
 ifeq (1,$(FEATURE.qsv))
 LIBHB.dll.libs += $(CONTRIB.build/)lib/libmfx.a
 endif
--- a/libhb/muxmkv.c	
+++ b/libhb/muxmkv.c	
@@ -263,7 +263,6 @@
                 }
                 track->codecID = MK_ACODEC_FLAC;
                 break;
-            case HB_ACODEC_FAAC:
             case HB_ACODEC_FFAAC:
             case HB_ACODEC_CA_AAC:
             case HB_ACODEC_CA_HAAC:
--- a/libhb/work.c	
+++ b/libhb/work.c	
@@ -135,7 +135,6 @@
     switch (codec)
     {
         case HB_ACODEC_AC3:     return hb_get_work(WORK_ENCAVCODEC_AUDIO);
-        case HB_ACODEC_FAAC:    return hb_get_work(WORK_ENCFAAC);
         case HB_ACODEC_LAME:    return hb_get_work(WORK_ENCLAME);
         case HB_ACODEC_VORBIS:  return hb_get_work(WORK_ENCVORBIS);
         case HB_ACODEC_CA_AAC:  return hb_get_work(WORK_ENC_CA_AAC);
--- a/test/module.defs	
+++ b/test/module.defs	
@@ -23,10 +23,6 @@
 TEST.GCC.l += fdk-aac
 endif
 
-ifeq (1,$(FEATURE.faac))
-TEST.GCC.l += faac
-endif
-
 ifeq (1,$(FEATURE.mp4v2))
 TEST.GCC.l += mp4v2
 endif
