--- ffmpeg-0.4.9-p20050226.orig/libavcodec/avcodec.h
+++ ffmpeg-0.4.9-p20050226/libavcodec/avcodec.h
@@ -1784,37 +1784,7 @@
 /**
  * AVOption.
  */
-typedef struct AVOption {
-    /** options' name */
-    const char *name; /* if name is NULL, it indicates a link to next */
-    /** short English text help or const struct AVOption* subpointer */
-    const char *help; //   const struct AVOption* sub;
-    /** offset to context structure where the parsed value should be stored */
-    int offset;
-    /** options' type */
-    int type;
-#define FF_OPT_TYPE_BOOL 1      ///< boolean - true,1,on  (or simply presence)
-#define FF_OPT_TYPE_DOUBLE 2    ///< double
-#define FF_OPT_TYPE_INT 3       ///< integer
-#define FF_OPT_TYPE_STRING 4    ///< string (finished with \0)
-#define FF_OPT_TYPE_MASK 0x1f   ///< mask for types - upper bits are various flags
-//#define FF_OPT_TYPE_EXPERT 0x20 // flag for expert option
-#define FF_OPT_TYPE_FLAG (FF_OPT_TYPE_BOOL | 0x40)
-#define FF_OPT_TYPE_RCOVERRIDE (FF_OPT_TYPE_STRING | 0x80)
-    /** min value  (min == max   ->  no limits) */
-    double min;
-    /** maximum value for double/int */
-    double max;
-    /** default boo [0,1]l/double/int value */
-    double defval;
-    /**
-     * default string value (with optional semicolon delimited extra option-list
-     * i.e.   option1;option2;option3
-     * defval might select other then first argument as default
-     */
-    const char *defstr;
-#define FF_OPT_MAX_DEPTH 10
-} AVOption;
+typedef struct AVOption AVOption;
 
 /**
  * Parse option(s) and sets fields in passed structure
--- ffmpeg-0.4.9-p20050226.orig/libavcodec/common.h
+++ ffmpeg-0.4.9-p20050226/libavcodec/common.h
@@ -54,7 +54,38 @@
 #define AVOPTION_SUB(ptr) { .name = NULL, .help = (const char*)ptr }
 #define AVOPTION_END() AVOPTION_SUB(NULL)
 
-struct AVOption;
+struct AVOption {
+    /** options' name */
+    const char *name; /* if name is NULL, it indicates a link to next */
+    /** short English text help or const struct AVOption* subpointer */
+    const char *help; //   const struct AVOption* sub;
+    /** offset to context structure where the parsed value should be stored */
+    int offset;
+    /** options' type */
+    int type;
+#define FF_OPT_TYPE_BOOL 1      ///< boolean - true,1,on  (or simply presence)
+#define FF_OPT_TYPE_DOUBLE 2    ///< double
+#define FF_OPT_TYPE_INT 3       ///< integer
+#define FF_OPT_TYPE_STRING 4    ///< string (finished with \0)
+#define FF_OPT_TYPE_MASK 0x1f   ///< mask for types - upper bits are various flags
+//#define FF_OPT_TYPE_EXPERT 0x20 // flag for expert option
+#define FF_OPT_TYPE_FLAG (FF_OPT_TYPE_BOOL | 0x40)
+#define FF_OPT_TYPE_RCOVERRIDE (FF_OPT_TYPE_STRING | 0x80)
+    /** min value  (min == max   ->  no limits) */
+    double min;
+    /** maximum value for double/int */
+    double max;
+    /** default boo [0,1]l/double/int value */
+    double defval;
+    /**
+     * default string value (with optional semicolon delimited extra option-list
+     * i.e.   option1;option2;option3
+     * defval might select other then first argument as default
+     */
+    const char *defstr;
+#define FF_OPT_MAX_DEPTH 10
+};
+
 #ifdef HAVE_MMX
 extern const struct AVOption avoptions_common[3 + 5];
 #else 
--- ffmpeg-0.4.9-p20050226/libavcodec/libpostproc/postprocess_template.c	2005-04-25 13:48:06.000000000 +0000
+++ ffmpeg-0.4.9-p20050226.az/libavcodec/libpostproc/postprocess_template.c	2005-04-25 13:53:55.000000000 +0000
@@ -611,6 +611,7 @@
 static inline void RENAME(doVertDefFilter)(uint8_t src[], int stride, PPContext *c)
 {
 #if defined (HAVE_MMX2) || defined (HAVE_3DNOW)
+	PPContext *ptr_c_pQPb = c->pQPb;
 /*
 	uint8_t tmp[16];
 	const int l1= stride;
@@ -832,7 +833,7 @@
 		"movq %%mm2, (%0, %1, 4)			\n\t"
 
 		:
-		: "r" (src), "r" ((long)stride), "m" (c->pQPb)
+		: "r" (src), "r" ((long)stride), "m" (ptr_c_pQPb)
 		: "%"REG_a, "%"REG_c
 	);
 
@@ -2758,6 +2759,7 @@
 	if(dc_mask & eq_mask){
 		long offset= -8*step;
 		int64_t *temp_sums= sums;
+		int64_t dc_eq_mask = dc_mask & eq_mask;
 
 		asm volatile(
 		"movq %2, %%mm0					\n\t"  // QP,..., QP
@@ -2930,7 +2932,7 @@
 		" js 1b						\n\t"
 
 		: "+r"(offset), "+r"(temp_sums)
-		: "r" ((long)step), "r"(src - offset), "m"(dc_mask & eq_mask)
+		: "r" ((long)step), "r"(src - offset), "m"(dc_eq_mask)
 		);
 	}else
 		src+= step; // src points to begin of the 8x8 Block
