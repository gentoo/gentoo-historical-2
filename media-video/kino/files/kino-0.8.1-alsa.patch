diff -Nadurp kino-0.8.1.orig/configure kino-0.8.1/configure
--- kino-0.8.1.orig/configure	2006-05-29 23:36:07.000000000 +0200
+++ kino-0.8.1/configure	2006-05-29 23:39:58.000000000 +0200
@@ -22702,68 +22702,9 @@ fi
 
 # ALSA
 
-pkg_failed=no
-echo "$as_me:$LINENO: checking for ALSA" >&5
-echo $ECHO_N "checking for ALSA... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"alsa >= 1.0.9\"") >&5
-  ($PKG_CONFIG --exists --print-errors "alsa >= 1.0.9") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_ALSA_CFLAGS=`$PKG_CONFIG --cflags "alsa >= 1.0.9" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"alsa >= 1.0.9\"") >&5
-  ($PKG_CONFIG --exists --print-errors "alsa >= 1.0.9") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_ALSA_LIBS=`$PKG_CONFIG --libs "alsa >= 1.0.9" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	ALSA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "alsa >= 1.0.9"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$ALSA_PKG_ERRORS" 1>&5
-
-
-	{ echo "$as_me:$LINENO: WARNING: $ALSA_PKG_ERRORS" >&5
-echo "$as_me: WARNING: $ALSA_PKG_ERRORS" >&2;}
-
-elif test $pkg_failed = untried; then
-
-	{ echo "$as_me:$LINENO: WARNING: $ALSA_PKG_ERRORS" >&5
-echo "$as_me: WARNING: $ALSA_PKG_ERRORS" >&2;}
-
-else
-	ALSA_CFLAGS=$pkg_cv_ALSA_CFLAGS
-	ALSA_LIBS=$pkg_cv_ALSA_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-
-
-
-
-cat >>confdefs.h <<\_ACEOF
-#define HAVE_ALSA 1
-_ACEOF
-
+echo "Not using ALSA" >&5
+echo "Not using ALSA" >&6
 
-fi
 
 # LIBQUICKTIME
 
