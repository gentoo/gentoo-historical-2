diff -ru usr/src/nv/nv-vm.c usr/src/nv.1392404/nv-vm.c
--- usr/src/nv/nv-vm.c	2005-07-29 22:51:11.000000000 +0200
+++ usr/src/nv.1392404/nv-vm.c	2005-10-18 23:25:09.868215136 +0200
@@ -261,10 +261,14 @@
             {
                 nv_printf(NV_DBG_ERRORS,
                     "NVRM: VM: nv_vm_malloc_pages: failed to sg map pages\n");
+                NV_UNLOCK_PAGE(page_ptr);
+                if (!NV_ALLOC_MAPPING_VMALLOC(at->flags))
+                    NV_FREE_PAGES(virt_addr, 0);
+                i--;
                 goto failed;
             }
         }
-        nv_sg_load(&at->page_table[i]->sg_list, page_ptr);
+        nv_sg_load(&page_ptr->sg_list, page_ptr);
 
         if (NV_ALLOC_MAPPING_VMAP(at->flags))
             pages[i] = NV_GET_PAGE_STRUCT(page_ptr->phys_addr);
@@ -303,9 +307,9 @@
 
 failed:
 
-    for (j = 0; j <= i; j++)
+    for (j = 1; j <= (i+1); j++)
     {
-        page_ptr = at->page_table[j];
+        page_ptr = at->page_table[j-1];
 
         // if we failed when allocating this page, skip over it
         // but if we failed pci_map_sg, make sure to free this page
@@ -316,7 +320,7 @@
                 NV_SET_PAGE_ATTRIB_CACHED(page_ptr);
 #if defined(NV_SG_MAP_BUFFERS)
             if (!NV_ALLOC_MAPPING_CONTIG(at->flags))
-                nv_sg_unmap_buffer(dev, &at->page_table[j]->sg_list, page_ptr);
+                nv_sg_unmap_buffer(dev, &page_ptr->sg_list, page_ptr);
 #endif
             if (!NV_ALLOC_MAPPING_CONTIG(at->flags) && !NV_ALLOC_MAPPING_VMALLOC(at->flags))
                 NV_FREE_PAGES(page_ptr->virt_addr, 0);
@@ -340,7 +344,7 @@
 
 #if defined(NV_SG_MAP_BUFFERS)
     if (NV_ALLOC_MAPPING_VMAP(at->flags) && pages != 0)
-        NV_VFREE((void *)pages, sizeof(struct page *) * at->num_pages);
+        NV_KFREE((void *)pages, sizeof(struct page *) * at->num_pages);
 #endif
 
     return -1;
@@ -408,7 +412,7 @@
         if (NV_ALLOC_MAPPING_VMAP(at->flags))
             page_ptr->virt_addr = (unsigned long) __va(page_ptr->phys_addr);
         if (!NV_ALLOC_MAPPING_CONTIG(at->flags))
-            nv_sg_unmap_buffer(dev, &at->page_table[i]->sg_list, page_ptr);
+            nv_sg_unmap_buffer(dev, &page_ptr->sg_list, page_ptr);
 #endif
         if (!NV_ALLOC_MAPPING_CONTIG(at->flags) && !NV_ALLOC_MAPPING_VMALLOC(at->flags))
             NV_FREE_PAGES(page_ptr->virt_addr, 0);
