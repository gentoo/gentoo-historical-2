--- avidemux-2.0.38rc2b/configure.in.in	2005-04-19 12:14:50.903448208 +0200
+++ avidemux-2.0.38rc2b-mmx/configure.in.in	2005-04-19 12:29:49.831790328 +0200
@@ -665,20 +665,20 @@
 adm_cpu=`uname -m`;
 dnl reset config.cpu, avoid weird bugs
 echo "CPU type : $adm_cpu"
-use_mmx=0
+use_mmx=no
 case $adm_cpu in
 	i386|i486|i586|i686)
-		use_mmx=1
+		use_mmx=yes
 		have_little_endian=yes;
 		AC_DEFINE(CONFIG_X86,1,[FFMPEG])
 		AC_DEFINE(ARCH_X86,1,[post proc])
 		LMPG_OPT=-DARCH_X86
 		have_x86=yes
-		AC_ARG_ENABLE(mmx,[  --disable-mmx           don't use MMX acceleration],use_mmx=0)
-		
-
+		AC_ARG_ENABLE([mmx],
+			AC_HELP_STRING([--disable-mmx], [disable MMX acceleration support]),
+			[ use_mmx=${enableval} ], [ use_mmx=yes ])
 
-		if test "x$use_mmx" = "x1"; then
+		if test "x$use_mmx" = "xyes"; then
 		AC_DEFINE(USE_MMX,1,"Use MMX acceleration")
 		AC_DEFINE(HAVE_ASM_MMX,1,"Use MMX acceleration")
 		AC_DEFINE(HAVE_MMX,1,"Use MMX acceleration")
@@ -746,10 +746,13 @@
 		dnl we assume to be on linux-ish system here
 		AC_DEFINE(restrict,__restrict__,[roundup function])
 		AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian cpu  sparc or powerpc])
-		AC_DEFINE(ARCH_POWERPC,1,[Enable powerpc optim])		
-		AC_ARG_ENABLE(altivec,[  --enable-altivec           enable  altivec acceleration(ppc)],have_altivec=yes)
+		AC_DEFINE(ARCH_POWERPC,1,[Enable powerpc optim])
+		
+		AC_ARG_ENABLE([altivec],
+			AC_HELP_STRING([--enable-altivec], [enable altivec acceleration (ppc)]),
+			[ have_altivec=${enableval} ], [ have_altivec=no ] )
+		
 		AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian cpu  sparc or powerpc]);;
-
 	*)
 		adm_cpu=`uname -p`;
 		case $adm_cpu in
@@ -769,7 +772,9 @@
 			AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian cpu  sparc or powerpc])
 			AC_DEFINE(CONFIG_DARWIN,0,[Say to ffmpeg we are using darwin macOsX])
 			AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian cpu  sparc or powerpc])
-			AC_ARG_ENABLE(altivec,[  --enable-altivec           enable  altivec acceleration(ppc)],have_altivec=yes)
+			AC_ARG_ENABLE([altivec],
+				AC_HELP_STRING([--enable-altivec], [enable altivec acceleration (ppc)]),
+				[ have_altivec=${enableval} ], [ have_altivec=no ] )
 			AC_DEFINE(ARCH_POWERPC,1,[Enable powerpc optim])
 			have_ppc=yes;;
 			*)
@@ -847,9 +852,9 @@
 dnl __________ conditional ___________________
 
 AM_CONDITIONAL(HAVE_NASM, test "x$have_nasm" = "xyes")
-AM_CONDITIONAL(BUILD_MMX, test "x$use_mmx" = "x1")
+AM_CONDITIONAL(BUILD_MMX, test "x$use_mmx" = "xyes")
 
-AM_CONDITIONAL(BUILD_MMX_COMPATIBLE, test "x$use_mmx" = "x1" || test "x$have_amd64" = "xyes")
+AM_CONDITIONAL(BUILD_MMX_COMPATIBLE, test "x$use_mmx" = "xyes" || test "x$have_amd64" = "xyes")
 
 AM_CONDITIONAL(BUILD_DARWIN, test "x$have_darwin" = "xyes")
 AM_CONDITIONAL(BUILD_PPC, test "x$have_ppc" = "xyes")
@@ -929,11 +934,7 @@
 echo " FreeType            : $have_freetype"
 echo " locale              : $ADM_LOCALEDIR"
 echo " Little endian cpu   : $have_little_endian"
-if test "x$use_mmx" = "x1"; then
-echo " MMX                 : yes"
-else
-echo " MMX                 : no"
-fi
+echo " MMX                 : $use_mmx"
 echo " AMD64               : $have_amd64"
 echo " Altivec             : $have_altivec"
 echo " PPC                 : $have_ppc"
