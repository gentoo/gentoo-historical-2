Index: configure.in
===================================================================
--- configure.in	(revision 3154)
+++ configure.in	(revision 3155)
@@ -798,17 +798,25 @@ dnl Check for liblzo
 dnl
   AC_ARG_ENABLE([lzo],
     [  --enable-lzo            compile in support for LZO compression (auto)])
-  if test x"$enable_lzo" = x"yes" -o x"$enable_lzo" = "x"; then
-    AC_CHECK_LIB(lzo, lzo1x_1_compress,
-                 [ LZO_LIBS="-llzo"
+  if test "x$enable_lzo" != "xno"; then
+    AC_CHECK_LIB(lzo2, lzo1x_1_compress,
+                 [ LZO_LIBS="-llzo2"
                    lzo_found=yes ],
-                 [ lzo_found=no ],)
-    if test "$lzo_found" = "yes"; then
-      AC_CHECK_HEADERS(lzo1x.h, , lzo_found=no)
+                 [ AC_CHECK_LIB(lzo, lzo1x_1_compress,
+                                [ LZO_LIBS="-llzo"
+                                  lzo_found=yes ],
+                                [ lzo_found=no ],)
+                 ],)
+    if test "x$lzo_found" = "xyes"; then
+      AC_CHECK_HEADERS([lzo1x.h lzo/lzo1x.h])
+      if test "x$ac_cv_header_lzo1x_h" != "xyes" && "x$ac_cv_header_lzo_lzo1x_h" != "xyes"; then
+        lzo_found=no
+      fi
     fi
   fi
   if test x"$lzo_found" = xyes ; then
     opt_features_yes="$opt_features_yes; LZO compression"
+    AC_DEFINE([HAVE_LZO], [1], [Define this if LZO compression is present])
   else
     opt_features_no="$opt_features_no; LZO compression"
   fi
Index: src/merge/mkvmerge.cpp
===================================================================
--- src/merge/mkvmerge.cpp	(revision 3154)
+++ src/merge/mkvmerge.cpp	(revision 3155)
@@ -277,7 +277,7 @@ print_capabilities() {
 #if defined(HAVE_BZLIB_H)
   mxinfo("BZ2\n");
 #endif
-#if defined(HAVE_LZO1X_H)
+#if defined(HAVE_LZO)
   mxinfo("LZO\n");
 #endif
 #if defined(HAVE_FLAC_FORMAT_H)
@@ -901,7 +901,7 @@ parse_compression(const string &s,
 
   ti.compression_list[id] = COMPRESSION_UNSPECIFIED;
   parts[1] = downcase(parts[1]);
-#ifdef HAVE_LZO1X_H
+#ifdef HAVE_LZO
   if ((parts[1] == "lzo") || (parts[1] == "lzo1x"))
     ti.compression_list[id] = COMPRESSION_LZO;
 #endif
Index: src/common/compression.h
===================================================================
--- src/common/compression.h	(revision 3154)
+++ src/common/compression.h	(revision 3155)
@@ -80,8 +80,13 @@ public:
   static compressor_ptr create(const char *method);
 };
 
-#if defined(HAVE_LZO1X_H)
-#include <lzo1x.h>
+#ifdef HAVE_LZO
+
+#ifdef HAVE_LZO_LZO1X_H
+# include <lzo/lzo1x.h>
+#else
+# include <lzo1x.h>
+#endif
 
 class MTX_DLL_API lzo_compressor_c: public compressor_c {
 protected:
@@ -94,7 +99,7 @@ public:
   virtual void decompress(memory_cptr &buffer);
   virtual void compress(memory_cptr &buffer);
 };
-#endif // HAVE_LZO1X_H
+#endif // HAVE_LZO
 
 #if defined(HAVE_ZLIB_H)
 #include <zlib.h>
Index: src/common/compression.cpp
===================================================================
--- src/common/compression.cpp	(revision 3154)
+++ src/common/compression.cpp	(revision 3155)
@@ -40,8 +40,13 @@ static const int compression_method_map[
 
 // ---------------------------------------------------------------------
 
-#if defined(HAVE_LZO1X_H)
-#include <lzoutil.h>
+#ifdef HAVE_LZO
+
+#ifdef HAVE_LZO_LZO1X_H
+# include <lzo/lzoutil.h>
+#else
+# include <lzoutil.h>
+#endif
 
 lzo_compressor_c::lzo_compressor_c():
   compressor_c(COMPRESSION_LZO) {
@@ -88,7 +93,7 @@ lzo_compressor_c::compress(memory_cptr &
   buffer = memory_cptr(new memory_c(dst, dstsize, true));
 }
 
-#endif // HAVE_LZO1X_H
+#endif // HAVE_LZO
 
 // ---------------------------------------------------------------------
 
