diff -Nur Jubler-3.3.0/build.xml Jubler-3.3.0_patched/build.xml
--- Jubler-3.3.0/build.xml	2007-07-21 19:32:19.000000000 +0300
+++ Jubler-3.3.0_patched/build.xml	2007-08-04 03:00:30.000000000 +0300
@@ -69,22 +69,6 @@
 
 
 
-	<!-- Define new ant tasks -->
-
-	<taskdef name="izpack"
-		onerror="report"
-		classpath="../TOOLS/IzPack/standalone-compiler.jar"
-		classname="com.izforge.izpack.ant.IzPackTask"/>
-
-	<taskdef name="launch4j"
-		onerror="report"
-		classpath="../TOOLS/launch4j/launch4j.jar:../TOOLS/launch4j/lib/xstream.jar" 
-		classname="net.sf.launch4j.ant.Launch4jTask"/>
-	
-	<taskdef name="jarbundler"
-		onerror="report"
-		classpath="../TOOLS/jarbundler/jarbundler-1.9.jar"
-		classname="net.sourceforge.jarbundler.JarBundler" />
 
 
 
@@ -407,9 +391,6 @@
 	</target>
 	
 	<target name="noMacSystem" depends="findsystem" if="isNotMac">
-		<copy todir="src/com">
-			<fileset dir="resources/system/no_mac"/>
-		</copy>
 	</target>
 
 	<target name="MacSystem" depends="findsystem" if="isMac">
diff -Nur Jubler-3.3.0/resources/ffdecode/Makefile Jubler-3.3.0_patched/resources/ffdecode/Makefile
--- Jubler-3.3.0/resources/ffdecode/Makefile	2007-07-19 01:30:08.000000000 +0300
+++ Jubler-3.3.0_patched/resources/ffdecode/Makefile	2007-08-04 05:13:00.000000000 +0300
@@ -12,9 +12,6 @@
 # Name of the produced library
 PROJ=ffdecode
 
-# Paths of include files
-JAVA_HOME=${shell /bin/sh ../system/findjava.sh -j}
-
 # Path of the local ffmpeg source structure (already inside the source version of Jubler)
 FFMPEG=../ffmpeg-svn
 
@@ -41,11 +38,7 @@
 OBJS=${SRCS:.c=.o}
 
 
-ifeq (${CFLAGS},)
-	COMPFLAGS=-std=c99 -pedantic -O3 -Wall
-else
-	COMPFLAGS=${CFLAGS}
-endif
+COMPFLAGS=${CFLAGS} -std=c99 -pedantic -Wall -fPIC
 
 ifeq (${STATIC},no)
 	FFMPEGREQ=
@@ -101,7 +94,6 @@
 
 FCONFCOMMON=--disable-debug --enable-gpl --enable-a52 --disable-ffmpeg --disable-ffserver --disable-ffplay --disable-encoders --disable-vhook --disable-ipv6 --disable-network --disable-dv1394 --disable-bktr --disable-v4l2 --disable-v4l --disable-audio-beos --disable-audio-oss
 
-CC=${PREF}gcc ${ARCH}
 RANLIB=${PREF}ranlib
 
 
@@ -155,8 +147,7 @@
 LIB:${LIBNAME}
 
 ${LIBNAME}:${FFMPEGREQ} ${OBJS} ${RANLIBREQ}
-	${LD} ${ARCH} -o ${LIBNAME} ${OBJS} ${LIBS}
-	${STRIP} ${LIBNAME}
+	${LD} -o ${LIBNAME} ${OBJS} ${LIBS}
 
 
 clean:
diff -Nur Jubler-3.3.0/src/com/panayotis/jubler/information/HelpBrowser.java Jubler-3.3.0_patched/src/com/panayotis/jubler/information/HelpBrowser.java
--- Jubler-3.3.0/src/com/panayotis/jubler/information/HelpBrowser.java	2007-07-19 01:30:05.000000000 +0300
+++ Jubler-3.3.0_patched/src/com/panayotis/jubler/information/HelpBrowser.java	2007-08-04 03:18:39.000000000 +0300
@@ -31,7 +31,7 @@
         
         history = new ArrayList<String>();
         
-        String initpage = "file:"+SystemFileFinder.getJublerAppPath()+"/help/jubler-faq.html";
+        String initpage = "file:"+SystemFileFinder.getJublerAppPath()+"/../help/jubler-faq.html";
         setPage(initpage);
         history.add(initpage);
         
diff -Nur Jubler-3.3.0/src/com/panayotis/jubler/os/SystemDependent.java Jubler-3.3.0_patched/src/com/panayotis/jubler/os/SystemDependent.java
--- Jubler-3.3.0/src/com/panayotis/jubler/os/SystemDependent.java	2007-07-21 19:23:13.000000000 +0300
+++ Jubler-3.3.0_patched/src/com/panayotis/jubler/os/SystemDependent.java	2007-08-04 03:39:16.000000000 +0300
@@ -25,10 +25,6 @@
 
 import static com.panayotis.jubler.i18n.I18N._;
 
-import com.apple.eawt.Application;
-import com.apple.eawt.ApplicationAdapter;
-import com.apple.eawt.ApplicationEvent;
-
 import com.panayotis.jubler.Jubler;
 import com.panayotis.jubler.Main;
 import com.panayotis.jubler.StaticJubler;
@@ -50,23 +46,6 @@
  */
 public class SystemDependent {
     
-    private final static String OS;
-    
-    static {
-        OS = System.getProperty("os.name").toLowerCase();
-    }
-    
-    private static boolean isLinux() {
-        return OS.indexOf("linux") >= 0;
-    }
-    
-    private static boolean isWindows() {
-        return OS.indexOf("windows") >= 0;
-    }
-    private static boolean isMacOSX() {
-        return OS.indexOf("mac") >= 0;
-    }
-    
     public static int getSliderLOffset() {
         return 7;
     }
@@ -77,15 +56,6 @@
     
     
     public final static void setLookAndFeel() {
-        try {
-            if (isWindows() || isMacOSX()) {
-                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
-            }
-        } catch ( ClassNotFoundException e ) {
-        } catch ( InstantiationException e ) {
-        } catch (IllegalAccessException e) {
-        } catch (UnsupportedLookAndFeelException e) {
-        }
     }
     
     
@@ -95,25 +65,16 @@
      * In Unix-like O.S. there shouldn't be a problem.
      */
     public static boolean shouldWaitForProccess() {
-        return !isWindows();
+        return true;
     }
     
     
     
     public static void hideSystemMenus(JMenuItem about, JMenuItem prefs, JMenuItem quit) {
-        if (isMacOSX()) {
-            about.setVisible(false);
-            prefs.setVisible(false);
-            quit.setVisible(false);
-        }
     }
     
     
     public static void initApplication() {
-        /* In Linux this is a dummy function */
-        if (isMacOSX()) {
-            JublerApp japp = new JublerApp();
-        }
     }
     
     
@@ -121,16 +82,6 @@
         return 4;
     }
     public static String getKeyMods(boolean [] mods) {
-        if (isMacOSX()) {
-            StringBuffer res = new StringBuffer();
-            if (mods[0]) res.append("\u2318");
-            if (mods[1]) res.append("\u2325");
-            if (mods[2]) res.append("\u2303");
-            if (mods[3]) res.append("\u21e7");
-            if (res.length()>0) res.append(' ');
-            return res.toString();
-        }
-        
         StringBuffer res = new StringBuffer();
         if (mods[0]) res.append("+Meta");
         if (mods[1]) res.append("+Alt");
@@ -144,29 +95,19 @@
     }
     
     public static int getDefaultKeyModifier() {
-        if (isMacOSX()) return 0;
         return 2;
     }
     
     public static String getCanonicalFilename(String filename) {
-        if (isWindows()) return filename.toLowerCase()+".exe";
         return filename.toLowerCase();
     }
     
     public static int getBundleOrFileID() {
-        if (isMacOSX()) return ExtPath.BUNDLE_ONLY;
         return ExtPath.FILE_ONLY;
     }
     
     public static void openURL(String url) {
         try {
-            if (isMacOSX()) {
-                Class fileMgr = Class.forName("com.apple.eio.FileManager");
-                Method openURL = fileMgr.getDeclaredMethod("openURL", new Class[] {String.class});
-                openURL.invoke(null, new Object[] {url});
-            } else if (isWindows())
-                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + url);
-            else { //assume Unix or Linux
                 String[] browsers = {
                     "firefox", "konqueror", "opera", "epiphany", "mozilla", "netscape" };
                 String browser = null;
@@ -178,30 +119,14 @@
                     throw new Exception(_("Could not find web browser"));
                 else
                     Runtime.getRuntime().exec(new String[] {browser, url});
-            }
         } catch (Exception e) {
             DEBUG.warning("URL selected: " + url);
         }
     }
     
     public static String getDefaultMPlayerArgs() {
-        String fontconfig = "";
-        String font = "";
-        
-        if (isLinux()) {
-            font = " -font %f";
-            fontconfig=" -fontconfig";
-        } else {
-            if (isWindows()) {
-                font=" -font c:\\Windows\\fonts\\arial.ttf";
-            } else {
-                File freesans = new File(SystemFileFinder.getJublerAppPath()+"/lib/freesans.ttf");
-                if (freesans.exists()) {
-                    font = " -font %j/lib/freesans.ttf";
-                }
-            }
-        }
-        
+        String font = " -font %f";
+        String fontconfig=" -fontconfig";
         return "%p -slave -identify -ontop -utf8 -noquiet -nofs"+fontconfig+" -subfont-autoscale 0 -volstep 10"+
                 " -sub %s -ss %t -geometry +%x+%y"+font+" -subfont-text-scale %z %(-audiofile %a%) %v";
     }
@@ -209,7 +134,7 @@
     
     /* Force ASpell to use UTF-8 encoding - broken on Windows */
     public static boolean forceASpellEncoding() {
-        return !isWindows();
+        return true;
     }
     
     
@@ -218,26 +143,9 @@
      * Under other platforms does not do anything
      */
     public static void appendSpotlightApplication(String name, Vector<ExtPath> res) {
-        if (!isMacOSX()) return;
-        if (name==null) return;
-        Process proc = null;
-        String[] cmd = new String[2];
-        cmd[0] = "mdfind";
-        cmd[1] = "kMDItemDisplayName == '"+name+"*'";   // Use this trick to avoid spaces problems inside the filename
-        try {
-            String line;
-            proc = Runtime.getRuntime().exec(cmd);
-            proc.waitFor();
-            BufferedReader in = new BufferedReader(new InputStreamReader(proc.getInputStream()));
-            while ( (line = in.readLine()) != null) {
-                if (line.endsWith(".app"))
-                    res.add(new ExtPath(line, ExtPath.BUNDLE_ONLY));
-            }
-        } catch (Exception ex) {}
     }
     
     public static void appendLocateApplication(String name, Vector<ExtPath> res) {
-        if (isWindows()) return;
         if (name==null) return;
         
         name = name.toLowerCase();
@@ -271,36 +179,3 @@
     }
     
 }
-
-
-
-class JublerApp extends Application {
-    public JublerApp() {
-        setEnabledPreferencesMenu(true);
-        addApplicationListener(new ApplicationHandler());
-    }
-}
-
-class ApplicationHandler extends ApplicationAdapter {
-    
-    public ApplicationHandler() {}
-    
-    public void handleAbout(ApplicationEvent event) {
-        StaticJubler.showAbout();
-        event.setHandled(true);
-    }
-    
-    public void handlePreferences(ApplicationEvent event) {
-        Jubler.prefs.showPreferencesDialog();
-        event.setHandled(true);
-    }
-    
-    public void handleQuit(ApplicationEvent event) {
-        StaticJubler.quitAll();
-        event.setHandled(true);
-    }
-    
-    public void handleOpenFile(ApplicationEvent event) {
-        Main.asyncAddSubtitle(event.getFilename());
-    }
-}
diff -Nur Jubler-3.3.0/src/com/panayotis/jubler/os/SystemFileFinder.java Jubler-3.3.0_patched/src/com/panayotis/jubler/os/SystemFileFinder.java
--- Jubler-3.3.0/src/com/panayotis/jubler/os/SystemFileFinder.java	2007-07-19 01:30:05.000000000 +0300
+++ Jubler-3.3.0_patched/src/com/panayotis/jubler/os/SystemFileFinder.java	2007-08-04 03:34:35.000000000 +0300
@@ -58,15 +58,12 @@
     }
     
     public static boolean loadLibrary(String name) {
-        File libfile = findFile("lib"+pathseparator+System.mapLibraryName(name));
-        if (libfile!=null) {
             try {
-                System.load(libfile.getAbsolutePath());
+                System.loadLibrary(name);
                 return true;
             } catch (UnsatisfiedLinkError e) {
                 e.printStackTrace();
             }
-        }
         return false;
     }
     
