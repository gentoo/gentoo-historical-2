http://code.google.com/p/ffmpegthumbnailer/issues/detail?id=24

Index: src/libffmpegthumbnailer/moviedecoder.cpp
===================================================================
--- src/libffmpegthumbnailer/moviedecoder.cpp	(revision 111)
+++ src/libffmpegthumbnailer/moviedecoder.cpp	(revision 112)
@@ -300,7 +300,7 @@
     memcpy((&(videoFrame.frameData.front())), m_pFrame->data[0], videoFrame.lineSize * videoFrame.height);
 }
 
-void MovieDecoder::convertAndScaleFrame(int format, int scaledSize, bool maintainAspectRatio, int& scaledWidth, int& scaledHeight)
+void MovieDecoder::convertAndScaleFrame(PixelFormat format, int scaledSize, bool maintainAspectRatio, int& scaledWidth, int& scaledHeight)
 {
     calculateDimensions(m_pVideoCodecContext->width, m_pVideoCodecContext->height, scaledSize, maintainAspectRatio, scaledWidth, scaledHeight);
     SwsContext* scaleContext = sws_getContext(m_pVideoCodecContext->width, m_pVideoCodecContext->height,
Index: src/libffmpegthumbnailer/moviedecoder.h
===================================================================
--- src/libffmpegthumbnailer/moviedecoder.h	(revision 111)
+++ src/libffmpegthumbnailer/moviedecoder.h	(revision 112)
@@ -61,7 +61,7 @@
 
     bool decodeVideoPacket();
     bool getVideoPacket();
-    void convertAndScaleFrame(int format, int scaledSize, bool maintainAspectRatio, int& scaledWidth, int& scaledHeight);
+    void convertAndScaleFrame(PixelFormat format, int scaledSize, bool maintainAspectRatio, int& scaledWidth, int& scaledHeight);
     void createAVFrame(AVFrame** avFrame, int width, int height, int format);
     void calculateDimensions(int srcWidth, int srcHeight, int squareSize, bool maintainAspectRatio, int& destWidth, int& destHeight);
 
