Index: alsa-lib-1.0.10/configure.in
===================================================================
--- alsa-lib-1.0.10.orig/configure.in
+++ alsa-lib-1.0.10/configure.in
@@ -142,9 +142,11 @@ AC_MSG_CHECKING(for architecture)
 case "$target" in
 i?86*)
   AC_MSG_RESULT(x86)
+  x86asm="true"
   ;;
 x86_64*)
   AC_MSG_RESULT(x86)
+  x86asm="true"
   ;;
 alpha*)
   AC_MSG_RESULT(alpha)
@@ -171,6 +173,10 @@ arm*)
   ;;
 esac
 
+dnl Enable code command only for x86 or amd64 arches, as the others
+dnl does not accept i386 asm.
+AM_CONDITIONAL(X86ASM, test x$x86asm = xtrue)
+
 dnl Check for resmgr support...
 AC_MSG_CHECKING(for resmgr support)
 AC_ARG_ENABLE(resmgr,
Index: alsa-lib-1.0.10/test/latency.c
===================================================================
--- alsa-lib-1.0.10.orig/test/latency.c
+++ alsa-lib-1.0.10/test/latency.c
@@ -476,7 +476,7 @@ void help(void)
 "-e,--effect    apply an effect (bandpass filter sweep)\n"
 );
         printf("Recognized sample formats are:");
-        for (k = 0; k < SND_PCM_FORMAT_LAST; ++(unsigned long) k) {
+        for (k = 0; k < SND_PCM_FORMAT_LAST; k++) {
                 const char *s = snd_pcm_format_name(k);
                 if (s)
                         printf(" %s", s);
Index: alsa-lib-1.0.10/test/pcm.c
===================================================================
--- alsa-lib-1.0.10.orig/test/pcm.c
+++ alsa-lib-1.0.10/test/pcm.c
@@ -716,7 +716,7 @@ static void help(void)
 "-v,--verbose   show the PCM setup parameters\n"
 "\n");
         printf("Recognized sample formats are:");
-        for (k = 0; k < SND_PCM_FORMAT_LAST; ++(unsigned long) k) {
+        for (k = 0; k < SND_PCM_FORMAT_LAST; k++) {
                 const char *s = snd_pcm_format_name(k);
                 if (s)
                         printf(" %s", s);
Index: alsa-lib-1.0.10/test/Makefile.am
===================================================================
--- alsa-lib-1.0.10.orig/test/Makefile.am
+++ alsa-lib-1.0.10/test/Makefile.am
@@ -1,6 +1,10 @@
+if X86ASM
+codeprogram = code
+endif
+
 check_PROGRAMS=control pcm latency seq \
 	       playmidi1 timer rawmidi midiloop \
-	       code oldapi queue_timer
+	       $(codeprogram) oldapi queue_timer
 
 control_LDADD=../src/libasound.la
 pcm_LDADD=../src/libasound.la
