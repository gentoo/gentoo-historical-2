Index: alsa-lib-1.0.10rc3/test/Makefile.am
===================================================================
--- alsa-lib-1.0.10rc3.orig/test/Makefile.am
+++ alsa-lib-1.0.10rc3/test/Makefile.am
@@ -1,6 +1,6 @@
 check_PROGRAMS=control pcm latency seq \
 	       playmidi1 timer rawmidi midiloop \
-	       omixer code oldapi queue_timer
+	       code oldapi queue_timer
 
 control_LDADD=../src/libasound.la
 pcm_LDADD=../src/libasound.la
@@ -10,7 +10,6 @@ playmidi1_LDADD=../src/libasound.la
 timer_LDADD=../src/libasound.la
 rawmidi_LDADD=../src/libasound.la
 midiloop_LDADD=../src/libasound.la
-omixer_LDADD=../src/libasound.la
 oldapi_LDADD=../src/libasound.la
 queue_timer_LDADD=../src/libasound.la
 code_CFLAGS=-Wall -pipe -g -O2
Index: alsa-lib-1.0.10rc3/test/code.c
===================================================================
--- alsa-lib-1.0.10rc3.orig/test/code.c
+++ alsa-lib-1.0.10rc3/test/code.c
@@ -96,8 +96,8 @@ void mix_areas_srv(unsigned int size,
 {
         while (size-- > 0) {
                 atomic_add(sum, *src);
-                ((char*)src) += src_step;
-                ((char*)sum) += sum_step;
+		src = (((char*)src) + src_step);
+		sum = (((char*)sum) + sum_step);
         }
 }
 
@@ -113,8 +113,8 @@ void saturate(unsigned int size,
                         *dst = 0x7fff;
                 else
                         *dst = sample;
-                ((char*)dst) += dst_step;
-                ((char*)sum) += sum_step;
+		dst = (((char*)dst) + dst_step);
+		sum = (((char*)sum) + sum_step);
         }
 }
 
@@ -133,9 +133,9 @@ void mix_areas0(unsigned int size,
 			*dst = 0x7fff;
 		else
 			*dst = sample;
-		((char *)dst) += dst_step;
-		((char *)src) += src_step;
-		((char *)sum) += sum_step;
+		dst = (((char*)dst) + dst_step);
+		src = (((char*)src) + src_step);
+		sum = (((char*)sum) + sum_step);
 	}
 }
 
@@ -167,8 +167,8 @@ void mix_areas2(unsigned int size,
 				*dst = sample;
 		} while (unlikely(sample != *sum));
 		sum++;
-		((char *)dst) += dst_step;
-		((char *)src) += src_step;
+		dst = (((char*)dst) + dst_step);
+		src = (((char*)src) + src_step);
 	}
 }
 
