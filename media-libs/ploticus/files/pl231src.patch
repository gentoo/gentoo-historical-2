diff -ru pl231src.orig/src/Makefile pl231src/src/Makefile
--- pl231src.orig/src/Makefile	2005-02-03 22:17:43.000000000 +0100
+++ pl231src/src/Makefile	2005-06-01 14:58:22.000000000 +0200
@@ -123,11 +123,11 @@
 #### For PNG (only) uncomment the following.. (this will use a version of GD that comes
 #### bundled with ploticus; you need to have libpng and zlib ).  Set GD16H if your
 #### png.h or other header files are in a nonstandard place, eg GD16H = -I/home/scg/lib
-ploticus: plpng 
-PLPNG = pl 
-GD16LIBS = -lpng -lz
-GD16H = 
-ZFLAG = -DWZ
+# ploticus: plpng 
+# PLPNG = pl 
+# GD16LIBS = -lpng -lz
+# GD16H = 
+# ZFLAG = -DWZ
 
 
 #### For pseudo-GIF (only) uncomment the following..  (this will use a version of GD that
@@ -149,18 +149,18 @@
 ####  uncomment the following.. (gd 1.84+, libpng, zlib, libjpeg required).  Set GD18H if your 
 #### png.h or other header files are in a nonstandard place, eg GD18H = -I/home/scg/lib
 
-# ploticus: plgd18 
-# GD18LIBS = -lgd -lpng -lz -ljpeg 
-# GD18H = 
+#ploticus: plgd18
+#GD18LIBS = -lgd -lpng -lz -ljpeg -lfreetype 
+#GD18H = 
 # GDFREETYPE = 
-# ZFLAG = -DWZ
+#ZFLAG = -DWZ
 
 
 #### For JPEG, WBMP, PNG, and FreeType2, using your copy of GD 1.84+,          ######
 #### uncomment the following..  (gd 1.84+, libpng, zlib, libjpeg, libfreetype  ######
 #### are all required).  Set GDFONTPATH to directory containing .ttf files     ######
-# ploticus: plgd18 
-# GD18LIBS = -lgd -lpng -lz -ljpeg -lfreetype
+#ploticus: plgd18
+# GD18LIBS = -lgd -lpng -lz -ljpeg -lfreetype -lfreetype
 # GD18H = 
 # GDFREETYPE = -DGDFREETYPE
 # ZFLAG = -DWZ
@@ -170,6 +170,10 @@
 # ploticus: plnogd 
 # NOGDFLAG = -DNOGD
 
+EXE=pl
+ploticus: $(EXE)
+
+
 
 
 ################################################################
@@ -186,11 +190,11 @@
 # MINGH = -I/home/scg/lib
 ####
 #### Otherwise, for no SWF capability, uncomment the following line..
-NOSWFFLAG = -DNOSWF 
+# NOSWFFLAG = -DNOSWF 
 
 
 #### If you plan to do a "make install", where do you want the executable(s) to be moved to?
-BIN = /usr/local/bin
+BIN = /usr/bin
 
 
 #### To set a hard-coded directory for prefabs files, uncomment & edit the following.. 
@@ -260,8 +264,8 @@
 
 LIBS = $(XLIBS) -lm $(ADDLIBS) 
 
-CFLAGS = $(WALL) -DPLOTICUS -D$(PLATFORM) -DTDH_NOREC $(ZFLAG) $(FLAGS) $(LOCALE_FLAG) \
-  $(NOGDFLAG) $(NOXFLAG) $(NOPSFLAG) $(NOSVGFLAG) $(NOSWFFLAG) $(INCLUDEDIRS) \
+CFLAGS += $(WALL) -DPLOTICUS -D$(PLATFORM) -DTDH_NOREC $(ZFLAG) $(FLAGS) $(LOCALE_FLAG) \
+  $(GDLEVEL) $(NOGDFLAG) $(NOXFLAG) $(NOPSFLAG) $(NOSVGFLAG) $(NOSWFFLAG) $(INCLUDEDIRS) \
   $(MINGH) $(NORLIMFLAG) -DPREFABS_DIR=\"$(PREFABS_DIR)\"
 
 OBJ = proc_annotate.o proc_areadef.o proc_axis.o proc_bars.o proc_rect.o proc_breakaxis.o \
@@ -277,39 +281,39 @@
   $(LOCALEOBJ)
 
 pl: pl.o $(OBJ) $(XOBJ) gd00files gd13files
-	$(CC) pl.o $(FLAGS) $(OBJ) $(GD13) $(GD) $(XOBJ) $(LIBS) $(ZLIB) $(MING) -o $(PL)
+	$(CC) pl.o $(CFLAGS) $(OBJ) $(GD13) $(GD) $(XOBJ) $(LIBS) $(ZLIB) $(MING) -o $(PL)
 
 plpng: pl.o $(OBJ) $(XOBJ) gd00files gd16files
-	$(CC) pl.o $(FLAGS) $(OBJ) $(GD16) $(GD) $(XOBJ) $(GD16LIBS) $(LIBS) $(MING) -o $(PLPNG)
+	$(CC) pl.o $(CFLAGS) $(OBJ) $(GD16) $(GD) $(XOBJ) $(GD16LIBS) $(LIBS) $(MING) -o $(PLPNG)
 
 gd00files: 
-	$(CC) -I./gd13 -I./ -c gdfontg.c gdfontl.c gdfontmb.c gdfonts.c gdfontt.c
+	$(CC) $(CFLAGS) -I./gd13 -I./ -c gdfontg.c gdfontl.c gdfontmb.c gdfonts.c gdfontt.c
 	echo "done with gd00files" > gd00files
 
 gd13files: 
-	$(CC) -c $(WALL) grgd.c -DGD13 -DPLOTICUS -I./gd13 -o grgd13.o
+	$(CC) -c $(CFLAGS) $(WALL) grgd.c -DGD13 -DPLOTICUS -I./gd13 -o grgd13.o
 	$(CC) -c $(CFLAGS) devstuff.c -DGD13 -o devstuff13.o
-	$(CC) -c gd13.c -I./gd13 
+	$(CC) -c $(CFLAGS) gd13.c -I./gd13 
 	echo "done with gd13files" > gd13files
 
 gd16files: 
-	$(CC) -c $(WALL) grgd.c -DGD16 -DPLOTICUS -I./ -I./gd16 -o grgd16.o
+	$(CC) -c $(CFLAGS) $(WALL) grgd.c -DGD16 -DPLOTICUS -I./ -I./gd16 -o grgd16.o
 	$(CC) -c $(CFLAGS) devstuff.c -DGD16 -o devstuff16.o
-	$(CC) -c -I./gd16 -I./ $(GD16H) gd16.c gd_io.c gd_io_dp.c gd_io_file.c gd_png.c
+	$(CC) -c $(CFLAGS) -I./gd16 -I./ $(GD16H) gd16.c gd_io.c gd_io_dp.c gd_io_file.c gd_png.c
 	echo "done with gd16files" > gd16files
 
 # GD18: 
 plgd18: pl.o $(OBJ) $(XOBJ) gd18files
-	$(CC) $(FLAGS) pl.o grgd.o devstuff.o $(OBJ) $(XOBJ) $(GD18LIBS) $(LIBS) $(MING) -o $(PL)
+	$(CC) $(CFLAGS) pl.o grgd.o devstuff.o $(OBJ) $(XOBJ) $(GD18LIBS) $(LIBS) $(MING) -o $(PL)
 
 gd18files:
-	$(CC) -c $(WALL) grgd.c devstuff.c -DGD18 $(GDFREETYPE) $(GD18H) $(CFLAGS)
+	$(CC) -c $(CFLAGS) $(WALL) grgd.c devstuff.c -DGD18 $(GDFREETYPE) $(GD18H)
 
 
 
 # NOGD: 
 plnogd: pl.o $(OBJ) $(XOBJ) nogdfiles
-	$(CC) $(FLAGS) pl.o devstuff.o $(OBJ) $(XOBJ) $(LIBS) $(ZLIB) $(MING) -o $(PL)
+	$(CC) $(CFLAGS) pl.o devstuff.o $(OBJ) $(XOBJ) $(LIBS) $(ZLIB) $(MING) -o $(PL)
 
 nogdfiles:
 	$(CC) -c $(WALL) devstuff.c $(CFLAGS)
@@ -317,7 +321,7 @@
 
 
 install:
-	mv $(EXE) $(BIN)
+	mv $(EXE) $(DESTDIR)$(BIN)
 
 clean:
 	$(RMCOM) *.o gd??files 
diff -ru pl231src.orig/src/functions.c pl231src/src/functions.c
--- pl231src.orig/src/functions.c	2005-01-12 21:25:45.000000000 +0100
+++ pl231src/src/functions.c	2005-06-01 15:11:22.000000000 +0200
@@ -636,7 +636,7 @@
 
 	if( hash == 1708 ) { /* $htmldisplay( var1, .. varN ) - convert embedded HTML problem chars (<,>,&) 
 			      * to their html esc sequences for all variables given */
-		char *strchr();
+		//char *strchr();
 		for( i = 0; i < nargs; i++ ) {
         		stat = TDH_getvalue( tok, arg[i], TDH_dat, TDH_recid );
 			if( strchr( tok, '&' ) != NULL ) GL_substitute( "&", "&amp;", tok );
diff -ru pl231src.orig/src/interact.c pl231src/src/interact.c
--- pl231src.orig/src/interact.c	2005-01-12 21:28:57.000000000 +0100
+++ pl231src/src/interact.c	2005-06-01 14:58:22.000000000 +0200
@@ -71,6 +71,7 @@
 /* =================================== */
 /* GETCLICK wait until a key or button is hit.. */
 /* when using postscript, this will do a showpage and return. */
+#ifndef NOX11
 int
 PLG_getclick()
 {
@@ -87,6 +88,7 @@
 
 return( Egetkey( &x, &y, &e ) );
 }
+#endif
 
 /* ================================ */
 /* HE This gets called by the X11 driver when we are waiting for an event 
