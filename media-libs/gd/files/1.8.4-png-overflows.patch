--- gd-1.8.4/gd_png.c	2001-02-06 14:44:02.000000000 -0500
+++ gd-1.8.4/gd_png.c.new	2004-10-31 21:36:03.939822448 -0500
@@ -11,6 +11,23 @@
 
 #ifdef HAVE_LIBPNG
 
+#include <limits.h>
+
+int overflow2(int a, int b)
+{
+	if(a < 0 || b < 0) {
+		fprintf(stderr, "gd warning: one parameter to a memory allocation multiplication is negative, failing operation gracefully\n");
+		return 1;
+	}
+	if(b == 0)
+		return 0;
+	if(a > INT_MAX / b) {
+		fprintf(stderr, "gd warning: product of memory allocation multiplication would exceed INT_MAX, failing operation gracefully\n");
+		return 1;
+	}
+	return 0;
+}
+
 /*---------------------------------------------------------------------------
 
     gd_png.c                 Copyright 1999 Greg Roelofs and Thomas Boutell
@@ -342,11 +359,20 @@
 
     /* allocate space for the PNG image data */
     rowbytes = png_get_rowbytes(png_ptr, info_ptr);
+    if (overflow2(rowbytes, height)) {
+        png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
+        return NULL;
+    }
     if ((image_data = (png_bytep)gdMalloc(rowbytes*height)) == NULL) {
         fprintf(stderr, "gd-png error: cannot allocate image data\n");
         png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
         return NULL;
     }
+    if (overflow2(height, sizeof (png_bytep))) {
+        png_destroy_read_struct (&png_ptr, &info_ptr, NULL);
+        gdFree (image_data);
+        return NULL;
+    }
     if ((row_pointers = (png_bytepp)gdMalloc(height*sizeof(png_bytep))) == NULL) {
         fprintf(stderr, "gd-png error: cannot allocate row pointers\n");
         png_destroy_read_struct(&png_ptr, &info_ptr, NULL);
@@ -577,10 +603,17 @@
      * interlaced images, but interlacing causes some serious complications. */
     if (remap) {
         png_bytep *row_pointers;
+        if (overflow2(sizeof (png_bytep), height)) {
+            return;
+        } 
 	row_pointers = gdMalloc(sizeof(png_bytep) * height);
         if (row_pointers == NULL) {
             fprintf(stderr, "gd-png error: unable to allocate row_pointers\n");
         }
+        if (overflow2(width, height)) {
+            fprintf(stderr, "gd-png error: unable to allocate rows\n");
+            return;
+        }
         for (j = 0;  j < height;  ++j) {
             if ((row_pointers[j] = (png_bytep)gdMalloc(width)) == NULL) {
                 fprintf(stderr, "gd-png error: unable to allocate rows\n");
