Index: configure.ac
===================================================================
--- configure.ac	(revision 1262)
+++ configure.ac	(working copy)
@@ -111,6 +111,9 @@
     [AC_DEFINE([NO_THREADING], [1], [undocumented])],
     [AC_INCLUDES_DEFAULT([])])])
 
+AC_CHECK_HEADER([sched.h],
+  [AC_DEFINE([HAVE_SCHED_H], [1], [Define to 1 if sched.h exists,])])
+
 AC_FUNC_SELECT_ARGTYPES
 
 ################################################################################
Index: src/al_mixer.c
===================================================================
--- src/al_mixer.c	(revision 1262)
+++ src/al_mixer.c	(working copy)
@@ -12,6 +12,10 @@
 #include <AL/al.h>
 #include <string.h>
 
+#ifdef HAVE_SCHED_H
+#include <sched.h>
+#endif
+
 #include "al_debug.h"
 #include "al_error.h"
 #include "al_types.h"
@@ -1065,34 +1069,46 @@
 int async_mixer_iterate(UNUSED(void *dummy)) {
 	ALuint bytes_to_write = 0;
 
+#ifdef HAVE_SCHED_H
+	struct sched_param param;
+
+	/* Try to set a minimal-priority real-time thread. This will fail if we're
+	 * running unprivileged and the user isn't using a Linux 2.6.13 or newer
+	 * kernel with a non-zero RLIMIT_RTPRIO setting. In that case, there's
+	 * nothing we can do to improve responsiveness.
+	 */
+	param.sched_priority = sched_get_priority_min(SCHED_FIFO);
+	sched_setscheduler(0, SCHED_FIFO, &param);
+#endif
+
 	/* clear buffer */
 	memset(mixbuf.data, 0, mixbuf.length);
 
 	do {
-		if(_alTryLockMixerPause() == AL_TRUE)
-		{
-			_alLockMixBuf();
+		_alLockMixerPause();
 
-			_alMixSources();
+		_alLockMixBuf();
 
-			_alProcessFlags();
+		_alMixSources();
 
-			_alUnlockMixBuf();
+		_alProcessFlags();
 
-			/* we've accumulated sources, now mix */
-			_alMixManagerMix( &MixManager, &MixFunc, mixbuf.data );
+		_alUnlockMixBuf();
 
-			if(acConvertAudio(&s16le) < 0)
-			{
-				_alDebug(ALD_MAXIMUS, __FILE__, __LINE__,
-				"Couldn't execute conversion from canon.");
-				/*
-				 * most likely we're just early.
-				 * Don't sweat it.
-				 */
-				continue;
-			}
+		/* we've accumulated sources, now mix */
+		_alMixManagerMix( &MixManager, &MixFunc, mixbuf.data );
 
+		if(acConvertAudio(&s16le) < 0)
+		{
+			_alDebug(ALD_MAXIMUS, __FILE__, __LINE__,
+			"Couldn't execute conversion from canon.");
+			/*
+			 * most likely we're just early.
+			 * Don't sweat it.
+			 */
+		}
+		else
+		{
 			bytes_to_write = s16le.len_cvt;
 
 			if(bytes_to_write)
@@ -1109,11 +1125,12 @@
 
 			/* clear buffer */
 			memset(mixbuf.data, 0, mixbuf.length);
+		}
 
-			_alUnlockMixerPause();
-		}
+		_alUnlockMixerPause();
+
 		/* give other threads a chance to acquire the mixer lock */
-		_alMicroSleep(1);
+		_alMicroSleep(5000);
 	} while(time_for_mixer_to_die == AL_FALSE);
 
 	time_for_mixer_to_die = AL_FALSE;
