Index: dssi-0.9.1/examples/less_trivial_synth.c
===================================================================
--- dssi-0.9.1.orig/examples/less_trivial_synth.c
+++ dssi-0.9.1/examples/less_trivial_synth.c
@@ -56,7 +56,7 @@ long int lrintf (float x);
 static LADSPA_Descriptor *ltsLDescriptor = NULL;
 static DSSI_Descriptor *ltsDDescriptor = NULL;
 
-float *table[2];
+const float *table[2];
 
 typedef enum {
     inactive = 0,
Index: dssi-0.9.1/examples/saw.h
===================================================================
--- dssi-0.9.1.orig/examples/saw.h
+++ dssi-0.9.1/examples/saw.h
@@ -1,4 +1,4 @@
-float saw_table[1025] = {
+static const float saw_table[1025] = {
 	0.000000,  0.008187,  0.016378,  0.024569,  0.032759,  0.040950,  
 	0.049141,  0.057331,  0.065522,  0.073712,  0.081903,  0.090094,  
 	0.098284,  0.106475,  0.114666,  0.122856,  0.131047,  0.139237,  
Index: dssi-0.9.1/jack-dssi-host/jack-dssi-host.c
===================================================================
--- dssi-0.9.1.orig/jack-dssi-host/jack-dssi-host.c
+++ dssi-0.9.1/jack-dssi-host/jack-dssi-host.c
@@ -105,8 +105,8 @@ static sigset_t _signals;
 
 int exiting = 0;
 static int verbose = 0;
-static int autoconnect = 1;
-static int load_guis = 1;
+static int no_autoconnect = 0;
+static int no_load_guis = 0;
 const char *myName = NULL;
 
 #define EVENT_BUFFER_SIZE 1024
@@ -808,11 +808,11 @@ main(int argc, char **argv)
 	    continue;
 	}
 	if (!strcmp(argv[i], "-a")) {
-	    autoconnect = 0;
+	    no_autoconnect = 1;
 	    continue;
 	}
 	if (!strcmp(argv[i], "-n")) {
-	    load_guis = 0;
+	    no_load_guis = 1;
 	    continue;
 	}
 
@@ -1332,7 +1332,7 @@ main(int argc, char **argv)
         exit(1);
     }
 
-    if (autoconnect) {
+    if (!no_autoconnect) {
         /* !FIX! this to more intelligently connect ports: */
         ports = jack_get_ports(jackClient, NULL, NULL,
                                JackPortIsPhysical|JackPortIsInput);
@@ -1357,7 +1357,7 @@ main(int argc, char **argv)
     /* Attempt to locate and start up a GUI for the plugin -- but
      * continue even if we can't */
     /* -FIX- Ack! So many windows all at once! */
-    if (load_guis) {
+    if (!no_load_guis) {
         for (i = 0; i < instance_count; i++) {
             char tag[12];
             plugin = instances[i].plugin;
