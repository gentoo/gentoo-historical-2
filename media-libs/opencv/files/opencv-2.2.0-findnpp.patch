diff -ruN OpenCV-2.2.0.orig/modules/gpu/FindNPP.cmake OpenCV-2.2.0/modules/gpu/FindNPP.cmake
--- OpenCV-2.2.0.orig/modules/gpu/FindNPP.cmake	2010-12-05 04:35:24.000000000 +0100
+++ OpenCV-2.2.0/modules/gpu/FindNPP.cmake	2011-05-14 20:52:29.026582967 +0200
@@ -7,42 +7,12 @@
 # CUDA_NPP_LIBRARIES          -- NPP libraries.
 # NPP_VERSION                 -- NPP version in format "major.minor.build".
 #
-# If not found automatically, please set CUDA_NPP_LIBRARY_ROOT_DIR 
-# in CMake or set enviroment varivabe $CUDA_NPP_ROOT
-#
-# Author: Anatoly Baksheev, Itseez Ltd.
-# 
-# The MIT License
-#
-# License for the specific language governing rights and limitations under
-# Permission is hereby granted, free of charge, to any person obtaining a
-# copy of this software and associated documentation files (the "Software"),
-# to deal in the Software without restriction, including without limitation
-# the rights to use, copy, modify, merge, publish, distribute, sublicense,
-# and/or sell copies of the Software, and to permit persons to whom the
-# Software is furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included
-# in all copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
-# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-# DEALINGS IN THE SOFTWARE.
-#
 ###############################################################################
 
 cmake_policy(PUSH)
 cmake_minimum_required(VERSION 2.8.0)
 cmake_policy(POP)
 
-if(NOT "${CUDA_NPP_LIBRARY_ROOT_DIR}" STREQUAL "${CUDA_NPP_LIBRARY_ROOT_DIR_INTERNAL}")
-    unset(CUDA_NPP_INCLUDES CACHE)
-    unset(CUDA_NPP_LIBRARIES CACHE)  
-endif()
 
 if(CMAKE_SIZEOF_VOID_P EQUAL 4)			
     if (UNIX OR APPLE)
@@ -58,28 +28,18 @@
     endif()
 endif(CMAKE_SIZEOF_VOID_P EQUAL 4)
 
-if(NOT CUDA_NPP_LIBRARY_ROOT_DIR OR CUDA_NPP_LIBRARY_ROOT_DIR STREQUAL "")
-    unset(CUDA_NPP_LIBRARY_ROOT_DIR CACHE)	
-    find_path(CUDA_NPP_LIBRARY_ROOT_DIR "common/npp/include/npp.h" PATHS ENV CUDA_NPP_ROOT DOC "NPP root directory.")	
-    MESSAGE(STATUS "NPP root directory: " ${CUDA_NPP_LIBRARY_ROOT_DIR})
-endif()
+unset(CUDA_NPP_LIBRARY_ROOT_DIR)
 
-# Search includes in our own paths.
-find_path(CUDA_NPP_INCLUDES npp.h PATHS "${CUDA_NPP_LIBRARY_ROOT_DIR}/common/npp/include")
-# Search default search paths, after we search our own set of paths.
-find_path(CUDA_NPP_INCLUDES device_functions.h)
+# Search includes
+find_path(CUDA_NPP_INCLUDES npp.h PATHS "/opt/cuda/include")
 mark_as_advanced(CUDA_NPP_INCLUDES)
 
 # Find NPP library
 find_library(CUDA_NPP_LIBRARIES
     NAMES "npp" "npp${NPP_SUFFIX}" "libnpp${NPP_SUFFIX}"
-    PATHS "${CUDA_NPP_LIBRARY_ROOT_DIR}"    
-    PATH_SUFFIXES "common/lib" "common/npp/lib"
+    PATHS "/opt/cuda/lib"    
     DOC "NPP library"	
     )	
-
-# Search default search paths, after we search our own set of paths.
-find_library(CUDA_NPP_LIBRARIES NAMES npp${NPP_SUFFIX} libnpp${NPP_SUFFIX} DOC "NPP library")
 mark_as_advanced(CUDA_NPP_LIBRARIES)
 
 if(EXISTS ${CUDA_NPP_INCLUDES}/nppversion.h)
@@ -120,6 +80,3 @@
 endif()
 
 set(CUDA_NPP_FOUND TRUE)
-set(CUDA_NPP_LIBRARY_ROOT_DIR_INTERNAL "${CUDA_NPP_LIBRARY_ROOT_DIR}" CACHE INTERNAL "This is the value of the last time CUDA_NPP_LIBRARY_ROOT_DIR was set successfully." FORCE)
-
-
