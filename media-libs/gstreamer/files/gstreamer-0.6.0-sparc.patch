*** gstreamer-0.6.0/gst/gstatomic_impl.h	Tue Jan 28 19:22:32 2003
--- gstreamer-0.6.0.patched/gst/gstatomic_impl.h	Mon Mar  3 19:05:11 2003
***************
*** 204,214 ****
  
    return result == 0;
  }
  
  /***** Sun SPARC *****/
! #elif defined(HAVE_CPU_SPARC) && defined(__GNUC__)
  
  GST_INLINE_FUNC void 	gst_atomic_int_destroy 	(GstAtomicInt *aint) { } 
  
  #ifdef GST_CONFIG_NO_SMP
  GST_INLINE_FUNC void 	gst_atomic_int_init 	(GstAtomicInt *aint, gint val) { aint->counter = val; }
--- 204,215 ----
  
    return result == 0;
  }
  
  /***** Sun SPARC *****/
! /* disabled for now */
! #elif defined(HAVE_CPU_SPARC) && defined(__GNUC__) && 0
  
  GST_INLINE_FUNC void 	gst_atomic_int_destroy 	(GstAtomicInt *aint) { } 
  
  #ifdef GST_CONFIG_NO_SMP
  GST_INLINE_FUNC void 	gst_atomic_int_init 	(GstAtomicInt *aint, gint val) { aint->counter = val; }
***************
*** 269,279 ****
  {
    register volatile int *ptr asm ("g1");
    register int increment asm ("g2");
  
    ptr = &aint->counter;
!   increment = val;
  
    __asm__ __volatile__(
      "mov    %%o7, %%g4\n\t"
      "call   ___atomic_sub\n\t"
      " add   %%o7, 8, %%o7\n"
--- 270,280 ----
  {
    register volatile int *ptr asm ("g1");
    register int increment asm ("g2");
  
    ptr = &aint->counter;
!   increment = 1;
  
    __asm__ __volatile__(
      "mov    %%o7, %%g4\n\t"
      "call   ___atomic_sub\n\t"
      " add   %%o7, 8, %%o7\n"
