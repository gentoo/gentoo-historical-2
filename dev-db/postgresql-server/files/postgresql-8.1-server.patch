=== GNUmakefile.in
==================================================================
--- GNUmakefile.in	(revision 14)
+++ GNUmakefile.in	(local)
@@ -11,19 +11,16 @@
 all:
 	$(MAKE) -C doc all
 	$(MAKE) -C src all
-	$(MAKE) -C config all
 	@echo "All of PostgreSQL successfully made. Ready to install."
 
 install:
 	$(MAKE) -C doc $@
 	$(MAKE) -C src $@
-	$(MAKE) -C config $@
 	@echo "PostgreSQL installation complete."
 
 installdirs uninstall distprep:
 	$(MAKE) -C doc $@
 	$(MAKE) -C src $@
-	$(MAKE) -C config $@
 
 # clean, distclean, etc should apply to contrib too, even though
 # it's not built by default
=== contrib/Makefile
==================================================================
--- contrib/Makefile	(revision 14)
+++ contrib/Makefile	(local)
@@ -19,10 +19,8 @@
 		isbn_issn	\
 		lo		\
 		ltree		\
-		oid2name	\
 		pg_buffercache	\
 		pg_trgm		\
-		pgbench		\
 		pgcrypto	\
 		pgstattuple	\
 		seg		\
@@ -30,8 +28,7 @@
 		tablefunc	\
 		tips		\
 		tsearch2	\
-		userlock	\
-		vacuumlo
+		userlock
 
 # Missing:
 #		adddepend	\ (does not have a makefile)
=== src/Makefile
==================================================================
--- src/Makefile	(revision 14)
+++ src/Makefile	(local)
@@ -18,14 +18,10 @@
 	$(MAKE) -C timezone $@
 	$(MAKE) -C backend $@
 	$(MAKE) -C backend/utils/mb/conversion_procs $@
-	$(MAKE) -C include $@
-	$(MAKE) -C interfaces $@
 	$(MAKE) -C bin $@
 	$(MAKE) -C pl $@
-	$(MAKE) -C makefiles $@
-	$(MAKE) -C utils $@
 
-install: install-local
+install:
 
 install-local: installdirs-local
 	$(INSTALL_DATA) Makefile.global $(DESTDIR)$(pgxsdir)/$(subdir)/Makefile.global
=== src/Makefile.global.in
==================================================================
--- src/Makefile.global.in	(revision 14)
+++ src/Makefile.global.in	(local)
@@ -360,10 +360,10 @@
 
 
 submake-libpq:
-	$(MAKE) -C $(libpq_builddir) all
+	@true $(MAKE) -C $(libpq_builddir) all
 
 submake-libpgport:
-	$(MAKE) -C $(top_builddir)/src/port all
+	@true $(MAKE) -C $(top_builddir)/src/port all
 
 .PHONY: submake-libpq submake-libpgport
 
=== src/bin/Makefile
==================================================================
--- src/bin/Makefile	(revision 14)
+++ src/bin/Makefile	(local)
@@ -13,8 +13,8 @@
 top_builddir = ../..
 include $(top_builddir)/src/Makefile.global
 
-DIRS := initdb ipcclean pg_ctl pg_dump \
-	psql scripts pg_config pg_controldata pg_resetxlog
+DIRS := initdb ipcclean pg_ctl \
+	pg_controldata pg_resetxlog
 ifeq ($(PORTNAME), win32)
 DIRS+=pgevent
 endif
=== src/include/pg_config_manual.h
==================================================================
--- src/include/pg_config_manual.h	(revision 14)
+++ src/include/pg_config_manual.h	(local)
@@ -175,7 +175,7 @@
  * here's where to twiddle it.  You can also override this at runtime
  * with the postmaster's -k switch.
  */
-#define DEFAULT_PGSOCKET_DIR  "/tmp"
+#define DEFAULT_PGSOCKET_DIR  "/var/run/postgresql"
 
 /*
  * The random() function is expected to yield values between 0 and
=== src/port/Makefile
==================================================================
--- src/port/Makefile	(revision 14)
+++ src/port/Makefile	(local)
@@ -29,11 +29,10 @@
 # Replace all object files so they use FRONTEND define
 LIBOBJS_SRV := $(LIBOBJS:%.o=%_srv.o)
 
-all: libpgport.a libpgport_srv.a
+all: libpgport_srv.a
 
 # libpgport is needed by some contrib
-install: all
-	$(INSTALL_STLIB) libpgport.a $(DESTDIR)$(libdir)
+install:
 
 uninstall:
 	$(RM) $(DESTDIR)$(libdir)/libpgport.a
=== src/test/regress/GNUmakefile
==================================================================
--- src/test/regress/GNUmakefile	(revision 14)
+++ src/test/regress/GNUmakefile	(local)
@@ -137,7 +137,7 @@
 check: all
 	-rm -rf ./testtablespace
 	mkdir ./testtablespace
-	$(SHELL) ./pg_regress --temp-install --top-builddir=$(top_builddir) --temp-port=$(TEMP_PORT) --schedule=$(srcdir)/parallel_schedule --multibyte=$(MULTIBYTE) --load-language=plpgsql $(MAXCONNOPT) $(NOLOCALE)
+	clientbindir="/usr/lib/postgresql-${SLOT}/bin/" $(SHELL) ./pg_regress --temp-install --top-builddir=$(top_builddir) --temp-port=$(TEMP_PORT) --schedule=$(srcdir)/parallel_schedule --multibyte=$(MULTIBYTE) --load-language=plpgsql $(MAXCONNOPT) $(NOLOCALE)
 
 installcheck: all
 	-rm -rf ./testtablespace
=== src/test/regress/pg_regress.sh
==================================================================
--- src/test/regress/pg_regress.sh	(revision 14)
+++ src/test/regress/pg_regress.sh	(local)
@@ -91,6 +91,8 @@
 enable_shared='@enable_shared@'
 GCC=@GCC@
 
+test -z "${clientbindir}" && clientbindir="${bindir}"
+
 if [ "$GCC" = yes ]; then
     compiler=gcc
 else
@@ -441,7 +443,7 @@
     # wait forever, however.
     i=0
     max=60
-    until "$bindir/psql" -X $psql_options postgres </dev/null 2>/dev/null
+    until "$clientbindir/psql" -X $psql_options postgres </dev/null 2>/dev/null
     do
         i=`expr $i + 1`
         if [ $i -ge $max ]
@@ -498,7 +500,7 @@
     fi
 
     message "dropping database \"$dbname\""
-    "$bindir/dropdb" $psql_options "$dbname"
+    "$clientbindir/dropdb" $psql_options "$dbname"
     # errors can be ignored
 fi
 
@@ -507,7 +509,7 @@
 # Set up SQL shell for the test.
 # ----------
 
-PSQL="$bindir/psql -a -q -X $psql_options"
+PSQL="$clientbindir/psql -a -q -X $psql_options"
 
 
 # ----------
@@ -538,13 +540,13 @@
 # ----------
 
 message "creating database \"$dbname\""
-"$bindir/createdb" $encoding_opt $psql_options --template template0 "$dbname"
+"$clientbindir/createdb" $encoding_opt $psql_options --template template0 "$dbname"
 if [ $? -ne 0 ]; then
     echo "$me: createdb failed"
     (exit 2); exit
 fi
 
-"$bindir/psql" -q -X $psql_options -c "\
+"$clientbindir/psql" -q -X $psql_options -c "\
 alter database \"$dbname\" set lc_messages to 'C';
 alter database \"$dbname\" set lc_monetary to 'C';
 alter database \"$dbname\" set lc_numeric to 'C';
@@ -560,7 +562,7 @@
 # ----------
 
 message "dropping regression test user accounts"
-"$bindir/psql" -q -X $psql_options -c 'DROP GROUP regressgroup1; DROP GROUP regressgroup2; DROP USER regressuser1, regressuser2, regressuser3, regressuser4;' $dbname 2>/dev/null
+"$clientbindir/psql" -q -X $psql_options -c 'DROP GROUP regressgroup1; DROP GROUP regressgroup2; DROP USER regressuser1, regressuser2, regressuser3, regressuser4;' $dbname 2>/dev/null
 if [ $? -eq 2 ]; then
     echo "$me: could not drop user accounts"
     (exit 2); exit
@@ -575,7 +577,7 @@
     for lang in xyzzy $load_langs ; do    
         if [ "$lang" != "xyzzy" ]; then
             message "installing $lang"
-            "$bindir/createlang" $psql_options $lang $dbname
+            "$clientbindir/createlang" $psql_options $lang $dbname
             if [ $? -ne 0 ] && [ $? -ne 2 ]; then
                 echo "$me: createlang $lang failed"
                 (exit 2); exit
