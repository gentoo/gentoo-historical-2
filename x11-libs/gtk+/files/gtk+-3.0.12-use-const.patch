From 6c3d5c45bcd78b54c3641d6748f9e0e80c1fba46 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Javier=20Jard=C3=B3n?= <jjardon@gnome.org>
Date: Mon, 6 Jun 2011 19:05:18 +0100
Subject: [PATCH 1/2] gdk: Use const instead G_CONST_RETURN

[Alexandre Rostovtsev <tetromino@gmail.com>: backport to 3.0.12]
---
 gdk/gdk.c                    |    4 ++--
 gdk/gdkdevice.h              |    2 +-
 gdk/gdkdisplay.c             |    2 +-
 gdk/gdkdisplay.h             |    2 +-
 gdk/gdkdisplayprivate.h      |    2 +-
 gdk/gdkmain.h                |    4 ++--
 gdk/win32/gdkdisplay-win32.c |    2 +-
 gdk/x11/gdkdisplay-x11.c     |    4 ++--
 gdk/x11/gdkproperty-x11.c    |    4 ++--
 gdk/x11/gdkx11display.h      |    2 +-
 gdk/x11/gdkx11property.h     |    4 ++--
 11 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/gdk/gdk.c b/gdk/gdk.c
index 43d45f5..241683a 100644
--- a/gdk/gdk.c
+++ b/gdk/gdk.c
@@ -306,7 +306,7 @@ gdk_parse_args (int    *argc,
  *
  * Since: 2.2
  */
-G_CONST_RETURN gchar *
+const gchar *
 gdk_get_display_arg_name (void)
 {
   if (!_gdk_display_arg_name)
@@ -1039,7 +1039,7 @@ gdk_threads_add_timeout_seconds (guint       interval,
  *
  * Returns: the program class.
  */
-G_CONST_RETURN char *
+const char *
 gdk_get_program_class (void)
 {
   return gdk_progclass;
diff --git a/gdk/gdkdevice.h b/gdk/gdkdevice.h
index a6ceac0..9109d65 100644
--- a/gdk/gdkdevice.h
+++ b/gdk/gdkdevice.h
@@ -156,7 +156,7 @@ struct _GdkTimeCoord
 
 GType                 gdk_device_get_type       (void) G_GNUC_CONST;
 
-G_CONST_RETURN gchar *gdk_device_get_name       (GdkDevice *device);
+const gchar *         gdk_device_get_name       (GdkDevice *device);
 gboolean              gdk_device_get_has_cursor (GdkDevice *device);
 
 /* Functions to configure a device */
diff --git a/gdk/gdkdisplay.c b/gdk/gdkdisplay.c
index 1b8c7e7..f4095c2 100644
--- a/gdk/gdkdisplay.c
+++ b/gdk/gdkdisplay.c
@@ -1336,7 +1336,7 @@ gdk_display_get_device_manager (GdkDisplay *display)
  *
  * Since: 2.2
  */
-G_CONST_RETURN gchar *
+const gchar *
 gdk_display_get_name (GdkDisplay *display)
 {
   g_return_val_if_fail (GDK_IS_DISPLAY (display), NULL);
diff --git a/gdk/gdkdisplay.h b/gdk/gdkdisplay.h
index 65daad1..3c4179e 100644
--- a/gdk/gdkdisplay.h
+++ b/gdk/gdkdisplay.h
@@ -44,7 +44,7 @@ G_BEGIN_DECLS
 GType       gdk_display_get_type (void) G_GNUC_CONST;
 GdkDisplay *gdk_display_open                (const gchar *display_name);
 
-G_CONST_RETURN gchar * gdk_display_get_name (GdkDisplay *display);
+const gchar * gdk_display_get_name         (GdkDisplay *display);
 
 gint        gdk_display_get_n_screens      (GdkDisplay  *display);
 GdkScreen * gdk_display_get_screen         (GdkDisplay  *display,
diff --git a/gdk/gdkdisplayprivate.h b/gdk/gdkdisplayprivate.h
index 1126d96..2d48943 100644
--- a/gdk/gdkdisplayprivate.h
+++ b/gdk/gdkdisplayprivate.h
@@ -120,7 +120,7 @@ struct _GdkDisplayClass
 
   GType window_type;          /* type for native windows for this display, set in class_init */
 
-  G_CONST_RETURN gchar *     (*get_name)           (GdkDisplay *display);
+  const gchar *              (*get_name)           (GdkDisplay *display);
   gint                       (*get_n_screens)      (GdkDisplay *display);
   GdkScreen *                (*get_screen)         (GdkDisplay *display,
                                                     gint        screen_num);
diff --git a/gdk/gdkmain.h b/gdk/gdkmain.h
index bcbe4d0..411b58f 100644
--- a/gdk/gdkmain.h
+++ b/gdk/gdkmain.h
@@ -50,7 +50,7 @@ gboolean              gdk_init_check                      (gint           *argc,
 void                  gdk_add_option_entries_libgtk_only  (GOptionGroup   *group);
 void                  gdk_pre_parse_libgtk_only           (void);
 
-G_CONST_RETURN gchar *gdk_get_program_class               (void);
+const gchar *         gdk_get_program_class               (void);
 void                  gdk_set_program_class               (const gchar    *program_class);
 
 void                  gdk_notify_startup_complete         (void);
@@ -64,7 +64,7 @@ G_GNUC_WARN_UNUSED_RESULT gint gdk_error_trap_pop         (void);
 void                           gdk_error_trap_pop_ignored (void);
 
 
-G_CONST_RETURN gchar *gdk_get_display_arg_name (void);
+const gchar *         gdk_get_display_arg_name (void);
 
 /**
  * gdk_get_display:
diff --git a/gdk/win32/gdkdisplay-win32.c b/gdk/win32/gdkdisplay-win32.c
index 1faa4cf..8e7c988 100644
--- a/gdk/win32/gdkdisplay-win32.c
+++ b/gdk/win32/gdkdisplay-win32.c
@@ -236,7 +236,7 @@ struct _GdkWin32DisplayClass
 
 G_DEFINE_TYPE (GdkWin32Display, gdk_win32_display, GDK_TYPE_DISPLAY)
 
-static G_CONST_RETURN gchar *
+static const gchar *
 gdk_win32_display_get_name (GdkDisplay *display)
 {
   HDESK hdesk = GetThreadDesktop (GetCurrentThreadId ());
diff --git a/gdk/x11/gdkdisplay-x11.c b/gdk/x11/gdkdisplay-x11.c
index 2911a3a..983ac72 100644
--- a/gdk/x11/gdkdisplay-x11.c
+++ b/gdk/x11/gdkdisplay-x11.c
@@ -1502,7 +1502,7 @@ gdk_internal_connection_watch (Display  *display,
 }
 #endif /* HAVE_X11R6 */
 
-static G_CONST_RETURN gchar *
+static const gchar *
 gdk_x11_display_get_name (GdkDisplay *display)
 {
   return (gchar *) DisplayString (GDK_X11_DISPLAY (display)->xdisplay);
@@ -2185,7 +2185,7 @@ gdk_x11_display_supports_input_shapes (GdkDisplay *display)
  *
  * Since: 2.12
  */
-G_CONST_RETURN gchar *
+const gchar *
 gdk_x11_display_get_startup_notification_id (GdkDisplay *display)
 {
   return GDK_X11_DISPLAY (display)->startup_notification_id;
diff --git a/gdk/x11/gdkproperty-x11.c b/gdk/x11/gdkproperty-x11.c
index 0cf753c..678b196 100644
--- a/gdk/x11/gdkproperty-x11.c
+++ b/gdk/x11/gdkproperty-x11.c
@@ -503,7 +503,7 @@ gdk_x11_get_xatom_by_name (const gchar *atom_name)
  *
  * Since: 2.2
  **/
-G_CONST_RETURN gchar *
+const gchar *
 gdk_x11_get_xatom_name_for_display (GdkDisplay *display,
 				    Atom        xatom)
 {
@@ -525,7 +525,7 @@ gdk_x11_get_xatom_name_for_display (GdkDisplay *display,
  * Return value: name of the X atom; this string is owned by GTK+,
  *   so it shouldn't be modifed or freed. 
  **/
-G_CONST_RETURN gchar *
+const gchar *
 gdk_x11_get_xatom_name (Atom xatom)
 {
   return get_atom_name (gdk_x11_xatom_to_atom (xatom));
diff --git a/gdk/x11/gdkx11display.h b/gdk/x11/gdkx11display.h
index b544ac4..8781edb 100644
--- a/gdk/x11/gdkx11display.h
+++ b/gdk/x11/gdkx11display.h
@@ -60,7 +60,7 @@ Display *gdk_x11_display_get_xdisplay     (GdkDisplay  *display);
 
 guint32       gdk_x11_display_get_user_time (GdkDisplay *display);
 
-G_CONST_RETURN gchar *gdk_x11_display_get_startup_notification_id (GdkDisplay *display);
+const gchar * gdk_x11_display_get_startup_notification_id         (GdkDisplay *display);
 void          gdk_x11_display_set_startup_notification_id         (GdkDisplay  *display,
                                                                    const gchar *startup_id);
 
diff --git a/gdk/x11/gdkx11property.h b/gdk/x11/gdkx11property.h
index 64fb978..9227063 100644
--- a/gdk/x11/gdkx11property.h
+++ b/gdk/x11/gdkx11property.h
@@ -45,13 +45,13 @@ GdkAtom               gdk_x11_xatom_to_atom_for_display (GdkDisplay  *display,
                                                          Atom         xatom);
 Atom                  gdk_x11_get_xatom_by_name_for_display (GdkDisplay  *display,
                                                              const gchar *atom_name);
-G_CONST_RETURN gchar *gdk_x11_get_xatom_name_for_display (GdkDisplay  *display,
+const gchar *         gdk_x11_get_xatom_name_for_display (GdkDisplay  *display,
                                                           Atom         xatom);
 #ifndef GDK_MULTIHEAD_SAFE
 Atom                  gdk_x11_atom_to_xatom     (GdkAtom      atom);
 GdkAtom               gdk_x11_xatom_to_atom     (Atom         xatom);
 Atom                  gdk_x11_get_xatom_by_name (const gchar *atom_name);
-G_CONST_RETURN gchar *gdk_x11_get_xatom_name    (Atom         xatom);
+const gchar *         gdk_x11_get_xatom_name    (Atom         xatom);
 #endif
 
 G_END_DECLS
-- 
1.7.6

