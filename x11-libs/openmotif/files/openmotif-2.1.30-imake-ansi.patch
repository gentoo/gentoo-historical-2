--- motif/config/cf/Imake.cf	2000-06-03 22:49:34.000000000 +0000
+++ motif/config/cf/Imake.cf.new	2004-01-19 01:10:14.000000000 +0000
@@ -53,10 +70,19 @@
 # define MacroIncludeFile <bsdi.cf>
 # define MacroFile bsdi.cf
 # undef bsdi
-# define BSD386Architecture
-# define i386BsdArchitecture
-# define i386Architecture
-# undef i386
+# define BSDOSArchitecture
+# if defined(__i386__) || defined(i386)
+#  define i386BsdArchitecture
+#  define i386Architecture
+#  undef i386
+#  undef __i386__
+# endif
+# if defined(__sparc__) || defined(__sparc_v9__) || defined(sparc)
+#  define SparcArchitecture
+#  undef sparc
+#  undef __sparc__
+#  undef __sparc_v9__
+# endif
 #endif /* bsdi */
 
 #ifdef __OpenBSD__
@@ -114,6 +140,10 @@
 #  endif
 #  undef mc68000
 # endif
+# ifdef __powerpc__
+#  define PpcArchitecture
+#  undef __powerpc__
+# endif
 #endif /* OpenBSD */
 
 #ifdef __NetBSD__
@@ -141,13 +171,19 @@
 # endif
 # ifdef mc68000
 #   define Mc68020Architecture
-#   undef mc68000
 # endif
-# if defined(arm32) || defined(__arm32__)
+# ifdef __arm32__
 #   define Arm32Architecture
-#   undef arm32
 #   undef __arm32__
 # endif
+# ifdef __vax__
+#   define VaxArchitecture
+#   undef __vax__
+# endif
+# ifdef __powerpc__
+#   define PpcArchitecture
+#   undef __powerpc__
+# endif
 #endif /* NetBSD */
 
 #ifdef __FreeBSD__
@@ -160,6 +196,11 @@
 #  define i386Architecture
 #  undef i386
 # endif
+# ifdef __alpha__
+#  define AlphaBsdArchitecture
+#  define AlphaArchitecture
+#  undef __alpha__
+# endif
 #endif /* __FreeBSD__ */
 
 #ifdef AMOEBA
@@ -325,6 +366,7 @@
 # undef sgi
 # define SGIArchitecture
 # undef mips
+# undef __mips
 # define MipsArchitecture
 # ifdef _SVR4
 #  undef _SVR4
@@ -553,44 +595,158 @@
 # undef linux
 # define LinuxArchitecture
 # ifdef i386
-#  define i386Architecture
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
 #  undef i386
-# endif /* i386 */
+XCOMM Keep cpp from replacing path elements containing i486/i586/i686
+#  ifdef i486
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#   undef i486
+#  endif
+#  ifdef i586
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#   undef i586
+#  endif
+#  ifdef i686
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#   undef i686
+#  endif
+#  ifdef k6
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#   undef k6
+#  endif
+# endif /* k6 */
 # ifdef __i386__
 #  ifndef i386Architecture
 #   define i386Architecture
 #  endif
 #  undef __i386__
 # endif /* __i386__ */
+# ifdef __i486__
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __i486__
+# endif /* __i486__ */
+# ifdef __i586__
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __i586__
+# endif /* __i586__ */
+# ifdef __i686__
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __i686__
+# endif /* __i686__ */
+# ifdef __k6__
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __k6__
+# endif /* __k6__ */
+# ifdef __i386
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __i386
+# endif /* __i386 */
+# ifdef __i486
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __i486
+# endif /* __i486 */
+# ifdef __i586
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __i586
+# endif /* __i586 */
+# ifdef __i686
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __i686
+# endif /* __i686 */
+# ifdef __k6
+#  ifndef i386Architecture
+#   define i386Architecture
+#  endif
+#  undef __k6
+# endif /* __k6 */
+# ifdef __s390__
+#   define s390Architecture
+#  undef __s390__
+# endif /* s390 */
 # ifdef __alpha
 #  define AlphaArchitecture
 #  undef __alpha
 # endif /* __alpha */
 # ifdef __alpha__
-#  define AlphaArchitecture
+#  ifndef AlphaArchitecture
+#   define AlphaArchitecture
+#  endif
 #  undef __alpha__
 # endif /* __alpha__ */
+# ifdef __arm__
+#  define Arm32Architecture
+#  undef arm
+#  undef __arm
+#  undef __arm__
+# endif
 # ifdef mc68000
 #  define Mc68020Architecture
 #  undef mc68000
 # endif /* mc68000 */
 # ifdef powerpc
-#  define PowerPCArchitecture
+#  define PpcArchitecture
 #  undef powerpc
 # endif
-# if defined(arm) || defined(__arm__)
-#   define ArmArchitecture
-#   undef arm
-#   undef __arm__
-#   if defined(__ARM_ARCH_4__)
-#     define Arm4Architecture
-#     define Arm32Architecture
-#     undef __ARM_ARCH_4__
-#   endif
-#   if defined(__ARM_ARCH_3__)
-#     define Arm3Architecture
-#     undef __ARM_ARCH_3__
-#   endif
+# ifdef __powerpc__
+#  ifndef PpcArchitecture
+#   define PpcArchitecture
+#  endif
+#  undef __powerpc__
+# endif
+# ifdef sparc
+#  define SparcArchitecture
+#  undef sparc
+# endif
+# ifdef __sparc__
+#  ifndef SparcArchitecture
+#   define SparcArchitecture
+#  endif
+#  undef __sparc__
+# endif
+# ifdef ia64 
+#  define ia64Architecture
+#  undef ia64 
+# endif
+# ifdef __ia64__
+#  ifndef ia64Architecture
+#   define ia64Architecture
+#  endif
+#  undef __ia64__
+# endif
+# if defined(mips) || defined(__mips__)
+#  define MipsArchitecture
+#  undef mips
+#  undef __mips__
+# endif
+XCOMM  for compatibility with 3.3.x 
+# ifdef PpcArchitecture
+#  define PowerPCArchitecture
 # endif
 #endif /* linux */
 
@@ -608,7 +764,7 @@
 #  undef __x86__
 # endif
 # ifdef __powerpc__
-#  define ppcArchitecture
+#  define PpcArchitecture
 #  undef __powerpc__
 # endif
 # if defined(sparc) || defined(__sparc__)
@@ -616,6 +772,10 @@
 #  undef sparc
 #  undef __sparc__
 # endif
+/* for compatibility with 3.3.x */
+# ifdef PpcArchitecture
+#  define PowerPCArchitecture
+# endif
 #endif /* LynxOS AT/PPC/microSPARC */
 
 #ifdef __uxp__
@@ -687,6 +847,14 @@
 #undef i386
 #endif /* MACH */
 
+/* On NetBSD, `unix' is not defined, and cpp emits a warning every time
+ * it sees a test using the `unix' symbol */
+#if !defined(NetBSDArchitecture) || (defined(NetBSDArchitecture) && DefaultOSMajorVersion == 1 && DefaultOSMinorVersion <= 3)
+#ifdef unix
+#undef unix
+#endif
+#endif
+
 #ifdef emxos2
 #define MacroIncludeFile <os2.cf>
 #define MacroFile os2.cf
@@ -721,6 +889,12 @@
 #endif
 #endif /* QNX/Neutrino */
 
+#ifdef SparcArchitecture
+# if defined(__sparc_v9) || defined(__arch64__)
+#  define Sparc64Architecture
+# endif
+#endif
+
 #ifndef MacroIncludeFile
 XCOMM WARNING:  Imake.cf not configured; guessing at definitions!!!
 XCOMM This might mean that BOOTSTRAPCFLAGS was not set when building imake.
