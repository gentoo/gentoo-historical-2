diff -NurdB cairo-1.0.0/test/cairo-test.c cairo-1.0.0-patched/test/cairo-test.c
--- cairo-1.0.0/test/cairo-test.c	2005-08-23 16:01:54.000000000 -0500
+++ cairo-1.0.0-patched/test/cairo-test.c	2005-09-02 10:18:45.000000000 -0500
@@ -382,6 +382,8 @@
 	return NULL;
     }
 
+    XSynchronize (xtc->dpy, 1);
+
     /* XXX: Currently we don't do any xlib testing when the X server
      * doesn't have the Render extension. We could do better here,
      * (perhaps by converting the tests from ARGB32 to RGB24). One
diff -NurdB cairo-1.0.0/test/cairo-test.h cairo-1.0.0-patched/test/cairo-test.h
--- cairo-1.0.0/test/cairo-test.h	2005-08-04 14:28:52.000000000 -0500
+++ cairo-1.0.0-patched/test/cairo-test.h	2005-09-02 10:20:06.000000000 -0500
@@ -26,10 +26,36 @@
 #ifndef _CAIRO_TEST_H_
 #define _CAIRO_TEST_H_
 
+#if HAVE_CONFIG_H
+#include "config.h"
+#endif
+
 #include <math.h>
 #include <cairo.h>
 #include <cairo-debug.h>
 
+#if   HAVE_STDINT_H
+# include <stdint.h>
+#elif HAVE_INTTYPES_H
+# include <inttypes.h>
+#elif HAVE_SYS_INT_TYPES_H
+# include <sys/int_types.h>
+#elif defined(_MSC_VER)
+typedef __int8 int8_t;
+typedef unsigned __int8 uint8_t;
+typedef __int16 int16_t;
+typedef unsigned __int16 uint16_t;
+typedef __int32 int32_t;
+typedef unsigned __int32 uint32_t;
+typedef __int64 int64_t;
+typedef unsigned __int64 uint64_t;
+# ifndef HAVE_UINT64_T
+#  define HAVE_UINT64_T 1
+# endif
+#else
+#error Cannot find definitions for fixed-width integral types (uint8_t, uint32_t, \etc.)
+#endif
+
 typedef enum cairo_test_status {
     CAIRO_TEST_SUCCESS = 0,
     CAIRO_TEST_FAILURE,
diff -NurdB cairo-1.0.0/test/filter-nearest-offset.c cairo-1.0.0-patched/test/filter-nearest-offset.c
--- cairo-1.0.0/test/filter-nearest-offset.c	2005-08-17 11:49:22.000000000 -0500
+++ cairo-1.0.0-patched/test/filter-nearest-offset.c	2005-09-02 10:20:37.000000000 -0500
@@ -44,7 +44,7 @@
 draw (cairo_t *cr, int width, int height)
 {
     cairo_surface_t *surface;
-    unsigned long data[STAMP_WIDTH * STAMP_HEIGHT] = {
+    uint32_t data[STAMP_WIDTH * STAMP_HEIGHT] = {
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 
diff -NurdB cairo-1.0.0/test/mask-ctm.c cairo-1.0.0-patched/test/mask-ctm.c
--- cairo-1.0.0/test/mask-ctm.c	2005-07-28 17:55:01.000000000 -0500
+++ cairo-1.0.0-patched/test/mask-ctm.c	2005-09-02 10:21:12.000000000 -0500
@@ -36,7 +36,7 @@
 {
     cairo_surface_t *mask_surface;
     cairo_pattern_t *mask;
-    unsigned long data[] = {
+    uint32_t data[] = {
 	0x80000000, 0x80000000,
 	0x80000000, 0x80000000,
     };
diff -NurdB cairo-1.0.0/test/mask-surface-ctm.c cairo-1.0.0-patched/test/mask-surface-ctm.c
--- cairo-1.0.0/test/mask-surface-ctm.c	2005-07-28 17:55:01.000000000 -0500
+++ cairo-1.0.0-patched/test/mask-surface-ctm.c	2005-09-02 10:21:50.000000000 -0500
@@ -35,7 +35,7 @@
 draw (cairo_t *cr, int width, int height)
 {
     cairo_surface_t *mask;
-    unsigned long data[] = {
+    uint32_t data[] = {
 	0x80000000, 0x80000000,
 	0x80000000, 0x80000000,
     };
diff -NurdB cairo-1.0.0/test/move-to-show-surface.c cairo-1.0.0-patched/test/move-to-show-surface.c
--- cairo-1.0.0/test/move-to-show-surface.c	2005-05-06 23:55:34.000000000 -0500
+++ cairo-1.0.0-patched/test/move-to-show-surface.c	2005-09-02 10:22:26.000000000 -0500
@@ -55,7 +55,7 @@
 draw (cairo_t *cr, int width, int height)
 {
     cairo_surface_t *surface;
-    unsigned long colors[4] = {
+    uint32_t colors[4] = {
 	0xffffffff, 0xffff0000,
 	0xff00ff00, 0xff0000ff
     };
diff -NurdB cairo-1.0.0/test/paint-with-alpha.c cairo-1.0.0-patched/test/paint-with-alpha.c
--- cairo-1.0.0/test/paint-with-alpha.c	2005-05-12 12:35:02.000000000 -0500
+++ cairo-1.0.0-patched/test/paint-with-alpha.c	2005-09-02 10:22:55.000000000 -0500
@@ -35,7 +35,7 @@
 draw (cairo_t *cr, int width, int height)
 {
     cairo_surface_t *surface;
-    unsigned long data[16] = {
+    uint32_t data[16] = {
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 
diff -NurdB cairo-1.0.0/test/scale-source-surface-paint.c cairo-1.0.0-patched/test/scale-source-surface-paint.c
--- cairo-1.0.0/test/scale-source-surface-paint.c	2005-05-06 23:55:35.000000000 -0500
+++ cairo-1.0.0-patched/test/scale-source-surface-paint.c	2005-09-02 10:23:25.000000000 -0500
@@ -35,7 +35,7 @@
 draw (cairo_t *cr, int width, int height)
 {
     cairo_surface_t *surface;
-    unsigned long data[16] = {
+    uint32_t data[16] = {
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 
diff -NurdB cairo-1.0.0/test/set-source.c cairo-1.0.0-patched/test/set-source.c
--- cairo-1.0.0/test/set-source.c	2005-05-06 23:55:35.000000000 -0500
+++ cairo-1.0.0-patched/test/set-source.c	2005-09-02 10:23:59.000000000 -0500
@@ -37,7 +37,7 @@
     int i;
     /* This color value might need to change in the future when we fix
      * the rounding in cairo-color.c */
-    unsigned long color = 0x7f19334C;
+    uint32_t color = 0x7f19334C;
     cairo_surface_t *surface;
     cairo_pattern_t *pattern;
 
diff -NurdB cairo-1.0.0/test/source-surface-scale-paint.c cairo-1.0.0-patched/test/source-surface-scale-paint.c
--- cairo-1.0.0/test/source-surface-scale-paint.c	2005-08-04 14:28:52.000000000 -0500
+++ cairo-1.0.0-patched/test/source-surface-scale-paint.c	2005-09-02 10:24:35.000000000 -0500
@@ -35,7 +35,7 @@
 draw (cairo_t *cr, int width, int height)
 {
     cairo_surface_t *surface;
-    unsigned long data[16] = {
+    uint32_t data[16] = {
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 	0xffffffff, 0xffffffff,		0xffff0000, 0xffff0000,
 
diff -NurdB cairo-1.0.0/test/translate-show-surface.c cairo-1.0.0-patched/test/translate-show-surface.c
--- cairo-1.0.0/test/translate-show-surface.c	2005-05-06 23:55:35.000000000 -0500
+++ cairo-1.0.0-patched/test/translate-show-surface.c	2005-09-02 10:24:59.000000000 -0500
@@ -53,7 +53,7 @@
 draw (cairo_t *cr, int width, int height)
 {
     cairo_surface_t *surface;
-    unsigned long colors[4] = {
+    uint32_t colors[4] = {
 	0xffffffff, 0xffff0000,
 	0xff00ff00, 0xff0000ff
     };
