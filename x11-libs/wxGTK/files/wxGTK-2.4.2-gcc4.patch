--- wxGTK-2.4.2/contrib/src/xrc/xml.cpp.orig	2006-01-01 13:05:58.000000000 -0500
+++ wxGTK-2.4.2/contrib/src/xrc/xml.cpp	2006-01-01 13:07:41.000000000 -0500
@@ -354,8 +354,8 @@
 #else
     if ( conv )
     {
-        size_t nLen = (len != wxSTRING_MAXLEN) ? len :
-                          nLen = wxConvUTF8.MB2WC((wchar_t*) NULL, s, 0);
+        size_t nLen = ((len != wxSTRING_MAXLEN) ? len :
+                          wxConvUTF8.MB2WC((wchar_t*) NULL, s, 0));
 
         wchar_t *buf = new wchar_t[nLen+1];
         wxConvUTF8.MB2WC(buf, s, nLen);
--- wxGTK-2.4.2/contrib/src/xrc/expat/xmlparse/xmlparse.c.orig	2006-01-01 13:09:01.000000000 -0500
+++ wxGTK-2.4.2/contrib/src/xrc/expat/xmlparse/xmlparse.c	2006-01-01 13:10:00.000000000 -0500
@@ -203,8 +203,10 @@
 static enum XML_Error
 doProlog(XML_Parser parser, const ENCODING *enc, const char *s,
 	 const char *end, int tok, const char *next, const char **nextPtr);
+#ifdef XML_DTD
 static enum XML_Error
 processInternalParamEntity(XML_Parser parser, ENTITY *entity);
+#endif /* XML_DTD */
 static enum XML_Error
 doContent(XML_Parser parser, int startTagLevel, const ENCODING *enc,
 	  const char *start, const char *end, const char **endPtr);
--- wxGTK-2.4.2/contrib/src/stc/scintilla/src/Document.cxx.orig	2006-01-01 13:10:57.000000000 -0500
+++ wxGTK-2.4.2/contrib/src/stc/scintilla/src/Document.cxx	2006-01-01 13:11:50.000000000 -0500
@@ -850,6 +850,8 @@
 	DocumentIndexer(Document *pdoc_, int end_) :
 		pdoc(pdoc_), end(end_) {
 	}
+  
+        virtual ~DocumentIndexer() {};
 
 	virtual char CharAt(int index) {
 		if (index < 0 || index >= end)

--- wxGTK-2.4.2/src/common/sckfile.cpp.orig	2006-01-01 13:13:57.000000000 -0500
+++ wxGTK-2.4.2/src/common/sckfile.cpp	2006-01-01 13:14:09.000000000 -0500
@@ -9,7 +9,7 @@
 // Licence:     wxWindows license
 /////////////////////////////////////////////////////////////////////////////
 #ifdef __GNUG__
-#pragma implementation "sckfile.h"
+#pragma implementation "file.h"
 #endif
 
 // For compilers that support precompilation, includes "wx.h".
--- wxGTK-2.4.2/include/wx/dir.h.orig	2006-01-01 13:14:53.000000000 -0500
+++ wxGTK-2.4.2/include/wx/dir.h	2006-01-01 13:15:22.000000000 -0500
@@ -52,6 +52,7 @@
 class WXDLLEXPORT wxDirTraverser
 {
 public:
+    virtual ~wxDirTraverser() {};
     // called for each file found by wxDir::Traverse()
     //
     // return wxDIR_STOP or wxDIR_CONTINUE from here
--- wxGTK-2.4.2/contrib/src/stc/scintilla/src/ExternalLexer.h.orig	2006-01-01 13:23:30.000000000 -0500
+++ wxGTK-2.4.2/contrib/src/stc/scintilla/src/ExternalLexer.h	2006-01-01 13:23:57.000000000 -0500
@@ -38,6 +38,7 @@
 		strncpy(name, languageName_, sizeof(name));
 		languageName = name;
 	};
+	virtual ~ExternalLexerModule() {};
 	virtual void Lex(unsigned int startPos, int lengthDoc, int initStyle,
 					WordList *keywordlists[], Accessor &styler) const;
 	virtual void Fold(unsigned int startPos, int lengthDoc, int initStyle,
--- wxGTK-2.4.2/contrib/src/stc/scintilla/include/KeyWords.h.orig	2006-01-01 13:25:02.000000000 -0500
+++ wxGTK-2.4.2/contrib/src/stc/scintilla/include/KeyWords.h	2006-01-01 13:25:36.000000000 -0500
@@ -29,6 +29,7 @@
 	LexerModule(int language_, LexerFunction fnLexer_, 
 		const char *languageName_=0, LexerFunction fnFolder_=0,
 		const char * const wordListDescriptions_[] = NULL);
+	virtual ~LexerModule() {};
 	int GetLanguage() const { return language; }
 
 	// -1 is returned if no WordList information is available
--- wxGTK-2.4.2/src/common/dircmn.cpp.orig	2006-01-01 13:26:37.000000000 -0500
+++ wxGTK-2.4.2/src/common/dircmn.cpp	2006-01-01 13:27:10.000000000 -0500
@@ -147,6 +147,7 @@
 {
 public:
     wxDirTraverserSimple(wxArrayString& files) : m_files(files) { }
+    virtual ~wxDirTraverserSimple() {};
 
     virtual wxDirTraverseResult OnFile(const wxString& filename)
     {
--- wxGTK-2.4.2/src/common/xpmdecod.cpp.orig	2006-01-01 13:28:05.000000000 -0500
+++ wxGTK-2.4.2/src/common/xpmdecod.cpp	2006-01-01 13:28:56.000000000 -0500
@@ -669,7 +669,7 @@
     wxChar key[64];
     const char *clr_def;
     bool hasMask;
-    wxXPMColourMapData clr_data;
+    wxXPMColourMapData clr_data = {0, 0, 0};
     wxXPMColourMap clr_tbl;
 
     /*
@@ -712,7 +712,7 @@
         }
         else
         {
-            bool isNone;
+            bool isNone = false;
             if ( !GetRGBFromName(clr_def, &isNone,
                                  &clr_data.R, &clr_data.G, &clr_data.B) )
             {
--- wxGTK-2.4.2/src/unix/mimetype.cpp.orig	2006-01-01 13:29:58.000000000 -0500
+++ wxGTK-2.4.2/src/unix/mimetype.cpp	2006-01-01 13:30:31.000000000 -0500
@@ -1580,7 +1580,7 @@
     {
         // now got a file we can write to ....
         wxMimeTypeCommands * entries = m_aEntries[index];
-        size_t iOpen;
+        size_t iOpen = 0;
         wxString sCmd = entries->GetCommandForVerb(_T("open"), &iOpen);
         wxString sTmp;
 
--- wxGTK-2.4.2/include/wx/statline.h.orig	2006-01-01 13:31:31.000000000 -0500
+++ wxGTK-2.4.2/include/wx/statline.h	2006-01-01 13:31:53.000000000 -0500
@@ -39,6 +39,7 @@
 public:
     // constructor
     wxStaticLineBase() { }
+    virtual ~wxStaticLineBase() {};
 
     // is the line vertical?
     bool IsVertical() const { return (GetWindowStyle() & wxLI_VERTICAL) != 0; }

--- wxGTK-2.4.2/include/wx/datetime.h.orig	2006-01-01 13:32:24.000000000 -0500
+++ wxGTK-2.4.2/include/wx/datetime.h	2006-01-01 13:34:08.000000000 -0500
@@ -1300,6 +1300,7 @@
 {
 friend class wxDateTimeHolidaysModule;
 public:
+    virtual ~wxDateTimeHolidayAuthority() {};
     // returns TRUE if the given date is a holiday
     static bool IsHoliday(const wxDateTime& dt);
 
@@ -1340,6 +1341,8 @@
 // the holidays for this class are all Saturdays and Sundays
 class WXDLLEXPORT wxDateTimeWorkDays : public wxDateTimeHolidayAuthority
 {
+public:
+    virtual ~wxDateTimeWorkDays() {};
 protected:
     virtual bool DoIsHoliday(const wxDateTime& dt) const;
     virtual size_t DoGetHolidaysInRange(const wxDateTime& dtStart,
--- wxGTK-2.4.2/include/wx/notebook.h.orig	2006-01-01 13:35:14.000000000 -0500
+++ wxGTK-2.4.2/include/wx/notebook.h	2006-01-01 13:35:36.000000000 -0500
@@ -193,6 +193,7 @@
             m_nSel = nSel;
             m_nOldSel = nOldSel;
         }
+    virtual ~wxNotebookEvent() {};
 
     // accessors
         // the currently selected page (-1 if none)
--- wxGTK-2.4.2/include/wx/event.h.orig	2006-01-01 13:36:05.000000000 -0500
+++ wxGTK-2.4.2/include/wx/event.h	2006-01-01 13:36:43.000000000 -0500
@@ -1952,6 +1952,7 @@
         : wxEventTableEntryBase(id, idLast, fn, data),
         m_eventType(evType)
     { }
+    virtual ~wxEventTableEntry() {};
 
     // the reference to event type: this allows us to not care about the
     // (undefined) order in which the event table entries and the event types
--- wxGTK-2.4.2/include/wx/geometry.h.orig	2006-01-01 13:37:21.000000000 -0500
+++ wxGTK-2.4.2/include/wx/geometry.h	2006-01-01 13:37:49.000000000 -0500
@@ -785,6 +785,7 @@
 class wxTransform2D
 {
 public :
+    virtual ~wxTransform2D() {};
     virtual void                    Transform( wxPoint2DInt* pt )const  = 0;
     virtual void                    Transform( wxRect2DInt* r ) const;
     virtual wxPoint2DInt    Transform( const wxPoint2DInt &pt ) const;
--- wxGTK-2.4.2/include/wx/list.h.orig	2006-01-01 13:38:40.000000000 -0500
+++ wxGTK-2.4.2/include/wx/list.h	2006-01-01 13:41:12.000000000 -0500
@@ -385,6 +385,8 @@
                  const wxListKey& key = wxDefaultListKey)                   \
             : wxNodeBase(list, previous, next, data, key) { }               \
                                                                             \
+        virtual ~nodetype() {};                                             \
+                                                                            \
         nodetype *GetNext() const                                           \
             { return (nodetype *)wxNodeBase::GetNext(); }                   \
         nodetype *GetPrevious() const                                       \
@@ -411,6 +413,8 @@
         name& operator=(const name& list)                                   \
             { (void) wxListBase::operator=(list); return *this; }           \
                                                                             \
+        virtual ~name() {};						     \
+                                                                            \
         nodetype *GetFirst() const                                          \
             { return (nodetype *)wxListBase::GetFirst(); }                  \
         nodetype *GetLast() const                                           \
--- wxGTK-2.4.2/include/wx/radiobox.h.orig	2006-01-01 13:41:57.000000000 -0500
+++ wxGTK-2.4.2/include/wx/radiobox.h	2006-01-01 13:42:21.000000000 -0500
@@ -35,6 +35,7 @@
 class WXDLLEXPORT wxRadioBoxBase
 {
 public:
+    virtual ~wxRadioBoxBase() {};
     // selection
     virtual void SetSelection(int n) = 0;
     virtual int GetSelection() const = 0;
--- wxGTK-2.4.2/include/wx/caret.h.orig	2006-01-01 13:42:56.000000000 -0500
+++ wxGTK-2.4.2/include/wx/caret.h	2006-01-01 13:43:26.000000000 -0500
@@ -61,6 +61,7 @@
         (void)Create(window, size);
     }
 
+    virtual ~wxCaretBase() {};
     // Create() functions - same as ctor but returns the success code
     // --------------------------------------------------------------
 
--- wxGTK-2.4.2/include/wx/clipbrd.h.orig	2006-01-01 13:45:13.000000000 -0500
+++ wxGTK-2.4.2/include/wx/clipbrd.h	2006-01-01 13:45:33.000000000 -0500
@@ -39,6 +39,7 @@
 {
 public:
     wxClipboardBase();
+    virtual ~wxClipboardBase() {};
 
     // open the clipboard before Add/SetData() and GetData()
     virtual bool Open() = 0;
