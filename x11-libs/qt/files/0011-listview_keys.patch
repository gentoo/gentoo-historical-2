qt-bugs@ issue : 19839
bugs.kde.org number : 56688
applied: no
author: Scott Wheeler <wheeler@kde.org>

Subject: [patch] QListView keys
Date: Tuesday 01 April 2003 19:35
From: Scott Wheeler <wheeler@kde.org>
To: kde-core-devel@kde.org
Cc: qt-bugs@kde.org, 56688@bugs.kde.org

The column priority for QListView seems rather odd with respect to hotkeys.

There are a few scenarios that don't really make sense:

(1) If I have explicitly chosen to sort by a given column, it seems that the 
key pressed should jump to items starting with that letter in that column.

I got a bug report on this in JuK today -- basically if someone is sorting by 
the artist column, pressing "A" shouldn't jump to track names that start with 
"A".

(2) This always uses "column zero" rather than the leftmost column.  This also 
seems flawed.  Of course by default the column zero is the leftmost column.  
But since QListView allows you to reorder the columns, it seems like in an 
unsorted QListView that it should default to the leftmost column.

Also I found a Windows box to try these on.  (1) is done on Windows and I 
couldn't find a good test case for (2) (a multicolumn unsorted list).  Since 
(1) is hard-coded into the source, I presume that this is a bug.

It might be nice to have a couple of methods to set / retrieve which column 
keyboard hotkeys go to, but I'll stop pushing my luck...  :-)

Anyway, if there are no objections I'd like to commit this to qt-copy.

Cheers,

-Scott

Index: qlistview.cpp
===================================================================
RCS file: /home/kde/qt-copy/src/widgets/qlistview.cpp,v
retrieving revision 1.60
diff -u -3 -p -r1.60 qlistview.cpp
--- src/widgets/qlistview.cpp	23 Jun 2003 11:48:55 -0000	1.60
+++ src/widgets/qlistview.cpp	1 Jul 2003 10:45:42 -0000
@@ -4962,10 +4962,10 @@ void QListView::keyPressEvent( QKeyEvent
 		QString keyItemKey;
 		QString prefix;
 		while( keyItem ) {
-		    // Look for text in column 0, then left-to-right
-		    keyItemKey = keyItem->text(0);
-		    for (int col = 0; col < d->h->count() && !keyItemKey; col++ )
-			keyItemKey = keyItem->text( d->h->mapToLogical(col) );
+		    // Look first in the sort column, then the leftmost column, then left to right
+		    keyItemKey = keyItem->text( d->sortcolumn );
+		    for ( int col = 0; col < d->h->count() && !keyItemKey; col++ )
+			keyItemKey = keyItem->text( d->h->mapToSection(col) );
 		    if ( !keyItemKey.isEmpty() ) {
 			prefix = keyItemKey;
 			prefix.truncate( input.length() );
