diff -Nru qt-embedded-free-3.3.8.orig/src/embedded/qgfxlinuxfb_qws.cpp qt-embedded-free-3.3.8/src/embedded/qgfxlinuxfb_qws.cpp
--- qt-embedded-free-3.3.8.orig/src/embedded/qgfxlinuxfb_qws.cpp	2007-06-03 22:12:08.000000000 +0200
+++ qt-embedded-free-3.3.8/src/embedded/qgfxlinuxfb_qws.cpp	2007-06-03 22:51:39.000000000 +0200
@@ -176,7 +176,7 @@
 				 MAP_SHARED, fd, 0);
     data += dataoffset;
 
-    if ((int)data == -1) {
+    if ((long)data == -1) {
 	perror("mapping /dev/fb0");
 	qWarning("Error: failed to map framebuffer device to memory.");
 	return FALSE;
@@ -737,7 +737,7 @@
     psize += 8;     // for alignment
     psize &= ~0x7;  // align
 
-    unsigned int pos=(unsigned int)data;
+    unsigned int pos=(unsigned long)data;
     pos += psize;
     entryp = ((int *)pos);
     lowest = ((unsigned int *)pos)+1;
diff -Nru qt-embedded-free-3.3.8.orig/src/embedded/qgfxvfb_qws.cpp qt-embedded-free-3.3.8/src/embedded/qgfxvfb_qws.cpp
--- qt-embedded-free-3.3.8.orig/src/embedded/qgfxvfb_qws.cpp	2007-06-03 22:12:08.000000000 +0200
+++ qt-embedded-free-3.3.8/src/embedded/qgfxvfb_qws.cpp	2007-06-03 22:58:14.000000000 +0200
@@ -411,8 +411,8 @@
     else
 	return FALSE;
 
-    if ( (int)shmrgn == -1 || shmrgn == 0 ) {
-	qDebug("No shmrgn %d", (int)shmrgn);
+    if ( (long)shmrgn == -1 || shmrgn == 0 ) {
+	qDebug("No shmrgn %d", (long)shmrgn);
 	return FALSE;
     }
 
@@ -444,7 +444,7 @@
 
 void QVFbScreen::disconnect()
 {
-    if ( (int)shmrgn != -1 && shmrgn )
+    if ( (long)shmrgn != -1 && shmrgn )
 	shmdt( (char*)shmrgn );
     if ( qApp->type() == QApplication::GuiServer ) {
 	delete mouseHandler;
diff -Nru qt-embedded-free-3.3.8.orig/src/kernel/qapplication_qws.cpp qt-embedded-free-3.3.8/src/kernel/qapplication_qws.cpp
--- qt-embedded-free-3.3.8.orig/src/kernel/qapplication_qws.cpp	2007-06-03 22:12:08.000000000 +0200
+++ qt-embedded-free-3.3.8/src/kernel/qapplication_qws.cpp	2007-06-03 22:13:52.000000000 +0200
@@ -1879,7 +1879,7 @@
 	w = widgetAt(*qt_last_x, *qt_last_y, FALSE);
     if ( !w )
 	w = desktop();
-    QPaintDevice::qwsDisplay()->selectCursor(w, (int)app_cursor->handle());
+    QPaintDevice::qwsDisplay()->selectCursor(w, (long)app_cursor->handle());
 }
 
 void QApplication::restoreOverrideCursor()
@@ -1898,11 +1898,11 @@
 	cursorStack = 0;
 	qws_overrideCursor = FALSE;
 	if ( w->testWState(WState_OwnCursor) )
-	    QPaintDevice::qwsDisplay()->selectCursor(w, (int)w->cursor().handle());
+	    QPaintDevice::qwsDisplay()->selectCursor(w, (long)w->cursor().handle());
 	else
 	    QPaintDevice::qwsDisplay()->selectCursor(w, ArrowCursor);
     } else {
-	QPaintDevice::qwsDisplay()->selectCursor(w, (int)app_cursor->handle());
+	QPaintDevice::qwsDisplay()->selectCursor(w, (long)app_cursor->handle());
     }
 }
 #endif// QT_NO_CURSOR
@@ -2130,7 +2130,7 @@
 		    }
 		    if ( !qws_overrideCursor ) {
 			if (curs)
-			    QPaintDevice::qwsDisplay()->selectCursor(widget, (int)curs->handle());
+			    QPaintDevice::qwsDisplay()->selectCursor(widget, (long)curs->handle());
 			else
 			    QPaintDevice::qwsDisplay()->selectCursor(widget, ArrowCursor);
 		    }
diff -Nru qt-embedded-free-3.3.8.orig/src/kernel/qfont_qws.cpp qt-embedded-free-3.3.8/src/kernel/qfont_qws.cpp
--- qt-embedded-free-3.3.8.orig/src/kernel/qfont_qws.cpp	2007-06-03 22:12:08.000000000 +0200
+++ qt-embedded-free-3.3.8/src/kernel/qfont_qws.cpp	2007-06-03 22:25:28.000000000 +0200
@@ -133,7 +133,7 @@
 	req.pointSize = req.pixelSize*10;
 
     if ( ! engineData ) {
-	QFontCache::Key key( req, QFont::NoScript, (int)paintdevice, paintdevice );
+	QFontCache::Key key( req, QFont::NoScript, (long)paintdevice, paintdevice );
 
 	// look for the requested font in the engine data cache
 	engineData = QFontCache::instance->findEngineData( key );
diff -Nru qt-embedded-free-3.3.8.orig/src/kernel/qsharedmemory_p.cpp qt-embedded-free-3.3.8/src/kernel/qsharedmemory_p.cpp
--- qt-embedded-free-3.3.8.orig/src/kernel/qsharedmemory_p.cpp	2007-06-03 22:12:08.000000000 +0200
+++ qt-embedded-free-3.3.8/src/kernel/qsharedmemory_p.cpp	2007-06-03 22:45:21.000000000 +0200
@@ -132,7 +132,7 @@
     shmId = shmget (key, shmSize, 0);
 
   shmBase = shmat (shmId, 0, 0);
-  if ((int) shmBase == -1 || shmBase == 0)
+  if ((long) shmBase == -1 || shmBase == 0)
     return FALSE;
   else
     return TRUE;
diff -Nru qt-embedded-free-3.3.8.orig/src/kernel/qwidget_qws.cpp qt-embedded-free-3.3.8/src/kernel/qwidget_qws.cpp
--- qt-embedded-free-3.3.8.orig/src/kernel/qwidget_qws.cpp	2007-06-03 22:12:08.000000000 +0200
+++ qt-embedded-free-3.3.8/src/kernel/qwidget_qws.cpp	2007-06-03 22:36:03.000000000 +0200
@@ -631,7 +631,7 @@
 	qt_mouseGrb->releaseMouse();
 
     qwsDisplay()->grabMouse(this,TRUE);
-    qwsDisplay()->selectCursor(this, (unsigned int)cursor.handle());
+    qwsDisplay()->selectCursor(this, (unsigned long)cursor.handle());
     qt_mouseGrb = this;
     qt_pressGrab = 0;
 }
@@ -1845,7 +1845,7 @@
 	QSize s( qt_screen->width(), qt_screen->height() );
 	QPoint pos = qt_screen->mapToDevice(QPoint(*qt_last_x, *qt_last_y), s);
 	if ( r.contains(pos) )
-	    qwsDisplay()->selectCursor((QWidget*)this, (unsigned int)cursor().handle());
+	    qwsDisplay()->selectCursor((QWidget*)this, (unsigned long)cursor().handle());
     }
 }
 #endif
diff -Nru qt-embedded-free-3.3.8.orig/src/kernel/qwsregionmanager_qws.cpp qt-embedded-free-3.3.8/src/kernel/qwsregionmanager_qws.cpp
--- qt-embedded-free-3.3.8.orig/src/kernel/qwsregionmanager_qws.cpp	2007-06-03 22:12:08.000000000 +0200
+++ qt-embedded-free-3.3.8/src/kernel/qwsregionmanager_qws.cpp	2007-06-03 22:40:42.000000000 +0200
@@ -288,7 +288,7 @@
 	    data = (unsigned char *)shmat( shmId, 0, 0 );
     }
 
-    return ( shmId != -1 && (int)data != -1 );
+    return ( shmId != -1 && (long)data != -1 );
 #else
 	int dataSize = sizeof(QWSRegionHeader)                // header
 		    + sizeof(QWSRegionIndex) * QT_MAX_REGIONS // + index
