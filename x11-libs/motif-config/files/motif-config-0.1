#!/bin/bash
# Copyright 1999-2004 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# based on gcc-config by Martin Schlemmer <azarah@gentoo.org
# Author:  Heinrich Wendel <lanius@gentoo.org>

source /etc/init.d/functions.sh || {
    echo "$0: Could not source /etc/init.d/functions.sh!"
    exit 1
}
source /etc/make.profile/make.defaults || {
	echo "$0: Could not source /etc/make.profile/make.defaults!"
	exit 1
}
umask 022

# functions.sh returns a wrong libdir on multilib architectures
#get_libdir() {
#	libdirvar="LIBDIR_${DEFAULT_ABI}"
#	echo ${!libdirvar}
#}

PROFILE_PATH=/usr/$(get_libdir)/motif
CONFIG_FILE=${PROFILE_PATH}/current

usage() {
cat << "USAGE_END"
Usage: motif-config [option] [profile]
Change the current motif profile, or give info about profiles.

Options:

  -c, --get-current-profile  Print current used motif profile.
  
  -l, --list-profiles        Print a list of available profiles.

  -s, --set-profile          Set the current profile.

  -L, --get-lib-path         Print path where libraries of the given/current
                             profile are located.

  -I, --get-inc-path         Print path where includes of the given/current
                             profile are located.

      --libs                 Print link flags for the given/current
                             profile.

      --cflags               Print compilation flags for the given/current
                             profile.

      --install              Install the given profile.

      --uninstall            Uninstall the given profile.

USAGE_END
    exit $1
}
[[ $# -lt 1 ]] && usage 1
[[ $# -gt 2 ]] && usage 1


_activate_profile() {
	if [[ "$(id -u)" -ne 0 ]] ; then
		eerror "$0: Must be root."
		exit 1
	fi

	new=${1}
	# libs
	for file in `ls /usr/$(get_libdir)/${new}/`; do
		ln -s /usr/$(get_libdir)/${new}/${file} /usr/$(get_libdir)/${file}
	done
	# includes
	for file in `ls /usr/include/${new}/`; do
		ln -s /usr/include/${new}/${file} /usr/include/${file}
	done
	# binaries
	for file in `find /usr/bin/ -name "*-${new}"`; do
		ln -s ${file} ${file/-${new}/}
	done
	# man pages
	for file in `find /usr/share/man -regex ".*-${new}\..x?.gz"`; do
		ln -s ${file} ${file/-${new}/}
	done

	# set new profile as default
	rm -f ${CONFIG_FILE}
	cat ${PROFILE_PATH}/${new} > ${CONFIG_FILE}

	exit 0
}

_deactivate_profile() {
	if [[ "$(id -u)" -ne 0 ]] ; then
		eerror "$0: Must be root."
		exit 1
	fi

	current=`cat ${CONFIG_FILE}`

	if [ -z "$current" ]; then
		exit 0
	fi

	# libs
	for file in `ls /usr/$(get_libdir)/${current}/`; do
		rm -f /usr/$(get_libdir)/${file}
	done
	# includes
	for file in `ls /usr/include/${current}/`; do
		rm -f /usr/include/${file}
	done
	# binaries
	for file in `find /usr/bin/ -name "*-${current}"`; do
		rm -f ${file/-${current}/}
	done
	# man pages
	for file in `find /usr/share/man -regex ".*-${current}\..x?.gz"`; do
		rm -f ${file/-${current}/}
	done
}

switch_profile() {
	if [[ "$(id -u)" -ne 0 ]] ; then
		eerror "$0: Must be root."
		exit 1
	fi

	if [ -n "$1" ]; then
		if [ ! -e ${PROFILE_PATH}/${1} ]; then
			eerror "$0: no such profile ${1}"
		else
			_deactivate_profile
			_activate_profile $1
		fi
	else
		for x in `ls ${PROFILE_PATH}`; do
			if [ "${x}" != "current" ]; then
				_deactivate_profile
				_activate_profile ${x}
				break
			fi
		done
	fi
	if [ -z ${x} ]; then
		error "$0: no profile to activate"
	else
		exit 0
	fi
}

get_current_profile() {
	cat ${CONFIG_FILE} 2> /dev/null
}

list_profiles() {
	i=1
	for x in `ls ${PROFILE_PATH}`; do
		current=`cat ${CONFIG_FILE}`
		if [ "${x}" != "current" ]; then
			output=`cat ${PROFILE_PATH}/${x}`;
			output="[${i}] $output";
			if [ "${x}" = "${current}" ]; then
				output="${output} *"
			fi
			echo "$output"
			i=$((i + 1))
		fi
	done
	exit 0
}

get_lib_path() {
	if [ "$1" != "" ]; then
		profile=${1}
	else
		profile="current"
	fi
	name=`cat ${PROFILE_PATH}/${profile} 2> /dev/null`
	if [ $? -eq 1 ]; then
		eerror "motif-config: No such profile: $profile"
	else
		echo "/usr/$(get_libdir)/${name}/"
		exit 0
	fi
}

get_inc_path() {
	if [ "$1" != "" ]; then
		profile=${1}
	else
		profile="current"
	fi
	name=`cat ${PROFILE_PATH}/${profile} 2> /dev/null`
	if [ $? -eq 1 ]; then
		eerror "motif-config: No such profile: $profile"
	else
		echo "/usr/include/${name}/"
		exit 0
	fi
}

get_cflags() {
	if [ "$1" != "" ]; then
		profile=${1}
	else
		profile="current"
	fi
	name=`cat ${PROFILE_PATH}/${profile} 2> /dev/null`
	if [ $? -eq 1 ]; then
		eerror "motif-config: No such profile: $profile"
	else
		echo "-I/usr/include/${name}/"
		exit 0
	fi
}

get_libs() {
	if [ "$1" != "" ]; then
		profile=${1}
	else
		profile="current"
	fi
	name=`cat ${PROFILE_PATH}/${profile} 2> /dev/null`
	if [ $? -eq 1 ]; then
		eerror "motif-config: No such profile: $profile"
	else
		echo "-L/usr/$(get_libdir)/${name}/"
		exit 0
	fi
}

install_profile() {
	if [[ "$(id -u)" -ne 0 ]] ; then
		eerror "$0: Must be root."
		exit 1
	fi

	# create profile
	echo ${1} > ${PROFILE_PATH}/${1}

	# make it default if no profile is activated
	if [ ! -e $CONFIG_FILE ]; then
		switch_profile
	fi

	exit 0
}

uninstall_profile() {
	if [[ "$(id -u)" -ne 0 ]] ; then
		eerror "$0: Must be root."
		exit 1
	fi

	# remove profile
	rm -f ${PROFILE_PATH}/${1} 2> /dev/null

	# activate next profile if non is activated
	if [ "`cat $CONFIG_FILE`" == "${1}" ]; then
		switch_profile
	fi

	exit 0
}

for x in "$@"; do
	case "${x}" in
		-c|--get-current-profile)
			[[ $# -ne 1 ]] && usage 1
			get_current_profile
			exit $?
		;;

		-l|--list-profiles)
			[[ $# -ne 1 ]] && usage 1
			list_profiles
			exit $?
		;;

		-s|--set-profile)
			[[ $# -ne 2 ]] && usage 1
			switch_profile $2
			exit $?
		;;

		-L|--get-lib-path)
			[[ $# -gt 2 ]] && usage 1
			get_lib_path $2
			exit $?
		;;

		-I|--get-inc-path)
			[[ $# -gt 2 ]] && usage 1
			get_lib_path $2
			exit $?
		;;

		--cflags)
			[[ $# -gt 2 ]] && usage 1
			get_cflags $2
			exit $?
		;;

		--libs)
			[[ $# -gt 2 ]] && usage 1
			get_libs $2
			exit $?
		;;

		--install)
			[[ $# -ne 2 ]] && usage 1
			install_profile $2
			exit $?
		;;

		--uninstall)
			[[ $# -ne 2 ]] && usage 1
			uninstall_profile $2
			exit $?
		;;

		-h|--help)
			usage 0
			exit $?
		;;

		-v|--version)
			echo "motif-config-0.1"
			exit $?
		;;

		-*)
			usage 1
		;;

		*)
			usage 1
		;;

	esac
done
