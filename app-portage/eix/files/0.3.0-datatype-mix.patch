--- eix-0.3.0/src/databaseTk/packagedatabase.h.orig	2005-08-29 13:15:31.000000000 +0200
+++ eix-0.3.0/src/databaseTk/packagedatabase.h	2005-08-29 13:15:39.000000000 +0200
@@ -33,6 +33,23 @@
 #include <databaseTk/basicio.h>
 #include <map>
 
+class CategoryHeader {
+	public:
+		typedef unsigned int size_type;
+
+		static size_type read(FILE *stream, string &name) {
+			size_type ret;
+			DB_READ_STRING(stream,  name);
+			DB_READ_GENERIC(stream, ret, size_type);
+			return ret;
+		}
+
+		static void write(FILE *stream, const string &name, const size_type size) {
+			DB_WRITE_STRING(stream,  name);
+			DB_WRITE_GENERIC(stream, size, size_type);
+		}
+};
+
 /** Body of a database. */
 class PackageDatabase {
 
@@ -136,8 +153,11 @@
 			for(mapiter c = _packages.begin(); c != _packages.end(); ++c) {
 				/* Write category-header followed by a list of the packages. */
 				vector<Package>::size_type s = c->second.size();
+				CategoryHeader::write(stream, c->first, s);
+#if 0
 				DB_WRITE_STRING(stream,  c->first);
 				DB_WRITE_GENERIC(stream, s, vector<Package>::size_type);
+#endif
 				for(pkgiter p = c->second.begin(); p != c->second.end(); ++p) {
 					/* write package to stream */
 					(*p)->write(stream);
@@ -151,8 +171,11 @@
 			string                      name;
 
 			for(unsigned int i = 0; i < header->numcategories; i++) {
+				size = CategoryHeader::read(stream, name);
+#if 0
 				DB_READ_STRING(stream,  name);
 				DB_READ_GENERIC(stream, size, vector<Package>::size_type);
+#endif
 				for(unsigned int i = 0; i<size; i++) {
 					fseeko(stream, sizeof(Package::offset_type) , SEEK_CUR);
 					Package *pkg = new Package(stream);
--- eix-0.3.0/src/databaseTk/dbselector.cc.orig	2005-08-29 13:15:23.000000000 +0200
+++ eix-0.3.0/src/databaseTk/dbselector.cc	2005-08-29 13:15:48.000000000 +0200
@@ -37,8 +37,11 @@
 		if(_cats-- == 0) {
 			return NULL;
 		}
+		_pkgs = CategoryHeader::read(_input, _catname);
+#if 0
 		DB_READ_STRING(_input,  _catname);
 		DB_READ_GENERIC(_input, _pkgs, unsigned int);
+#endif
 		return next();
 	}
 
