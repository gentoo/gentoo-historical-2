diff --git a/net/ieee80211.h b/net/ieee80211.h
--- a/net/ieee80211.h
+++ b/net/ieee80211.h
@@ -29,6 +29,21 @@
 #include <linux/kernel.h>	/* ARRAY_SIZE */
 #include <linux/wireless.h>
 
+#if WIRELESS_EXT < 18
+#define IW_QUAL_QUAL_UPDATED    0x01    /* Value was updated since last read */
+#define IW_QUAL_LEVEL_UPDATED   0x02
+#define IW_QUAL_NOISE_UPDATED   0x04
+#define IW_QUAL_ALL_UPDATED     0x07
+#define IW_QUAL_QUAL_INVALID    0x10    /* Driver doesn't provide value */
+#define IW_QUAL_LEVEL_INVALID   0x20
+#define IW_QUAL_NOISE_INVALID   0x40
+#define IW_QUAL_ALL_INVALID     0x70
+#endif
+
+#if WIRELESS_EXT < 19
+#define IW_QUAL_DBM             0x08    /* Level + Noise are dBm */
+#endif
+
 #define IEEE80211_VERSION "1.1.5"
 
 #define IEEE80211_DATA_LEN		2304
diff --git a/ieee80211_crypt_tkip.c b/ieee80211_crypt_tkip.c
--- a/ieee80211_crypt_tkip.c
+++ b/ieee80211_crypt_tkip.c
@@ -555,6 +555,7 @@ static void ieee80211_michael_mic_failur
 					  struct ieee80211_hdr_4addr *hdr,
 					  int keyidx)
 {
+#if WIRELESS_EXT >= 18
 	union iwreq_data wrqu;
 	struct iw_michaelmicfailure ev;
 
@@ -570,6 +571,7 @@ static void ieee80211_michael_mic_failur
 	memset(&wrqu, 0, sizeof(wrqu));
 	wrqu.data.length = sizeof(ev);
 	wireless_send_event(dev, IWEVMICHAELMICFAILURE, &wrqu, (char *)&ev);
+#endif
 }
 
 static int ieee80211_michael_mic_verify(struct sk_buff *skb, int keyidx,
diff --git a/ieee80211_wx.c b/ieee80211_wx.c
--- a/ieee80211_wx.c
+++ b/ieee80211_wx.c
@@ -488,6 +488,7 @@ int ieee80211_wx_get_encode(struct ieee8
 	return 0;
 }
 
+#if WIRELESS_EXT >= 18
 int ieee80211_wx_set_encodeext(struct ieee80211_device *ieee,
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
@@ -721,6 +722,7 @@ int ieee80211_wx_get_encodeext(struct ie
 
 EXPORT_SYMBOL(ieee80211_wx_set_encodeext);
 EXPORT_SYMBOL(ieee80211_wx_get_encodeext);
+#endif
 
 EXPORT_SYMBOL(ieee80211_wx_get_scan);
 EXPORT_SYMBOL(ieee80211_wx_set_encode);
