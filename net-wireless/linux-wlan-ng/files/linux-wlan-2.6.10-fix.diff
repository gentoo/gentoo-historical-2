diff -uNr linux-wlan-ng-0.2.1pre23.orig/src/p80211/p80211netdev.c linux-wlan-ng-0.2.1pre23/src/p80211/p80211netdev.c
--- linux-wlan-ng-0.2.1pre23.orig/src/p80211/p80211netdev.c	2005-01-02 18:55:44.054613192 +0100
+++ linux-wlan-ng-0.2.1pre23/src/p80211/p80211netdev.c	2005-01-02 18:56:53.988981552 +0100
@@ -1051,7 +1051,7 @@
 	if (wlandev->name[0] == '\0' || wlandev->name[0] == ' ') {
 		do {
 			sprintf(wlandev->name, "wlan%d", i++);
-		} while (dev_get(wlandev->name));
+		} while (dev_get_by_name(wlandev->name));
 	}
 
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0) )
@@ -1456,7 +1456,7 @@
         sprintf(action_str, "ACTION=%s", action);
 
         i = 0;
-        argv[i++] = hotplug_path;
+        argv[i++] = "/sbin/hotplug";
         argv[i++] = "wlan";
         argv[i] = 0;
 
diff -uNr linux-wlan-ng-0.2.1pre23.orig/src/prism2/driver/hfa384x_usb.c linux-wlan-ng-0.2.1pre23/src/prism2/driver/hfa384x_usb.c
--- linux-wlan-ng-0.2.1pre23.orig/src/prism2/driver/hfa384x_usb.c	2005-01-02 18:55:44.089607872 +0100
+++ linux-wlan-ng-0.2.1pre23/src/prism2/driver/hfa384x_usb.c	2005-01-02 18:57:01.889780448 +0100
@@ -533,7 +533,7 @@
 	if (test_bit(WORK_RX_HALT, &hw->work_flags)) {
 		int ret;
 
-		usb_unlink_urb(&hw->rx_urb);  /* Cannot be holding spinlock! */
+		usb_kill_urb(&hw->rx_urb);  /* Cannot be holding spinlock! */
 		ret = usb_clear_halt(hw->usb,
 		                     usb_rcvbulkpipe(hw->usb, hw->endp_in));
 		if (ret != 0) {
@@ -553,7 +553,7 @@
 	if (test_bit(WORK_TX_HALT, &hw->work_flags)) {
 		int ret;
 
-		usb_unlink_urb(&hw->tx_urb);
+		usb_kill_urb(&hw->tx_urb);
 		ret = usb_clear_halt(hw->usb,
 		                     usb_sndbulkpipe(hw->usb, hw->endp_out));
 		if (ret != 0) {
@@ -3363,7 +3363,9 @@
 
 	spin_unlock_irqrestore(&hw->ctlxq.lock, flags);
 
-	return usb_unlink_urb(&ctlx->outurb);
+	usb_kill_urb(&ctlx->outurb);
+
+	return 0;
 }
 
 /*----------------------------------------------------------------
@@ -4614,19 +4616,19 @@
 	 * the system, if it hasn't already expired.
 	 */
 	ctlx->outurb.transfer_flags |= URB_ASYNC_UNLINK;
-	if (usb_unlink_urb(&ctlx->outurb) == -EINPROGRESS) {
+	usb_kill_urb(&ctlx->outurb);
 
-		/* We are cancelling this CTLX, so we're
-		 * not going to need to wait for a response.
-		 */
-		del_timer(&ctlx->resptimer);
+	/* We are cancelling this CTLX, so we're
+	 * not going to need to wait for a response.
+	 */
+	del_timer(&ctlx->resptimer);
+
+	/* This URB was active, but has now been
+	 * cancelled. It will now have a status of
+	 * -ECONNRESET in the callback function.
+	 */
+	ctlx->state = CTLX_REQ_TIMEOUT;
 
-		/* This URB was active, but has now been
-		 * cancelled. It will now have a status of
-		 * -ECONNRESET in the callback function.
-		 */
-		ctlx->state = CTLX_REQ_TIMEOUT;
-	}
 
 	spin_unlock_irqrestore(&hw->ctlxq.lock, flags);
 
diff -uNr linux-wlan-ng-0.2.1pre23.orig/src/prism2/driver/prism2_usb.c linux-wlan-ng-0.2.1pre23/src/prism2/driver/prism2_usb.c
--- linux-wlan-ng-0.2.1pre23.orig/src/prism2/driver/prism2_usb.c	2005-01-02 18:55:44.093607264 +0100
+++ linux-wlan-ng-0.2.1pre23/src/prism2/driver/prism2_usb.c	2005-01-02 18:57:06.661055104 +0100
@@ -247,8 +247,8 @@
 		/* Unlink the tx/rx URBs. This "removes the wheels"
 		 * from the entire CTLX handling mechanism.
 		 */
-		usb_unlink_urb(&hw->rx_urb);
-		usb_unlink_urb(&hw->tx_urb);
+		usb_kill_urb(&hw->rx_urb);
+		usb_kill_urb(&hw->tx_urb);
 
 		flush_scheduled_work();
 
@@ -266,7 +266,7 @@
 			del_timer_sync(&ctlx->reqtimer);
 
 			/* Unlink the CTLX OUT URB */
-			usb_unlink_urb(&ctlx->outurb);
+			usb_kill_urb(&ctlx->outurb);
 
 			if (ctlx->is_async) {
 				/* We've stopped the BULK-IN pipe,
