http://trac.xbmc.org/attachment/ticket/11775

make mysql support optional

--- a/Makefile.in
+++ b/Makefile.in
@@ -127,13 +127,17 @@ endif
 LIB_DIRS=\
 	lib/cximage-6.0 \
 	lib/libexif \
-	lib/cmyth \
 	lib/libhdhomerun \
 	lib/libid3tag \
 	lib/libapetag \
 	lib/cpluff \
 	lib/xbmc-dll-symbols
 
+ifeq (@BUILD_MYTHTV@,1)
+LIB_DIRS+=\
+	lib/cmyth
+endif
+
 SS_DIRS=
 ifeq (@USE_OPENGL@,1)
 SS_DIRS+= xbmc/screensavers/rsxs-0.9/xbmc
@@ -418,7 +422,10 @@ imagelib: dllloader
 	$(MAKE) -C lib/cximage-6.0
 
 codecs: papcodecs dvdpcodecs
-libs: cmyth libhdhomerun libid3tag imagelib libexif system/libcpluff-@ARCH@.so
+libs: libhdhomerun libid3tag imagelib libexif system/libcpluff-@ARCH@.so
+ifeq (@BUILD_MYTHTV@,1)
+libs: cmyth
+endif
 externals: codecs libs visualizations screensavers
 
 xcode_depends: \
--- a/configure.in
+++ b/configure.in
@@ -68,6 +68,8 @@ goom_enabled="== GOOM enabled. =="
 goom_disabled="== GOOM disabled. =="
 pulse_not_found="== Could not find libpulse. PulseAudio support disabled. =="
 pulse_disabled="== PulseAudio support manually disabled. =="
+mysql_not_found="Could not find required library libmysqlclient for MythTV."
+mythtv_disabled="== MythTV support disabled. =="
 dvdcss_enabled="== DVDCSS support enabled. =="
 dvdcss_disabled="== DVDCSS support disabled. =="
 hal_not_found="== Could not find hal. HAL support disabled. =="
@@ -238,6 +240,12 @@ AC_ARG_ENABLE([ffmpeg_libvorbis],
   [use_ffmpeg_libvorbis=$enableval],
   [use_ffmpeg_libvorbis=no])
 
+AC_ARG_ENABLE([mythtv],
+  [AS_HELP_STRING([--enable-mythtv],
+  [enable MythTV support (default is yes)])],
+  [use_mythtv=$enableval],
+  [use_mythtv=yes])
+
 AC_ARG_ENABLE([dvdcss],
   [AS_HELP_STRING([--enable-dvdcss],
   [enable DVDCSS support (default is yes)])],
@@ -563,14 +571,21 @@ else
 fi
 
 # platform common libraries
-AC_CHECK_PROG(MYSQL_CONFIG, mysql_config, "yes", "no")
-if test $MYSQL_CONFIG = "yes"; then
-  INCLUDES="$INCLUDES `mysql_config --include`"
-  MYSQL_LIBS=`mysql_config --libs`
-  LIBS="$LIBS $MYSQL_LIBS"
-  AC_SUBST(MYSQL_LIBS)
+if test "$use_mythtv" = "yes"; then
+  AC_CHECK_PROG(MYSQL_CONFIG, mysql_config, "yes", "no")
+  if test $MYSQL_CONFIG = "yes"; then
+    INCLUDES="$INCLUDES `mysql_config --include`"
+    MYSQL_LIBS=`mysql_config --libs`
+    LIBS="$LIBS $MYSQL_LIBS"
+    AC_SUBST(MYSQL_LIBS)
+  else
+    AC_MSG_ERROR($missing_program)
+  fi
+  AC_CHECK_LIB([mysqlclient], [main],
+    AC_DEFINE([BUILD_MYTHTV], [1], [Define to 1 to build mythtv.]),
+    AC_MSG_ERROR($mysql_not_found))
 else
-  AC_MSG_ERROR($missing_program)
+  AC_MSG_RESULT($mythtv_disabled)
 fi
 AC_CHECK_HEADER([ass/ass.h],, AC_MSG_ERROR($missing_library))
 AC_CHECK_HEADER([mpeg2dec/mpeg2.h],, AC_MSG_ERROR($missing_library))
@@ -594,7 +609,6 @@ AC_CHECK_LIB([lzo2],        [main],, AC_MSG_ERROR($missing_library))
 AC_CHECK_LIB([z],           [main],, AC_MSG_ERROR($missing_library))
 AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR($missing_library))
 AC_CHECK_LIB([crypto],      [main],, AC_MSG_ERROR($missing_library))
-AC_CHECK_LIB([mysqlclient], [main],, AC_MSG_ERROR($missing_library))
 AC_CHECK_LIB([ssh],         [sftp_tell64],, AC_MSG_RESULT([Could not find suitable version of libssh]))
 AC_CHECK_LIB([smbclient],   [main],, AC_MSG_ERROR($missing_library))
 AC_CHECK_LIB([bluetooth],   [hci_devid],, AC_MSG_RESULT([Could not find suitable version of libbluetooth]))
@@ -1319,6 +1333,12 @@ else
   final_message="$final_message\n  HAL Support:\tNo"
 fi
 
+if test "$use_mythtv" = "yes"; then
+  final_message="$final_message\n  MythTV:\tYes"
+else
+  final_message="$final_message\n  MythTV:\tNo"
+fi
+
 # DVDCSS
 if test "$use_dvdcss" = "yes"; then
   AC_MSG_NOTICE($dvdcss_enabled)
@@ -1490,6 +1510,7 @@ AC_SUBST(USE_EXTERNAL_FFMPEG)
 AC_SUBST(PYTHON_VERSION)
 AC_SUBST(OUTPUT_FILES)
 AC_SUBST(HAVE_XBMC_NONFREE)
+AC_SUBST(BUILD_MYTHTV)
 AC_SUBST(USE_ASAP_CODEC)
 AC_SUBST(LIBCURL_BASENAME)
 AC_SUBST(LIBFLAC_BASENAME)
--- a/xbmc/dbwrappers/Database.cpp
+++ b/xbmc/dbwrappers/Database.cpp
@@ -29,7 +29,9 @@
 #include "utils/AutoPtrHandle.h"
 #include "utils/log.h"
 #include "utils/URIUtils.h"
+#ifdef BUILD_MYTHTV
 #include "mysqldataset.h"
+#endif /* BUILD_MYTHTV */
 #include "sqlitedataset.h"
 
 
@@ -265,6 +267,7 @@ bool CDatabase::Open(const DatabaseSettings &settings)
 
   m_sqlite = true;
 
+#ifdef BUILD_MYTHTV
   if ( dbSettings.type.Equals("mysql") )
   {
     // check we have all information before we cancel the fallback
@@ -274,6 +277,7 @@ bool CDatabase::Open(const DatabaseSettings &settings)
     else
       CLog::Log(LOGINFO, "essential mysql database information is missing (eg. host, name, user, pass)");
   }
+#endif /* BUILD_MYTHTV */
 
   // always safely fallback to sqlite3, and use separate, versioned database
   if (m_sqlite)
@@ -339,10 +343,12 @@ bool CDatabase::Connect(const DatabaseSettings &dbSettings, bool create)
   {
     m_pDB.reset( new SqliteDatabase() ) ;
   }
+#ifdef BUILD_MYTHTV
   else if (dbSettings.type.Equals("mysql"))
   {
     m_pDB.reset( new MysqlDatabase() ) ;
   }
+#endif /* BUILD_MYTHTV */
   else
   {
     CLog::Log(LOGERROR, "Unable to determine database type: %s", dbSettings.type.c_str());
--- a/xbmc/dbwrappers/Makefile
+++ b/xbmc/dbwrappers/Makefile
@@ -1,9 +1,13 @@
 SRCS=Database.cpp \
      dataset.cpp \
-     mysqldataset.cpp \
      qry_dat.cpp \
      sqlitedataset.cpp \
 
+ifeq (@BUILD_MYTHTV@,1)
+SRCS+=\
+     mysqldataset.cpp
+endif
+
 LIB=dbwrappers.a
 
 include ../../Makefile.include
