diff -ruN amavisd.orig/amavisd amavisd-new-20030616/amavisd
--- amavisd.orig/amavisd	2004-04-16 08:15:39.000000000 -0700
+++ amavisd-new-20030616/amavisd	2004-04-16 08:16:47.000000000 -0700
@@ -191,7 +191,7 @@
 	    %blacklist_sender @blacklist_sender_acl $blacklist_sender_re
 	    $per_recip_blacklist_sender_lookup_tables
 	    $viruses_that_fake_sender_re
-	    @lookup_sql_dsn $sql_key_fieldname
+	    @lookup_sql_dsn $sql_timeout $sql_key_fieldname
 	    $sql_select_policy $sql_select_white_black_list
 	    $enable_ldap $default_ldap $virus_lovers_ldap
 	    $banned_files_lovers_ldap $bypass_virus_checks_ldap
@@ -337,6 +337,12 @@
 #   ( ['DBI:mysql:mail:host1', 'some-username1', 'some-password1'],
 #     ['DBI:mysql:mail:host2', 'some-username2', 'some-password2'] );
 
+# The SQL timeout value specifies how long to wait before closing
+# and reopening a connection.  The default is the MySQL default
+# connection timeout of 1 day.  This timer is intialized once on
+# initial connection and is reset at every successful sql lookup.
+$sql_timeout = 60*60*24;
+
 # The SQL select clause to fetch per-recipient policy settings
 # The %k will be replaced by a comma-separated list of query addresses
 # (e.g. full address, domain only, catchall).  Use ORDER, if there
@@ -6824,7 +6830,7 @@
     import Amavis::rfc2821_2822_Tools qw(split_address split_localpart);
 }
 
-use vars qw($sql_connected);
+use vars qw($sql_connected $sql_timestamp);
 
 # Connect to a database.  Take a list of database connection
 # parameters and try each until one succeeds.
@@ -6844,7 +6850,10 @@
     }
     do_log(0, "connect_to_sql: unable to connect to any DSN at all!"
 	  )  if !$dbh && @dsns>1;
-    $sql_connected = 1  if $dbh;
+    if ($dbh) {
+	$sql_connected = 1;
+	$sql_timestamp = time;
+    }
     $dbh;
 }
 
@@ -6915,6 +6924,13 @@
 	}
 	return $match;
     }
+    if ($sql_timeout && (time - $sql_timestamp > $sql_timeout)) {
+	if ($sql_connected) {
+	    $self->{dbh}->disconnect;
+	    do_log(4, "lookup_sql: connection timed out, reconnecting");
+	}
+	$self->{dbh} = $sql_connected = undef;
+    }
     if (!$sql_connected) {
 	my($sql_dbh) = connect_to_sql(@lookup_sql_dsn);
 	section_time('sql-connect');
@@ -6980,6 +6996,7 @@
 	    last if $found; # first match wins, loop is for possible future use
 	}
 	$sth->finish();
+	$sql_timestamp = time;
     };  # eval
     if ($@ ne '') {
 	my($err) = $@;
diff -ruN amavisd.orig/amavisd.conf amavisd-new-20030616/amavisd.conf
--- amavisd.orig/amavisd.conf	2004-04-16 08:15:39.000000000 -0700
+++ amavisd-new-20030616/amavisd.conf	2004-04-16 08:27:20.000000000 -0700
@@ -808,6 +808,12 @@
 # With PostgreSQL the dsn (first element of the triple) may look like:
 #      'DBI:Pg:host=host1;dbname=mail'
 
+# How long to maintain an SQL connection before attempting to reconnect?
+# This is used to prevent the SQL server from timing out the connection
+# on the backend and delaying mail due to requeueing. Set this to 0 or undef
+# to disable SQL reconnection attempts. The default is 1 day.
+# $sql_timeout = 60*60*24;
+
 # The SQL select clause to fetch per-recipient policy settings.
 # The %k will be replaced by a comma-separated list of query addresses
 # (e.g. full address, domain only, catchall).  Use ORDER, if there
