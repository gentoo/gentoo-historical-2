--- ./policydspfsupp.py (original)
+++ ./policydspfsupp.py (refactored)
@@ -24,7 +24,7 @@
 import sys
 import string
 import re
-import urllib
+import urllib.request, urllib.parse, urllib.error
 import stat
 
 
@@ -57,7 +57,7 @@
     if filename != None:
         try:
             readConfigFile(filename, config)
-        except Exception, e:
+        except Exception as e:
             if useSyslog:
                 syslog.syslog(e.args[0])
             if useStderr:
@@ -75,7 +75,7 @@
    def __call__(self, etype, evalue, etb):
       import traceback
       tb = traceback.format_exception(*(etype, evalue, etb))
-      tb = map(string.rstrip, tb)
+      tb = list(map(string.rstrip, tb))
       tb = string.join(tb, '\n')
       for line in string.split(tb, '\n'):
          if self.useSyslog:
@@ -95,7 +95,7 @@
     Address can either be a domain name, or local part.
     Returns the quoted address.'''
 
-    s = urllib.quote(s, '@_-+')
+    s = urllib.parse.quote(s, '@_-+')
     if len(s) > 0 and s[0] == '.': s = '%2e' + s[1:]
     return(s)
 
@@ -104,7 +104,7 @@
 def unquoteAddress(s):
     '''Undo the quoting of an address.  Returns the unquoted address.'''
 
-    return(urllib.unquote(s))
+    return(urllib.parse.unquote(s))
 
 
 ###############################################################
@@ -137,7 +137,7 @@
     #  check to see if it's a file
     try:
         mode = os.stat(path)[0]
-    except OSError, e:
+    except OSError as e:
         syslog.syslog('ERROR stating "%s": %s' % ( path, e.strerror ))
         return(configData)
     if not stat.S_ISREG(mode):
@@ -153,7 +153,7 @@
         #  parse line
         line = string.strip(string.split(line, '#', 1)[0])
         if not line: continue
-        data = map(string.strip, string.split(line, '=', 1))
+        data = list(map(string.strip, string.split(line, '=', 1)))
         if len(data) != 2:
             if len(data) == 1:
                 if debugLevel >= 1:
--- policyd-spf (original)
+++ policyd-spf (refactored)
@@ -273,7 +273,7 @@
         instance = str(int(random.random()*100000))
     # This is to prevent multiple headers being prepended
     # for multi-recipient mail.
-    found_instance = instance_dict.has_key(instance)
+    found_instance = instance in instance_dict
     '''Data structure for results is a list of:
         [0] SPF result 
         [1] SPF reason
@@ -400,7 +400,7 @@
 configFile = '/etc/python-policyd-spf/policyd-spf.conf'
 if len(sys.argv) > 1:
     if sys.argv[1] in ( '-?', '--help', '-h' ):
-        print 'usage: policyd-spf [<configfilename>]'
+        print('usage: policyd-spf [<configfilename>]')
         sys.exit(1)
     configFile = sys.argv[1]
 
