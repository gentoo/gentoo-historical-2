diff -NrU5 mono-tools-2.0.orig/configure.in mono-tools-2.0/configure.in
--- mono-tools-2.0.orig/configure.in	2008-11-23 20:37:03.000000000 +0100
+++ mono-tools-2.0/configure.in	2008-11-23 20:38:00.000000000 +0100
@@ -43,33 +43,49 @@
 
 PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp-2.0 glade-sharp-2.0 gnome-sharp-2.0 gconf-sharp-2.0)
 #PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp glade-sharp gconf-sharp)
 AC_SUBST(GTK_SHARP_LIBS)
 
-PKG_CHECK_MODULES(GTKHTML_SHARP, gtkhtml-sharp-3.14, enable_gtkhtml=yes, enable_gtkhtml=no)
-if test "x$enable_gtkhtml" = "xyes"; then
-CSHARP_FLAGS="-d:GTKHTML_SHARP_3_14"
-else
-PKG_CHECK_MODULES(GTKHTML_SHARP, gtkhtml-sharp-2.0, enable_gtkhtml=yes, enable_gtkhtml=no)
-CSHARP_FLAGS=
+AC_ARG_ENABLE(gtkhtml,
+		AC_HELP_STRING([--enable-gtkhtml], [Use GTKHTML Browser]),,
+		enable_gtkhtml=yes)
+
+if test "x$enable_gtkhtml" = "xyes" ; then
+       PKG_CHECK_MODULES(GTKHTML_SHARP, gtkhtml-sharp-2.0)
+
+       AC_SUBST(GTKHTML_SHARP_LIBS)
+       AC_SUBST(CSHARP_FLAGS)
 fi
-AC_SUBST(GTKHTML_SHARP_LIBS)
-AC_SUBST(CSHARP_FLAGS)
+dnl fi
+
 AM_CONDITIONAL(ENABLE_GTKHTML, test "x$enable_gtkhtml" = "xyes")
 
-PKG_CHECK_MODULES(GECKO_SHARP, gecko-sharp-2.0, enable_gecko=yes, enable_gecko=no)
-AC_SUBST(GECKO_SHARP_LIBS)
-AM_CONDITIONAL(ENABLE_GECKO, test "x$enable_gecko" = "xyes")
-
-if test "x$enable_gecko" = "xyes"; then
-   # get the mozilla home directory
-   MOZILLA_HOME="`$PKG_CONFIG --variable=libdir mozilla-gtkmozembed`"
-   AC_SUBST(MOZILLA_HOME)
+AC_ARG_ENABLE(mozilla,
+             AC_HELP_STRING([--enable-mozilla], [Use Mozilla browser]),,
+             enable_mozilla=yes)
+
+if test "x$enable_mozilla" = "xyes" ; then
+       PKG_CHECK_MODULES(GECKO_SHARP, gecko-sharp-2.0)
+
+       AC_SUBST(GECKO_SHARP_LIBS)
+
+       # get the mozilla home directory
+       MOZILLA_HOME="`$PKG_CONFIG --variable=libdir mozilla-gtkmozembed`"
+       AC_SUBST(MOZILLA_HOME)
+fi
+
+AM_CONDITIONAL(ENABLE_GECKO, test "x$enable_mozilla" = "xyes")
+
+AC_ARG_ENABLE(webkit,
+             AC_HELP_STRING([--enable-webkit], [Use Webkit browser]),,
+             enable_mozilla=yes)
+
+if test "x$enable_webkit" = "xyes" ; then
+	PKG_CHECK_MODULES(WEBKIT_SHARP, webkit-sharp-1.0)
+	AC_SUBST(WEBKIT_SHARP_LIBS)
 fi
 
-PKG_CHECK_MODULES(WEBKIT_SHARP, webkit-sharp-1.0, enable_webkit=yes, enable_webkit=no)
-AC_SUBST(WEBKIT_SHARP_LIBS)
 AM_CONDITIONAL(ENABLE_WEBKIT, test "x$enable_webkit" = "xyes")
 
 # PKG_CHECK_MODULES(MONOWEBBROWSER, mono-webbrowser, enable_monowebbrowser=yes, enable_monowebbrowser=no)
 # AC_SUBST(MONOWEBBROWSER_LIBS)
 
@@ -89,12 +105,12 @@
 	fi  
 fi
 MONOWEBBROWSER_LIBS=-r:Mono.WebBrowser
 AM_CONDITIONAL(ENABLE_MONOWEBBROWSER, test "x$enable_monowebbrowser" = "xyes")
 
-if test "x$enable_gtkhtml$enable_gecko$enable_monowebbrowser$enable_webkit" = "xnononono" ; then
-   AC_MSG_ERROR([no HTML display found. You need either gtkhtml, gecko, WebKit or Mono.WebBrowser])
+if test "x$enable_gtkhtml$enable_mozilla$enable_monowebbrowser$enable_webkit" = "xnononono" ; then
+   AC_MSG_ERROR([no HTML display found. You need either gtkhtml, mozilla, WebKit or Mono.WebBrowser])
 fi
 
 AC_ARG_ENABLE(debug,
 	AC_HELP_STRING([--enable-debug],
 		[Use 'DEBUG' Configuration [default=YES]]),
@@ -232,11 +248,11 @@
 
 echo "---"
 echo "Configuration summary"
 echo ""
 echo "   * Installation prefix = $prefix"
-echo "   * Using Gecko = $enable_gecko"
+echo "   * Using Mozilla = $enable_mozilla"
 echo "   * Using GtkHtml = $enable_gtkhtml"
 echo "   * Using Mono.WebBrowser = $enable_monowebbrowser"
 echo "   * Using WebKit = $enable_webkit"
 echo ""
 echo "      NOTE: if any of the above say 'no' you may install the"
diff -NrU5 mono-tools-2.0.orig/docbrowser/monodoc.in mono-tools-2.0/docbrowser/monodoc.in
--- mono-tools-2.0.orig/docbrowser/monodoc.in	2008-11-23 20:37:03.000000000 +0100
+++ mono-tools-2.0/docbrowser/monodoc.in	2008-11-23 20:35:14.000000000 +0100
@@ -84,12 +84,14 @@
 elif [ $(which xulrunner 2> /dev/null) ] > /dev/null ; then
     MOZILLA_FIVE_HOME=`getdirectory xulrunner`
     MOZILLA_HOME=$MOZILLA_FIVE_HOME
 elif [ $(which mozilla 2> /dev/null) ] && grep MOZILLA_FIVE_HOME= "$(which mozilla)" > /dev/null ; then
 	MOZILLA_HOME=$(grep MOZILLA_FIVE_HOME= $(which mozilla) | cut -d '"' -f 2)
-elif [ $(which firefox 2> /dev/null) ] && grep MOZILLA_FIVE_HOME= "$(which firefox)" > /dev/null ; then
-	MOZILLA_HOME=$(grep MOZILLA_FIVE_HOME= $(which firefox) | cut -d '"' -f 2)
+elif [ $(which firefox 2> /dev/null) ] && grep MOZILLA_LIBDIR= "$(which firefox)"    > /dev/null ; then
+       MOZILLA_HOME=$(grep MOZILLA_LIBDIR= $(which firefox) | cut -d '=' -f 2)
+elif [ $(which seamonkey 2> /dev/null) ] && grep MOZILLA_LIBDIR= "$(which seamonkey)" > /dev/null ; then
+       MOZILLA_HOME=$(grep MOZILLA_LIBDIR= $(which seamonkey) | cut -d '=' -f 2)	
 fi
 
 if [ -n $LD_LIBRARY_PATH ]; then
 	export LD_LIBRARY_PATH=$MOZILLA_HOME:$LD_LIBRARY_PATH
 else
