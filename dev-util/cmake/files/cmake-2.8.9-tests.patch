Removes the following tests:

- DeployQt4, which tries to break sandbox and ignores prefix
- CTest.updatecvs, which fails to commit as root
- TestUpload, which requires network access

--- Tests/CMakeLists.txt
+++ Tests/CMakeLists.txt
@@ -273,23 +273,6 @@
       )
     LIST(APPEND TEST_BUILD_DIRS "${CMake_BINARY_DIR}/Tests/BundleUtilities")
 
-    # run test for DeployQt4 on supported platforms/compilers (which depends on BundleUtilities)
-    # this test also depends on the existence of the standard qtiff plugin
-    if(QT4_WORKS AND QT_QTSQL_FOUND)
-      ADD_TEST(Qt4Deploy ${CMAKE_CTEST_COMMAND}
-        --build-and-test
-        "${CMake_SOURCE_DIR}/Tests/Qt4Deploy"
-        "${CMake_BINARY_DIR}/Tests/Qt4Deploy"
-        --build-generator ${CMAKE_TEST_GENERATOR}
-        --build-makeprogram ${CMAKE_TEST_MAKEPROGRAM}
-        --build-project Qt4Deploy
-        --build-options
-        -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
-        -DQT_QMAKE_EXECUTABLE:FILEPATH=${QT_QMAKE_EXECUTABLE}
-        )
-      LIST(APPEND TEST_BUILD_DIRS "${CMake_BINARY_DIR}/Tests/Qt4Deploy")
-    endif()
-
   endif()
   endif()
 
@@ -1582,30 +1565,6 @@
       LIST(APPEND TEST_BUILD_DIRS "${CMake_BINARY_DIR}/Tests/${CTestUpdateSVN_DIR}")
     ENDIF(Subversion_FOUND)
 
-    # Test CTest Update with CVS
-    IF(EXISTS ${CMAKE_ROOT}/Modules/FindCVS.cmake)
-      FIND_PACKAGE(CVS QUIET)
-    ELSE(EXISTS ${CMAKE_ROOT}/Modules/FindCVS.cmake)
-      FIND_PROGRAM(CVS_EXECUTABLE NAMES cvs)
-      SET(CVS_FOUND ${CVS_EXECUTABLE})
-    ENDIF(EXISTS ${CMAKE_ROOT}/Modules/FindCVS.cmake)
-    SET(CTEST_TEST_UPDATE_CVS ${CVS_FOUND})
-    IF(CTEST_TEST_UPDATE_CVS AND NOT UNIX)
-      IF("${CVS_EXECUTABLE}" MATCHES "cygwin")
-        MESSAGE(STATUS "No CTest.UpdateCVS test with cygwin cvs.exe outside cygwin!")
-        SET(CTEST_TEST_UPDATE_CVS 0)
-      ENDIF("${CVS_EXECUTABLE}" MATCHES "cygwin")
-    ENDIF(CTEST_TEST_UPDATE_CVS AND NOT UNIX)
-    IF(CTEST_TEST_UPDATE_CVS)
-      SET(CTestUpdateCVS_DIR "CTest UpdateCVS")
-      CONFIGURE_FILE("${CMake_SOURCE_DIR}/Tests/CTestUpdateCVS.cmake.in"
-        "${CMake_BINARY_DIR}/Tests/CTestUpdateCVS.cmake" @ONLY)
-      ADD_TEST(CTest.UpdateCVS ${CMAKE_CMAKE_COMMAND}
-        -P "${CMake_BINARY_DIR}/Tests/CTestUpdateCVS.cmake"
-        )
-      LIST(APPEND TEST_BUILD_DIRS "${CMake_BINARY_DIR}/Tests/${CTestUpdateCVS_DIR}")
-    ENDIF(CTEST_TEST_UPDATE_CVS)
-
     # Test CTest Update with BZR
     FIND_PROGRAM(BZR_EXECUTABLE NAMES bzr)
     MARK_AS_ADVANCED(BZR_EXECUTABLE)
@@ -1701,17 +1660,6 @@
     FAIL_REGULAR_EXPRESSION "SegFault")
 
   CONFIGURE_FILE(
-    "${CMake_SOURCE_DIR}/Tests/CTestTestUpload/test.cmake.in"
-    "${CMake_BINARY_DIR}/Tests/CTestTestUpload/test.cmake"
-    @ONLY ESCAPE_QUOTES)
-  ADD_TEST(CTestTestUpload ${CMAKE_CTEST_COMMAND}
-    -S "${CMake_BINARY_DIR}/Tests/CTestTestUpload/test.cmake" -V
-    --output-log "${CMake_BINARY_DIR}/Tests/CTestTestUpload/testOut.log"
-    )
-  SET_TESTS_PROPERTIES(CTestTestUpload PROPERTIES
-    PASS_REGULAR_EXPRESSION "Upload\\.xml")
-
-  CONFIGURE_FILE(
     "${CMake_SOURCE_DIR}/Tests/CTestTestConfigFileInBuildDir/test1.cmake.in"
     "${CMake_BINARY_DIR}/Tests/CTestTestConfigFileInBuildDir1/test1.cmake"
     @ONLY ESCAPE_QUOTES)
