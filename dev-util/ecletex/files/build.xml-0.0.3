<?xml version="1.0" encoding="UTF-8"?>
<project name="ish.ecletex" default="build.jars" basedir=".">

	<property name="bootclasspath" value=""/>
	<property file="build.properties" />
	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>
	<property name="javacFailOnError" value="true"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="false"/>
	<property name="javacSource" value="1.4"/>
	<property name="javacTarget" value="1.4"/>

	<target name="init" depends="properties">
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
		<property name="build.result.folder" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: ish.ecletex for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip zipfile="${plugin.destination}/ish.ecletex_0.0.2.jar" basedir="${temp.folder}/ish.ecletex_0.0.2" filesonly="false" whenempty="skip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ish.ecletex_0.0.2"/>
		<copy todir="${destination.temp.folder}/ish.ecletex_0.0.2">
			<fileset dir="${build.result.folder}" includes="plugin.xml,ecletex.jar,icons/,codeassist/,dictionary/,templates/"			/>
		</copy>
		<copy todir="${destination.temp.folder}/ish.ecletex_0.0.2">
			<fileset dir="${basedir}" includes="plugin.xml,ecletex.jar,icons/,codeassist/,dictionary/,templates/"			/>
		</copy>
	</target>

	<target name="ecletex.jar" depends="init" unless="ecletex.jar" description="Create jar: ecletex.jar.">
		<delete dir="${temp.folder}/ecletex.jar.bin"/>
		<mkdir dir="${temp.folder}/ecletex.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/ecletex.jar.bin" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" classpath="${classpath}" source="${javacSource}" target="${javacTarget}"		>
		<!--  -->
			<src path="src/"			/>
		</javac>
		<!-- copy necessary resources -->
		<copy todir="${temp.folder}/ecletex.jar.bin">
			<fileset dir="src/" excludes="**/*.java"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar jarfile="${build.result.folder}/ecletex.jar" basedir="${temp.folder}/ecletex.jar.bin"/>
		<delete dir="${temp.folder}/ecletex.jar.bin"/>
	</target>

	<target name="ecletexsrc.zip" depends="init" unless="ecletexsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip zipfile="${build.result.folder}/ecletexsrc.zip" filesonly="false" whenempty="skip">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: ish.ecletex.">
		<available property="ecletex.jar" file="${build.result.folder}/ecletex.jar"/>
		<antcall target="ecletex.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="ecletexsrc.zip" file="${build.result.folder}/ecletexsrc.zip"/>
		<antcall target="ecletexsrc.zip"/>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ish.ecletex_0.0.2"/>
		<copy file="${build.result.folder}/ecletexsrc.zip" todir="${destination.temp.folder}/ish.ecletex_0.0.2"/>
		<copy todir="${destination.temp.folder}/ish.ecletex_0.0.2">
			<fileset dir="${basedir}" includes="plugin.xml,build.xml,codeassist/,dictionary/,icons/,src/,templates/,build.properties,.classpath,.project,.template"			/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ish.ecletex_0.0.2"/>
		<copy file="${temp.folder}/ecletex.jar.bin.log" todir="${destination.temp.folder}/ish.ecletex_0.0.2"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: ish.ecletex of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/ecletex.jar"/>
		<delete file="${build.result.folder}/ecletexsrc.zip"/>
		<delete file="${plugin.destination}/ish.ecletex_0.0.2.jar"/>
		<delete file="${plugin.destination}/ish.ecletex_0.0.2.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="E:/EclipseM8/workspace/ecletex/" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: ish.ecletex.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<zip zipfile="${plugin.destination}/ish.ecletex_0.0.2.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
