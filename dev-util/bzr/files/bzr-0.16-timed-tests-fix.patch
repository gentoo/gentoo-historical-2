=== modified file 'bzrlib/tests/test_selftest.py'
--- bzrlib/tests/test_selftest.py	2007-04-24 02:43:56 +0000
+++ bzrlib/tests/test_selftest.py	2007-05-11 00:31:22 +0000
@@ -620,18 +620,19 @@
         result.extractBenchmarkTime(self)
         timed_string = result._testTimeString()
         # without explicit benchmarking, we should get a simple time.
-        self.assertContainsRe(timed_string, "^ *[ 1-9][0-9]ms$")
+        self.assertContainsRe(timed_string, "^ +(0|[1-9][0-9]*)ms$")
         # if a benchmark time is given, we want a x of y style result.
         self.time(time.sleep, 0.001)
         result.extractBenchmarkTime(self)
         timed_string = result._testTimeString()
-        self.assertContainsRe(timed_string, "^ *[ 1-9][0-9]ms/ *[ 1-9][0-9]ms$")
+        self.assertContainsRe(
+            timed_string, "^ +(0|[1-9][0-9]*)ms/ +(0|[1-9][0-9]*)ms$")
         # extracting the time from a non-bzrlib testcase sets to None
         result._recordTestStartTime()
         result.extractBenchmarkTime(
             unittest.FunctionTestCase(self.test_elapsed_time_with_benchmarking))
         timed_string = result._testTimeString()
-        self.assertContainsRe(timed_string, "^ *[ 1-9][0-9]ms$")
+        self.assertContainsRe(timed_string, "^ +(0|[1-9][0-9]*)ms$")
         # cheat. Yes, wash thy mouth out with soap.
         self._benchtime = None
 

