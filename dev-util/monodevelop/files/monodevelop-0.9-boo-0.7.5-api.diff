diff -aur monodevelop-0.9-orig/configure.in monodevelop-0.9/configure.in
--- monodevelop-0.9-orig/configure.in	2005-11-23 12:36:28.000000000 -0800
+++ monodevelop-0.9/configure.in	2005-11-25 14:04:54.000000000 -0800
@@ -119,7 +119,7 @@
 		enable_java=no)
 AM_CONDITIONAL(ENABLE_JAVA, test x$enable_java = xyes)
 
-BOO_REQUIRED_VERSION=0.5.6.1767
+BOO_REQUIRED_VERSION=0.7.5.2013
 AC_ARG_ENABLE(boo,
 	AC_HELP_STRING([--enable-boo],
 		[enable support for boo [default=no]]),
diff -aur monodevelop-0.9-orig/Extras/BooBinding/Gui/ShellTextView.boo monodevelop-0.9/Extras/BooBinding/Gui/ShellTextView.boo
--- monodevelop-0.9-orig/Extras/BooBinding/Gui/ShellTextView.boo	2005-11-16 13:18:41.000000000 -0800
+++ monodevelop-0.9/Extras/BooBinding/Gui/ShellTextView.boo	2005-11-25 14:03:48.000000000 -0800
@@ -183,7 +183,8 @@
 		for assembly in Model.References:
 			_fakeProject.AddReference(assembly)
 
-		GLib.Idle.Add( { _parserContext.ParseFile (_fakeFileName, _scriptLines) } )
+		GLib.Idle.Add () do:
+			_parserContext.ParseFile (_fakeFileName, _scriptLines)
 		return false
 			
 	override def Dispose():
@@ -242,7 +243,7 @@
 		
 		// Short circuit to avoid getting moved back to the input line
 		// when paging up and down in the shell output
-		if ev.Key in Gdk.Key.Page_Up, Gdk.Key.Page_Down:
+		if ev.Key in (Gdk.Key.Page_Up, Gdk.Key.Page_Down):
 			return super (ev)
 		
 		// Needed so people can copy and paste, but always end up
@@ -340,7 +341,7 @@
 
 		// Short circuit to avoid getting moved back to the input line
 		// when paging up and down in the shell output
-		elif ev.Key in Gdk.Key.Page_Up, Gdk.Key.Page_Down:
+		elif ev.Key in (Gdk.Key.Page_Up, Gdk.Key.Page_Down):
 			return super (ev)
 		
 		return super (ev)
diff -aur monodevelop-0.9-orig/Extras/BooBinding/Parser/ExpressionTypeVisitor.boo monodevelop-0.9/Extras/BooBinding/Parser/ExpressionTypeVisitor.boo
--- monodevelop-0.9-orig/Extras/BooBinding/Parser/ExpressionTypeVisitor.boo	2005-09-27 07:50:33.000000000 -0700
+++ monodevelop-0.9/Extras/BooBinding/Parser/ExpressionTypeVisitor.boo	2005-11-25 14:03:48.000000000 -0800
@@ -166,7 +166,7 @@
 		Debug(node)
 		CombineTypes(node.Left, node.Right)
 	
-	override def OnTernaryExpression(node as TernaryExpression):
+	override def OnConditionalExpression(node as ConditionalExpression):
 		Debug(node)
 		CombineTypes(node.TrueValue, node.FalseValue)
 	
@@ -263,7 +263,7 @@
 	override def OnArrayLiteralExpression(node as ArrayLiteralExpression):
 		CreateReturnType("System.Array")
 	
-	override def OnAsExpression(node as AsExpression):
+	override def OnTryCastExpression(node as TryCastExpression):
 		CreateReturnType(node.Type)
 	
 	override def OnCastExpression(node as CastExpression):
