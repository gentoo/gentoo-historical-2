diff -ruN valgrind-2.4.1/coregrind/vg_memory.c valgrind-2.4.1-fixed/coregrind/vg_memory.c
--- valgrind-2.4.1/coregrind/vg_memory.c	2005-07-19 21:13:46.000000000 +0200
+++ valgrind-2.4.1-fixed/coregrind/vg_memory.c	2005-08-03 23:02:13.570880216 +0200
@@ -158,7 +158,7 @@
 {
    Segment *s;
    Segment *next;
-   static const Bool debug = False || mem_debug;
+   const Bool debug = False || mem_debug;
    Addr end;
 
    if (len == 0)
@@ -324,7 +324,7 @@
 			   UInt dev, UInt ino, ULong off, const Char *filename)
 {
    Segment *s;
-   static const Bool debug = False || mem_debug;
+   const Bool debug = False || mem_debug;
    Bool recycled;
 
    if (debug)
@@ -479,7 +479,7 @@
 void VG_(mprotect_range)(Addr a, SizeT len, UInt prot)
 {
    Segment *s, *next;
-   static const Bool debug = False || mem_debug;
+   const Bool debug = False || mem_debug;
    Segment *s1, *s2;
 
    if (debug)
@@ -524,7 +524,7 @@
 
 Addr VG_(find_map_space)(Addr addr, SizeT len, Bool for_client)
 {
-   static const Bool debug = False || mem_debug;
+   const Bool debug = False || mem_debug;
    Segment *s;
    Addr ret;
    Addr limit = (for_client ? VG_(client_end)-1   : VG_(valgrind_last));
diff -ruN valgrind-2.4.1/coregrind/vg_stabs.c valgrind-2.4.1-fixed/coregrind/vg_stabs.c
--- valgrind-2.4.1/coregrind/vg_stabs.c	2005-07-27 14:37:52.000000000 +0200
+++ valgrind-2.4.1-fixed/coregrind/vg_stabs.c	2005-08-03 23:03:07.065747760 +0200
@@ -123,7 +123,7 @@
 */
 static SymType *structRef(StabTypeTab *tab, SymType *def, Bool isstruct, Char *name)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    struct structlist *sl;
    SymType *ty;
    static Int warnlen = 0;
@@ -168,7 +168,7 @@
 /* Add a structural defintion for a struct/union reference */
 static SymType *structDef(StabTypeTab *tab, SymType *def, Bool isstruct, Char *name)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    SymType *ref = structRef(tab, NULL, isstruct, name);
 
    /* it seems that GNAT likes to declare names as both struct tags
@@ -236,7 +236,7 @@
 /* add a new index for a file */
 static void addFileAlias(StabTypeTab *tab, Char *filename, UInt instance, Int idx)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    struct header *hp;
 
    for(hp = tab->headerhash[header_hash(filename, instance)]; hp != NULL; hp = hp->next) {
@@ -255,7 +255,7 @@
 
 static void addHeader(StabTypeTab *tab, Char *filename, UInt instance, Int idx)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    struct header *hp, **bucket;
    
    if (debug)
@@ -476,7 +476,7 @@
 
 static void stab_resolve(SymType *st, void *data)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    Char *str = (Char *)data;
    vg_assert(!VG_(st_isresolved)(st));
 
@@ -493,7 +493,7 @@
    introduced anywhere, so we need to scan it all to pick them up. */
 static SymType *stabtype_parser(SegInfo *si, SymType *def, Char **pp)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    Char *p = *pp;
    Char t;
    SymType *type;
@@ -1018,7 +1018,7 @@
 /* parse a symbol reference: NAME ':' DESC TYPE */
 static Bool initSym(SegInfo *si, Sym *sym, stab_types kind, Char **namep, Int val)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    Char *name = *namep;
    Char *ty;
    Int len;
@@ -1159,7 +1159,7 @@
    definitions helps a lot. */
 static Scope *addSymsToScope(Scope *sc, struct symlist *list, Int nsyms, Scope *outer)
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    Int j;
    struct symlist *n;
    Int base;
@@ -1205,7 +1205,7 @@
 				 UChar* stabC,   Int stab_sz, 
 				 UChar* stabstr, Int stabstr_sz )
 {
-   static const Bool debug = False || stabs_debug;
+   const Bool debug = False || stabs_debug;
    Int    i;
    Int    n_stab_entries;
    struct nlist* stab = (struct nlist*)stabC;
@@ -1283,7 +1283,7 @@
 
       /* handle continued string stabs */
       {
-	 static const Bool contdebug = False || stabs_debug;
+	 const Bool contdebug = False || stabs_debug;
 	 Int buflen = 0;
 	 Int idx = 0;
 	 Char *buf = NULL;
