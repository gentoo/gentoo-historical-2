--- src/minimap.h.old	2006-05-21 22:19:13.000000000 +0200
+++ src/minimap.h	2006-05-21 22:19:25.000000000 +0200
@@ -78,8 +78,8 @@
   void toMiniMapCoord(int &x, int &y);       
   
  public:
-  MiniMap::MiniMap();
-  MiniMap::~MiniMap();
+  MiniMap();
+  ~MiniMap();
   MiniMap(Scourge *scourge);
 
   void reset();
--- src/preferences.h.old	2006-05-21 22:18:24.000000000 +0200
+++ src/preferences.h	2006-05-21 22:18:48.000000000 +0200
@@ -112,10 +112,10 @@
     TEST
   };
  
-  Preferences::Preferences() {
+  Preferences() {
     stencilBufInitialized = false;
   }
-  virtual Preferences::~Preferences() {}
+  virtual ~Preferences() {}
   
   // engine variables
   virtual bool getFullscreen() = 0;
--- src/userconfiguration.h.old	2006-05-21 22:19:41.000000000 +0200
+++ src/userconfiguration.h	2006-05-21 22:19:51.000000000 +0200
@@ -100,8 +100,8 @@
    
  public:
  
-  UserConfiguration::UserConfiguration();
-  UserConfiguration::~UserConfiguration();
+  UserConfiguration();
+  ~UserConfiguration();
   
   const char * getEngineActionDescription(int i);  
   const char * getEngineActionKeyName(int i);      
--- src/render/map.h.old	2006-05-21 22:35:29.000000000 +0200
+++ src/render/map.h	2006-05-21 22:36:07.000000000 +0200
@@ -348,10 +348,10 @@
   Shape *removePosition(Sint16 x, Sint16 y, Sint16 z);
   Shape *removeLocation(Sint16 x, Sint16 y, Sint16 z);
   
-  void Map::setItem(Sint16 x, Sint16 y, Sint16 z, RenderedItem *item);
+  void setItem(Sint16 x, Sint16 y, Sint16 z, RenderedItem *item);
   RenderedItem *removeItem(Sint16 x, Sint16 y, Sint16 z);
   
-  void Map::setCreature(Sint16 x, Sint16 y, Sint16 z, RenderedCreature *creature);
+  void setCreature(Sint16 x, Sint16 y, Sint16 z, RenderedCreature *creature);
   RenderedCreature *removeCreature(Sint16 x, Sint16 y, Sint16 z);
   
   /**
@@ -406,7 +406,7 @@
   // like shapefits, but returns the blocking location or, NULL if there's nothing there
   Location *getBlockingLocation(Shape *shape, int x, int y, int z);
 
-  Location *Map::getDropLocation(Shape *shape, int x, int y, int z);
+  Location *getDropLocation(Shape *shape, int x, int y, int z);
 
   inline void updateLightMap() { lightMapChanged = resortShapes = true; }
 
@@ -435,7 +435,7 @@
            DrawLater *later=NULL);
 
   bool isDoor(int x, int y);
-  bool Map::isDoor(Shape *shape);
+  bool isDoor(Shape *shape);
 
   // ====================================================================
   // Locked doors/chests code
--- src/sound.h.old	2006-05-21 22:53:20.000000000 +0200
+++ src/sound.h	2006-05-21 22:53:38.000000000 +0200
@@ -71,7 +71,7 @@
   void playSound(const char *file);
 
   void setMusicVolume(int volume);
-  void Sound::setEffectsVolume(int volume);
+  void setEffectsVolume(int volume);
 
 protected:
 #ifdef HAVE_SDL_MIXER
