Work around a gcc-3.3.x bug where redefining prototypes with different 
__THROW / attribute(nonnull) markings throws an error:

string.cpp:31: error: declaration of `char* strcasestr(const char*, const char*)' throws different exceptions
../include/string.h:46: error: than previous declaration `char* strcasestr(const char*, const char*) throw ()'

basically we just use the glibc strcasestr() instead of the internal one.

http://bugs.gentoo.org/show_bug.cgi?id=85780

--- global/string.cpp
+++ global/string.cpp
@@ -37,3 +37,5 @@
 #endif
+#ifndef _GNU_SOURCE
 char *strcasestr(const char *haystack, const char *needle);
+#endif
 int strpfx(const char *s, const char *pfx);
@@ -221,3 +224,4 @@
 */
+#ifndef _GNU_SOURCE
 char *strcasestr(const char *haystack, const char *needle)
 {
@@ -274,6 +277,7 @@
 
 	return(NULL);
 }
+#endif
 
 /*
  *	Checks if string pfx is a prefix of string s.
