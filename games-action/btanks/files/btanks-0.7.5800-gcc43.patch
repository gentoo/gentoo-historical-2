sniped from Debian to fix building with gcc-4.3

http://bugs.gentoo.org/217944

--- btanks-0.7.5800/mrt/udp_socket.cpp
+++ btanks-0.7.5800/mrt/udp_socket.cpp
@@ -22,6 +22,7 @@
 #	endif
 #endif
 
+#include <cstring>
 
 using namespace mrt;
 
--- btanks-0.7.5800/mrt/sys_socket.cpp
+++ btanks-0.7.5800/mrt/sys_socket.cpp
@@ -27,6 +27,7 @@
 #	include <unistd.h>
 #endif
 
+#include <cstring>
 
 using namespace mrt;
 
--- btanks-0.7.5800/mrt/lang.cpp
+++ btanks-0.7.5800/mrt/lang.cpp
@@ -8,6 +8,9 @@
 #include "lang.h"
 #include "logger.h"
 
+#include <cstdlib>
+#include <cstring>
+
 const std::string mrt::getLanguageCode() {
 #ifdef WIN32
 	LANGID lang_id = GetUserDefaultLangID();
--- btanks-0.7.5800/mrt/serializator.cpp
+++ btanks-0.7.5800/mrt/serializator.cpp
@@ -31,6 +31,8 @@
 #include <limits.h>
 #include "exception.h"
 
+#include <cstring>
+
 #ifdef WIN32
 #	ifndef uint32_t
 #		define uint32_t unsigned __int32
--- btanks-0.7.5800/menu/menu_config.cpp
+++ btanks-0.7.5800/menu/menu_config.cpp
@@ -24,6 +24,8 @@
 #include "mrt/b64.h"
 #include "config.h"
 
+#include <cstring>
+
 IMPLEMENT_SINGLETON(MenuConfig, IMenuConfig);
 
 void SlotConfig::serialize(mrt::Serializator &s) const {
--- btanks-0.7.5800/src/i18n.cpp
+++ btanks-0.7.5800/src/i18n.cpp
@@ -20,6 +20,8 @@
 #include "mrt/exception.h"
 #include <assert.h>
 
+#include <cstring>
+
 IMPLEMENT_SINGLETON(I18n, II18n);
 
 bool lessnocase::operator()(const std::string& s1, const std::string& s2) const {
--- btanks-0.7.5800/src/var.cpp
+++ btanks-0.7.5800/src/var.cpp
@@ -21,6 +21,8 @@
 #include "mrt/serializator.h"
 #include <assert.h>
 
+#include <cstdlib>
+
 void Var::serialize(mrt::Serializator &s) const {
 		if (type.empty()) 
 			throw_ex(("cannot serialize empty variable"));
--- btanks-0.7.5800/objects/trooper.cpp
+++ btanks-0.7.5800/objects/trooper.cpp
@@ -24,6 +24,8 @@
 #include "config.h"
 #include "trooper.h"
 
+#include <cstring>
+
 void Trooper::getImpassabilityPenalty(const float impassability, float &base, float &base_value, float &penalty) const {
 	if (impassability > 0.2f) {
 		base_value = 0.2f;
