--- acinclude.m4
+++ acinclude.m4
@@ -83,7 +83,6 @@
 AC_DEFUN([RVL_PYGTK], [
 	PKG_CHECK_MODULES(PYGTK, [pygtk-2.0 >= 2.8.0])
 	PKG_CHECK_MODULES(GNOME_PYTHON, [gnome-python-2.0 >= 2.10.0])
-	PKG_CHECK_MODULES(GNOME_PYTHON_EXTRAS, [gnome-python-extras-2.0 >= 2.10.0])
 
 	AC_PATH_PROG(PYGTK_CODEGEN, pygtk-codegen-2.0, no)
 
--- configure.ac
+++ configure.ac
@@ -12,6 +12,7 @@
 
 dnl check for dependencies
 AC_PROG_CC()
+AC_PROG_LIBTOOL
 
 RVL_PYTHON_PATH(2.3)
 RVL_PYGTK()
@@ -26,11 +27,17 @@
 RVL_PYTHON_MODULE(gconf, yes)
 RVL_PYTHON_MODULE(gtk, yes)
 RVL_PYTHON_MODULE(gnome, yes)
-RVL_PYTHON_MODULE(gnomeapplet, yes)
 RVL_PYTHON_MODULE(gnomevfs, yes)
 RVL_PYTHON_MODULE(gobject, yes)
 RVL_PYTHON_MODULE(pango, yes)
 
+AC_ARG_ENABLE([applet],
+	[AS_HELP_STRING([--enable-applet], [install the panel applet])],
+	[enable_applet="${enableval}"], [enable_applet="no"])
+AM_CONDITIONAL([ENABLE_APPLET], [test "${enable_applet}" = "yes"])
+if test "${enable_applet}" = "yes" ; then
+	RVL_PYTHON_MODULE([gnomeapplet], [yes])
+fi
 
 dnl output files
 AC_OUTPUT([
--- data/bonobo/Makefile.am
+++ data/bonobo/Makefile.am
@@ -6,10 +6,13 @@
 #
 
 serverdir		= $(libdir)/bonobo/servers
-server_DATA		= GNOME_RevelationApplet.server
 CLEANFILES		= GNOME_RevelationApplet.server
 EXTRA_DIST		= GNOME_RevelationApplet.server.in
 
+if ENABLE_APPLET
+server_DATA = GNOME_RevelationApplet.server
+endif
+
 GNOME_RevelationApplet.server: GNOME_RevelationApplet.server.in
 	sed \
 		-e "s|\@libexecdir\@|$(libexecdir)|" \
--- data/gconf/Makefile.am
+++ data/gconf/Makefile.am
@@ -6,7 +6,11 @@
 #
 
 schemadir		= @GCONF_SCHEMA_FILE_DIR@
-dist_schema_DATA	= revelation.schemas revelation-applet.schemas
+dist_schema_DATA	= revelation.schemas
+
+if ENABLE_APPLET
+dist_schema_DATA += revelation-applet.schemas
+endif
 
 
 install-data-hook:
--- src/Makefile.am
+++ src/Makefile.am
@@ -7,10 +7,12 @@
 
 SUBDIRS		= bundle lib wrap
 bin_SCRIPTS	= revelation
-libexec_SCRIPTS	= revelation-applet
 EXTRA_DIST	= revelation.in revelation-applet.in
 CLEANFILES	= revelation revelation-applet
 
+if ENABLE_APPLET
+libexec_SCRIPTS = revelation-applet
+endif
 
 revelation: revelation.in
 	sed \
--- src/wrap/crack/crack.c
+++ src/wrap/crack/crack.c
@@ -24,8 +24,6 @@
 
 #define FILENAME_MAXLEN 512
 
-static char DEFAULT_DICTPATH[] = "/usr/local/share/revelation/pwdict";
-
 static char crack_FascistCheck_doc [] =
 	"arguments: passwd, dictpath (optional)\n"
 	"\n"
--- src/wrap/crack/Makefile.am
+++ src/wrap/crack/Makefile.am
@@ -5,19 +5,9 @@
 #
 
-module_PROGRAMS	= crack.so
 moduledir	= $(pyexecdir)/revelation
-CLEANFILES	= crack.c
-EXTRA_DIST	= crack.c.in
-
-crack.c: crack.c.in
-	sed \
-		-e "s|\@CRACK_DICTPATH\@|@CRACK_DICTPATH@|" \
-		crack.c.in >crack.c
-
-crack.o: crack.c
-	$(CC) -pthread -fno-strict-aliasing -fPIC -I${PYTHON_INCLUDE} -c crack.c -o crack.o
-
-crack.so: crack.o
-	$(CC) -Wl --export-dynamic -pthread -shared crack.o -lcrack -o crack.so
-
+module_LTLIBRARIES	= crack.la
+crack_la_SOURCES	= crack.c
+crack_la_CFLAGS	= -Wall
+crack_la_CPPFLAGS	= -I$(PYTHON_INCLUDE) -DDEFAULT_DICTPATH="\"$(CRACK_DICTPATH)\""
+crack_la_LDFLAGS	= -avoid-version -module -shared
