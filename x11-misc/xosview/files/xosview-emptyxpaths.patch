
x_{includes,libraries} should be set *before* using them...

--- config/configure.in.old
+++ config/configure.in
@@ -9,6 +9,21 @@
 ICE_CXX_BOOL
 ICE_CXX_LONG_LONG
 AC_PATH_X
+
+#
+# On Gentoo and hpux10 both x_includes and x_libraries are set to ""
+# This causes compiler options like '-I' and '-L', which break
+# the build.  So, we avoid empty strings here.
+#
+if test -z "$x_includes"
+then
+    x_includes=.
+fi
+if test -z "$x_libraries"
+then
+   x_libraries=.
+fi
+
 CXXFLAGS="$CXXFLAGS -I$x_includes"
 case $host_os in
 linux*)
@@ -306,21 +321,6 @@
 AC_SUBST(USE_MOD_VERSIONS)
 dnl  Check for usleep().  Currently, only HP-UX doesn't have it.
 AC_CHECK_FUNCS(usleep)
-
-#
-# On hpux10 both x_includes and x_libraries seem to be set to ""
-# This causes compiler options like '-I' and '-L', which break
-# the build.  So, we avoid empty strings here.
-#
-if test -z "$x_includes"
-then
-    x_includes=.
-fi
-if test -z "$x_libraries"
-then
-   x_libraries=.
-fi
-
 
 AC_SUBST(host_dir)
 AC_SUBST(NetMeter_Default_Setting)
--- configure.old
+++ configure
@@ -3163,6 +3163,21 @@
 echo "${ECHO_T}libraries $x_libraries, headers $x_includes" >&6
 fi
 
+
+#
+# On Gentoo and hpux10 both x_includes and x_libraries are set to ""
+# This causes compiler options like '-I' and '-L', which break
+# the build.  So, we avoid empty strings here.
+#
+if test -z "$x_includes"
+then
+    x_includes=.
+fi
+if test -z "$x_libraries"
+then
+   x_libraries=.
+fi
+
 CXXFLAGS="$CXXFLAGS -I$x_includes"
 case $host_os in
 linux*)
@@ -5218,21 +5233,6 @@
 fi
 done
 
-
-#
-# On hpux10 both x_includes and x_libraries seem to be set to ""
-# This causes compiler options like '-I' and '-L', which break
-# the build.  So, we avoid empty strings here.
-#
-if test -z "$x_includes"
-then
-    x_includes=.
-fi
-if test -z "$x_libraries"
-then
-   x_libraries=.
-fi
-
 
 
 
