.TH "ideskrc" "5" "" "" ""
.SH "NAME"
ideskrc \- Configuration file for idesk(1)
.SH "USAGE"
The .ideskrc file needs to be placed in the root of your home directory.
.SH "FORMAT"
The structure of the file is as follows:
.IP 
table Config
  <setting>: <value>
.br 
end
table Actions
  <operation_to_perform>: <action>
.PP 
Anything else in the file will be ignored.
.SH "SETTINGS"
\fBLocked\fR is boolean (true/false). Setting it to true disables the dragging movement.

\fBTransparency\fR is between 0 (no glow effect) and 255 (invisible without a mouseover).

\fBHighContrast\fR will draw a border around the text in the opposite colour if it is true.  It will draw it in an arbitary colour if it "#aa00aa", for example.  And it will not draw anything at all if it is set to "false".

\fBShadow\fR is boolean (true/false). Turning this on will draw a drop shadow of color ShadowColor behind the text. The shadow will be ShadowX pixels right and ShadowY pixels down (negative values will work). Both ShadowX and ShadowY default to 1.

\fBBold\fR is a boolean (true/false). Setting it to true will make your font bold.

\fBClick Delay\fR is the number of milliseconds that represents a double\-click.

\fBSingleClick\fR is a boolean (true/false). Setting it to true makes a single\-click execute the command associated with the icon. This also means that it is impossible to drag the icon either.

\fBIconSnap\fR is a boolean (true/false). Setting it to true makes the icons snap to a grid defined by "SnapWidth" and "SnapHeight". The icon will snap to the middle of the rectangle defined by "SnapWidth" and "SnapHeight". So if "SnapWidth" = "SnapHeight" = 100, the center of the icon will by in multiples of 50: (50,50), or (50, 100), or (100, 100), or (250, 350)... You will want to make "SnapWidth" and "SnapHeight" greater than or equal to the size of the picture.

\fBSnapWidth\fR and \fBSnapHeight\fR is a positive integer, see description in "IconSnap".

\fBSnapOrigin\fR defines where the snap grip starts from. Valid values are: 
  TopLeft, TopRight, BottomLeft, BottomRight.

\fBSnapShadow\fR is a boolean (true/false) value. Setting it to true will make a shadow of the icon appear where the icon will snap if the drag was released there. Turn "IconSnap" on and check this out, pretty cool effect.  

\fBSnapShadowTrans\fR is a integer between 0 (opaque) and 255 (invisible). It represents the transparency of the SnapShadow

\fBCaptionOnHover\fR is a boolean (true/false) value. Setting it to true will make the icon's caption only appear when the mouse hovers over an icon. False is the default behavior.

.SH "BETTER SNAP EXPLANATION"
               .          .          .
               .          .          .
               |__________|__________|_______ . . .
               |          |          |
               |          |          |
           y   |          |          |
               |          |          |
               |          |          |
         [>    |__________|__________|________ . . .
         |           x
         |
         |
                                                                                                               
This is the bottom left of the desktop (SnapOrigin: BottomLeft)
                                                                                                               
X represents the snap width
Y represents the snap height
Snap origin only describes which corner of the screen
                                                                                                               
So basically set snap width to the width of the "box" you want the icon contained in and set snap height to the height of the "box" you want the icon contained in.
                                                                                                               
The icon will snap to the middle of that box specified by snap width and snap height. You will typically want the width and heihgt to be a bit larger than the width and height of the icons (make the height bigger if you use a caption).
.SH "ACTION CONFIGURATION"
In the Action table 5 different actions can be configured.
.IP 
    \fBLock\fR:       Disables icon dragging to prevent accidental movement.

    \fBReload\fR:     Reloads all of the config options and gets a new background.

    \fBDrag\fR:       Puts the icon in drag mode. Icon follows cursor.

    \fBEndDrag\fR:    End the drag mode, icon will be positioned at the cursor.

    \fBExectue[i]\fR: Executes the ith icon command. So the Execute[0] action is the
                default action and run Command[0] (in the icon config file),
                Execute[1] runs Command[1] and so forth.
.PP 
The options for each command are as follows:
.IP 
    <shift> <control> <alt> [Button] [ClickType]
    [Button] = left, middle, or right (more than one is allowed)
    [ClickType] = singleClk, doubleClk, tripleClk, or hold
.PP 
\fBSome examples\fR
.br 
The default settings, should be self explanitory.
.IP 
Lock: right doubleClk
.br 
Reload: middle doubleClk
.br 
Drag: left hold  <== Drag starts when left button is pressed.
.br 
EndDrag: left singleClk <== Drag ends when left button is released.
.br 
Execute[0]: left doubleClk
.PP         

\fBOther examples\fR
.br 
Left single click while holding shift on the keyboard
.br 
Execute[0]: shift left singleClk

Left double click while holding down the right mouse button.
.br 
Execute[0]: left doubleClk right hold

And for those with too many fingers, middle double click while holding
down the left and right mouse buttons, and control, alt, and shift
on the keyboard.
.br 
Execute[0]: control shift alt left hold middle doubleClk right hold
.IP  
\fBNotes:\fR
.br 
For the Drag action I reccomend only doing button holds and for the
EndDrag I recommend using single clicks. This way the icon begins
dragging as soon as you press the button and stops dragging as soon
as you release the button. Using other actions should work as expected,
but there are a few small bugs.

If two actions have the same key/button combinations they both will
occur, unless one is the reload action. The reload action always only
happens by itself.
.SH "SEE ALSO"
\fIidesk(1)\fR

.SH "EXAMPLE"
table Config
  FontName: tahoma
  FontSize: 8
  FontColor: #ffffff
  Locked: false
  Transparency: 150
  Shadow: true
  ShadowColor: #000000
  ShadowX: 1
  ShadowY: 2
  Bold: false
  ClickDelay: 300
  IconSnap: true
  SnapWidth: 55
  SnapHeight: 100
  SnapOrigin: BottomRight
  SnapShadow: true
  SnapShadowTrans: 200
  CaptionOnHover: false
.br 
end
.br 
table Actions
  Lock: control right doubleClk
  Reload: middle doubleClk
  Drag: left hold
  EndDrag: left singleClk
  Execute[0]: left doubleClk
  Execute[1]: right doubleClk
.br 
end
.SH "PROGRAM AUTHORS"
.IP 
Chris Roberts (nikon) <nikon@sc.rr.com>
.br 
Bryn (curious) <curious@ihug.com.au>
.br 
Christopher Morris <cmorri9@lsu.edu>
.br 
Tim Finley <timmfin@timmfin.net>
.SH "MANPAGE AUTHOR"
.IP 
Dylan Carlson <absinthe@gentoo.org>
.br 
Sergey Kuleshov <svyatogor@gentoo.org>
