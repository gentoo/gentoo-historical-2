diff --exclude-from=/home/dang/.scripts/diffrc -up -ruN nautilus-2.20.0.orig/configure.in nautilus-2.20.0/configure.in
--- nautilus-2.20.0.orig/configure.in	2007-09-18 02:55:14.000000000 -0400
+++ nautilus-2.20.0/configure.in	2007-10-29 10:50:48.000000000 -0400
@@ -90,7 +90,6 @@ fi
 AC_SUBST(STARTUP_NOTIFICATION_PACKAGE)
 
 PKG_CHECK_MODULES(ALL, [
-	esound			>= esound_minver
 	bonobo-activation-2.0	>= bonobo_activation_minver
 	eel-2.0			>= eel_minver
 	glib-2.0		>= glib_minver
@@ -312,6 +311,25 @@ fi
 
 dnl ==========================================================================
 
+AM_CONDITIONAL(HAVE_ESOUND, false)
+
+dnl esound checking
+			    			  
+AC_ARG_ENABLE(esound, [  --disable-esound     build without esound support])
+msg_esound=no
+if test "x$enable_esound" != "xno"; then
+	PKG_CHECK_MODULES(ESOUND, esound >= esound_minver, [
+		  	  AM_CONDITIONAL(HAVE_ESOUND, true)
+			  AC_DEFINE(HAVE_ESOUND, 1, [Define to enable esound support])
+			  ]
+                          msg_esound=yes,
+	          	  [AM_CONDITIONAL(HAVE_ESOUND, false)])
+        AC_SUBST(ESOUND_CFLAGS)
+	AC_SUBST(ESOUND_LIBS)
+fi
+
+dnl ==========================================================================
+
 dnl ****************************
 dnl *** Check for libselinux ***
 dnl ****************************
@@ -404,7 +422,7 @@ LIBNAUTILUS_EXTENSION_LIBS="`$PKG_CONFIG
 AC_SUBST(LIBNAUTILUS_EXTENSION_LIBS)
 
 dnl core nautilus (must list bonobo-activation and libbonobo because idldir does not respect "requires")
-CORE_MODULES="eel-2.0 librsvg-2.0 bonobo-activation-2.0 libbonobo-2.0 esound gnome-desktop-2.0 gnome-vfs-module-2.0 $EXTRA_CORE_MODULES"
+CORE_MODULES="eel-2.0 librsvg-2.0 bonobo-activation-2.0 libbonobo-2.0 gnome-desktop-2.0 gnome-vfs-module-2.0 $EXTRA_CORE_MODULES"
 CORE_CFLAGS="`$PKG_CONFIG --cflags $CORE_MODULES` $x_cflags $WARNING_CFLAGS"
 AC_SUBST(CORE_CFLAGS)
 CORE_LIBS="`$PKG_CONFIG --libs $CORE_MODULES` $x_libs"
diff --exclude-from=/home/dang/.scripts/diffrc -up -ruN nautilus-2.20.0.orig/libnautilus-private/Makefile.am nautilus-2.20.0/libnautilus-private/Makefile.am
--- nautilus-2.20.0.orig/libnautilus-private/Makefile.am	2007-08-21 05:37:54.000000000 -0400
+++ nautilus-2.20.0/libnautilus-private/Makefile.am	2007-10-29 10:50:48.000000000 -0400
@@ -10,6 +10,7 @@ INCLUDES = 						\
 	$(DISABLE_DEPRECATED_CFLAGS)			\
 	$(TRACKER_CFLAGS)				\
 	$(BEAGLE_CFLAGS)				\
+	$(ESOUND_CFLAGS)				\
 	-DDATADIR=\""$(datadir)"\" 			\
 	-DSYSCONFDIR=\""$(sysconfdir)"\" 			\
 	-DNAUTILUS_DATADIR=\""$(datadir)/nautilus"\" 	\
@@ -31,6 +32,7 @@ libnautilus_private_la_LIBADD =		\
 	$(SELINUX_LIBS)			\
 	$(BEAGLE_LIBS)			\
 	$(TRACKER_LIBS)			\
+	$(ESOUND_LIBS)			\
 	$(top_builddir)/libnautilus-extension/libnautilus-extension.la \
 	$(CORE_LIBS)			\
 	$(NULL)
@@ -49,8 +51,6 @@ marshal_sources = \
 
 libnautilus_private_la_SOURCES = \
 	$(nautilus_metafile_server_idl_sources)	\
-	nautilus-audio-player.c \
-	nautilus-audio-player.h \
 	nautilus-bookmark.c \
 	nautilus-bookmark.h \
 	nautilus-cell-renderer-pixbuf-emblem.c \
@@ -228,6 +228,14 @@ if HAVE_TRACKER
 libnautilus_private_la_SOURCES += $(TRACKER_SOURCES)
 endif
 
+ESOUND_SOURCES = \
+	nautilus-audio-player.c \
+	nautilus-audio-player.h
+
+if HAVE_ESOUND
+libnautilus_private_la_SOURCES += $(ESOUND_SOURCES)
+endif
+
 $(lib_LTLIBRARIES): $(dependency_static_libs)
 
 $(nautilus_metafile_server_idl_sources): nautilus_metafile_server_idl_stamp
@@ -264,6 +272,7 @@ EXTRA_DIST = 				\
 	nautilus-marshal.list		\
 	$(schema_in_files)              \
 	$(BEAGLE_SOURCES)		\
+	$(ESOUND_SOURCES)		\
 	$(TRACKER_SOURCES)		\
 	$(NULL)
 
diff --exclude-from=/home/dang/.scripts/diffrc -up -ruN nautilus-2.20.0.orig/src/file-manager/fm-icon-view.c nautilus-2.20.0/src/file-manager/fm-icon-view.c
--- nautilus-2.20.0.orig/src/file-manager/fm-icon-view.c	2007-04-03 06:08:04.000000000 -0400
+++ nautilus-2.20.0/src/file-manager/fm-icon-view.c	2007-10-29 12:02:21.000000000 -0400
@@ -24,6 +24,7 @@
 
 #include <config.h>
 #include "fm-icon-view.h"
+#include "nautilus-audio-mime-types.h"
 
 #include "fm-actions.h"
 #include "fm-icon-container.h"
@@ -78,7 +79,9 @@
 #include <sys/types.h>
 #include <sys/wait.h>
 #include <unistd.h>
+#ifdef HAVE_ESOUND
 #include <esd.h>
+#endif
 
 #define USE_OLD_AUDIO_PREVIEW 1
 #define READ_CHUNK_SIZE 16384
@@ -165,9 +168,8 @@ static const SortCriterion sort_criteria
 
 static gboolean default_sort_in_reverse_order = FALSE;
 static int preview_sound_auto_value;
-static gboolean gnome_esd_enabled_auto_value;
 
-#if USE_OLD_AUDIO_PREVIEW
+#ifndef HAVE_ESOUND
 static pid_t audio_preview_pid = 0;
 #endif
 
@@ -1747,60 +1749,59 @@ band_select_ended_callback (NautilusIcon
 
 /* handle the preview signal by inspecting the mime type.  For now, we only preview local sound files. */
 
+#ifndef HAVE_ESOUND
+static char *
+get_preview_command (void)
+{
+	char *command;
+
+	command = g_find_program_in_path ("totem-audio-preview");
+	if (command)
+		return command;
+	command = g_find_program_in_path ("gst-launch-0.10");
+	if (command) {
+		char *new_cmd;
+
+		new_cmd = g_strdup_printf ("%s playbin uri=fd://0", command);
+		g_free (command);
+		return new_cmd;
+	}
+
+	return NULL;
+}
+#endif /* !HAVE_ESOUND */
+
 /* here's the timer task that actually plays the file using mpg123, ogg123 or play. */
 /* FIXME bugzilla.gnome.org 41258: we should get the application from our mime-type stuff */
 static gboolean
 play_file (gpointer callback_data)
 {
-#if USE_OLD_AUDIO_PREVIEW	
+#ifndef HAVE_ESOUND
 	NautilusFile *file;
 	FMIconView *icon_view;
 	FILE *sound_process;
 	char *file_uri;
-	char *suffix;
-	char *mime_type;
-	const char *command_str;
-	gboolean is_mp3;
-	gboolean is_ogg;
+	char *command_str;
 	pid_t mp3_pid;
 	
 	GnomeVFSResult result;
 	GnomeVFSHandle *handle;
 	char *buffer;
-	const char *audio_device = NULL;
 	GnomeVFSFileSize bytes_read;
 
-	audio_device = g_getenv ("AUDIODEV");
 	icon_view = FM_ICON_VIEW (callback_data);
+
+	command_str = get_preview_command ();
+	if (command_str == NULL)
+		return FALSE;
 	
 	file = icon_view->details->audio_preview_file;
 	file_uri = nautilus_file_get_uri (file);
-	mime_type = nautilus_file_get_mime_type (file);
-	is_mp3 = eel_strcasecmp (mime_type, "audio/mpeg") == 0;
-	is_ogg = eel_strcasecmp (mime_type, "application/ogg") == 0 ||
-                eel_strcasecmp (mime_type, "application/x-ogg") == 0;
 	
 	mp3_pid = fork ();
 	if (mp3_pid == (pid_t) 0) {
 		/* Set the group (session) id to this process for future killing. */
 		setsid();
-		if (is_mp3) {
-			command_str = "mpg123 -y -q -";
-		} else if (is_ogg) {
-			command_str = "ogg123 -q -";
-		} else {
-			suffix = strrchr(file_uri, '.');
-			if (suffix == NULL) {
-				suffix = "wav";
-			} else {
-				suffix += 1; /* skip the period */
-			}
-			if (audio_device) {
-				command_str = g_strdup_printf("play -d %s -t %s -", audio_device, suffix);
-			} else {
-				command_str = g_strdup_printf("play -t %s -", suffix);
-			}
-		}
 
 		/* read the file with gnome-vfs, feeding it to the sound player's standard input */
 		/* First, open the file. */
@@ -1851,10 +1852,10 @@ play_file (gpointer callback_data)
 	}
 		
 	g_free (file_uri);
-	g_free (mime_type);
+	g_free (command_str);
 
 	icon_view->details->audio_preview_timeout = 0;
-#else
+#else /* HAVE_ESOUND */
 	char *file_path, *file_uri, *mime_type;
 	gboolean is_mp3;
 	FMIconView *icon_view;
@@ -1893,13 +1894,13 @@ static void
 preview_audio (FMIconView *icon_view, NautilusFile *file, gboolean start_flag)
 {		
 	/* Stop current audio playback */
-#if USE_OLD_AUDIO_PREVIEW
+#ifndef HAVE_ESOUND
 	if (audio_preview_pid > 0) {
 		kill (-audio_preview_pid, SIGTERM);
 		waitpid (audio_preview_pid, NULL, 0);
 		audio_preview_pid = 0;
 	}
-#else
+#else /* HAVE_ESOUND */
 	if (icon_view->details->audio_player_data != NULL) {
 		nautilus_audio_player_stop (icon_view->details->audio_player_data);
 		g_free (icon_view->details->audio_player_data);
@@ -1913,9 +1914,9 @@ preview_audio (FMIconView *icon_view, Na
 			
 	if (start_flag) {
 		icon_view->details->audio_preview_file = file;
-#if USE_OLD_AUDIO_PREVIEW			
+#ifndef HAVE_ESOUND
 		icon_view->details->audio_preview_timeout = g_timeout_add (1000, play_file, icon_view);
-#else
+#else /* HAVE_ESOUND */
 		/* FIXME: Need to kill the existing timeout if there is one? */
 		icon_view->details->audio_preview_timeout = g_timeout_add (1000, play_file, icon_view);
 #endif
@@ -1923,15 +1924,31 @@ preview_audio (FMIconView *icon_view, Na
 }
 
 static gboolean
-should_preview_sound (NautilusFile *file)
+sound_preview_type_supported (NautilusFile *file)
 {
-	char *uri;
+	char *mime_type;
+	guint i;
 
-	/* Check gnome config sound preference */
-	if (!gnome_esd_enabled_auto_value) {
+	mime_type = nautilus_file_get_mime_type (file);
+	if (mime_type == NULL)
 		return FALSE;
+	for (i = 0; i < G_N_ELEMENTS (audio_mime_types); i++) {
+		GnomeVFSMimeEquivalence equivalence = gnome_vfs_mime_type_get_equivalence (mime_type, audio_mime_types[i]);
+		if (equivalence == GNOME_VFS_MIME_IDENTICAL || equivalence == GNOME_VFS_MIME_PARENT) {
+			g_free (mime_type);
+			return TRUE;
+		}
 	}
 
+	g_free (mime_type);
+	return FALSE;
+}
+
+static gboolean
+should_preview_sound (NautilusFile *file)
+{
+	char *uri;
+
 	uri = nautilus_file_get_uri (file);
 	if (uri && eel_istr_has_prefix (uri, "burn:")) {
 		g_free (uri);
@@ -1956,12 +1973,9 @@ can_play_sound (void)
 {
 	int open_result;
 
-#if USE_OLD_AUDIO_PREVIEW			
-	/* first see if there's already one in progress; if so, return true */
-	if (audio_preview_pid > 0) {
-		return TRUE;
-	}
-#endif
+#ifndef HAVE_ESOUND
+	return TRUE;
+#else /* HAVE_ESOUND */
 
 	/* Now check and see if system has audio out capabilites */
         open_result = esd_open_sound (NULL);
@@ -1972,6 +1986,7 @@ can_play_sound (void)
 	esd_close (open_result);
 
 	return TRUE;
+#endif
 }
 
 static int
@@ -1981,25 +1996,17 @@ icon_container_preview_callback (Nautilu
 				 FMIconView *icon_view)
 {
 	int result;
-	char *mime_type, *file_name, *message;
+	char *file_name, *message;
 		
 	result = 0;
 	
 	/* preview files based on the mime_type. */
 	/* at first, we just handle sounds */
 	if (should_preview_sound (file)) {
-		mime_type = nautilus_file_get_mime_type (file);
-
-		if ((eel_istr_has_prefix (mime_type, "audio/")
-		     || eel_istr_has_prefix (mime_type, "application/ogg")
-		     || eel_istr_has_prefix (mime_type, "application/x-ogg"))
-		    && eel_strcasecmp (mime_type, "audio/x-pn-realaudio") != 0
-		    && eel_strcasecmp (mime_type, "audio/x-mpegurl") != 0
-		    && can_play_sound ()) {
+		if (sound_preview_type_supported (file) && can_play_sound ()) {
 			result = 1;
 			preview_audio (icon_view, file, start_flag);
 		}	
-		g_free (mime_type);
 	}
 	
 	/* Display file name in status area at low zoom levels, since
@@ -2708,10 +2715,6 @@ fm_icon_view_init (FMIconView *icon_view
 		eel_preferences_add_auto_enum (NAUTILUS_PREFERENCES_PREVIEW_SOUND,
 					       &preview_sound_auto_value);
 
-		eel_preferences_monitor_directory ("/desktop/gnome/sound");
-		eel_preferences_add_auto_boolean ("/desktop/gnome/sound/enable_esd",
-						  &gnome_esd_enabled_auto_value);
-		
 		setup_sound_preview = TRUE;
 	}
 
diff --exclude-from=/home/dang/.scripts/diffrc -up -ruN nautilus-2.20.0.orig/src/file-manager/Makefile.am nautilus-2.20.0/src/file-manager/Makefile.am
--- nautilus-2.20.0.orig/src/file-manager/Makefile.am	2007-06-27 03:12:32.000000000 -0400
+++ nautilus-2.20.0/src/file-manager/Makefile.am	2007-10-29 10:55:00.000000000 -0400
@@ -38,6 +38,7 @@ libnautilus_file_manager_la_SOURCES=	\
 	fm-tree-model.h			\
 	fm-tree-view.c			\
 	fm-tree-view.h			\
+	nautilus-audio-mime-types.h	\
 	$(NULL)
 
 EMPTY_VIEW_SOURCES = \
diff --exclude-from=/home/dang/.scripts/diffrc -up -ruN nautilus-2.20.0.orig/src/file-manager/nautilus-audio-mime-types.h nautilus-2.20.0/src/file-manager/nautilus-audio-mime-types.h
--- nautilus-2.20.0.orig/src/file-manager/nautilus-audio-mime-types.h	1969-12-31 19:00:00.000000000 -0500
+++ nautilus-2.20.0/src/file-manager/nautilus-audio-mime-types.h	2007-10-29 10:55:00.000000000 -0400
@@ -0,0 +1,41 @@
+/* generated with mime-types-include.sh in the totem module, don't edit or 
+   commit in the nautilus module without filing a bug against totem */
+static char *audio_mime_types[] = {
+"audio/3gpp",
+"audio/ac3",
+"audio/AMR",
+"audio/AMR-WB",
+"audio/basic",
+"audio/mp4",
+"audio/mpeg",
+"audio/mpegurl",
+"audio/ogg",
+"audio/vnd.rn-realaudio",
+"audio/x-ape",
+"audio/x-flac",
+"audio/x-it",
+"audio/x-m4a",
+"audio/x-matroska",
+"audio/x-mod",
+"audio/x-mp3",
+"audio/x-mpeg",
+"audio/x-mpegurl",
+"audio/x-ms-asf",
+"audio/x-ms-asx",
+"audio/x-ms-wax",
+"audio/x-ms-wma",
+"audio/x-musepack",
+"audio/x-pn-aiff",
+"audio/x-pn-au",
+"audio/x-pn-wav",
+"audio/x-pn-windows-acm",
+"audio/x-realaudio",
+"audio/x-real-audio",
+"audio/x-sbc",
+"audio/x-scpls",
+"audio/x-tta",
+"audio/x-wav",
+"audio/x-wav",
+"audio/x-wavpack",
+"audio/x-vorbis",
+};
