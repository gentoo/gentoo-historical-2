2002-12-19  Eric Botcazou  <ebotcazou@libertysurf.fr>

	PR optimization/8988
	* loop.c (maybe_eliminate_biv): Kill REG_EQUAL notes mentioning
	the biv when eliminating.

2002-12-19  Eric Botcazou  <ebotcazou@libertysurf.fr>

	* gcc.c-torture/execute/20021219-1.c: New test.

--- gcc-3.2.1/gcc/testsuite/gcc.c-torture/execute/20021219-1.c.pr8988	2002-12-20 14:51:16.000000000 +0100
+++ gcc-3.2.1/gcc/testsuite/gcc.c-torture/execute/20021219-1.c	2002-12-20 14:51:04.000000000 +0100
@@ -0,0 +1,18 @@
+/* PR optimization/8988 */
+/* Contributed by Kevin Easton */
+
+void foo(char *p1, char **p2)
+{}
+ 
+int main(void)
+{
+  char str[] = "foo { xx }";
+  char *ptr = str + 5;
+
+  foo(ptr, &ptr);
+
+  while (*ptr && (*ptr == 13 || *ptr == 32))
+    ptr++;
+
+  return 0;
+}
--- gcc-3.2.1/gcc/loop.c.pr8988	2002-12-20 11:54:51.000000000 +0100
+++ gcc-3.2.1/gcc/loop.c	2002-12-20 11:54:51.000000000 +0100
@@ -8536,11 +8536,12 @@ maybe_eliminate_biv (loop, bl, eliminate
       enum rtx_code code = GET_CODE (p);
       basic_block where_bb = 0;
       rtx where_insn = threshold >= insn_count ? 0 : p;
+      rtx note;
 
       /* If this is a libcall that sets a giv, skip ahead to its end.  */
       if (GET_RTX_CLASS (code) == 'i')
 	{
-	  rtx note = find_reg_note (p, REG_LIBCALL, NULL_RTX);
+	  note = find_reg_note (p, REG_LIBCALL, NULL_RTX);
 
 	  if (note)
 	    {
@@ -8558,6 +8559,8 @@ maybe_eliminate_biv (loop, bl, eliminate
 		}
 	    }
 	}
+
+      /* Closely examine the insn if the biv is mentioned.  */
       if ((code == INSN || code == JUMP_INSN || code == CALL_INSN)
 	  && reg_mentioned_p (reg, PATTERN (p))
 	  && ! maybe_eliminate_biv_1 (loop, PATTERN (p), p, bl,
@@ -8569,6 +8572,12 @@ maybe_eliminate_biv (loop, bl, eliminate
 		     bl->regno, INSN_UID (p));
 	  break;
 	}
+
+      /* If we are eliminating, kill REG_EQUAL notes mentioning the biv.  */
+      if (eliminate_p
+	  && (note = find_reg_note (p, REG_EQUAL, NULL_RTX)) != NULL_RTX
+	  && reg_mentioned_p (reg, XEXP (note, 0)))
+	remove_note (p, note);
     }
 
   if (p == loop->end)
