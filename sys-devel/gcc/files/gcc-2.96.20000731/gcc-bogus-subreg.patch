2000-09-13  Jakub Jelinek  <jakub@redhat.com>

	* rtlanal.c (replace_rtx): Avoid SUBREGs of constants.

	* gcc.c-torture/compile/20000728-1.c: New test.

--- gcc/testsuite/gcc.c-torture/compile/20000728-1.c.jj	Fri Jul 28 14:51:03 2000
+++ gcc/testsuite/gcc.c-torture/compile/20000728-1.c	Fri Jul 28 14:50:54 2000
@@ -0,0 +1,16 @@
+struct clock {
+  long sec; long usec;
+};
+        
+int foo(void)
+{
+  struct clock clock_old = {0, 0};
+
+  for (;;) {
+    long foo;
+
+    if (foo == clock_old.sec && 0 == clock_old.usec);
+  }
+  return 0;
+}
+                                        
--- gcc/rtlanal.c.jj	Tue Jul 25 06:57:47 2000
+++ gcc/rtlanal.c	Fri Jul 28 17:03:02 2000
@@ -1987,6 +1987,55 @@ replace_rtx (x, from, to)
   if (x == 0)
     return 0;
 
+  if (GET_CODE (x) == SUBREG)
+    {
+      rtx tem = replace_rtx (SUBREG_REG (x), from, to);
+
+      if (GET_CODE (tem) == CONST_INT)
+	{
+	  /* Avoid creating bogus SUBREGs */
+	  enum machine_mode mode = GET_MODE (x);
+	  enum machine_mode inner_mode = GET_MODE (SUBREG_REG (x));
+	  int offset;
+	  unsigned HOST_WIDE_INT i;
+
+	  if (GET_MODE_CLASS (mode) != MODE_INT)
+	    abort ();
+
+	  if (GET_MODE_SIZE (mode) >= GET_MODE_SIZE (inner_mode))
+	    return x;
+
+	  offset = SUBREG_BYTE (x);
+	  if (BYTES_BIG_ENDIAN || WORDS_BIG_ENDIAN)
+	    {
+	      if (WORDS_BIG_ENDIAN)
+		offset = GET_MODE_SIZE (inner_mode)
+		  - GET_MODE_SIZE (mode) - offset;
+	      if (BYTES_BIG_ENDIAN != WORDS_BIG_ENDIAN
+		  && GET_MODE_SIZE (mode) < UNITS_PER_WORD)
+		offset = offset + UNITS_PER_WORD - GET_MODE_SIZE (mode)
+		  - 2 * (offset % UNITS_PER_WORD);
+	    }
+
+	  offset *= BITS_PER_UNIT;
+
+	  i = INTVAL (tem);
+
+	  if (offset >= HOST_BITS_PER_WIDE_INT)
+	    return ((HOST_WIDE_INT) i < 0) ? constm1_rtx : const0_rtx;
+
+	  i >>= offset;
+	  if (GET_MODE_BITSIZE (mode) < HOST_BITS_PER_WIDE_INT)
+	    i &= (((unsigned HOST_WIDE_INT) 1) << GET_MODE_BITSIZE (mode)) - 1;
+
+	  return GEN_INT (i);
+	}
+
+      SUBREG_REG (x) = tem;
+
+      return x;
+    }
+
   fmt = GET_RTX_FORMAT (GET_CODE (x));
   for (i = GET_RTX_LENGTH (GET_CODE (x)) - 1; i >= 0; i--)
     {
