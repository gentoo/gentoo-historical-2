2000-11-03  Jakub Jelinek  <jakub@redhat.com>

	* g++.old-deja/g++.other/crash26.C: New test.
	* g++.old-deja/g++.other/crash27.C: New test.
	* g++.old-deja/g++.other/crash28.C: New test.
	* g++.old-deja/g++.other/crash29.C: New test.

--- gcc/testsuite/g++.old-deja/g++.other/crash26.C.jj	Thu Aug 24 11:00:32 2000
+++ gcc/testsuite/g++.old-deja/g++.other/crash26.C	Wed Oct 25 14:14:24 2000
@@ -0,0 +1,12 @@
+// Build don't link:
+
+class foo {
+public:
+  foo(int);
+};
+
+void bar(bool x)
+{
+  if(x)
+    foo *a = new foo(foo::not);		// ERROR - 
+}
--- gcc/testsuite/g++.old-deja/g++.other/crash27.C.jj	Thu Aug 24 11:00:32 2000
+++ gcc/testsuite/g++.old-deja/g++.other/crash27.C	Wed Oct 25 14:14:29 2000
@@ -0,0 +1,11 @@
+// Build don't link:
+
+X(Y(long, Type, CLink)); break; default: break; } } }	// ERROR - 
+
+struct A {
+  inline A ();
+};
+
+inline A::A ()
+{ 
+}
--- gcc/testsuite/g++.old-deja/g++.other/crash28.C.jj	Thu Aug 24 11:00:32 2000
+++ gcc/testsuite/g++.old-deja/g++.other/crash28.C	Fri Nov  3 11:26:58 2000
@@ -0,0 +1,34 @@
+// Build don't link:
+
+namespace N
+{
+  class X;
+  template <class T>
+  class Y
+  {
+  public:
+    inline Y () {}
+    inline operator const Y<X> & () const
+    {
+      return *reinterpret_cast<const Y<X> *>(this);
+    }
+  };
+}
+class bar
+{
+public:
+  inline bar () {}
+  inline bar (const ::N::Y< ::N::X>& a);
+};
+
+class foo
+{
+  bool b;
+public:
+  foo();
+  void x () throw(bar);
+};
+void foo::x() throw(bar)
+{
+  if (!b) throw bar (static_cast<::N::X*>(this));	// ERROR - parse error
+}
--- gcc/testsuite/g++.old-deja/g++.other/crash29.C.jj	Thu Aug 24 11:00:32 2000
+++ gcc/testsuite/g++.old-deja/g++.other/crash29.C	Fri Nov  3 11:51:21 2000
@@ -0,0 +1,12 @@
+// Build don't link:
+
+class bar
+{
+public:
+  void foo ();
+  void baz ();
+};
+void bar::foo ()
+{
+  baz x();			// ERROR - 
+}
