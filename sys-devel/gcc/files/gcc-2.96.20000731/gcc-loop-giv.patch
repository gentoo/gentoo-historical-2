2000-09-28  Jose Luu  <jluu@mainsoft.com>
	    Franz Sirl <Franz.Sirl-kernel@lauterbach.com>

	* loop.c (check_final_value): A GIV is not replaceable if used before the
	set.

--- gcc/loop.c.jj	Wed Oct  4 18:49:29 2000
+++ gcc/loop.c	Thu Oct  5 06:19:39 2000
@@ -5692,6 +5692,7 @@ check_final_value (loop, v)
         or all uses follow that insn in the same basic block),
      - its final value can be calculated (this condition is different
        than the one above in record_giv)
+     - it's not used before it's set
      - no assignments to the biv occur during the giv's lifetime.  */
 
 #if 0
@@ -5703,7 +5704,7 @@ check_final_value (loop, v)
   if ((final_value = final_giv_value (loop, v))
       && (v->always_computable || last_use_this_basic_block (v->dest_reg, v->insn)))
     {
-      int biv_increment_seen = 0;
+      int biv_increment_seen = 0, before_giv_insn = 0;
       rtx p = v->insn;
       rtx last_giv_use;
 
@@ -5733,14 +5734,17 @@ check_final_value (loop, v)
 	{
 	  p = NEXT_INSN (p);
 	  if (p == loop->end)
-	    p = NEXT_INSN (loop->start);
+	    {
+	      before_giv_insn = 1;
+	      p = NEXT_INSN (loop->start);
+	    }
 	  if (p == v->insn)
 	    break;
 
 	  if (GET_CODE (p) == INSN || GET_CODE (p) == JUMP_INSN
 	      || GET_CODE (p) == CALL_INSN)
 	    {
-	      if (biv_increment_seen)
+	      if (biv_increment_seen || before_giv_insn)
 		{
 		  if (reg_mentioned_p (v->dest_reg, PATTERN (p)))
 		    {
