2000-08-28  Richard Henderson  <rth@cygnus.com>

	* config/i386/i386.c (call_insn_operand): Don't expect a surrounding
	mem.
	(constant_call_address_operand): Likewise.
	* config/i386/i386.h (PREDICATE_CODES): Update.
	* config/i386/i386.md (call patterns): Move the match_operand
	for the call destination inside the mem.

--- gcc/config/i386/i386.c.jj	Mon Jul 31 20:05:09 2000
+++ gcc/config/i386/i386.c	Wed Sep 13 15:29:41 2000
@@ -1078,10 +1078,6 @@ call_insn_operand (op, mode)
      rtx op;
      enum machine_mode mode ATTRIBUTE_UNUSED;
 {
-  if (GET_CODE (op) != MEM)
-    return 0;
-  op = XEXP (op, 0);
-
   /* Disallow indirect through a virtual register.  This leads to
      compiler aborts when trying to eliminate them.  */
   if (GET_CODE (op) == REG
@@ -1114,9 +1110,7 @@ constant_call_address_operand (op, mode)
      rtx op;
      enum machine_mode mode ATTRIBUTE_UNUSED;
 {
-  return (GET_CODE (op) == MEM
-	  && CONSTANT_ADDRESS_P (XEXP (op, 0))
-	  && GET_CODE (XEXP (op, 0)) !=  CONST_INT);
+  return GET_CODE (op) == SYMBOL_REF;
 }
 
 /* Match exactly zero and one.  */
--- gcc/config/i386/i386.h.jj	Wed Sep 13 15:29:36 2000
+++ gcc/config/i386/i386.h	Wed Sep 13 15:29:41 2000
@@ -2574,8 +2574,8 @@ do { long l;						\
   {"aligned_operand", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,	\
 		       LABEL_REF, SUBREG, REG, MEM}},			\
   {"pic_symbolic_operand", {CONST}},					\
-  {"call_insn_operand", {MEM}},						\
-  {"constant_call_address_operand", {MEM}},				\
+  {"call_insn_operand", {REG, SUBREG, MEM, SYMBOL_REF}},		\
+  {"constant_call_address_operand", {SYMBOL_REF}},			\
   {"const0_operand", {CONST_INT, CONST_DOUBLE}},			\
   {"const1_operand", {CONST_INT}},					\
   {"const248_operand", {CONST_INT}},					\
--- gcc/config/i386/i386.md.jj	Wed Sep 13 15:29:39 2000
+++ gcc/config/i386/i386.md	Wed Sep 13 15:36:45 2000
@@ -8457,12 +8457,12 @@
       && (GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF
 	  || !SYMBOL_REF_FLAG (XEXP (operands[0], 0))))
     current_function_uses_pic_offset_table = 1;
-  if (! call_insn_operand (operands[0], QImode))
+  if (! call_insn_operand (XEXP (operands[0], 0), Pmode))
     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));
 }")
 
 (define_insn "*call_pop_0"
-  [(call (match_operand:QI 0 "constant_call_address_operand" "")
+  [(call (mem:QI (match_operand:SI 0 "constant_call_address_operand" ""))
 	 (match_operand:SI 1 "" ""))
    (set (reg:SI 7) (plus:SI (reg:SI 7)
 			    (match_operand:SI 3 "immediate_operand" "")))]
@@ -8477,21 +8477,20 @@
   [(set_attr "type" "call")])
   
 (define_insn "*call_pop_1"
-  [(call (match_operand:QI 0 "call_insn_operand" "m")
+  [(call (mem:QI (match_operand:SI 0 "call_insn_operand" "rsm"))
 	 (match_operand:SI 1 "" ""))
    (set (reg:SI 7) (plus:SI (reg:SI 7)
 			    (match_operand:SI 3 "immediate_operand" "i")))]
   ""
   "*
 {
-  if (constant_call_address_operand (operands[0], QImode))
+  if (constant_call_address_operand (operands[0], Pmode))
     {
       if (SIBLING_CALL_P (insn))
 	return \"jmp\\t%P0\";
       else
 	return \"call\\t%P0\";
     }
-  operands[0] = XEXP (operands[0], 0);
   if (SIBLING_CALL_P (insn))
     return \"jmp\\t%*%0\";
   else
@@ -8513,12 +8512,12 @@
       && (GET_CODE (XEXP (operands[0], 0)) != SYMBOL_REF
 	  || !SYMBOL_REF_FLAG (XEXP (operands[0], 0))))
     current_function_uses_pic_offset_table = 1;
-  if (! call_insn_operand (operands[0], QImode))
+  if (! call_insn_operand (XEXP (operands[0], 0), Pmode))
     XEXP (operands[0], 0) = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));
 }")
 
 (define_insn "*call_0"
-  [(call (match_operand:QI 0 "constant_call_address_operand" "")
+  [(call (mem:QI (match_operand:SI 0 "constant_call_address_operand" ""))
 	 (match_operand:SI 1 "" ""))]
   ""
   "*
@@ -8531,7 +8530,7 @@
   [(set_attr "type" "call")])
 
 (define_insn "*call_1"
-  [(call (match_operand:QI 0 "call_insn_operand" "m")
+  [(call (mem:QI (match_operand:SI 0 "call_insn_operand" "rsm"))
 	 (match_operand:SI 1 "" ""))]
   ""
   "*
@@ -8543,7 +8542,6 @@
       else
 	return \"call\\t%P0\";
     }
-  operands[0] = XEXP (operands[0], 0);
   if (SIBLING_CALL_P (insn))
     return \"jmp\\t%*%0\";
   else
@@ -8576,7 +8574,7 @@
       && (GET_CODE (XEXP (operands[1], 0)) != SYMBOL_REF
 	  || !SYMBOL_REF_FLAG (XEXP (operands[1], 0))))
     current_function_uses_pic_offset_table = 1;
-  if (! call_insn_operand (operands[1], QImode))
+  if (! call_insn_operand (XEXP (operands[1], 0), Pmode))
     XEXP (operands[1], 0) = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));
 }")
 
@@ -8595,7 +8593,7 @@
       && (GET_CODE (XEXP (operands[1], 0)) != SYMBOL_REF
 	  || !SYMBOL_REF_FLAG (XEXP (operands[1], 0))))
     current_function_uses_pic_offset_table = 1;
-  if (! call_insn_operand (operands[1], QImode))
+  if (! call_insn_operand (XEXP (operands[1], 0), Pmode))
     XEXP (operands[1], 0) = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));
 }")
 
@@ -11038,7 +11036,7 @@
 
 (define_insn "*call_value_pop_0"
   [(set (match_operand 0 "" "")
-	(call (match_operand:QI 1 "constant_call_address_operand" "")
+	(call (mem:QI (match_operand:SI 1 "constant_call_address_operand" ""))
 	      (match_operand:SI 2 "" "")))
    (set (reg:SI 7) (plus:SI (reg:SI 7)
 			    (match_operand:SI 4 "immediate_operand" "")))]
@@ -11054,7 +11052,7 @@
 
 (define_insn "*call_value_pop_1"
   [(set (match_operand 0 "" "")
-	(call (match_operand:QI 1 "call_insn_operand" "m")
+	(call (mem:QI (match_operand:SI 1 "call_insn_operand" "rsm"))
 	      (match_operand:SI 2 "" "")))
    (set (reg:SI 7) (plus:SI (reg:SI 7)
 			    (match_operand:SI 4 "immediate_operand" "i")))]
@@ -11068,7 +11066,6 @@
       else
 	return \"call\\t%P1\";
     }
-  operands[1] = XEXP (operands[1], 0);
   if (SIBLING_CALL_P (insn))
     return \"jmp\\t%*%1\";
   else
@@ -11078,7 +11075,7 @@
 
 (define_insn "*call_value_0"
   [(set (match_operand 0 "" "")
-	(call (match_operand:QI 1 "constant_call_address_operand" "")
+	(call (mem:QI (match_operand:SI 1 "constant_call_address_operand" ""))
 	      (match_operand:SI 2 "" "")))]
   ""
   "*
@@ -11092,7 +11089,7 @@
 
 (define_insn "*call_value_1"
   [(set (match_operand 0 "" "")
-	(call (match_operand:QI 1 "call_insn_operand" "m")
+	(call (mem:QI (match_operand:SI 1 "call_insn_operand" "rsm"))
 	      (match_operand:SI 2 "" "")))]
   ""
   "*
@@ -11104,7 +11101,6 @@
       else
 	return \"call\\t%P1\";
     }
-  operands[1] = XEXP (operands[1], 0);
   if (SIBLING_CALL_P (insn))
     return \"jmp\\t%*%1\";
   else
