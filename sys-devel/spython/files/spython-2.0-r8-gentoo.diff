diff -urP Python-2.0.orig/Makefile.in Python-2.0/Makefile.in
--- Python-2.0.orig/Makefile.in	Mon Oct 16 17:50:06 2000
+++ Python-2.0/Makefile.in	Wed Jul 11 20:03:34 2001
@@ -73,11 +73,11 @@
 SCRIPTDIR=	$(prefix)/lib
 
 # Detailed destination directories
-BINLIBDEST=	$(LIBDIR)/python$(VERSION)
-LIBDEST=	$(SCRIPTDIR)/python$(VERSION)
-INCLUDEPY=	$(INCLUDEDIR)/python$(VERSION)
-CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python$(VERSION)
-LIBP=		$(LIBDIR)/python$(VERSION)
+BINLIBDEST=	$(LIBDIR)/spython$(VERSION)
+LIBDEST=	$(SCRIPTDIR)/spython$(VERSION)
+INCLUDEPY=	$(INCLUDEDIR)/spython$(VERSION)
+CONFINCLUDEPY=	$(CONFINCLUDEDIR)/spython$(VERSION)
+LIBP=		$(LIBDIR)/spython$(VERSION)
 
 # Symbols used for using shared libraries
 SO=		@SO@
@@ -129,14 +129,14 @@
 # Compilation flags for getbuildinfo.c only
 CFLAGS=		$(OPT) -I. $(DEFS)
 
-LIBRARY=	libpython$(VERSION).a
+LIBRARY=	libspython$(VERSION).a
 LDLIBRARY=      @LDLIBRARY@
 
 # Default target
-all:		$(LIBRARY) python$(EXE) sharedmods
+all:		$(LIBRARY) spython$(EXE) sharedmods
 
 # Build the interpreter
-python$(EXE):		$(LIBRARY) buildno Modules/python.o
+spython$(EXE):		$(LIBRARY) buildno Modules/python.o
 		expr `cat buildno` + 1 >buildno1
 		mv -f buildno1 buildno
 		$(CC) -c $(CFLAGS) -DBUILD=`cat buildno` \
@@ -155,7 +155,7 @@
 		echo 0 >buildno
 
 # Build the shared modules
-sharedmods: 	python$(EXE)
+sharedmods: 	spython$(EXE)
 		cd Modules;  $(MAKE) OPT="$(OPT)" VERSION="$(VERSION)" \
 			prefix="$(prefix)" exec_prefix="$(exec_prefix)" \
 			sharedmods
@@ -169,7 +169,7 @@
 			(cd $$i; $(MAKE) VERSION="$(VERSION)" add2lib); done
 
 # This rule is only here for DG/UX and BeOS!!!
-libpython$(VERSION).so:	$(LIBRARY)
+libspython$(VERSION).so:	$(LIBRARY)
 		case `uname -s | tr -d '/ ' | tr '[A-Z]' '[a-z]'` in \
 		*dgux*) \
 		    test -d dgux || mkdir dgux; \
@@ -182,7 +182,7 @@
 		esac
 
 # This rule is here for OPENSTEP/Rhapsody/MacOSX
-libpython$(VERSION).dylib: $(LIBRARY)
+libspython$(VERSION).dylib: $(LIBRARY)
 		libtool -o $(LDLIBRARY) -dynamic $(OTHER_LIBTOOL_OPT) $(LIBRARY) -framework System @LIBTOOL_CRUFT@ 
 
 $(SUBDIRS):	Makefiles
@@ -210,7 +210,7 @@
 # Test the interpreter (twice, once without .pyc files, once with)
 TESTOPTS=	-l
 TESTPROG=	$(srcdir)/Lib/test/regrtest.py
-TESTPYTHON=	./python$(EXE) -tt
+TESTPYTHON=	./spython$(EXE) -tt
 test:		all
 		-rm -f $(srcdir)/Lib/test/*.py[co]
 		-PYTHONPATH= $(TESTPYTHON) $(TESTPROG) $(TESTOPTS)
@@ -224,15 +224,15 @@
 
 # Install the interpreter (by creating a hard link to python$(VERSION))
 bininstall:	altbininstall
-		-if test -f $(BINDIR)/python$(EXE); \
-		then rm -f $(BINDIR)/python$(EXE); \
+		-if test -f $(BINDIR)/spython$(EXE); \
+		then rm -f $(BINDIR)/spython$(EXE); \
 		else true; \
 		fi
-		(cd $(BINDIR); $(LN) python$(VERSION)$(EXE) python$(EXE))
+		(cd $(BINDIR); $(LN) spython$(VERSION)$(EXE) spython$(EXE))
 
 # Install the interpreter with $(VERSION) affixed
 # This goes into $(exec_prefix)
-altbininstall:	python$(EXE)
+altbininstall:	spython$(EXE)
 		@for i in $(BINDIR); \
 		do \
 			if test ! -d $$i; then \
@@ -242,9 +242,9 @@
 			else	true; \
 			fi; \
 		done
-		$(INSTALL_PROGRAM) python$(EXE) $(BINDIR)/python$(VERSION)$(EXE)
-		if test -f libpython$(VERSION).so; then \
-			$(INSTALL_DATA) libpython$(VERSION).so $(LIBDIR); \
+		$(INSTALL_PROGRAM) spython$(EXE) $(BINDIR)/spython$(VERSION)$(EXE)
+		if test -f libspython$(VERSION).so; then \
+			$(INSTALL_DATA) libspython$(VERSION).so $(LIBDIR)/libspython$(VERSION).so; \
 		else	true; \
 		fi
 
@@ -260,7 +260,7 @@
 			fi; \
 		done
 		$(INSTALL_DATA) $(srcdir)/Misc/python.man \
-			$(MANDIR)/man1/python.1
+			$(MANDIR)/man1/spython.1
 
 # Install the library
 PLATDIR=	plat-$(MACHDEP)
@@ -268,7 +268,7 @@
 XMLLIBSUBDIRS=  xml xml/dom xml/parsers xml/sax
 LIBSUBDIRS=	lib-old lib-tk site-packages test test/output encodings \
 		distutils distutils/command $(XMLLIBSUBDIRS) curses $(MACHDEPS)
-libinstall:	python $(srcdir)/Lib/$(PLATDIR)
+libinstall:	spython $(srcdir)/Lib/$(PLATDIR)
 		@for i in $(SCRIPTDIR) $(LIBDEST); \
 		do \
 			if test ! -d $$i; then \
@@ -326,9 +326,9 @@
 		done
 		$(INSTALL_DATA) $(srcdir)/LICENSE $(LIBDEST)/LICENSE.txt
 		PYTHONPATH=$(LIBDEST) \
-			./python$(EXE) -tt $(LIBDEST)/compileall.py $(LIBDEST)
+			./spython$(EXE) -tt $(LIBDEST)/compileall.py $(LIBDEST)
 		PYTHONPATH=$(LIBDEST) \
-			./python$(EXE) -O $(LIBDEST)/compileall.py $(LIBDEST)
+			./spython$(EXE) -O $(LIBDEST)/compileall.py $(LIBDEST)
 
 # Create the PLATDIR source directory, if one wasn't distributed..
 $(srcdir)/Lib/$(PLATDIR):
@@ -457,7 +457,7 @@
 		else $(SHELL) $(srcdir)/configure $(WITH); \
 		fi
 
-.PRECIOUS:	config.status python$(EXE)
+.PRECIOUS:	config.status spython$(EXE)
 
 # Rerun configure with the same options as it was run last time,
 # provided the config.status script exists
@@ -509,7 +509,7 @@
 		done
 
 localclobber:	localclean
-		-rm -f tags TAGS python$(EXE) $(LIBRARY) $(LDLIBRARY) *.o
+		-rm -f tags TAGS spython$(EXE) $(LIBRARY) $(LDLIBRARY) *.o
 		-rm -f config.log config.cache config.h
 
 clobber:	localclobber
diff -urP Python-2.0.orig/Misc/python.man Python-2.0/Misc/python.man
--- Python-2.0.orig/Misc/python.man	Mon Oct 16 17:49:35 2000
+++ Python-2.0/Misc/python.man	Wed Jul 11 20:26:32 2001
@@ -1,8 +1,8 @@
-.TH PYTHON "1" "5 September, 2000"
+.TH SPYTHON "1" "5 September, 2000"
 .SH NAME
-python \- an interpreted, interactive, object-oriented programming language
+spython \- an interpreted, interactive, object-oriented programming language (statically linked)
 .SH SYNOPSIS
-.B python
+.B spython
 [
 .B \-d
 ]
@@ -179,20 +179,20 @@
 conventions; ${prefix} and ${exec_prefix} are installation-dependent
 and should be interpreted as for GNU software; they may be the same.
 The default for both is \fI/usr/local\fP.
-.IP \fI${exec_prefix}/bin/python\fP
+.IP \fI${exec_prefix}/bin/spython\fP
 Recommended location of the interpreter.
 .PP
-.I ${prefix}/lib/python<version>
+.I ${prefix}/lib/spython<version>
 .br
-.I ${exec_prefix}/lib/python<version>
+.I ${exec_prefix}/lib/spython<version>
 .RS
 Recommended locations of the directories containing the standard
 modules.
 .RE
 .PP
-.I ${prefix}/include/python<version>
+.I ${prefix}/include/spython<version>
 .br
-.I ${exec_prefix}/include/python<version>
+.I ${exec_prefix}/include/spython<version>
 .RS
 Recommended locations of the directories containing the include files
 needed for developing Python extensions and embedding the
@@ -204,8 +204,8 @@
 .SH ENVIRONMENT VARIABLES
 .IP PYTHONHOME
 Change the location of the standard Python libraries.  By default, the
-libraries are searched in ${prefix}/lib/python<version> and
-${exec_prefix}/lib/python<version>, where ${prefix} and ${exec_prefix}
+libraries are searched in ${prefix}/lib/spython<version> and
+${exec_prefix}/lib/spython<version>, where ${prefix} and ${exec_prefix}
 are installation-dependent directories, both defaulting to
 \fI/usr/local\fP.  When $PYTHONHOME is set to a single directory, its value
 replaces both ${prefix} and ${exec_prefix}.  To specify different values
@@ -216,7 +216,7 @@
 pathnames separated by colons.
 Non-existant directories are silently ignored.
 The default search path is installation dependent, but generally
-begins with ${prefix}/lib/python<version> (see PYTHONHOME above).
+begins with ${prefix}/lib/spython<version> (see PYTHONHOME above).
 The default search path is always appended to $PYTHONPATH.
 If a script argument is given, the directory containing the script is
 inserted in the path in front of $PYTHONPATH.
diff -urP Python-2.0.orig/Modules/Makefile.pre.in Python-2.0/Modules/Makefile.pre.in
--- Python-2.0.orig/Modules/Makefile.pre.in	Mon Oct 16 17:49:33 2000
+++ Python-2.0/Modules/Makefile.pre.in	Wed Jul 11 19:43:14 2001
@@ -52,10 +52,10 @@
 SCRIPTDIR=	$(prefix)/lib
 
 # Detailed destination directories
-BINLIBDEST=	$(LIBDIR)/python$(VERSION)
-LIBDEST=	$(SCRIPTDIR)/python$(VERSION)
-INCLUDEPY=	$(INCLUDEDIR)/python$(VERSION)
-LIBP=		$(LIBDIR)/python$(VERSION)
+BINLIBDEST=	$(LIBDIR)/spython$(VERSION)
+LIBDEST=	$(SCRIPTDIR)/spython$(VERSION)
+INCLUDEPY=	$(INCLUDEDIR)/spython$(VERSION)
+LIBP=		$(LIBDIR)/spython$(VERSION)
 
 # Symbols used for using shared libraries
 SO=		@SO@
@@ -103,7 +103,7 @@
 
 SYSLIBS=	$(LIBM) $(LIBC)
 
-LIBRARY=	../libpython$(VERSION).a
+LIBRARY=	../libspython$(VERSION).a
 LDLIBRARY=	../@LDLIBRARY@
 
 # === Rules ===
@@ -124,11 +124,11 @@
 # This target is used by the master Makefile to link the final binary.
 link:		$(MAINOBJ)
 		$(LINKCC) $(LDFLAGS) $(LINKFORSHARED) $(MAINOBJ) \
-		  $(LDLIBRARY) $(MODLIBS) $(LIBS) $(SYSLIBS) -o python$(EXE) $(LDLAST)
-		mv python$(EXE) ../python$(EXE)
+		  $(LDLIBRARY) $(MODLIBS) $(LIBS) $(SYSLIBS) -o spython$(EXE) $(LDLAST)
+		mv spython$(EXE) ../spython$(EXE)
 
 clean:
-		-rm -f *.o python$(EXE) core *~ [@,#]* *.old *.orig *.rej
+		-rm -f *.o spython$(EXE) core *~ [@,#]* *.old *.orig *.rej
 		-rm -f add2lib hassignal
 
 clobber:	clean
@@ -183,10 +183,10 @@
 		$(MKDEP) $(CFLAGS) `echo $(OBJS) | tr ' ' '\012' | \
 					sed 's|\(.*\)\.o|$(srcdir)/\1.c|'`
 
-.PRECIOUS:	../python$(EXE)
+.PRECIOUS:	../spython$(EXE)
 
 glmodule.c:	$(srcdir)/cgen.py $(srcdir)/cstubs
-		python $(srcdir)/cgen.py <$(srcdir)/cstubs >glmodule.c
+		spython $(srcdir)/cgen.py <$(srcdir)/cstubs >glmodule.c
 
 almodule.o: almodule.c
 arraymodule.o: arraymodule.c
diff -urP Python-2.0.orig/Modules/getpath.c Python-2.0/Modules/getpath.c
--- Python-2.0.orig/Modules/getpath.c	Mon Oct 16 17:49:33 2000
+++ Python-2.0/Modules/getpath.c	Wed Jul 11 19:41:18 2001
@@ -115,8 +115,8 @@
 
 #ifndef PYTHONPATH
 /* I know this isn't K&R C, but the Makefile specifies it anyway */
-#define PYTHONPATH PREFIX "/lib/python" VERSION ":" \
-	      EXEC_PREFIX "/lib/python" VERSION "/lib-dynload"
+#define PYTHONPATH PREFIX "/lib/spython" VERSION ":" \
+	      EXEC_PREFIX "/lib/spython" VERSION "/lib-dynload"
 #endif
 
 #ifndef LANDMARK
@@ -127,7 +127,7 @@
 static char exec_prefix[MAXPATHLEN+1];
 static char progpath[MAXPATHLEN+1];
 static char *module_search_path = NULL;
-static char lib_python[] = "lib/python" VERSION;
+static char lib_python[] = "lib/spython" VERSION;
 
 static void
 reduce(char *dir)
diff -urP Python-2.0.orig/Objects/Makefile.in Python-2.0/Objects/Makefile.in
--- Python-2.0.orig/Objects/Makefile.in	Mon Oct 16 17:49:24 2000
+++ Python-2.0/Objects/Makefile.in	Wed Jul 11 19:37:39 2001
@@ -48,7 +48,7 @@
 		tupleobject.c typeobject.c \
 		unicodeobject.c unicodectype.c
 
-LIBRARY=	../libpython$(VERSION).a
+LIBRARY=	../libspython$(VERSION).a
 
 # === Rules ===
 
diff -urP Python-2.0.orig/Parser/Makefile.in Python-2.0/Parser/Makefile.in
--- Python-2.0.orig/Parser/Makefile.in	Mon Oct 16 17:49:29 2000
+++ Python-2.0/Parser/Makefile.in	Wed Jul 11 19:29:23 2001
@@ -48,7 +48,7 @@
 
 PGEN=		pgen
 
-LIBRARY=	../libpython$(VERSION).a
+LIBRARY=	../libspython$(VERSION).a
 
 # === Rules ===
 
diff -urP Python-2.0.orig/Parser/intrcheck.c Python-2.0/Parser/intrcheck.c
--- Python-2.0.orig/Parser/intrcheck.c	Mon Oct 16 17:49:30 2000
+++ Python-2.0/Parser/intrcheck.c	Wed Jul 11 19:31:05 2001
@@ -132,7 +132,7 @@
 {
 	extern void Py_Exit(int);
 	static char message[] =
-"python: to interrupt a truly hanging Python program, interrupt once more.\n";
+"spython: to interrupt a truly hanging Python program, interrupt once more.\n";
 	switch (interrupted++) {
 	case 0:
 		break;
diff -urP Python-2.0.orig/Python/Makefile.in Python-2.0/Python/Makefile.in
--- Python-2.0.orig/Python/Makefile.in	Mon Oct 16 17:49:29 2000
+++ Python-2.0/Python/Makefile.in	Wed Jul 11 19:29:55 2001
@@ -51,7 +51,7 @@
 		$(LIBOBJS)
 OBJS=		$(AROBJS) sigcheck.o
 
-LIBRARY=	../libpython$(VERSION).a
+LIBRARY=	../libspython$(VERSION).a
 
 
 # === Rules ===
diff -urP Python-2.0.orig/Python/dynload_aix.c Python-2.0/Python/dynload_aix.c
--- Python-2.0.orig/Python/dynload_aix.c	Mon Oct 16 17:49:29 2000
+++ Python-2.0/Python/dynload_aix.c	Wed Jul 11 19:32:35 2001
@@ -69,7 +69,7 @@
 	prevmodptr = NULL;
 	do {
 		if (strstr(progname, ldiptr->ldinfo_filename) == NULL &&
-		    strstr(ldiptr->ldinfo_filename, "python") == NULL) {
+		    strstr(ldiptr->ldinfo_filename, "spython") == NULL) {
 			/*
 			-- Extract only the modules belonging to the main
 			-- executable + those containing "python" as a
diff -urP Python-2.0.orig/Python/dynload_win.c Python-2.0/Python/dynload_win.c
--- Python-2.0.orig/Python/dynload_win.c	Mon Oct 16 17:49:29 2000
+++ Python-2.0/Python/dynload_win.c	Wed Jul 11 19:33:00 2001
@@ -124,7 +124,7 @@
 		while (DWORD_AT(import_data)) {
 			import_name = dllbase + DWORD_AT(import_data+12);
 			if (strlen(import_name) >= 6 &&
-			    !strncmp(import_name,"python",6)) {
+			    !strncmp(import_name,"spython",6)) {
 				char *pch;
 
 				/* Ensure python prefix is followed only
@@ -228,7 +228,7 @@
 		} else {
 			char buffer[256];
 
-			sprintf(buffer,"python%d%d.dll",
+			sprintf(buffer,"spython%d%d.dll",
 				PY_MAJOR_VERSION,PY_MINOR_VERSION);
 			import_python = GetPythonImport(hDLL);
 
diff -urP Python-2.0.orig/Python/pythonrun.c Python-2.0/Python/pythonrun.c
--- Python-2.0.orig/Python/pythonrun.c	Mon Oct 16 17:49:29 2000
+++ Python-2.0/Python/pythonrun.c	Wed Jul 11 19:49:19 2001
@@ -360,7 +360,7 @@
 	PyInterpreterState_Delete(interp);
 }
 
-static char *progname = "python";
+static char *progname = "spython";
 
 void
 Py_SetProgramName(char *pn)
@@ -375,7 +375,7 @@
 	return progname;
 }
 
-static char *default_home = NULL;
+static char *default_home = "/usr";
 
 void
 Py_SetPythonHome(char *home)
@@ -568,7 +568,7 @@
 		if (closeit)
 			fclose(fp);
 		if( (fp = fopen(filename, "rb")) == NULL ) {
-			fprintf(stderr, "python: Can't reopen .pyc file\n");
+			fprintf(stderr, "spython: Can't reopen .pyc file\n");
 			return -1;
 		}
 		/* Turn on optimization if a .pyo file is given */
diff -urP Python-2.0.orig/Python/thread_beos.h Python-2.0/Python/thread_beos.h
--- Python-2.0.orig/Python/thread_beos.h	Mon Oct 16 17:49:29 2000
+++ Python-2.0/Python/thread_beos.h	Wed Jul 11 19:31:39 2001
@@ -123,7 +123,7 @@
 
 	/* We are so very thread-safe... */
 	this_thread = atomic_add( &thread_count, 1 );
-	sprintf( name, "python thread (%d)", this_thread );
+	sprintf( name, "spython thread (%d)", this_thread );
 
 	tid = spawn_thread( (thread_func)func, name,
 	                    B_NORMAL_PRIORITY, arg );
@@ -222,7 +222,7 @@
 	}
 
 	this_lock = atomic_add( &lock_count, 1 );
-	sprintf( name, "python lock (%d)", this_lock );
+	sprintf( name, "spython lock (%d)", this_lock );
 
 	retval = benaphore_create( name, lock );
 	if( retval != EOK ) {
@@ -298,7 +298,7 @@
 	
 	dprintf(("PyThread_allocate_sema called\n"));
 
-	sema = create_sem( value, "python semaphore" );
+	sema = create_sem( value, "spython semaphore" );
 	if( sema < B_NO_ERROR ) {
 		/* TODO: that's bad, raise an exception */
 		return 0;
diff -urP Python-2.0.orig/configure.in Python-2.0/configure.in
--- Python-2.0.orig/configure.in	Mon Oct 16 17:50:06 2000
+++ Python-2.0/configure.in	Wed Jul 11 19:26:15 2001
@@ -251,17 +251,17 @@
 # a bundle using libtool.
 if test "$with_next_framework"
 then
-  LDLIBRARY='libpython$(VERSION).dylib'
+  LDLIBRARY='libspython$(VERSION).dylib'
 fi  
 
 # DG/UX requires some fancy ld contortions to produce a .so from an .a
 case $MACHDEP in
 dguxR4)
-      LDLIBRARY='libpython$(VERSION).so'
+      LDLIBRARY='libspython$(VERSION).so'
       OPT="$OPT -pic"
       ;;
 beos*)
-      LDLIBRARY='libpython$(VERSION).so'
+      LDLIBRARY='libspython$(VERSION).so'
       ;;
 esac
 AC_MSG_RESULT($LDLIBRARY)
@@ -269,7 +269,7 @@
 # If LDLIBRARY is different from LIBRARY, emit a rule to build it.
 if test -z "$LDLIBRARY"
 then
-  LDLIBRARY='libpython$(VERSION).a'
+  LDLIBRARY='libspython$(VERSION).a'
   MAKE_LDLIBRARY="true"
 else
   MAKE_LDLIBRARY='$(MAKE) $(LDLIBRARY)'
@@ -558,7 +558,7 @@
 then
 	case $ac_sys_system/$ac_sys_release in
 	AIX*) LDSHARED="\$(srcdir)/ld_so_aix \$(CC)";;
-	BeOS*) LDSHARED="\$(srcdir)/../BeOS/linkmodule -L.. -lpython\$(VERSION)";;
+	BeOS*) LDSHARED="\$(srcdir)/../BeOS/linkmodule -L.. -lspython\$(VERSION)";;
 	IRIX/5*) LDSHARED="ld -shared";;
 	IRIX*/6*) LDSHARED="ld ${SGI_ABI} -shared -all";;
 	SunOS/4*) LDSHARED="ld";;
