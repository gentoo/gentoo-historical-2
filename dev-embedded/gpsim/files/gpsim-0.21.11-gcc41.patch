Index: gpsim-0.21.11/cli/ui_gpsim.cc
===================================================================
--- gpsim-0.21.11.orig/cli/ui_gpsim.cc
+++ gpsim-0.21.11/cli/ui_gpsim.cc
@@ -34,7 +34,7 @@ public:
   CGpsimUserInterface(const char *paStrings[]);
   virtual ~CGpsimUserInterface() {}
 
-  void CGpsimUserInterface::SetStreams(FILE *in, FILE *out);
+  void SetStreams(FILE *in, FILE *out);
   virtual ISimConsole &GetConsole();
   virtual void DisplayMessage(unsigned int uStringID, ...);
   virtual void DisplayMessage(FILE * pOut, unsigned int uStringID, ...);
Index: gpsim-0.21.11/src/p12x.h
===================================================================
--- gpsim-0.21.11.orig/src/p12x.h
+++ gpsim-0.21.11/src/p12x.h
@@ -108,7 +108,7 @@ class P12CE518 : public P12C508
 
   virtual PROCESSOR_TYPE isa(void){return _P12CE518_;};
   virtual void tris_instruction(unsigned int tris_register);
-  virtual void P12CE518::set_eeprom(I2C_EE *e);
+  virtual void set_eeprom(I2C_EE *e);
 
   P12CE518(void);
   static Processor *construct(void);
Index: gpsim-0.21.11/src/value.h
===================================================================
--- gpsim-0.21.11.orig/src/value.h
+++ gpsim-0.21.11/src/value.h
@@ -290,7 +290,7 @@ public:
 
   bool getVal() { return value; }
 
-  static Boolean* Boolean::typeCheck(Value* val, string valDesc);
+  static Boolean* typeCheck(Value* val, string valDesc);
   virtual bool compare(ComparisonOperator *compOp, Value *rvalue);
 
   virtual Value *copy() { return new Boolean(value); }
@@ -353,9 +353,9 @@ public:
   virtual char *toString(char *, int len);
   virtual char *toBitStr(char *, int len);
 
-  static Integer* Integer::typeCheck(Value* val, string valDesc);
-  static Integer* Integer::assertValid(Value* val, string valDesc, gint64 valMin);
-  static Integer* Integer::assertValid(Value* val, string valDesc, gint64 valMin, gint64 valMax);
+  static Integer* typeCheck(Value* val, string valDesc);
+  static Integer* assertValid(Value* val, string valDesc, gint64 valMin);
+  static Integer* assertValid(Value* val, string valDesc, gint64 valMin, gint64 valMax);
   virtual bool compare(ComparisonOperator *compOp, Value *rvalue);
 
   inline operator gint64() {
@@ -498,7 +498,7 @@ public:
   /// copy the object value to a user char array
   virtual char *toString(char *, int len);
 
-  static AbstractRange* AbstractRange::typeCheck(Value* val, string valDesc);
+  static AbstractRange* typeCheck(Value* val, string valDesc);
   virtual bool compare(ComparisonOperator *compOp, Value *rvalue);
 
 private:
