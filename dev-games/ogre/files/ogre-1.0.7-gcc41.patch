--- ./ogrenew/OgreMain/include/OgreEntity.h.old	2005-11-16 21:39:05.000000000 +0100
+++ ./ogrenew/OgreMain/include/OgreEntity.h	2006-01-28 15:10:57.000000000 +0100
@@ -568,7 +568,7 @@
 	
         /** Stops sharing the SkeletonInstance with other entities.
         */
-        void Entity::stopSharingSkeletonInstance();
+        void stopSharingSkeletonInstance();
 
 
         /**

--- ./ogrenew/OgreMain/include/OgreHardwareOcclusionQuery.h.old	2005-08-20 01:47:32.000000000 +0200
+++ ./ogrenew/OgreMain/include/OgreHardwareOcclusionQuery.h	2006-01-28 15:18:38.000000000 +0100
@@ -113,7 +113,7 @@
 	  * Lets you know when query is done, or still be processed by the Hardware
 	  * @return true if query isn't finished.
 	  */
-	 virtual bool HardwareOcclusionQuery::isStillOutstanding(void) = 0; 
+	 virtual bool isStillOutstanding(void) = 0; 
 	/**
 	  *   
 	  * @Remarks This function allows you to set how often the hardware occlusion really are sent to the driver

--- ./ogrenew/OgreMain/include/OgreImage.h.old	2005-04-06 15:30:43.000000000 +0200
+++ ./ogrenew/OgreMain/include/OgreImage.h	2006-01-28 14:56:54.000000000 +0100
@@ -136,7 +136,7 @@
 			@remarks 
 				The size of the buffer must be numFaces*PixelUtil::getMemorySize(width, height, depth, format)
          */
-		Image& Image::loadDynamicImage( uchar* pData, size_t uWidth, size_t uHeight, 
+		Image& loadDynamicImage( uchar* pData, size_t uWidth, size_t uHeight, 
 							size_t depth,
 							 PixelFormat eFormat, bool autoDelete = false, 
 							 size_t numFaces = 1, size_t numMipMaps = 0);

--- ./ogrenew/PlugIns/OctreeSceneManager/include/OgreOctreeSceneManager.h.old	2005-02-04 18:51:24.000000000 +0100
+++ ./ogrenew/PlugIns/OctreeSceneManager/include/OgreOctreeSceneManager.h	2006-01-28 15:30:05.000000000 +0100
@@ -193,8 +193,8 @@
     /** Overridden from SceneManager */
     void clearScene(void);
 
-    AxisAlignedBoxSceneQuery* OctreeSceneManager::createAABBQuery(const AxisAlignedBox& box, unsigned long mask);
-    SphereSceneQuery* OctreeSceneManager::createSphereQuery(const Sphere& sphere, unsigned long mask);
+    AxisAlignedBoxSceneQuery* createAABBQuery(const AxisAlignedBox& box, unsigned long mask);
+    SphereSceneQuery* createSphereQuery(const Sphere& sphere, unsigned long mask);
     PlaneBoundedVolumeListSceneQuery* createPlaneBoundedVolumeQuery(const PlaneBoundedVolumeList& volumes, unsigned long mask);
     RaySceneQuery* createRayQuery(const Ray& ray, unsigned long mask);
     IntersectionSceneQuery* createIntersectionQuery(unsigned long mask);

--- ./ogrenew/Tools/XMLConverter/include/tinyxml.h.old	2003-09-11 00:48:29.000000000 +0200
+++ ./ogrenew/Tools/XMLConverter/include/tinyxml.h	2006-01-28 15:42:29.000000000 +0100
@@ -790,7 +790,7 @@
 #endif
 
 	/// Construct.
-	TiXmlDeclaration::TiXmlDeclaration( const char * _version,
+	TiXmlDeclaration( const char * _version,
 										const char * _encoding,
 										const char * _standalone );
 
