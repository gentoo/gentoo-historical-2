--- src/matrix.cpp
+++ src/matrix.cpp
@@ -5,7 +5,7 @@
 #include "matrix.h"
 #include <stdlib.h>
 #ifndef NO_DEBUG
-#include <iostream.h>
+#include <iostream>
 #endif
 
 Matrix::Matrix(int s)
@@ -78,60 +78,60 @@
 	
 	int i, j;
 	
-	cout << "\n  ";
+	std::cout << "\n  ";
 	for (i=0; i<size; i++)
-		cout << (i+1)%10 << " ";
-	cout << endl;
+		std::cout << (i+1)%10 << " ";
+	std::cout << endl;
 	
 	for (i=0; i<size; i++)
 	{
-		cout << (i+1)%10 << " ";
+		std::cout << (i+1)%10 << " ";
 		for (j=0; j<size; j++)
 		{
 #if 1
 			switch (abs(matrix[j][i]))
 			{
 			case stoneNone:
-			case stoneErase: cout << ". "; break;
-			case stoneBlack: cout << "B "; break;
-			case stoneWhite: cout << "W "; break;
-			case markSquare*10: cout << "[ "; break;
-			case markCircle*10: cout << "O "; break;
-			case markTriangle*10: cout << "T "; break;
-			case markCross*10: cout << "X "; break;
-			case markText*10: cout << "A "; break;
-			case markNumber*10: cout << "1 "; break;
-			case markSquare*10+stoneBlack: cout << "S "; break;
-			case markCircle*10+stoneBlack: cout << "C "; break;
-			case markTriangle*10+stoneBlack: cout << "D "; break;
-			case markCross*10+stoneBlack: cout << "R "; break;
-			case markText*10+stoneBlack: cout << "A "; break;
-			case markNumber*10+stoneBlack: cout << "N "; break;
-			case markSquare*10+stoneWhite: cout << "s "; break;
-			case markCircle*10+stoneWhite: cout << "c "; break;
-			case markTriangle*10+stoneWhite: cout << "d "; break;
-			case markCross*10+stoneWhite: cout << "r "; break;
-			case markText*10+stoneWhite: cout << "a "; break;
-			case markNumber*10+stoneWhite: cout << "n "; break;
-			default: cout << "? ";
+			case stoneErase: std::cout << ". "; break;
+			case stoneBlack: std::cout << "B "; break;
+			case stoneWhite: std::cout << "W "; break;
+			case markSquare*10: std::cout << "[ "; break;
+			case markCircle*10: std::cout << "O "; break;
+			case markTriangle*10: std::cout << "T "; break;
+			case markCross*10: std::cout << "X "; break;
+			case markText*10: std::cout << "A "; break;
+			case markNumber*10: std::cout << "1 "; break;
+			case markSquare*10+stoneBlack: std::cout << "S "; break;
+			case markCircle*10+stoneBlack: std::cout << "C "; break;
+			case markTriangle*10+stoneBlack: std::cout << "D "; break;
+			case markCross*10+stoneBlack: std::cout << "R "; break;
+			case markText*10+stoneBlack: std::cout << "A "; break;
+			case markNumber*10+stoneBlack: std::cout << "N "; break;
+			case markSquare*10+stoneWhite: std::cout << "s "; break;
+			case markCircle*10+stoneWhite: std::cout << "c "; break;
+			case markTriangle*10+stoneWhite: std::cout << "d "; break;
+			case markCross*10+stoneWhite: std::cout << "r "; break;
+			case markText*10+stoneWhite: std::cout << "a "; break;
+			case markNumber*10+stoneWhite: std::cout << "n "; break;
+			default: std::cout << "? ";
 			}
 #else
-			cout << matrix[j][i] << " ";
+			std::cout << matrix[j][i] << " ";
 #endif
 		}
-		cout << (i+1)%10 << endl;
+		std::cout << (i+1)%10 << endl;
 	}
 	
-	cout << "  ";
+	std::cout << "  ";
 	for (i=0; i<size; i++)
-		cout << (i+1)%10 << " ";
-	cout << endl;
+		std::cout << (i+1)%10 << " ";
+	std::cout << endl;
 	
 	if (markTexts != NULL && !markTexts->isEmpty())
 	{
-		cout << markTexts->count() << " mark texts in the storage.\n";
+		std::cout << markTexts->count() << " mark texts in the storage.\n";
 		for (QStringList::Iterator it=markTexts->begin(); it != markTexts->end(); ++it)
-			cout << (QString)(*it) << endl;
+			std::cout << (QString)(*it) << endl;
 	}
 }
 #endif
--- src/tree.cpp
+++ src/tree.cpp
@@ -5,7 +5,6 @@
 #include "tree.h"
 #include "move.h"
 #include "qgo.h"
-#include <iostream.h>
 #include <qptrstack.h>
 
 Tree::Tree(int board_size)
