--- /src/protocols/novell/nmcontact.c	2004/04/17 18:29:20	1.2
+++ /src/protocols/novell/nmcontact.c	2004/04/23 06:14:15	1.3
@@ -701,11 +701,11 @@
 void
 nm_folder_remove_contact(NMFolder * folder, NMContact * contact)
 {
+	GSList *node = folder->contacts;
+
 	if (folder == NULL || contact == NULL)
 		return;
 
-	GSList *node = folder->contacts;
-
 	while (node) {
 		if (contact->id == ((NMContact *) (node->data))->id) {
 			folder->contacts = g_slist_remove(folder->contacts, node->data);
--- /src/protocols/novell/nmuser.c	21 Apr 2004 21:01:16 -0000	1.3
+++ /src/protocols/novell/nmuser.c	23 Apr 2004 09:13:40 -0000
@@ -50,10 +50,12 @@ NMUser *
 nm_initialize_user(const char *name, const char *server_addr,
 				   int port, gpointer data, nm_event_cb event_callback)
 {
+	NMUser *user;
+	
 	if (name == NULL || server_addr == NULL || event_callback == NULL)
 		return NULL;
 
-	NMUser *user = g_new0(NMUser, 1);
+	user = g_new0(NMUser, 1);
 
 	user->conn = g_new0(NMConn, 1);
 
@@ -1647,11 +1649,12 @@ char *
 nm_typed_to_dotted(const char *typed)
 {
 	unsigned i = 0, j = 0;
+	char *dotted;
 
 	if (typed == NULL)
 		return NULL;
 
-	char *dotted = g_new0(char, strlen(typed));
+	dotted = g_new0(char, strlen(typed));
 
 	do {
 
--- /src/protocols/novell/nmuser.c	21 Apr 2004 21:01:16 -0000	1.3
+++ /src/protocols/novell/nmuser.c	23 Apr 2004 09:28:59 -0000
@@ -1690,6 +1690,7 @@ _update_contact_list(NMUser * user, NMFi
 {
 	NMField *list, *cursor, *locate;
 	gint objid1;
+	gpointer item;
 	NMContact *contact;
 	NMFolder *folder;
 
@@ -1713,8 +1714,7 @@ _update_contact_list(NMUser * user, NMFi
 				nm_locate_field(NM_A_SZ_OBJECT_ID, (NMField *) cursor->value);
 			if (locate != NULL && locate->value != 0) {
 				objid1 = atoi((char *) locate->value);
-				gpointer item =
-					nm_folder_find_item_by_object_id(user->root_folder, objid1);
+				item = nm_folder_find_item_by_object_id(user->root_folder, objid1);
 				if (item != NULL) {
 					if (cursor->method == NMFIELD_METHOD_ADD) {
 						if (g_ascii_strcasecmp(cursor->tag, NM_A_FA_CONTACT) == 0) {
--- /src/protocols/novell/novell.c	22 Apr 2004 01:53:15 -0000	1.9
+++ /src/protocols/novell/novell.c	23 Apr 2004 09:41:23 -0000
@@ -893,6 +893,7 @@ _add_contacts_to_gaim_blist(NMUser * use
 	NMUserRecord *user_record = NULL;
 	NMContact *contact = NULL;
 	GaimBuddy *buddy = NULL;
+	GaimGroup *group = NULL;
 	NMERR_T cnt = 0, i;
 	const char *text = NULL;
 	const char *name = NULL;
@@ -912,7 +913,7 @@ _add_contacts_to_gaim_blist(NMUser * use
 									   nm_contact_get_display_name(contact));
 
 				/* Does the Gaim group exist already? */
-				GaimGroup *group = gaim_find_group(nm_folder_get_name(folder));
+				group = gaim_find_group(nm_folder_get_name(folder));
 
 				if (group == NULL) {
 					group = gaim_group_new(nm_folder_get_name(folder));
--- /src/protocols/novell/novell.c	22 Apr 2004 01:53:15 -0000	1.9
+++ /src/protocols/novell/novell.c	23 Apr 2004 09:56:52 -0000
@@ -2062,6 +2062,7 @@ novell_rename_group(GaimConnection * gc,
 {
 	NMERR_T rc = NM_OK;
 	NMUser *user;
+	NMFolder *folder;
 
 	if (gc == NULL || old_name == NULL || new_name == NULL || tobemoved == NULL) {
 		return;
@@ -2078,7 +2079,7 @@ novell_rename_group(GaimConnection * gc,
 			return;
 		}
 
-		NMFolder *folder = nm_find_folder(user, old_name);
+		folder = nm_find_folder(user, old_name);
 
 		if (folder) {
 			rc = nm_send_rename_folder(user, folder, new_name,
--- /src/gtkrequest.c	Sun Apr 18 09:22:41 2004
+++ /src/gtkrequest.c	Fri Apr 23 13:42:07 2004
@@ -261,6 +261,7 @@
 	GtkWidget *entry;
 	GtkWidget *img;
 	char *label_text;
+	GtkWidget *toolbar;
 
 	data            = g_new0(GaimGtkRequestData, 1);
 	data->type      = GAIM_REQUEST_INPUT;
@@ -338,7 +339,6 @@
 		gtk_widget_set_size_request(sw, 320, 130);
 
 		/* Toolbar */
-		GtkWidget *toolbar;
 		toolbar = gtk_imhtmltoolbar_new();
 		gtk_box_pack_start(GTK_BOX(vbox), toolbar, FALSE, FALSE, 0);
 
--- /src/gtkimhtml.c	Thu Apr 22 19:24:05 2004
+++ /src/gtkimhtml.c	Fri Apr 23 13:40:12 2004
@@ -539,13 +539,14 @@
 #if GTK_CHECK_VERSION(2,2,0)
 static void gtk_imhtml_clipboard_get(GtkClipboard *clipboard, GtkSelectionData *selection_data, guint info, GtkIMHtml *imhtml) {
 	char *text;
+	gboolean primary ;
 	GtkTextIter start, end;
 	GtkTextMark *sel = gtk_text_buffer_get_selection_bound(imhtml->text_buffer);
 	GtkTextMark *ins = gtk_text_buffer_get_insert(imhtml->text_buffer);
 	
 	gtk_text_buffer_get_iter_at_mark(imhtml->text_buffer, &start, sel);
 	gtk_text_buffer_get_iter_at_mark(imhtml->text_buffer, &end, ins);
-	gboolean primary = gtk_widget_get_clipboard(GTK_WIDGET(imhtml), GDK_SELECTION_PRIMARY) == clipboard;
+	primary= gtk_widget_get_clipboard(GTK_WIDGET(imhtml), GDK_SELECTION_PRIMARY) == clipboard;
 
 	if (info == TARGET_HTML) {
 		int len;
