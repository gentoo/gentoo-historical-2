Index: nmevent.c
===================================================================
RCS file: /cvsroot/gaim/gaim/src/protocols/novell/nmevent.c,v
retrieving revision 1.5
retrieving revision 1.6
diff -u -d -p -r1.5 -r1.6
--- nmevent.c	12 Jun 2004 15:13:29 -0000	1.5
+++ nmevent.c	23 Aug 2004 18:55:36 -0000	1.6
@@ -27,6 +27,8 @@
 #include "nmuserrecord.h"
 #include "nmrtf.h"
 
+#define MAX_UINT32 0xFFFFFFFF
+
 struct _NMEvent
 {
 
@@ -147,6 +149,8 @@ handle_receive_message(NMUser * user, NM
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -160,8 +164,9 @@ handle_receive_message(NMUser * user, NM
 	/* Read the message text */
 	if (rc == NM_OK) {
 		rc = nm_read_uint32(conn, &size);
-		if (rc == NM_OK) {
+		if (size == MAX_UINT32)	return NMERR_PROTOCOL;
 
+		if (rc == NM_OK) {
 			msg = g_new0(char, size + 1);
 			rc = nm_read_all(conn, msg, size);
 
@@ -265,6 +270,8 @@ handle_conference_invite(NMUser * user, 
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -273,6 +280,8 @@ handle_conference_invite(NMUser * user, 
 	/* Read the the message */
 	if (rc == NM_OK) {
 		rc = nm_read_uint32(conn, &size);
+		if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 		if (rc == NM_OK) {
 			msg = g_new0(char, size + 1);
 			rc = nm_read_all(conn, msg, size);
@@ -340,6 +349,8 @@ handle_conference_invite_notify(NMUser *
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -390,6 +401,8 @@ handle_conference_reject(NMUser * user, 
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -427,6 +440,8 @@ handle_conference_left(NMUser * user, NM
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -475,6 +490,8 @@ handle_conference_closed(NMUser * user, 
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -513,6 +530,8 @@ handle_conference_joined(NMUser * user, 
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -570,6 +589,8 @@ handle_typing(NMUser * user, NMEvent * e
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);
@@ -611,11 +632,11 @@ handle_status_change(NMUser * user, NMEv
 
 		/* Read the status text */
 		rc = nm_read_uint32(conn, &size);
+		if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 		if (rc == NM_OK) {
-			if (size > 0) {
-				text = g_new0(char, size + 1);
-				rc = nm_read_all(conn, text, size);
-			}
+			text = g_new0(char, size + 1);
+			rc = nm_read_all(conn, text, size);
 		}
 	}
 
@@ -649,6 +670,8 @@ handle_undeliverable_status(NMUser * use
 
 	/* Read the conference guid */
 	rc = nm_read_uint32(conn, &size);
+	if (size == MAX_UINT32)	return NMERR_PROTOCOL;
+
 	if (rc == NM_OK) {
 		guid = g_new0(char, size + 1);
 		rc = nm_read_all(conn, guid, size);

