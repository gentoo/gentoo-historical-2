diff -ru twinkle-1.2-orig/configure.in twinkle-1.2/configure.in
--- twinkle-1.2-orig/configure.in	2008-03-09 19:28:14.000000000 +1100
+++ twinkle-1.2/configure.in	2008-05-01 22:19:00.000000000 +1000
@@ -256,6 +256,10 @@
 		AC_CHECK_HEADER(libzrtpcpp/ZrtpQueue.h, [],
 			[AC_MSG_ERROR([zrtp header files missing])])
 		AC_DEFINE(HAVE_ZRTP, 1, [Define to 1 if you have the <libzrtpcpp> library.])
+		AC_CHECK_HEADER(libzrtpcpp/ZrtpCodes.h,
+			[AC_DEFINE(HAVE_ZRTP_1_1, 1, [Define to 1 if you have the <libzrtpcpp> library version 1.1 or later.])
+			AC_DEFINE(ZRTP_NAMESPACE(x), GnuZrtpCodes::x, [namespace macro required to cause compatiblity beween zrtp 1.1 and previous versions])],
+			[AC_DEFINE(ZRTP_NAMESPACE(x), x, [namespace macro required to cause compatiblity beween zrtp 1.1 and previous versions])])
 		LIBS="-lzrtpcpp $LIBS"
 		echo "LIBS += -lzrtpcpp" >> $QT_INCL_PRO
 		have_zrtp="yes"
diff -ru twinkle-1.2-orig/src/audio/twinkle_zrtp_ui.h twinkle-1.2/src/audio/twinkle_zrtp_ui.h
--- twinkle-1.2-orig/src/audio/twinkle_zrtp_ui.h	2008-02-27 08:10:48.000000000 +1100
+++ twinkle-1.2/src/audio/twinkle_zrtp_ui.h	2008-05-01 22:25:01.000000000 +1000
@@ -30,6 +30,9 @@
 #include <iostream>
 #include <libzrtpcpp/ZrtpQueue.h>
 #include <libzrtpcpp/ZrtpUserCallback.h>
+#ifdef HAVE_ZRTP_1_1
+#include <libzrtpcpp/ZrtpCodes.h>
+#endif
 #include "audio_session.h"
 #include "userintf.h"
 
@@ -44,8 +47,8 @@
         virtual void secureOff();
         virtual void showSAS(std::string sas); 
         virtual void confirmGoClear();
-        virtual void showMessage(MessageSeverity sev, std::string message);
-        virtual void zrtpNegotiationFailed(MessageSeverity severity, std::string msg);
+        virtual void showMessage(ZRTP_NAMESPACE(MessageSeverity) sev, std::string message);
+        virtual void zrtpNegotiationFailed(ZRTP_NAMESPACE(MessageSeverity) severity, std::string msg);
         virtual void zrtpNotSuppOther();
 
     private:
--- twinkle-1.2-orig/src/audio/twinkle_zrtp_ui.cpp	2008-02-27 08:10:50.000000000 +1100
+++ twinkle-1.2/src/audio/twinkle_zrtp_ui.cpp	2008-05-01 22:49:54.000000000 +1000
@@ -32,7 +32,11 @@
 extern t_phone *phone;
 
 TwinkleZrtpUI::TwinkleZrtpUI(ZrtpQueue* queue, t_audio_session* session) :
+#ifdef HAVE_ZRTP_1_1
+            ZrtpUserCallback((const ZrtpUserCallback&) queue), audioSession(session) 
+#else
             ZrtpUserCallback(queue), audioSession(session) 
+#endif
 {}
 
 void TwinkleZrtpUI::secureOn(std::string cipher) {
@@ -96,7 +100,7 @@
 	ui->cb_async_zrtp_confirm_go_clear(lineno);
 }
 
-void TwinkleZrtpUI::showMessage(MessageSeverity sev, std::string message) {
+void TwinkleZrtpUI::showMessage(ZRTP_NAMESPACE(MessageSeverity) sev, std::string message) {
 	t_line *line = audioSession->get_line();
 	int lineno = line->get_line_number();
 	
@@ -106,11 +110,11 @@
 	msg += message;
 	
 	switch (sev) {
-	case Info:
+	case ZRTP_NAMESPACE(Info):
 		log_file->write_report(msg, "TwinkleZrtpUI::showMessage", LOG_NORMAL,
 			LOG_INFO);
 		break;
-	case Warning:
+	case ZRTP_NAMESPACE(Warning):
 		log_file->write_report(msg, "TwinkleZrtpUI::showMessage", LOG_NORMAL,
 			LOG_WARNING);
 		break;
@@ -120,7 +124,7 @@
 	}
 }
 
-void TwinkleZrtpUI::zrtpNegotiationFailed(MessageSeverity severity, std::string msg) {
+void TwinkleZrtpUI::zrtpNegotiationFailed(ZRTP_NAMESPACE(MessageSeverity) severity, std::string msg) {
 	t_line *line = audioSession->get_line();
 	int lineno = line->get_line_number();
 	
@@ -130,11 +134,11 @@
 	m += msg;
 	
 	switch (severity) {
-	case Info:
+	case ZRTP_NAMESPACE(Info):
 		log_file->write_report(m, "TwinkleZrtpUI::zrtpNegotiationFailed", LOG_NORMAL,
 			LOG_INFO);
 		break;
-	case Warning:
+	case ZRTP_NAMESPACE(Warning):
 		log_file->write_report(m, "TwinkleZrtpUI::zrtpNegotiationFailed", LOG_NORMAL,
 			LOG_WARNING);
 		break;
