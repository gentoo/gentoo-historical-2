diff -Nur saods9.orig/saotk/fitsy++/Makefile saods9/saotk/fitsy++/Makefile
--- saods9.orig/saotk/fitsy++/Makefile	2009-11-04 02:32:17.000000000 +0000
+++ saods9/saotk/fitsy++/Makefile	2009-11-04 06:26:59.000000000 +0000
@@ -3,8 +3,8 @@
 
 CXXFLAGS = $(CXXOPT) -I. -I.. -I../vector -I../util \
 	-I../../include -I$(X11INCLUDE) \
-	-I../../$(FUNTOOLSDIR)/filter -I../../$(FUNTOOLSDIR)/fitsy \
-	-I../../$(FUNTOOLSDIR)/util
+	-I/usr/include/funtools/filter -I/usr/include/funtools/fitsy \
+	-I/usr/include/funtools/util -I/usr/include/wcs
 
 SS	= \
 	alloc.C \
diff -Nur saods9.orig/saotk/frame/fitsimage.C saods9/saotk/frame/fitsimage.C
--- saods9.orig/saotk/frame/fitsimage.C	2009-11-04 02:32:17.000000000 +0000
+++ saods9/saotk/frame/fitsimage.C	2009-11-04 06:26:59.000000000 +0000
@@ -26,7 +26,99 @@
 // this is kluge to speed up doug minks wcssubs 'ksearch' routine
 extern "C" {
   FitsHead* wcshead = NULL;
-  char* ksearchh(char*, char*);
+  char* ksearchh(char* hstring, char* keyword)
+  {
+/* Find entry for keyword keyword in FITS header string hstring.
+   (the keyword may have a maximum of eight letters)
+   NULL is returned if the keyword is not found */
+
+/* char *hstring; character string containing fits-style header
+               information in the format <keyword>= <value> {/ <comment>}
+               the default is that each entry is 80 characters long;
+               however, lines may be of arbitrary length terminated by
+               nulls, carriage returns or linefeeds, if packed is true.  */
+/*char *keyword; character string containing the name of the variable
+               to be returned.  ksearch searches for a line beginning
+               with this string.  The string may be a character
+               literal or a character variable terminated by a null
+               or '$'.  it is truncated to 8 characters. */
+{
+    char *loc, *headnext, *headlast, *pval, *lc, *line;
+    int icol, nextchar, lkey, nleft, lhead, lmax;
+
+#ifdef USE_SAOLIB
+       int iel=1, ip=1, nel, np, ier;
+       char *get_fits_head_str();
+
+       if( !use_saolib ){
+#endif
+
+    pval = 0;
+static int lhead0 = 0;
+/* Find current length of header string */
+    if (lhead0)
+       lmax = lhead0;
+    else
+       lmax = 256000;
+    for (lhead = 0; lhead < lmax; lhead++) {
+       if (hstring[lhead] == (char) 0)
+           break;
+       }
+
+/* Search header string for variable name */
+    headlast = hstring + lhead;
+    headnext = hstring;
+    pval = NULL;
+    while (headnext < headlast) {
+       nleft = headlast - headnext;
+       loc = strncsrch (headnext, keyword, nleft);
+
+       /* Exit if keyword is not found */
+       if (loc == NULL) {
+           break;
+           }
+
+       icol = (loc - hstring) % 80;
+       lkey = strlen (keyword);
+       nextchar = (int) *(loc + lkey);
+
+       /* If this is not in the first 8 characters of a line, keep searching */
+       if (icol > 7)
+           headnext = loc + 1;
+
+       /* If parameter name in header is longer, keep searching */
+       else if (nextchar != 61 && nextchar > 32 && nextchar < 127)
+           headnext = loc + 1;
+
+       /* If preceeding characters in line are not blanks, keep searching */
+       else {
+           line = loc - icol;
+           for (lc = line; lc < loc; lc++) {
+               if (*lc != ' ')
+                   headnext = loc + 1;
+               }
+
+       /* Return pointer to start of line if match */
+           if (loc >= headnext) {
+               pval = line;
+               break;
+               }
+           }
+       }
+/* Return pointer to calling program */
+       return (pval);
+
+#ifdef USE_SAOLIB
+       }
+       else {
+           if (get_fits_head_str(keyword,iel,ip,&nel,&np,&ier,hstring) != NULL)
+               return(hstring);
+           else
+               return(NULL);
+           }
+#endif
+}
+}
 
   char* findit(char* cards, char* key)
   {
diff -Nur saods9.orig/saotk/frame/Makefile saods9/saotk/frame/Makefile
--- saods9.orig/saotk/frame/Makefile	2009-11-04 02:32:17.000000000 +0000
+++ saods9/saotk/frame/Makefile	2009-11-04 06:28:21.000000000 +0000
@@ -5,8 +5,7 @@
 	-I. -I.. -I../widget -I../vector -I../list -I../fitsy++ -I../util \
 	-I../../include -I$(X11INCLUDE) \
 	-I../../$(FUNTOOLSDIR)/util \
-	-I/usr/include/libxml2 \
-	-I../../$(ASTDIR)
+	-I/usr/include/libxml2
 
 SS	= \
 	annulus.C \
diff -Nur saods9.orig/saotk/widget/ps.h saods9/saotk/widget/ps.h
--- saods9.orig/saotk/widget/ps.h	2009-11-04 02:32:17.000000000 +0000
+++ saods9/saotk/widget/ps.h	2009-11-04 06:26:59.000000000 +0000
@@ -13,7 +13,7 @@
 #include "zlib.h"
 extern int DebugGZ;
 
-#if defined( __alpha) || defined(__mips64) || defined(__sparcv9) || defined(__M64)
+#if defined( __alpha) || defined(__mips64) || defined(__sparcv9) || defined(__M64) || defined(__LP64__)
 #define BIT32 int
 #else
 #define BIT32 long
